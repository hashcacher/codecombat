/*! hash:345dfe6c0e434e9c7378, chunkhash:0f9ff6744ea54938efa4, name:clans, filebase:clans.bundle.js, query:, file:javascripts/chunks/clans.bundle.js */
webpackJsonp([13],{

/***/ 1860:
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {var Clan, ClansView, CocoCollection, CreateAccountModal, RootView, SubscribeModal, template,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\n__webpack_require__(2612);\n\nCreateAccountModal = __webpack_require__(117);\n\nRootView = __webpack_require__(147);\n\ntemplate = __webpack_require__(468);\n\nCocoCollection = __webpack_require__(26);\n\nClan = __webpack_require__(304);\n\nSubscribeModal = __webpack_require__(255);\n\nmodule.exports = ClansView = (function(superClass) {\n  extend(ClansView, superClass);\n\n  function ClansView() {\n    return ClansView.__super__.constructor.apply(this, arguments);\n  }\n\n  ClansView.prototype.id = 'clans-view';\n\n  ClansView.prototype.template = template;\n\n  ClansView.prototype.getMeta = function() {\n    return {\n      title: $.i18n.t('clans.title'),\n      meta: [\n        {\n          vmid: 'meta-description',\n          name: 'description',\n          content: $.i18n.t('clans.meta_description')\n        }\n      ]\n    };\n  };\n\n  ClansView.prototype.events = {\n    'click .create-clan-btn': 'onClickCreateClan',\n    'click .join-clan-btn': 'onJoinClan',\n    'click .leave-clan-btn': 'onLeaveClan',\n    'click .private-clan-checkbox': 'onClickPrivateCheckbox'\n  };\n\n  ClansView.prototype.initialize = function() {\n    ClansView.__super__.initialize.call(this);\n    this.publicClansArray = [];\n    this.myClansArray = [];\n    this.idNameMap = {};\n    return this.loadData();\n  };\n\n  ClansView.prototype.destroy = function() {\n    return typeof this.stopListening === \"function\" ? this.stopListening() : void 0;\n  };\n\n  ClansView.prototype.afterRender = function() {\n    ClansView.__super__.afterRender.call(this);\n    return this.setupPrivateInfoPopover();\n  };\n\n  ClansView.prototype.onLoaded = function() {\n    ClansView.__super__.onLoaded.call(this);\n    this.publicClansArray = _.filter(this.publicClans.models, function(clan) {\n      return clan.get('type') === 'public';\n    });\n    return this.myClansArray = this.myClans.models;\n  };\n\n  ClansView.prototype.loadData = function() {\n    var ref, sortClanList;\n    sortClanList = function(a, b) {\n      if (a.get('memberCount') !== b.get('memberCount')) {\n        if (a.get('memberCount') < b.get('memberCount')) {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else {\n        return b.id.localeCompare(a.id);\n      }\n    };\n    this.publicClans = new CocoCollection([], {\n      url: '/db/clan/-/public',\n      model: Clan,\n      comparator: sortClanList\n    });\n    this.listenTo(this.publicClans, 'sync', (function(_this) {\n      return function() {\n        _this.refreshNames(_this.publicClans.models);\n        return typeof _this.render === \"function\" ? _this.render() : void 0;\n      };\n    })(this));\n    this.supermodel.loadCollection(this.publicClans, 'public_clans', {\n      cache: false\n    });\n    this.myClans = new CocoCollection([], {\n      url: \"/db/user/\" + me.id + \"/clans\",\n      model: Clan,\n      comparator: sortClanList\n    });\n    this.listenTo(this.myClans, 'sync', (function(_this) {\n      return function() {\n        _this.refreshNames(_this.myClans.models);\n        return typeof _this.render === \"function\" ? _this.render() : void 0;\n      };\n    })(this));\n    this.supermodel.loadCollection(this.myClans, 'my_clans', {\n      cache: false\n    });\n    this.listenTo(me, 'sync', (function(_this) {\n      return function() {\n        return typeof _this.render === \"function\" ? _this.render() : void 0;\n      };\n    })(this));\n    return this.myClanIDs = (ref = me.get('clans')) != null ? ref : [];\n  };\n\n  ClansView.prototype.refreshNames = function(clans) {\n    var clanIDs, options;\n    clanIDs = _.filter(clans, function(clan) {\n      return clan.get('type') === 'public';\n    });\n    clanIDs = _.map(clans, function(clan) {\n      return clan.get('ownerID');\n    });\n    options = {\n      url: '/db/user/-/names',\n      method: 'POST',\n      data: {\n        ids: clanIDs\n      },\n      success: (function(_this) {\n        return function(models, response, options) {\n          var userID;\n          for (userID in models) {\n            _this.idNameMap[userID] = models[userID].name;\n          }\n          return typeof _this.render === \"function\" ? _this.render() : void 0;\n        };\n      })(this)\n    };\n    return this.supermodel.addRequestResource('user_names', options, 0).load();\n  };\n\n  ClansView.prototype.setupPrivateInfoPopover = function() {\n    var popoverContent, popoverTitle;\n    popoverTitle = \"<h3>\" + $.i18n.t('clans.private_clans') + \"</h3>\";\n    popoverContent = \"<ul>\";\n    popoverContent += \"<li><span style='font-weight:bold;'>\" + $.i18n.t('clans.track_concepts1') + \"</span> \" + $.i18n.t('clans.track_concepts2b');\n    popoverContent += \"<li>\" + $.i18n.t('clans.track_concepts3b');\n    popoverContent += \"<li>\" + $.i18n.t('clans.track_concepts4b') + \" <span style='font-weight:bold;'>\" + $.i18n.t('clans.track_concepts5') + \"</span>\";\n    popoverContent += \"<li>\" + $.i18n.t('clans.track_concepts6b');\n    popoverContent += \"<li><span style='font-weight:bold;'>\" + $.i18n.t('clans.track_concepts7') + \"</span> \" + $.i18n.t('clans.track_concepts8');\n    popoverContent += \"</ul>\";\n    popoverContent += \"<p><img src='/images/pages/clans/dashboard_preview.png' height='400'></p>\";\n    popoverContent += \"<p>\" + $.i18n.t('clans.private_require_sub') + \"</p>\";\n    return this.$el.find('.private-more-info').popover({\n      animation: true,\n      html: true,\n      placement: 'right',\n      trigger: 'hover',\n      title: popoverTitle,\n      content: popoverContent,\n      container: this.$el\n    });\n  };\n\n  ClansView.prototype.onClickCreateClan = function(e) {\n    var clan, clanType, description, name, ref;\n    if (me.isAnonymous()) {\n      return this.openModalView(new CreateAccountModal());\n    }\n    clanType = $('.private-clan-checkbox').prop('checked') ? 'private' : 'public';\n    if (clanType === 'private' && !me.isPremium()) {\n      this.openModalView(new SubscribeModal());\n      if ((ref = window.tracker) != null) {\n        ref.trackEvent('Show subscription modal', {\n          category: 'Subscription',\n          label: 'create clan'\n        });\n      }\n      return;\n    }\n    if (name = $('.create-clan-name').val()) {\n      clan = new Clan();\n      clan.set('type', clanType);\n      clan.set('name', name);\n      if (description = $('.create-clan-description').val()) {\n        clan.set('description', description);\n      }\n      return clan.save({}, {\n        error: (function(_this) {\n          return function(model, response, options) {\n            return console.error('Error saving clan', response.status);\n          };\n        })(this),\n        success: (function(_this) {\n          return function(model, response, options) {\n            application.router.navigate(\"/clans/\" + model.id);\n            return window.location.reload();\n          };\n        })(this)\n      });\n    } else {\n      return console.log('Invalid name');\n    }\n  };\n\n  ClansView.prototype.onJoinClan = function(e) {\n    var clanID, options;\n    if (me.isAnonymous()) {\n      return this.openModalView(new CreateAccountModal());\n    }\n    if (clanID = $(e.target).data('id')) {\n      options = {\n        url: \"/db/clan/\" + clanID + \"/join\",\n        method: 'PUT',\n        error: (function(_this) {\n          return function(model, response, options) {\n            return console.error('Error joining clan', response);\n          };\n        })(this),\n        success: (function(_this) {\n          return function(model, response, options) {\n            application.router.navigate(\"/clans/\" + clanID);\n            return window.location.reload();\n          };\n        })(this)\n      };\n      return this.supermodel.addRequestResource('join_clan', options).load();\n    } else {\n      return console.error(\"No clan ID attached to join button.\");\n    }\n  };\n\n  ClansView.prototype.onLeaveClan = function(e) {\n    var clanID, options;\n    if (clanID = $(e.target).data('id')) {\n      options = {\n        url: \"/db/clan/\" + clanID + \"/leave\",\n        method: 'PUT',\n        error: (function(_this) {\n          return function(model, response, options) {\n            return console.error('Error leaving clan', response);\n          };\n        })(this),\n        success: (function(_this) {\n          return function(model, response, options) {\n            me.fetch({\n              cache: false\n            });\n            _this.publicClans.fetch({\n              cache: false\n            });\n            return _this.myClans.fetch({\n              cache: false\n            });\n          };\n        })(this)\n      };\n      return this.supermodel.addRequestResource('leave_clan', options).load();\n    } else {\n      return console.error(\"No clan ID attached to leave button.\");\n    }\n  };\n\n  ClansView.prototype.onClickPrivateCheckbox = function(e) {\n    var ref;\n    if (me.isAnonymous()) {\n      return this.openModalView(new CreateAccountModal());\n    }\n    if ($('.private-clan-checkbox').prop('checked') && !me.isPremium()) {\n      $('.private-clan-checkbox').attr('checked', false);\n      this.openModalView(new SubscribeModal());\n      return (ref = window.tracker) != null ? ref.trackEvent('Show subscription modal', {\n        category: 'Subscription',\n        label: 'check private clan'\n      }) : void 0;\n    }\n  };\n\n  return ClansView;\n\n})(RootView);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1860\n");

/***/ }),

/***/ 1861:
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {var Campaign, Clan, ClanDetailsView, CocoCollection, CreateAccountModal, EarnedAchievement, LevelSession, RootView, SubscribeModal, ThangType, User, template, utils,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n__webpack_require__(2614);\n\nRootView = __webpack_require__(147);\n\ntemplate = __webpack_require__(469);\n\nCreateAccountModal = __webpack_require__(117);\n\nCocoCollection = __webpack_require__(26);\n\nCampaign = __webpack_require__(150);\n\nClan = __webpack_require__(304);\n\nEarnedAchievement = __webpack_require__(164);\n\nLevelSession = __webpack_require__(90);\n\nSubscribeModal = __webpack_require__(255);\n\nThangType = __webpack_require__(89);\n\nUser = __webpack_require__(28);\n\nutils = __webpack_require__(6);\n\nmodule.exports = ClanDetailsView = (function(superClass) {\n  extend(ClanDetailsView, superClass);\n\n  ClanDetailsView.prototype.id = 'clan-details-view';\n\n  ClanDetailsView.prototype.template = template;\n\n  ClanDetailsView.prototype.getMeta = function() {\n    return {\n      title: $.i18n.t('clans.title'),\n      meta: [\n        {\n          vmid: 'meta-description',\n          name: 'description',\n          content: $.i18n.t('clans.meta_description')\n        }\n      ]\n    };\n  };\n\n  ClanDetailsView.prototype.events = {\n    'change .expand-progress-checkbox': 'onExpandedProgressCheckbox',\n    'click .delete-clan-btn': 'onDeleteClan',\n    'click .edit-description-save-btn': 'onEditDescriptionSave',\n    'click .edit-name-save-btn': 'onEditNameSave',\n    'click .join-clan-btn': 'onJoinClan',\n    'click .leave-clan-btn': 'onLeaveClan',\n    'click .member-header': 'onClickMemberHeader',\n    'click .progress-header': 'onClickProgressHeader',\n    'click .progress-level-cell': 'onClickLevel',\n    'click .remove-member-btn': 'onRemoveMember',\n    'mouseenter .progress-level-cell': 'onMouseEnterPoint',\n    'mouseleave .progress-level-cell': 'onMouseLeavePoint'\n  };\n\n  function ClanDetailsView(options, clanID) {\n    this.clanID = clanID;\n    ClanDetailsView.__super__.constructor.call(this, options);\n    this.initData();\n  }\n\n  ClanDetailsView.prototype.destroy = function() {\n    return typeof this.stopListening === \"function\" ? this.stopListening() : void 0;\n  };\n\n  ClanDetailsView.prototype.initData = function() {\n    this.showExpandedProgress = false;\n    this.memberSort = 'nameAsc';\n    this.stats = {};\n    this.campaigns = new CocoCollection([], {\n      url: \"/db/campaign\",\n      model: Campaign,\n      comparator: '_id'\n    });\n    this.clan = new Clan({\n      _id: this.clanID\n    });\n    this.members = new CocoCollection([], {\n      url: \"/db/clan/\" + this.clanID + \"/members\",\n      model: User,\n      comparator: 'nameLower'\n    });\n    this.memberAchievements = new CocoCollection([], {\n      url: \"/db/clan/\" + this.clanID + \"/member_achievements\",\n      model: EarnedAchievement,\n      comparator: '_id'\n    });\n    this.memberSessions = new CocoCollection([], {\n      url: \"/db/clan/\" + this.clanID + \"/member_sessions\",\n      model: LevelSession,\n      comparator: '_id'\n    });\n    this.listenTo(me, 'sync', (function(_this) {\n      return function() {\n        return typeof _this.render === \"function\" ? _this.render() : void 0;\n      };\n    })(this));\n    this.listenTo(this.campaigns, 'sync', this.onCampaignSync);\n    this.listenTo(this.clan, 'sync', this.onClanSync);\n    this.listenTo(this.members, 'sync', this.onMembersSync);\n    this.listenTo(this.memberAchievements, 'sync', this.onMemberAchievementsSync);\n    this.listenTo(this.memberSessions, 'sync', this.onMemberSessionsSync);\n    this.supermodel.loadModel(this.campaigns, {\n      cache: false\n    });\n    this.supermodel.loadModel(this.clan, {\n      cache: false\n    });\n    this.supermodel.loadCollection(this.members, 'members', {\n      cache: false\n    });\n    return this.supermodel.loadCollection(this.memberAchievements, 'member_achievements', {\n      cache: false\n    });\n  };\n\n  ClanDetailsView.prototype.getRenderData = function() {\n    var base, campaign, campaignID, concept, context, highestUserLevelCountMap, i, j, k, lastLevelIndex, lastUserCampaignLevelMap, len, len1, len2, level, levelCount, levelID, levelSlug, maxLastUserCampaignLevel, member, name1, name2, ref, ref1, ref10, ref11, ref12, ref13, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, userConceptsMap;\n    context = ClanDetailsView.__super__.getRenderData.call(this);\n    context.campaignLevelProgressions = (ref = this.campaignLevelProgressions) != null ? ref : [];\n    context.clan = this.clan;\n    context.conceptsProgression = (ref1 = this.conceptsProgression) != null ? ref1 : [];\n    if (application.isProduction()) {\n      context.joinClanLink = \"https://codecombat.com/clans/\" + this.clanID;\n    } else {\n      context.joinClanLink = \"http://localhost:3000/clans/\" + this.clanID;\n    }\n    context.owner = this.owner;\n    context.memberAchievementsMap = this.memberAchievementsMap;\n    context.memberLanguageMap = this.memberLanguageMap;\n    context.memberLevelStateMap = (ref2 = this.memberLevelMap) != null ? ref2 : {};\n    context.memberMaxLevelCount = this.memberMaxLevelCount;\n    context.memberSort = this.memberSort;\n    context.isOwner = this.clan.get('ownerID') === me.id;\n    context.isMember = (ref3 = this.clanID, indexOf.call((ref4 = me.get('clans')) != null ? ref4 : [], ref3) >= 0);\n    context.stats = this.stats;\n    highestUserLevelCountMap = {};\n    lastUserCampaignLevelMap = {};\n    maxLastUserCampaignLevel = 0;\n    userConceptsMap = {};\n    if (this.campaigns.loaded) {\n      levelCount = 0;\n      ref5 = this.campaigns.models;\n      for (i = 0, len = ref5.length; i < len; i++) {\n        campaign = ref5[i];\n        if (!(campaign.get('type') === 'hero')) {\n          continue;\n        }\n        campaignID = campaign.id;\n        lastLevelIndex = 0;\n        ref6 = campaign.get('levels');\n        for (levelID in ref6) {\n          level = ref6[levelID];\n          levelSlug = level.slug;\n          ref9 = (ref7 = (ref8 = this.members) != null ? ref8.models : void 0) != null ? ref7 : [];\n          for (j = 0, len1 = ref9.length; j < len1; j++) {\n            member = ref9[j];\n            if ((ref10 = context.memberLevelStateMap[member.id]) != null ? ref10[levelSlug] : void 0) {\n              if (lastUserCampaignLevelMap[name1 = member.id] == null) {\n                lastUserCampaignLevelMap[name1] = {};\n              }\n              if ((base = lastUserCampaignLevelMap[member.id])[campaignID] == null) {\n                base[campaignID] = {};\n              }\n              lastUserCampaignLevelMap[member.id][campaignID] = {\n                levelSlug: levelSlug,\n                index: lastLevelIndex\n              };\n              if (lastLevelIndex > maxLastUserCampaignLevel) {\n                maxLastUserCampaignLevel = lastLevelIndex;\n              }\n              if (level.concepts != null) {\n                if (userConceptsMap[name2 = member.id] == null) {\n                  userConceptsMap[name2] = {};\n                }\n                ref11 = level.concepts;\n                for (k = 0, len2 = ref11.length; k < len2; k++) {\n                  concept = ref11[k];\n                  if (userConceptsMap[member.id][concept] === 'complete') {\n                    continue;\n                  }\n                  userConceptsMap[member.id][concept] = context.memberLevelStateMap[member.id][levelSlug].state;\n                }\n              }\n              highestUserLevelCountMap[member.id] = levelCount;\n            }\n          }\n          lastLevelIndex++;\n          levelCount++;\n        }\n      }\n    }\n    this.sortMembers(highestUserLevelCountMap, userConceptsMap);\n    context.members = (ref12 = (ref13 = this.members) != null ? ref13.models : void 0) != null ? ref12 : [];\n    context.lastUserCampaignLevelMap = lastUserCampaignLevelMap;\n    context.showExpandedProgress = maxLastUserCampaignLevel <= 30 || this.showExpandedProgress;\n    context.userConceptsMap = userConceptsMap;\n    context.arenas = this.arenas;\n    context.i18n = utils.i18n;\n    return context;\n  };\n\n  ClanDetailsView.prototype.afterRender = function() {\n    ClanDetailsView.__super__.afterRender.call(this);\n    return this.updateHeroIcons();\n  };\n\n  ClanDetailsView.prototype.refreshData = function() {\n    me.fetch({\n      cache: false\n    });\n    this.members.fetch({\n      cache: false\n    });\n    this.memberAchievements.fetch({\n      cache: false\n    });\n    return this.memberSessions.fetch({\n      cache: false\n    });\n  };\n\n  ClanDetailsView.prototype.sortMembers = function(highestUserLevelCountMap, userConceptsMap) {\n    if (!((this.members != null) && (this.memberSort != null))) {\n      return;\n    }\n    switch (this.memberSort) {\n      case \"nameDesc\":\n        this.members.comparator = function(a, b) {\n          return (b.get('name') || 'Anonymous').localeCompare(a.get('name') || 'Anonymous');\n        };\n        break;\n      case \"progressAsc\":\n        this.members.comparator = function(a, b) {\n          var aComplete, aStarted, bComplete, bStarted, concept, state;\n          aComplete = (function() {\n            var ref, results;\n            ref = userConceptsMap[a.id];\n            results = [];\n            for (concept in ref) {\n              state = ref[concept];\n              if (state === 'complete') {\n                results.push(concept);\n              }\n            }\n            return results;\n          })();\n          bComplete = (function() {\n            var ref, results;\n            ref = userConceptsMap[b.id];\n            results = [];\n            for (concept in ref) {\n              state = ref[concept];\n              if (state === 'complete') {\n                results.push(concept);\n              }\n            }\n            return results;\n          })();\n          aStarted = (function() {\n            var ref, results;\n            ref = userConceptsMap[a.id];\n            results = [];\n            for (concept in ref) {\n              state = ref[concept];\n              if (state === 'started') {\n                results.push(concept);\n              }\n            }\n            return results;\n          })();\n          bStarted = (function() {\n            var ref, results;\n            ref = userConceptsMap[b.id];\n            results = [];\n            for (concept in ref) {\n              state = ref[concept];\n              if (state === 'started') {\n                results.push(concept);\n              }\n            }\n            return results;\n          })();\n          if (aComplete < bComplete) {\n            return -1;\n          } else if (aComplete > bComplete) {\n            return 1;\n          } else if (aStarted < bStarted) {\n            return -1;\n          } else if (aStarted > bStarted) {\n            return 1;\n          }\n          if (highestUserLevelCountMap[a.id] < highestUserLevelCountMap[b.id]) {\n            return -1;\n          } else if (highestUserLevelCountMap[a.id] > highestUserLevelCountMap[b.id]) {\n            return 1;\n          }\n          return (a.get('name') || 'Anonymous').localeCompare(b.get('name') || 'Anonymous');\n        };\n        break;\n      case \"progressDesc\":\n        this.members.comparator = function(a, b) {\n          var aComplete, aStarted, bComplete, bStarted, concept, state;\n          aComplete = (function() {\n            var ref, results;\n            ref = userConceptsMap[a.id];\n            results = [];\n            for (concept in ref) {\n              state = ref[concept];\n              if (state === 'complete') {\n                results.push(concept);\n              }\n            }\n            return results;\n          })();\n          bComplete = (function() {\n            var ref, results;\n            ref = userConceptsMap[b.id];\n            results = [];\n            for (concept in ref) {\n              state = ref[concept];\n              if (state === 'complete') {\n                results.push(concept);\n              }\n            }\n            return results;\n          })();\n          aStarted = (function() {\n            var ref, results;\n            ref = userConceptsMap[a.id];\n            results = [];\n            for (concept in ref) {\n              state = ref[concept];\n              if (state === 'started') {\n                results.push(concept);\n              }\n            }\n            return results;\n          })();\n          bStarted = (function() {\n            var ref, results;\n            ref = userConceptsMap[b.id];\n            results = [];\n            for (concept in ref) {\n              state = ref[concept];\n              if (state === 'started') {\n                results.push(concept);\n              }\n            }\n            return results;\n          })();\n          if (aComplete > bComplete) {\n            return -1;\n          } else if (aComplete < bComplete) {\n            return 1;\n          } else if (aStarted > bStarted) {\n            return -1;\n          } else if (aStarted < bStarted) {\n            return 1;\n          }\n          if (highestUserLevelCountMap[a.id] > highestUserLevelCountMap[b.id]) {\n            return -1;\n          } else if (highestUserLevelCountMap[a.id] < highestUserLevelCountMap[b.id]) {\n            return 1;\n          }\n          return (b.get('name') || 'Anonymous').localeCompare(a.get('name') || 'Anonymous');\n        };\n        break;\n      default:\n        this.members.comparator = function(a, b) {\n          return (a.get('name') || 'Anonymous').localeCompare(b.get('name') || 'Anonymous');\n        };\n    }\n    return this.members.sort();\n  };\n\n  ClanDetailsView.prototype.updateHeroIcons = function() {\n    var hero, i, len, member, original, ref, ref1, ref2, results, slug;\n    if (((ref = this.members) != null ? ref.models : void 0) == null) {\n      return;\n    }\n    ref1 = this.members.models;\n    results = [];\n    for (i = 0, len = ref1.length; i < len; i++) {\n      member = ref1[i];\n      if (!(hero = (ref2 = member.get('heroConfig')) != null ? ref2.thangType : void 0)) {\n        continue;\n      }\n      results.push((function() {\n        var ref3, results1;\n        ref3 = ThangType.heroes;\n        results1 = [];\n        for (slug in ref3) {\n          original = ref3[slug];\n          if (original === hero) {\n            results1.push(this.$el.find(\".player-hero-icon[data-memberID=\" + member.id + \"]\").removeClass('.player-hero-icon').addClass('player-hero-icon ' + slug));\n          }\n        }\n        return results1;\n      }).call(this));\n    }\n    return results;\n  };\n\n  ClanDetailsView.prototype.onCampaignSync = function() {\n    var campaign, campaignLevelProgression, concept, i, j, len, len1, level, levelID, ref, ref1, ref2, ref3;\n    if (!this.campaigns.loaded) {\n      return;\n    }\n    this.campaignLevelProgressions = [];\n    this.conceptsProgression = [];\n    this.arenas = [];\n    ref = this.campaigns.models;\n    for (i = 0, len = ref.length; i < len; i++) {\n      campaign = ref[i];\n      if (!(campaign.get('type') === 'hero')) {\n        continue;\n      }\n      campaignLevelProgression = {\n        ID: campaign.id,\n        slug: campaign.get('slug'),\n        name: utils.i18n(campaign.attributes, 'fullName') || utils.i18n(campaign.attributes, 'name'),\n        levels: []\n      };\n      ref1 = campaign.get('levels');\n      for (levelID in ref1) {\n        level = ref1[levelID];\n        campaignLevelProgression.levels.push({\n          ID: levelID,\n          slug: level.slug,\n          name: utils.i18n(level, 'name')\n        });\n        if (level.concepts != null) {\n          ref2 = level.concepts;\n          for (j = 0, len1 = ref2.length; j < len1; j++) {\n            concept = ref2[j];\n            if (indexOf.call(this.conceptsProgression, concept) < 0) {\n              this.conceptsProgression.push(concept);\n            }\n          }\n        }\n        if (level.type === 'hero-ladder' && ((ref3 = level.slug) !== 'capture-their-flag')) {\n          this.arenas.push(level);\n        }\n      }\n      this.campaignLevelProgressions.push(campaignLevelProgression);\n    }\n    return typeof this.render === \"function\" ? this.render() : void 0;\n  };\n\n  ClanDetailsView.prototype.onClanSync = function() {\n    this.setMeta({\n      title: $.i18n.t('clans.clan_title', {\n        clan: this.clan.get('name')\n      })\n    });\n    if (this.owner == null) {\n      this.owner = new User({\n        _id: this.clan.get('ownerID')\n      });\n      this.listenTo(this.owner, 'sync', (function(_this) {\n        return function() {\n          return typeof _this.render === \"function\" ? _this.render() : void 0;\n        };\n      })(this));\n      this.supermodel.loadModel(this.owner, {\n        cache: false\n      });\n    }\n    if (this.clan.get(\"dashboardType\") === \"premium\") {\n      this.supermodel.loadCollection(this.memberSessions, 'member_sessions', {\n        cache: false\n      });\n    }\n    return typeof this.render === \"function\" ? this.render() : void 0;\n  };\n\n  ClanDetailsView.prototype.onMembersSync = function() {\n    this.stats.averageLevel = Math.round(this.members.reduce((function(sum, member) {\n      return sum + member.level();\n    }), 0) / this.members.length);\n    return typeof this.render === \"function\" ? this.render() : void 0;\n  };\n\n  ClanDetailsView.prototype.onMemberAchievementsSync = function() {\n    var achievement, base, i, len, ref, user;\n    this.memberAchievementsMap = {};\n    ref = this.memberAchievements.models;\n    for (i = 0, len = ref.length; i < len; i++) {\n      achievement = ref[i];\n      user = achievement.get('user');\n      if ((base = this.memberAchievementsMap)[user] == null) {\n        base[user] = [];\n      }\n      this.memberAchievementsMap[user].push(achievement);\n    }\n    for (user in this.memberAchievementsMap) {\n      this.memberAchievementsMap[user].sort(function(a, b) {\n        return b.id.localeCompare(a.id);\n      });\n    }\n    this.stats.averageAchievements = Math.round(this.memberAchievements.models.length / Object.keys(this.memberAchievementsMap).length);\n    return typeof this.render === \"function\" ? this.render() : void 0;\n  };\n\n  ClanDetailsView.prototype.onMemberSessionsSync = function() {\n    var base, base1, count, i, j, language, languageCounts, len, len1, levelInfo, levelSession, levelSlug, memberSessions, mostUsedCount, ref, ref1, ref2, user;\n    this.memberLevelMap = {};\n    memberSessions = {};\n    ref = this.memberSessions.models;\n    for (i = 0, len = ref.length; i < len; i++) {\n      levelSession = ref[i];\n      if (levelSession.isMultiplayer()) {\n        continue;\n      }\n      user = levelSession.get('creator');\n      levelSlug = levelSession.get('levelID');\n      if ((base = this.memberLevelMap)[user] == null) {\n        base[user] = {};\n      }\n      if ((base1 = this.memberLevelMap[user])[levelSlug] == null) {\n        base1[levelSlug] = {};\n      }\n      levelInfo = {\n        level: levelSession.get('levelName'),\n        levelID: levelSession.get('levelID'),\n        changed: new Date(levelSession.get('changed')).toLocaleString(),\n        playtime: levelSession.get('playtime'),\n        sessionID: levelSession.id\n      };\n      this.memberLevelMap[user][levelSlug].levelInfo = levelInfo;\n      if (((ref1 = levelSession.get('state')) != null ? ref1.complete : void 0) === true) {\n        this.memberLevelMap[user][levelSlug].state = 'complete';\n        if (memberSessions[user] == null) {\n          memberSessions[user] = [];\n        }\n        memberSessions[user].push(levelSession);\n      } else {\n        this.memberLevelMap[user][levelSlug].state = 'started';\n      }\n    }\n    this.memberMaxLevelCount = 0;\n    this.memberLanguageMap = {};\n    for (user in memberSessions) {\n      languageCounts = {};\n      ref2 = memberSessions[user];\n      for (j = 0, len1 = ref2.length; j < len1; j++) {\n        levelSession = ref2[j];\n        language = levelSession.get('codeLanguage') || levelSession.get('submittedCodeLanguage');\n        if (language) {\n          languageCounts[language] = (languageCounts[language] || 0) + 1;\n        }\n      }\n      if (this.memberMaxLevelCount < memberSessions[user].length) {\n        this.memberMaxLevelCount = memberSessions[user].length;\n      }\n      mostUsedCount = 0;\n      for (language in languageCounts) {\n        count = languageCounts[language];\n        if (count > mostUsedCount) {\n          mostUsedCount = count;\n          this.memberLanguageMap[user] = language;\n        }\n      }\n    }\n    return typeof this.render === \"function\" ? this.render() : void 0;\n  };\n\n  ClanDetailsView.prototype.onMouseEnterPoint = function(e) {\n    var container, height, margin, offset, scrollTop;\n    $('.level-popup-container').hide();\n    container = $(e.target).find('.level-popup-container').show();\n    margin = 20;\n    offset = $(e.target).offset();\n    scrollTop = $(e.target).offsetParent().scrollTop();\n    height = container.outerHeight();\n    container.css('left', offset.left + e.offsetX);\n    return container.css('top', offset.top + scrollTop - height - margin);\n  };\n\n  ClanDetailsView.prototype.onMouseLeavePoint = function(e) {\n    return $(e.target).find('.level-popup-container').hide();\n  };\n\n  ClanDetailsView.prototype.onClickLevel = function(e) {\n    var levelInfo, url;\n    levelInfo = $(e.target).data('level-info');\n    if (!(((levelInfo != null ? levelInfo.levelID : void 0) != null) && ((levelInfo != null ? levelInfo.sessionID : void 0) != null))) {\n      return;\n    }\n    url = \"/play/level/\" + levelInfo.levelID + \"?session=\" + levelInfo.sessionID + \"&observing=true\";\n    return window.open(url, '_blank');\n  };\n\n  ClanDetailsView.prototype.onDeleteClan = function(e) {\n    var options;\n    if (me.isAnonymous()) {\n      return this.openModalView(new CreateAccountModal());\n    }\n    if (!window.confirm(\"Delete Clan?\")) {\n      return;\n    }\n    options = {\n      url: \"/db/clan/\" + this.clanID,\n      method: 'DELETE',\n      error: (function(_this) {\n        return function(model, response, options) {\n          return console.error('Error joining clan', response);\n        };\n      })(this),\n      success: (function(_this) {\n        return function(model, response, options) {\n          application.router.navigate(\"/clans\");\n          return window.location.reload();\n        };\n      })(this)\n    };\n    return this.supermodel.addRequestResource('delete_clan', options).load();\n  };\n\n  ClanDetailsView.prototype.onEditDescriptionSave = function(e) {\n    var description;\n    description = $('.edit-description-input').val();\n    this.clan.set('description', description);\n    this.clan.patch();\n    return $('#editDescriptionModal').modal('hide');\n  };\n\n  ClanDetailsView.prototype.onEditNameSave = function(e) {\n    var name;\n    if (name = $('.edit-name-input').val()) {\n      this.clan.set('name', name);\n      this.clan.patch();\n    }\n    return $('#editNameModal').modal('hide');\n  };\n\n  ClanDetailsView.prototype.onExpandedProgressCheckbox = function(e) {\n    this.showExpandedProgress = $('.expand-progress-checkbox').prop('checked');\n    if (typeof this.render === \"function\") {\n      this.render();\n    }\n    return $('.expand-progress-checkbox').attr('checked', this.showExpandedProgress);\n  };\n\n  ClanDetailsView.prototype.onJoinClan = function(e) {\n    var options, ref;\n    if (me.isAnonymous()) {\n      return this.openModalView(new CreateAccountModal());\n    }\n    if (!this.clan.loaded) {\n      return;\n    }\n    if (this.clan.get('type') === 'private' && !me.isPremium()) {\n      this.openModalView(new SubscribeModal());\n      if ((ref = window.tracker) != null) {\n        ref.trackEvent('Show subscription modal', {\n          category: 'Subscription',\n          label: 'join clan'\n        });\n      }\n      return;\n    }\n    options = {\n      url: \"/db/clan/\" + this.clanID + \"/join\",\n      method: 'PUT',\n      error: (function(_this) {\n        return function(model, response, options) {\n          return console.error('Error joining clan', response);\n        };\n      })(this),\n      success: (function(_this) {\n        return function(model, response, options) {\n          return _this.refreshData();\n        };\n      })(this)\n    };\n    return this.supermodel.addRequestResource('join_clan', options).load();\n  };\n\n  ClanDetailsView.prototype.onLeaveClan = function(e) {\n    var options;\n    options = {\n      url: \"/db/clan/\" + this.clanID + \"/leave\",\n      method: 'PUT',\n      error: (function(_this) {\n        return function(model, response, options) {\n          return console.error('Error leaving clan', response);\n        };\n      })(this),\n      success: (function(_this) {\n        return function(model, response, options) {\n          return _this.refreshData();\n        };\n      })(this)\n    };\n    return this.supermodel.addRequestResource('leave_clan', options).load();\n  };\n\n  ClanDetailsView.prototype.onClickMemberHeader = function(e) {\n    this.memberSort = this.memberSort === 'nameAsc' ? 'nameDesc' : 'nameAsc';\n    return typeof this.render === \"function\" ? this.render() : void 0;\n  };\n\n  ClanDetailsView.prototype.onClickProgressHeader = function(e) {\n    this.memberSort = this.memberSort === 'progressAsc' ? 'progressDesc' : 'progressAsc';\n    return typeof this.render === \"function\" ? this.render() : void 0;\n  };\n\n  ClanDetailsView.prototype.onRemoveMember = function(e) {\n    var memberID, options;\n    if (!window.confirm(\"Remove Hero?\")) {\n      return;\n    }\n    if (memberID = $(e.target).data('id')) {\n      options = {\n        url: \"/db/clan/\" + this.clanID + \"/remove/\" + memberID,\n        method: 'PUT',\n        error: (function(_this) {\n          return function(model, response, options) {\n            return console.error('Error removing clan member', response);\n          };\n        })(this),\n        success: (function(_this) {\n          return function(model, response, options) {\n            return _this.refreshData();\n          };\n        })(this)\n      };\n      return this.supermodel.addRequestResource('remove_member', options).load();\n    } else {\n      return console.error(\"No member ID attached to remove button.\");\n    }\n  };\n\n  return ClanDetailsView;\n\n})(RootView);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1861\n");

/***/ }),

/***/ 2612:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2613);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-3!../../../node_modules/import-glob-loader/index.js!./clans.sass\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-3!../../../node_modules/import-glob-loader/index.js!./clans.sass\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc3R5bGVzL2NsYW5zL2NsYW5zLnNhc3M/NDc0YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxJQUFzSztBQUM1TCw0Q0FBNEMsUUFBUztBQUNyRDtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxFQUFrRCxhQUFhO0FBQ3BGO0FBQ0E7QUFDQSxHQUFHLEtBQVU7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMjYxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL2NsYW5zLnNhc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIvaW5kZXguanMhLi9jbGFucy5zYXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL2NsYW5zLnNhc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYXBwL3N0eWxlcy9jbGFucy9jbGFucy5zYXNzXG4vLyBtb2R1bGUgaWQgPSAyNjEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMTMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2612\n");

/***/ }),

/***/ 2613:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)();\n// imports\n\n\n// module\nexports.push([module.i, \"#clans-view {\\n  color: black; }\\n  #clans-view .clan-title {\\n    cursor: pointer; }\\n  #clans-view .create-clan-description {\\n    width: 50%; }\\n  #clans-view .popover {\\n    max-width: 100%; }\\n    #clans-view .popover h3 {\\n      background: transparent;\\n      border: 0;\\n      font-size: 30px;\\n      color: black; }\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc3R5bGVzL2NsYW5zL2NsYW5zLnNhc3M/YjM4YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyQkFBMkIsbUJBQU8sQ0FBQyxFQUFrRDtBQUNyRjs7O0FBR0E7QUFDQSxjQUFjLFFBQVMsZ0JBQWdCLGlCQUFpQixFQUFFLDZCQUE2QixzQkFBc0IsRUFBRSwwQ0FBMEMsaUJBQWlCLEVBQUUsMEJBQTBCLHNCQUFzQixFQUFFLCtCQUErQixnQ0FBZ0Msa0JBQWtCLHdCQUF3QixxQkFBcUIsRUFBRTs7QUFFOVYiLCJmaWxlIjoiMjYxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiNjbGFucy12aWV3IHtcXG4gIGNvbG9yOiBibGFjazsgfVxcbiAgI2NsYW5zLXZpZXcgLmNsYW4tdGl0bGUge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cXG4gICNjbGFucy12aWV3IC5jcmVhdGUtY2xhbi1kZXNjcmlwdGlvbiB7XFxuICAgIHdpZHRoOiA1MCU7IH1cXG4gICNjbGFucy12aWV3IC5wb3BvdmVyIHtcXG4gICAgbWF4LXdpZHRoOiAxMDAlOyB9XFxuICAgICNjbGFucy12aWV3IC5wb3BvdmVyIGgzIHtcXG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gICAgICBib3JkZXI6IDA7XFxuICAgICAgZm9udC1zaXplOiAzMHB4O1xcbiAgICAgIGNvbG9yOiBibGFjazsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIhLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LTMhLi9ub2RlX21vZHVsZXMvaW1wb3J0LWdsb2ItbG9hZGVyIS4vYXBwL3N0eWxlcy9jbGFucy9jbGFucy5zYXNzXG4vLyBtb2R1bGUgaWQgPSAyNjEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMTMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2613\n");

/***/ }),

/***/ 2614:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2615);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(25)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-3!../../../node_modules/import-glob-loader/index.js!./clan-details.sass\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--8-3!../../../node_modules/import-glob-loader/index.js!./clan-details.sass\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvc3R5bGVzL2NsYW5zL2NsYW4tZGV0YWlscy5zYXNzPzg0ZDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQSxjQUFjLG1CQUFPLENBQUMsSUFBNks7QUFDbk0sNENBQTRDLFFBQVM7QUFDckQ7QUFDQSxhQUFhLG1CQUFPLENBQUMsRUFBa0QsYUFBYTtBQUNwRjtBQUNBO0FBQ0EsR0FBRyxLQUFVO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwiZmlsZSI6IjI2MTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tOC0zIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIvaW5kZXguanMhLi9jbGFuLWRldGFpbHMuc2Fzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL2NsYW4tZGV0YWlscy5zYXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS04LTMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL2NsYW4tZGV0YWlscy5zYXNzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2FwcC9zdHlsZXMvY2xhbnMvY2xhbi1kZXRhaWxzLnNhc3Ncbi8vIG1vZHVsZSBpZCA9IDI2MTRcbi8vIG1vZHVsZSBjaHVua3MgPSAxMyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2614\n");

/***/ }),

/***/ 2615:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(24)();\n// imports\n\n\n// module\nexports.push([module.i, \"#clan-details-view th {\\n  font-size: 16px; }\\n\\n#clan-details-view .join-clan-link {\\n  width: 390px; }\\n\\n#clan-details-view .join-link-prompt {\\n  font-weight: bold; }\\n\\n#clan-details-view .stats-table {\\n  width: 400px;\\n  background: rgba(0, 0, 0, 0); }\\n\\n#clan-details-view #editDescriptionModal .modal-dialog {\\n  background-color: white; }\\n\\n#clan-details-view #editNameModal .modal-dialog {\\n  background-color: white;\\n  max-width: 400px; }\\n\\n#clan-details-view .edit-description-input {\\n  width: 100%; }\\n\\n#clan-details-view .edit-name-input {\\n  width: 100%; }\\n\\n#clan-details-view .remove-hero-cell {\\n  width: 100px; }\\n\\n#clan-details-view .hero-icon-cell {\\n  display: inline-block;\\n  width: 30px;\\n  height: 50px;\\n  margin: 0px 2px;\\n  vertical-align: middle; }\\n\\n#clan-details-view td.hero-icon-cell {\\n  display: table-cell; }\\n\\n#clan-details-view .level-cell {\\n  width: 50px;\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n#clan-details-view .name-cell {\\n  width: 100px;\\n  vertical-align: middle; }\\n\\n#clan-details-view .achievements-cell {\\n  text-align: center;\\n  vertical-align: middle; }\\n\\n#clan-details-view .latest-achievement-cell {\\n  vertical-align: middle; }\\n\\n#clan-details-view .member-header {\\n  cursor: pointer; }\\n\\n#clan-details-view .progress-header {\\n  cursor: pointer; }\\n\\n#clan-details-view .progress-key {\\n  cursor: default;\\n  display: inline-block;\\n  white-space: nowrap;\\n  font-size: 9pt;\\n  font-weight: normal;\\n  border: 1px solid gray;\\n  border-radius: 5px;\\n  margin: 0px;\\n  padding: 2px; }\\n\\n#clan-details-view .progress-key-started {\\n  background-color: lightgreen; }\\n\\n#clan-details-view .progress-key-complete {\\n  background-color: lightgray;\\n  margin-left: 14px; }\\n\\n#clan-details-view .expand-progress-checkbox {\\n  margin-left: 14px; }\\n\\n#clan-details-view .expand-progress-label {\\n  font-weight: normal;\\n  font-size: 14px; }\\n\\n#clan-details-view .progress-cell {\\n  padding: 2px;\\n  padding-bottom: 10px; }\\n  #clan-details-view .progress-cell .level-popup-container {\\n    display: none;\\n    position: absolute;\\n    padding: 10px;\\n    border: 1px solid black;\\n    z-index: 3;\\n    background-color: blanchedalmond;\\n    font-size: 10pt; }\\n\\n#clan-details-view .level-progression-concepts {\\n  color: #317EAC;\\n  font-size: 12pt;\\n  font-weight: bold;\\n  margin-top: 8px;\\n  margin-bottom: 4px; }\\n\\n#clan-details-view .level-progression-levels {\\n  color: #317EAC;\\n  font-size: 12pt;\\n  font-weight: bold;\\n  margin-top: 8px; }\\n\\n#clan-details-view .level-progression-campaign {\\n  font-size: 10pt;\\n  font-weight: bold;\\n  margin-bottom: 4px;\\n  margin-top: 4px; }\\n\\n#clan-details-view .progress-level-cell {\\n  display: inline-block;\\n  white-space: nowrap;\\n  font-size: 9pt;\\n  border: 1px solid gray;\\n  border-radius: 5px;\\n  margin: 0px;\\n  padding: 2px; }\\n\\n#clan-details-view .progress-level-cell-started {\\n  cursor: pointer;\\n  background-color: lightgreen; }\\n\\n#clan-details-view .progress-level-cell-complete {\\n  cursor: pointer;\\n  background-color: lightgray; }\\n\\n#clan-details-view .player-hero-icon {\\n  background: transparent url(/images/pages/play/play-spritesheet.png);\\n  background-size: cover;\\n  background-position: -60px 0;\\n  display: inline-block;\\n  width: 30px;\\n  height: 30px;\\n  margin: 0px 2px;\\n  vertical-align: middle; }\\n\\n#clan-details-view .player-hero-icon {\\n  background-position: -120px 0; }\\n  #clan-details-view .player-hero-icon.knight {\\n    background-position: -150px 0; }\\n  #clan-details-view .player-hero-icon.librarian {\\n    background-position: -180px 0; }\\n  #clan-details-view .player-hero-icon.ninja {\\n    background-position: -210px 0; }\\n  #clan-details-view .player-hero-icon.potion-master {\\n    background-position: -240px 0; }\\n  #clan-details-view .player-hero-icon.samurai {\\n    background-position: -270px 0; }\\n  #clan-details-view .player-hero-icon.trapper {\\n    background-position: -300px 0; }\\n  #clan-details-view .player-hero-icon.forest-archer {\\n    background-position: -330px 0; }\\n  #clan-details-view .player-hero-icon.sorcerer {\\n    background-position: -360px 0; }\\n\\n#clan-details-view td.code-language-cell {\\n  width: 30px;\\n  vertical-align: middle; }\\n  #clan-details-view td.code-language-cell .code-language-cell {\\n    vertical-align: middle; }\\n\\n#clan-details-view span.code-language-cell {\\n  background: transparent url(/images/common/code_languages/javascript_small.png);\\n  background-size: cover;\\n  display: inline-block;\\n  width: 30px;\\n  height: 30px;\\n  margin: 0px 2px; }\\n\\n#clan-details-view .remove-member-cell {\\n  vertical-align: middle; }\\n\", \"\"]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2615\n");

/***/ })

});