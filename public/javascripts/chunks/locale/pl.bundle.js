/*! hash:345dfe6c0e434e9c7378, chunkhash:6218bd355f2c80d0e2eb, name:locale/pl, filebase:pl.bundle.js, query:, file:javascripts/chunks/locale/pl.bundle.js */
webpackJsonp([34],{

/***/ 1074:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"polski\",\n  englishDescription: \"Polish\",\n  translation: {\n    new_home: {\n      slogan: \"Najlepsza gra do nauki programowania!\",\n      classroom_edition: \"Wersja szkolna:\",\n      learn_to_code: \"Naucz się programowania:\",\n      play_now: \"Zagraj teraz!\",\n      im_a_teacher: \"Jestem Nauczycielem\",\n      im_a_student: \"Jestem Uczniem\",\n      learn_more: \"Dowiedz się więcej\",\n      classroom_in_a_box: \"Gotowy zestaw do nauki programowania.\",\n      codecombat_is: \"CodeCombat jest platformą <strong>dla uczniów</strong> stworzoną do nauki programowania przez granie w ciekawą grę.\",\n      our_courses: \"Nasze kursy zostały szczególnie przygotowane do użycia <strong>w czasie zajęć</strong>, nawet przez nauczycieli bez wcześniejszego doświadczenia w programowaniu.\",\n      watch_how: \"Zobacz jak CodeCombat zmienia sposób w jaki ludzie uczą się komputerów.\",\n      top_screenshots_hint: \"Uczniowie piszą kod i od razu widzą jego efekt na ekranie\",\n      designed_with: \"Zaprojektowane z myślą o nauczycielach\",\n      real_code: \"Piszesz prawdziwy kod\",\n      from_the_first_level: \"od pierwszego poziomu\",\n      getting_students: \"W czasie nauki programowania ważniejsze od poprawnej składni i struktury jest to jak szybko zaczniesz po prostu pisać sam kod.\",\n      educator_resources: \"Dostęp do materiałów pomocniczych\",\n      course_guides: \"oraz przewodników\",\n      teaching_computer_science: \"Nauka programowania nie wymaga żadnych stopni naukowych ani kosztownych kursów, ponieważ przygotowaliśmy materiały do pomocy nuczycielom bez względu jakiego przedmiotu uczysz oraz jak dobrze znasz programowanie.\",\n      accessible_to: \"Dostępne dla\",\n      everyone: \"każdego\",\n      democratizing: \"Powszechny dostęp do nauki programowania jest podstawą naszej filozofii. Każdy powinien nauczyć się programować.\",\n      forgot_learning: \"Moi uczniowie tak bardzo wciągneli się w grę, aż zapomnieli że właśnie uczą się programowania.\",\n      wanted_to_do: \" Zawsze chciałem nauczyć się programowania, nie sądziłem że uda mi się to w szkole.\",\n      why_games: \"Dlaczego nauka przez gry jest tak ważna?\",\n      games_reward: \"Gry wynagradzają rozwiązywanie prawdziwych problemów.\",\n      encourage: \"Gry są medium, które zachęca do interakcji oraz odkrywania metodą prób i błędów. Dobra gra potrafi zachęcić gracza do rozwijania swoich umiejętności, co jest takim samym krytycznym procesem jak podczas nauki.\",\n      excel: \"Gry celują w wynagradzanie\",\n      struggle: \"rozwiązania prawdziwych wyzwań\",\n      kind_of_struggle: \" takich których wynikiem w procesie nauczania jest zaangażowanie oraz\",\n      motivating: \"motywacja,\",\n      not_tedious: \"nie trud.\",\n      gaming_is_good: \"Wyniki badań sugerują pozytywny wpływ gier na stymulację procesów myślowych dzieci.\",\n      game_based: \"Kiedy \",\n      compared: \"porównamy\",\n      conventional: \"system nauczania oparty na grze z tradycyjnym, różnica jest wyraźna: dzięki grom uczniowie szybciej zapamiętują, lepiej się koncentrują, \",\n      perform_at_higher_level: \"oraz osiągają lepsze wyniki.\",\n      feedback: \"Gry dostarczają także natychmiastową informację zwrotną, która pozwala uczniom dostosować ich rozwiązanie i zrozumieć pomysł całościowo, zamiast być ograniczonym tylko do odpowiedzi dobrze albo źle.\",\n      real_game: \"Gra, w której piszesz prawdziwy kod.\",\n      great_game: \"Dobra gra to coś więcej niż tylko odznaki czy osiągnięcia - to podróż, dobrze dobrane zagadki i możliwość samodzielnego sprostania nawet najtrudniejszym wyzwaniom.\",\n      agency: \"CodeCombat jest grą, która daje graczom tą samodzielność i pewność, żę uda im się rozwiązać zadanie. Wszystko to dzięki naszemu silnikowi pisania kodu, który pomaga zarówno początkującym jak i zaawansowanym uczniom pisać poprawny kod.\",\n      request_demo_title: \"Namów swoich uczniów już dziś!\",\n      request_demo_subtitle: \"Zamów wersję demo i pozwól swoim uczniom zacząć w mniej niż godzinę.\",\n      get_started_title: \"Załóż swoją klasę już dziś\",\n      get_started_subtitle: \"Przygotuj klasę, dodaj uczniów i śledź ich postęp w nauce.\",\n      request_demo: \"Zapytaj o wersję demo\",\n      setup_a_class: \"Przygotuj klasę\",\n      have_an_account: \"Masz już konto?\",\n      logged_in_as: \"Jesteś zalogowany jako\",\n      computer_science: \"Lekcje informatyki dla osób w każdym wieku.\",\n      ffa: \"Darmowe dla wszystkich\",\n      coming_soon: \"Wkrótce!\",\n      courses_available_in: \"Kursy dostępne są w języku JavaScript i Python. Kursy z tworzenia stron internetowych wykorzystują HTML, CSS, jQuery, oraz Bootstrap.\",\n      boast: \"Zagadki, które są wyzwaniem zarówno do programistów jak i dla typowych graczy.\",\n      winning: \"Perfekcyjne połączenie gry RPG oraz programowania, które wciąga i sprawia, że nauka staje się przyjemnością.\",\n      run_class: \"Wszystko czego potrzebujesz, żeby zacząć nauczanie programowania w swojej szkole, bez względu jaką widzę o programowaniu posiadasz.\",\n      goto_classes: \"Idź do moich klas\",\n      view_profile: \"Profil\",\n      view_progress: \"Śledź postęp\",\n      go_to_courses: \"Przejdź do klas\",\n      want_coco: \"Chcesz używać CodeCombat w swojej szkole?\"\n    },\n    nav: {\n      map: \"Mapa\",\n      play: \"Poziomy\",\n      community: \"Społeczność\",\n      courses: \"Kursy\",\n      blog: \"Blog\",\n      forum: \"Forum\",\n      account: \"Konto\",\n      my_account: \"Moje Konto\",\n      profile: \"Profil\",\n      home: \"Główna\",\n      contribute: \"Współpraca\",\n      legal: \"Nota prawna\",\n      privacy: \"Polityka prywatności\",\n      about: \"O nas\",\n      contact: \"Kontakt\",\n      twitter_follow: \"Subskrybuj\",\n      my_classrooms: \"Moje klasy\",\n      my_courses: \"Moje kursy\",\n      careers: \"Kariera\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Stwórz klasę\",\n      other: \"Inne\",\n      learn_to_code: \"Naucz się programowania!\",\n      toggle_nav: \"Przełącz nawigację\",\n      schools: \"Szkoły\",\n      get_involved: \"Dołącz do nas\",\n      open_source: \"Open source (GitHub)\",\n      support: \"Wsparcie\",\n      faqs: \"FAQs\",\n      copyright_prefix: \"Copyright\",\n      copyright_suffix: \"Wszystkie prawa zastrzeżone.\",\n      help_pref: \"Potrzebujesz pomocy? Wyślij email\",\n      help_suff: \"a my się odezwiemy!\",\n      resource_hub: \"Baza Wiedzy\",\n      apcsp: \"Zasady AP CS\"\n    },\n    modal: {\n      close: \"Zamknij\",\n      okay: \"OK\"\n    },\n    not_found: {\n      page_not_found: \"Strona nie istnieje\"\n    },\n    diplomat_suggestion: {\n      title: \"Pomóż w tłumaczeniu CodeCombat!\",\n      sub_heading: \"Potrzebujemy twoich zdolności językowych.\",\n      pitch_body: \"Tworzymy CodeCombat w języku angielskim, jednak nasi gracze pochodzą z całego świata. Wielu z nich chciałoby zagrać w swoim języku, ponieważ nie znają angielskiego, więc jeśli znasz oba języki zostań Dyplomatą i pomóż w tłumaczeniu strony CodeCombat, jak i samej gry.\",\n      missing_translations: \"Dopóki nie przetłumaczymy wszystkiego na polski, będziesz widział niektóre napisy w języku angielskim.\",\n      learn_more: \"Dowiedz się więcej o Dyplomatach\",\n      subscribe_as_diplomat: \"Dołącz do Dyplomatów\"\n    },\n    play: {\n      play_as: \"Graj jako \",\n      compete: \"Ukończono!\",\n      spectate: \"Oglądaj\",\n      players: \"graczy\",\n      hours_played: \"rozegranych godzin\",\n      items: \"Przedmioty\",\n      unlock: \"Odblokuj\",\n      confirm: \"Potwierdź\",\n      owned: \"Posiadane\",\n      locked: \"Zablokowane\",\n      available: \"Dostępny\",\n      skills_granted: \"Zdobyte umiejętności\",\n      heroes: \"Bohaterowie\",\n      achievements: \"Osiągnięcia\",\n      settings: \"Opcje\",\n      poll: \"Ankieta\",\n      next: \"Dalej\",\n      change_hero: \"Wybierz bohatera\",\n      buy_gems: \"Kup klejnoty\",\n      subscribers_only: \"Tylko subskrybenci!\",\n      subscribe_unlock: \"Zasubskrybuj by odblokować!\",\n      subscriber_heroes: \"Zasubskrybuj dziś by od razu odblokować Amarę, Hushbauma i Hattoriego!\",\n      subscriber_gems: \"Zasubskrybuj dziś by wykupić tego bohatera za pomocą kryształów!\",\n      anonymous: \"Anonimowy gracz\",\n      level_difficulty: \"Poziom trudności: \",\n      awaiting_levels_adventurer_prefix: \"Co tydzień publikujemy nowe poziomy!\",\n      awaiting_levels_adventurer: \"Zapisz się jako Podróżnik,\",\n      awaiting_levels_adventurer_suffix: \"aby jako pierwszy grać w nowe poziomy.\",\n      adjust_volume: \"Dopasuj głośność\",\n      campaign_multiplayer: \"Kampania dla wielu graczy\",\n      campaign_multiplayer_description: \"... w której konkurujesz z innymi graczami.\",\n      brain_pop_done: \"Pokonałeś ogry kodem! Wygrałeś!\",\n      brain_pop_challenge: \"Zmierz się ponownie z zagadkami, tym razem wybierając inny język programowania!\",\n      replay: \"Graj od nowa\",\n      back_to_classroom: \"Wróć do klasy\",\n      teacher_button: \"Dla nauczycieli\"\n    },\n    code: {\n      \"if\": \"jeżeli\",\n      \"else\": \"inaczej\",\n      elif: \"inaczej, jeżeli\",\n      \"while\": \"dopóki\",\n      loop: \"pętla\",\n      \"for\": \"dla\",\n      \"break\": \"przerwij\",\n      \"continue\": \"kontynuuj\",\n      pass: \"pomiń\",\n      \"return\": \"wróć\",\n      then: \"wtedy\",\n      \"do\": \"wykonaj\",\n      end: \"zakończ\",\n      \"function\": \"funkcja\",\n      def: \"definiuj\",\n      \"var\": \"zmienna\",\n      self: \"swój\",\n      hero: \"bohater\",\n      \"this\": \"ten/ta\",\n      or: \"lub\",\n      \"||\": \"lub\",\n      and: \"i\",\n      \"&&\": \"i\",\n      not: \"negacja\",\n      \"!\": \"negacja\",\n      \"=\": \"przypisz\",\n      \"==\": \"równy\",\n      \"===\": \"identyczny\",\n      \"!=\": \"różny\",\n      \"!==\": \"nieidentyczny \",\n      \">\": \"większy niż\",\n      \">=\": \"większy lub równy\",\n      \"<\": \"mniejszy niż\",\n      \"<=\": \"mniejszy lub równy\",\n      \"*\": \"pomnożone przez\",\n      \"/\": \"podzielony przez\",\n      \"+\": \"plus\",\n      \"-\": \"minus\",\n      \"+=\": \"dodaj i przypisz\",\n      \"-=\": \"odejmij i przypisz\",\n      True: \"Prawda\",\n      \"true\": \"prawda\",\n      False: \"Fałsz\",\n      \"false\": \"fałsz\",\n      undefined: \"niezdefiniowany\",\n      \"null\": \"bez wartości\",\n      nil: \"nic\",\n      None: \"Żaden\"\n    },\n    share_progress_modal: {\n      blurb: \"Robisz coraz to większe postępy! Pokaż swoim rodzicom jak wiele nauczyłeś się z CodeCombat.\",\n      email_invalid: \"Błędny adres email.\",\n      form_blurb: \"Wpisz adres email swoich rodziców, a my ich o tym poinformujemy!\",\n      form_label: \"Adres email\",\n      placeholder: \"adres email\",\n      title: \"Wspaniała robota, Adepcie\"\n    },\n    login: {\n      sign_up: \"Stwórz konto\",\n      email_or_username: \"Email lub nazwa użytkownika\",\n      log_in: \"Zaloguj się\",\n      logging_in: \"Logowanie...\",\n      log_out: \"Wyloguj się\",\n      forgot_password: \"Nie pamiętasz hasła?\",\n      finishing: \"Kończenie\",\n      sign_in_with_facebook: \"Logowanie z Facebookiem\",\n      sign_in_with_gplus: \"Logowanie z Google+\",\n      signup_switch: \"Chcesz stworzyć konto?\"\n    },\n    signup: {\n      create_student_header: \"Stwórz konto ucznia\",\n      create_teacher_header: \"Stwórz konto nauczyciela\",\n      create_individual_header: \"Stwórz konto prywatne\",\n      email_announcements: \"Otrzymuj powiadomienia na e-mail o nowych poziomach i funkcjach w CodeCombat\",\n      creating: \"Tworzenie konta...\",\n      sign_up: \"Zarejestruj się\",\n      log_in: \"Zaloguj się używając hasła\",\n      required: \"Musisz się zalogować zanim przejdziesz dalej.\",\n      login_switch: \"Masz już konto?\",\n      optional: \"opcjonalnie\",\n      connected_gplus_header: \"Udało się połączyć konto przez Google+!\",\n      connected_gplus_p: \"Dokończ rejestrację, żeby móc logować się przez konto w usłudze Google+.\",\n      connected_facebook_header: \"Udało się połączyć konto przez Facebook!\",\n      connected_facebook_p: \"Dokończ rejestrację, żeby móc logować się przez konto w usłudze Facebook.\",\n      hey_students: \"Uczniowie, wprowadźcie otrzymany od nauczyciela kod klasy.\",\n      birthday: \"Dzień urodzenia\",\n      parent_email_blurb: \"Wiemy że nie możesz się doczekać programowania &mdash; też się cieszymy! Twoi rodzice otrzymają dalsze instrukcje jak założyć dla ciebie konto. Napisz emaila na {{email_link}} jeżeli masz jakiekolwiek pytania.\",\n      classroom_not_found: \"Żadna klasa nie jest powiązana z tym kodem. Sprawdź czy wprowadziłeś poprawnie kod lub zapytaj nauczyciela.\",\n      checking: \"Sprawdzanie...\",\n      account_exists: \"Ten email jest już zajęty:\",\n      sign_in: \"Zaloguj się\",\n      email_good: \"Email wygląda dobrze!\",\n      name_taken: \"Nazwa użytkownika zajęta! Spróbuj {{suggestedName}}?\",\n      name_available: \"Nazwa użytkownika dostępna!\",\n      name_is_email: \"Nazwa użytkownika nie może być adresem email\",\n      choose_type: \"Wybierz typ konta:\",\n      teacher_type_1: \"Naucz programowania korzystając z CodeCombat!\",\n      teacher_type_2: \"Utwórz swoją klasę\",\n      teacher_type_3: \"Uzyskaj dostęp do przewodników\",\n      teacher_type_4: \"Doglądaj postępy swoich uczniów\",\n      signup_as_teacher: \"Zarejestruj się\",\n      student_type_1: \"Naucz się programować grając we wciągającą grę!\",\n      student_type_2: \"Graj ze swoją klasą\",\n      student_type_3: \"Stań do walki na arenach\",\n      student_type_4: \"Wybierz swojego bohatera!\",\n      student_type_5: \"Przygotuj kod swojej klasy!\",\n      signup_as_student: \"Zarejestruj się\",\n      individuals_or_parents: \"Osoby prywatne oraz rodzice\",\n      individual_type: \"Dla graczy chcących programować poza klasą oraz rodziców.\",\n      signup_as_individual: \"Zarejestruj się jako osoba prywatna\",\n      enter_class_code: \"Podaj kod swojej klasy\",\n      enter_birthdate: \"Podaj datę urodzenia:\",\n      parent_use_birthdate: \"Rodzice, wpiszcie swoją datę urodzin.\",\n      ask_teacher_1: \"Zapytaj nauczyciela o kod Twojej klasy.\",\n      ask_teacher_2: \"Nie masz swojej klasy? Stwórz \",\n      ask_teacher_3: \"konto prywatne.\",\n      ask_teacher_4: \" instead.\",\n      about_to_join: \"Zaraz dołączysz do:\",\n      enter_parent_email: \"Podaj adres email rodzica:\",\n      parent_email_error: \"Coś poszło nie tak z wysłaniem emaila. Sprawdź adres email i spróbuj ponownie.\",\n      parent_email_sent: \"Wysłaliśmy email z instrukcją założenia konta. Poproś rodzica by sprawdził swoją skrzynkę.\",\n      account_created: \"Konto stworzone!\",\n      confirm_student_blurb: \"Zapisz sobie te informacje, żebyś ich nie zapomniał. Nauczyciel może pomóc ci jeśli zapomnisz hasła.\",\n      confirm_individual_blurb: \"Zapisz swoje dane do logowania na wszelki wypadek. Potwierdź swój adres email w razie jakbyś zapomniał hasła w przyszłości - sprawdź swoją skrzynkę!\",\n      write_this_down: \"Zapisz to sobie:\",\n      start_playing: \"Zacznij grę!\",\n      sso_connected: \"Udało połączyć się z:\",\n      select_your_starting_hero: \"Wybierz bohatera:\",\n      you_can_always_change_your_hero_later: \"Zawsze możesz zmienić bohatera później.\",\n      finish: \"Zakończ\",\n      teacher_ready_to_create_class: \"Jesteś gotów stworzyć swoją pierwszą klasę!\",\n      teacher_students_can_start_now: \"Twoi uczniowie będą mogli od razu zacząć grać w pierwszy kurs, Wprowadzenie do informatyki.\",\n      teacher_list_create_class: \"Na następnej stronie będziesz mógł stworzyć swoją pierwszą klasę.\",\n      teacher_list_add_students: \"Uczniów do klasy można dodać poprzez kliknięcie na link `pokaż klasę`, następnie twoim oczom ukaże się Kod klasy oraz adres URL, który trzeba przekazać uczniom. Można również wysłać tą wiadomość na email, jeśli jakiś już posiadają.\",\n      teacher_list_resource_hub_1: \"Zajrzyj do\",\n      teacher_list_resource_hub_2: \"Przewodników kursu\",\n      teacher_list_resource_hub_3: \"po rozwiązania dla każdego z poziomów, oraz do\",\n      teacher_list_resource_hub_4: \"Bazy wiedzy\",\n      teacher_list_resource_hub_5: \"po porady na temat organizacji zajęć, oraz wiele więcej!\",\n      teacher_additional_questions: \"To wszystko! Jeśli potrzebujesz dodatkowej pomocy, albo chcesz nas o coś spytać napisz do __supportEmail__.\",\n      dont_use_our_email_silly: \"Nie wprowadzaj tu swojego adresu email! Wpisz tutaj adres email rodziców.\"\n    },\n    recover: {\n      recover_account_title: \"Odzyskaj konto\",\n      send_password: \"Wyślij hasło tymczasowe\",\n      recovery_sent: \"Email do odzyskania hasła został wysłany.\"\n    },\n    items: {\n      primary: \"Główne\",\n      secondary: \"Drugorzędne\",\n      armor: \"Zbroja\",\n      accessories: \"Akcesoria\",\n      misc: \"Różne\",\n      books: \"Książki\"\n    },\n    common: {\n      back: \"Wstecz\",\n      coming_soon: \"Dostępne wkrótce!\",\n      \"continue\": \"Dalej\",\n      next: \"Następny\",\n      default_code: \"Domyślny kod\",\n      loading: \"Ładowanie...\",\n      overview: \"Przegląd\",\n      solution: \"Rozwiązanie\",\n      intro: \"Wprowadzenie\",\n      saving: \"Zapisywanie...\",\n      sending: \"Wysyłanie...\",\n      send: \"Wyślij\",\n      sent: \"Wysłano\",\n      cancel: \"Anuluj\",\n      save: \"Zapisz\",\n      publish: \"Opublikuj\",\n      create: \"Stwórz\",\n      fork: \"Fork\",\n      play: \"Zagraj\",\n      retry: \"Ponów\",\n      actions: \"Akcje\",\n      info: \"Informacje\",\n      help: \"Pomoc\",\n      watch: \"Obserwuj\",\n      unwatch: \"Nie obserwuj\",\n      submit_patch: \"Prześlij łatkę\",\n      submit_changes: \"Prześlij zmiany\",\n      save_changes: \"Zapisz zmiany\",\n      required_field: \"wymagane\"\n    },\n    general: {\n      and: \"i\",\n      name: \"Nazwa\",\n      date: \"Data\",\n      body: \"Zawartość\",\n      version: \"Wersja\",\n      pending: \"W trakcie\",\n      accepted: \"Przyjęto\",\n      rejected: \"Odrzucono\",\n      withdrawn: \"Wycofano\",\n      accept: \"Akceptuj\",\n      reject: \"Odrzuć\",\n      withdraw: \"Wycofaj\",\n      submitter: \"Przesyłający\",\n      submitted: \"Przesłano\",\n      commit_msg: \"Wiadomość do commitu\",\n      version_history: \"Historia wersji\",\n      version_history_for: \"Historia wersji dla: \",\n      select_changes: \"Zaznacz dwie zmiany poniżej aby zobaczyć różnice.\",\n      undo_prefix: \"Cofnij\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Ponów\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Odtwórz podgląd obecnego poziomu\",\n      result: \"Wynik\",\n      results: \"Wyniki\",\n      description: \"Opis\",\n      or: \"lub\",\n      subject: \"Temat\",\n      email: \"Email\",\n      password: \"Hasło\",\n      confirm_password: \"Potwierdź hasło\",\n      message: \"Wiadomość\",\n      code: \"Kod\",\n      ladder: \"Drabinka\",\n      when: \"kiedy\",\n      opponent: \"Przeciwnik\",\n      rank: \"Ranking\",\n      score: \"Wynik\",\n      win: \"Wygrana\",\n      loss: \"Przegrana\",\n      tie: \"Remis\",\n      easy: \"Łatwy\",\n      medium: \"Średni\",\n      hard: \"Trudny\",\n      player: \"Gracz\",\n      player_level: \"Poziom\",\n      warrior: \"Wojownik\",\n      ranger: \"Łucznik\",\n      wizard: \"Czarodziej\",\n      first_name: \"Imię\",\n      last_name: \"Nazwisko\",\n      last_initial: \"Inicjał nazwiska\",\n      username: \"Nazwa użytkownika\",\n      contact_us: \"Skontaktuj się z nami\",\n      close_window: \"Zamknij okno\",\n      learn_more: \"Dowiedz się więcej\"\n    },\n    units: {\n      second: \"sekunda\",\n      seconds: \"sekund\",\n      minute: \"minuta\",\n      minutes: \"minut\",\n      hour: \"godzina\",\n      hours: \"godzin\",\n      day: \"dzień\",\n      days: \"dni\",\n      week: \"tydzień\",\n      weeks: \"tygodni\",\n      month: \"miesiąc\",\n      months: \"miesięcy\",\n      year: \"rok\",\n      years: \"lat\"\n    },\n    play_level: {\n      directions: \"Kierunki\",\n      edit_level: \"Edytuj poziom\",\n      explore_codecombat: \"Przeglądaj CodeCombat\",\n      finished_hoc: \"Skończyłem moją Godzinę Kodu\",\n      get_certificate: \"Pobierz swój certyfikat!\",\n      level_complete: \"Poziom ukończony\",\n      completed_level: \"Ukończony poziom:\",\n      course: \"Kurs:\",\n      done: \"Zrobione\",\n      next_level: \"Następny poziom\",\n      next_game: \"Następna gra\",\n      languages: \"Języki\",\n      programming_language: \"Język programowania\",\n      show_menu: \"Pokaż menu gry\",\n      home: \"Strona główna\",\n      level: \"Poziom\",\n      skip: \"Pomiń\",\n      game_menu: \"Menu gry\",\n      restart: \"Zacznij od nowa\",\n      goals: \"Cele\",\n      goal: \"Cel\",\n      running: \"Symulacja...\",\n      success: \"Sukces!\",\n      incomplete: \"Niekompletne\",\n      timed_out: \"Czas minął\",\n      failing: \"Niepowodzenie\",\n      reload: \"Wczytaj ponownie\",\n      reload_title: \"Przywrócić cały kod?\",\n      reload_really: \"Czy jesteś pewien, że chcesz przywrócić kod startowy tego poziomu?\",\n      reload_confirm: \"Przywróć cały kod\",\n      test_level: \"Poziom testowy\",\n      victory: \"Zwycięstwo\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" ukończony\",\n      victory_sign_up: \"Zarejestruj się, by zapisać postępy\",\n      victory_sign_up_poke: \"Chcesz zapisać swój kod? Stwórz bezpłatne konto!\",\n      victory_rate_the_level: \"Jak podobał ci się ten poziom? \",\n      victory_return_to_ladder: \"Powrót do drabinki\",\n      victory_saving_progress: \"Zapisywanie postępów\",\n      victory_go_home: \"Powrót do strony głównej\",\n      victory_review: \"Powiedz nam coś więcej!\",\n      victory_review_placeholder: \"Jak Ci się podobał poziom?\",\n      victory_hour_of_code_done: \"Skończyłeś już?\",\n      victory_hour_of_code_done_yes: \"Tak, skończyłem moją Godzinę Kodu.\",\n      victory_experience_gained: \"Doświadczenie\",\n      victory_gems_gained: \"Klejnoty\",\n      victory_new_item: \"Nowy przedmiot\",\n      victory_new_hero: \"Nowy bohater\",\n      victory_viking_code_school: \"O jejku, trudny był ten poziom, co? Jeśli jeszcze nie jesteś twórcą oprogramowania, możesz nim już zostać. Złóż swoje podanie o przyjęcie do Viking Code School, a z ich pomocą w zostaniesz na pewno w pełni profesjonalnym programistą.\",\n      victory_become_a_viking: \"Zostań wikingiem\",\n      victory_no_progress_for_teachers: \"Postęp dla nauczycieli nie jest zapisywany, ale możesz dodać konto ucznia do swojej klasy.\",\n      tome_cast_button_run: \"Uruchom\",\n      tome_cast_button_running: \"Wykonuję kod...\",\n      tome_cast_button_ran: \"Zakończono\",\n      tome_submit_button: \"Prześlij\",\n      tome_reload_method: \"Wczytaj oryginalny kod i uruchom ponownie poziom\",\n      tome_available_spells: \"Dostępne czary\",\n      tome_your_skills: \"Twoje umiejętności\",\n      hints: \"Podpowiedzi\",\n      hints_title: \"Podpowiedź {{number}}\",\n      code_saved: \"Kod zapisano\",\n      skip_tutorial: \"Pomiń (esc)\",\n      keyboard_shortcuts: \"Skróty klawiszowe\",\n      loading_start: \"Rozpocznij poziom\",\n      problem_alert_title: \"Popraw swój kod\",\n      time_current: \"Teraz:\",\n      time_total: \"Maksymalnie:\",\n      time_goto: \"Idź do:\",\n      non_user_code_problem_title: \"Błąd podczas ładowania poziomu\",\n      infinite_loop_title: \"Wykryto pętlę nieskończoną\",\n      infinite_loop_description: \"Kod źródłowy, który miał stworzyć ten świat nigdy nie przestał działać. Albo działa bardzo wolno, albo ma w sobie pętlę nieskończoną. Albo też gdzieś jest błąd systemu. Możesz spróbować uruchomić go jeszcze raz, albo przywrócić domyślny kod. Jeśli nic nie pomoże daj nam o tym znać.\",\n      check_dev_console: \"Możesz też otworzyć konsolę deweloperską i sprawdzić w czym tkwi problem.\",\n      check_dev_console_link: \"(instrukcje)\",\n      infinite_loop_try_again: \"Próbuj ponownie\",\n      infinite_loop_reset_level: \"Resetuj poziom\",\n      infinite_loop_comment_out: \"Wykomentuj mój kod\",\n      tip_toggle_play: \"Włącz/zatrzymaj grę naciskając Ctrl+P.\",\n      tip_scrub_shortcut: \"Ctrl+[ i Ctrl+] przesuwają czas.\",\n      tip_guide_exists: \"Klikając Przewodnik w menu gry (u góry strony) uzyskasz przydatne informacje.\",\n      tip_open_source: \"CodeCombat ma w 100% otwarty kod!\",\n      tip_tell_friends: \"Podoba ci się CodeCombat? Opowiedz o nas swoim znajomym!\",\n      tip_beta_launch: \"CodeCombat uruchomił fazę beta w październiku 2013.\",\n      tip_think_solution: \"Myśl nad rozwiązaniem, nie problemem.\",\n      tip_theory_practice: \"W teorii nie ma różnicy między teorią a praktyką. W praktyce jednak, jest. - Yogi Berra\",\n      tip_error_free: \"Są dwa sposoby by napisać program bez błędów. Tylko trzeci działa. - Alan Perlis\",\n      tip_debugging_program: \"Jeżeli debugowanie jest procesem usuwania błędów, to programowanie musi być procesem umieszczania ich. - Edsger W. Dijkstra\",\n      tip_forums: \"Udaj się na forum i powiedz nam co myślisz!\",\n      tip_baby_coders: \"W przyszłości, każde dziecko będzie Arcymagiem.\",\n      tip_morale_improves: \"Ładowanie będzie kontynuowane gdy wzrośnie morale.\",\n      tip_all_species: \"Wierzymy w równe szanse nauki programowania dla wszystkich gatunków.\",\n      tip_reticulating: \"Siatkowanie kolców.\",\n      tip_harry: \"Jesteś czarodziejem \",\n      tip_great_responsibility: \"Z wielką mocą programowania wiąże się wielka odpowiedzialność debugowania.\",\n      tip_munchkin: \"Jeśli nie będziesz jadł warzyw, Munchkin przyjdzie po Ciebie w nocy.\",\n      tip_binary: \"Jest tylko 10 typów ludzi na świecie: Ci którzy rozumieją kod binarny i ci którzy nie.\",\n      tip_commitment_yoda: \"Programista musi najgłębsze zaangażowanie okazać. Umysł najpoważniejszy. ~ Yoda\",\n      tip_no_try: \"Rób. Lub nie rób. Nie ma próbowania. - Yoda\",\n      tip_patience: \"Cierpliwość musisz mieć, młody Padawanie. - Yoda\",\n      tip_documented_bug: \"Udokumentowany błąd nie jest błędem. Jest funkcją.\",\n      tip_impossible: \"To zawsze wygląda na niemożliwe zanim zostanie zrobione. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Gadać jest łatwo. Pokażcie mi kod. - Linus Torvalds\",\n      tip_first_language: \"Najbardziej zgubną rzeczą jakiej możesz się nauczyć jest twój pierwszy język programowania. - Alan Kay\",\n      tip_hardware_problem: \"P: Ilu programistów potrzeba by wymienić żarówkę?  O: Żadnego,to problem sprzętowy.\",\n      tip_hofstadters_law: \"Prawo Hofstadtera: Każdy projekt zabiera więcej czasu, niż planujesz, nawet jeśli przy planowaniu uwzględnisz prawo Hofstadtera.\",\n      tip_premature_optimization: \"Przedwczesna optymalizacja jest źródłem wszelkiego zła. - Donald Knuth\",\n      tip_brute_force: \"Masz jakieś wątpliwości? Użyj techniki brute force. - Ken Thompson\",\n      tip_extrapolation: \"Są dwa typy ludzi: ci, co potrafią ekstrapolować z niepełnych danych...\",\n      tip_superpower: \"Umieć programować jest rzeczą bardzo podobną do posiadania super mocy.\",\n      tip_control_destiny: \"W prawdziwym Open Source, to ty kontrolujesz swoje przeznaczenie. - Linus Torvalds\",\n      tip_no_code: \"Nie ma szybszego kodu od braku kodu\",\n      tip_code_never_lies: \"Kod nigdy nie kłamie, komentarze czasami tak. — Ron Jeffries\",\n      tip_reusable_software: \"Zanim kod stanie się reużywalny musi zacząć działać.\",\n      tip_optimization_operator: \"Każdy język programowania ma operator optymalizujący. W większości z nich tym operatorem jest ‘//’\",\n      tip_lines_of_code: \"Mierzenie postępu programowania liniami kodu jest jak mierzenie postępu budowy samolotu za pomocą ciężaru. — Bill Gates\",\n      tip_source_code: \"Chciałbym zmienić świat, ale nie chcą mi dać kodu źródłowego.\",\n      tip_javascript_java: \"Java jest tak podobna do JavaScriptu jak minister do ministranta\",\n      tip_move_forward: \"Nie ważne co robisz. Ważne, że przesz do przodu. - Martin Luther King Jr.\",\n      tip_google: \"Masz problem z którym nie dajesz sobie rady? Użyj Google!\",\n      tip_adding_evil: \"Dodajemy szczyptę zła.\",\n      tip_hate_computers: \"To jest właśnie problem z ludźmi, którzy nie nawidzą komputerów. Tak naprawdę nie nawidzą kiepskich programistów. - Larry Niven\",\n      tip_open_source_contribute: \"Możesz pomóc w ulepszeniu CodeCombat!\",\n      tip_recurse: \"Iteracja jest rzeczą ludzką, rekursja boską. - L. Peter Deutsch\",\n      tip_free_your_mind: \"Musisz to wszystko zostawić, Neo. Strach, wątpliwość i niewiarę. Uwolnij swój umysł. - Morfeusz\",\n      tip_strong_opponents: \"Nawet najsilniejsi przeciwnicy mają słabe punkty. - Itachi Uchiha\",\n      tip_paper_and_pen: \"Przed rozpoczęciem kodowania zawsze dobrze jest wziąć kartkę papieru i wszystko dobrze rozplanować.\",\n      tip_solve_then_write: \"Najpierw rozwiąż problem, a potem napisz kod. - John Johnson\",\n      tip_compiler_ignores_comments: \"Czasami mi się wydaje, że kompilator ignoruje moje komentarze.\",\n      tip_understand_recursion: \"Żeby zrozumieć rekurencję, trzeba najpierw zrozumieć rekurencję.\",\n      tip_life_and_polymorphism: \"Open Source jest jak całkowicie polimorficzna, heterogeniczna struktura: Wszystkie typy są mile widziane.\",\n      tip_mistakes_proof_of_trying: \"Błędy w twoich kodzie są oznaką, że się starasz.\",\n      tip_adding_orgres: \"Zaokrąglanie ogrów.\",\n      tip_sharpening_swords: \"Ostrzymy miecze.\",\n      tip_ratatouille: \"Nigdy nie pozwólcie, aby ograniczało was to, kim jesteście. Duch nie zna granic. - Gusteau, Ratatuj\",\n      tip_nemo: \"Wiesz co się robi jak życie dołuje? Mówi się trudno... i płynie się dalej. - Dory, Gdzie jest Nemo\",\n      tip_internet_weather: \"Przenieś się do internetu, jest tu wspaniale. Żyjemy w miejscu, gdzie pogoda jest zawsze super. - John Green\",\n      tip_nerds: \"Maniaki komputerowe mają prawo robić różne dziwne rzeczy, takie jak skaczę-z-radości-na-krześle-i-nie-mogę-przestać, kocham to. - John Green\",\n      tip_self_taught: \"Nauczyłem się 90% tego co się dowiedziałem. I jest to całkowicie normalne! - Hank Green\",\n      tip_luna_lovegood: \"Nie przejmuj się. Jesteś tak samo zdrowy na umyśle jak ja. - Luna Lovegood\",\n      tip_good_idea: \"Najlepszym sposobem na dobry pomysł jest wiele pomysłów. - Linus Pauling\",\n      tip_programming_not_about_computers: \"Informatyka ma tyle samo wspólnego z komputerami, co astronomia ma z teleskopami. - Edsger Dijkstra\",\n      tip_mulan: \"Jeśli potrafisz o czymś marzyć, to potrafisz także tego dokonać. - Mulan\"\n    },\n    play_game_dev_level: {\n      created_by: \"Stworzone przez {{name}}\",\n      restart: \"Restartuj poziom\",\n      play: \"Zagraj poziom\",\n      play_more_codecombat: \"Graj więcej CodeCombat\",\n      default_student_instructions: \"Kliknij, aby przejąć władzę nad bohaterem i wygrać grę!\"\n    },\n    game_menu: {\n      inventory_tab: \"Ekwipunek\",\n      save_load_tab: \"Zapisz/Wczytaj\",\n      options_tab: \"Opcje\",\n      guide_tab: \"Przewodnik\",\n      guide_video_tutorial: \"Wideo poradnik\",\n      guide_tips: \"Wskazówki\",\n      multiplayer_tab: \"Multiplayer\",\n      auth_tab: \"Zarejestruj się\",\n      inventory_caption: \"Wyposaż swojego bohatera\",\n      choose_hero_caption: \"Wybierz bohatera, język\",\n      options_caption: \"Ustaw opcje\",\n      guide_caption: \"Dokumenty i wskazówki\",\n      multiplayer_caption: \"Graj ze znajomymi!\",\n      auth_caption: \"Zapisz swój postęp.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Pokaż tablicę wyników\",\n      scores: \"Wyniki\",\n      top_players: \"Najlepsi gracze\",\n      day: \"Dziś\",\n      week: \"W tym tygodniu\",\n      all: \"Zawsze\",\n      time: \"Czas\",\n      damage_taken: \"Obrażenia otrzymane\",\n      damage_dealt: \"Obrażenia zadane\",\n      difficulty: \"Trudność\",\n      gold_collected: \"Złoto zebrane\"\n    },\n    inventory: {\n      equipped_item: \"Założone\",\n      required_purchase_title: \"Wymagane\",\n      available_item: \"Dostępne\",\n      restricted_title: \"Zabronione\",\n      should_equip: \"(kliknij podwójnie, aby założyć)\",\n      equipped: \"(założone)\",\n      locked: \"(zablokowane)\",\n      restricted: \"(zabronione)\",\n      equip: \"Załóż\",\n      unequip: \"Zdejmij\"\n    },\n    buy_gems: {\n      few_gems: \"Kilka klejnotów\",\n      pile_gems: \"Stos klejnotów\",\n      chest_gems: \"Skrzynia z klejnotami\",\n      purchasing: \"Kupowanie...\",\n      declined: \"Karta została odrzucona\",\n      retrying: \"Błąd serwera, ponawiam.\",\n      prompt_title: \"Za mało klejnotów\",\n      prompt_body: \"Chcesz zdobyć więcej?\",\n      prompt_button: \"Wejdź do sklepu\",\n      recovered: \"Przywrócono poprzednie zakupy. Proszę odświeżyć stronę.\",\n      price: \"x{{gems}} / mieś.\",\n      buy_premium: \"Kup Premium\",\n      purchase: \"Kup\",\n      purchased: \"Zakupiono\"\n    },\n    earn_gems: {\n      prompt_title: \"Za mało klejnotów\",\n      prompt_body: \"Graj dalej, a zdobędziesz ich więcej!\"\n    },\n    subscribe: {\n      subscribe_modal_title: \"CodeCombat Premium\",\n      comparison_blurb: \"Zostań mistrzem kodowania - zapisz się do <b>Premium</b> już dziś!\",\n      must_be_logged: \"Najpierw musisz się zalogować. Użyj menu na górze do zalogowania się, lub stworzenia nowego konta.\",\n      subscribe_title: \"Zapisz się\",\n      unsubscribe: \"Wypisz się\",\n      confirm_unsubscribe: \"Potwierdź wypisanie się\",\n      never_mind: \"Nie ważne, i tak cię kocham\",\n      thank_you_months_prefix: \"Thank you for supporting us these last\",\n      thank_you_months_suffix: \" - przez tyle miesięcy nas wspierałeś. Dziękujemy!\",\n      thank_you: \"Dziękujemy za wsparcie CodeCombat.\",\n      sorry_to_see_you_go: \"Szkoda, że już się nie zobaczymy! Powiedz nam co moglibyśmy poprawić\",\n      unsubscribe_feedback_placeholder: \"Och! Cóżeśmy ci takiego uczynili, że nas opuszczasz?\",\n      stripe_description: \"Miesięczna subskrypcja\",\n      subscription_required_to_play: \"Żeby zagrać w ten poziom musisz posiadać subskrypcję.\",\n      unlock_help_videos: \"Subskrybuj, aby odblokować wszystkie wideo tutoriale.\",\n      personal_sub: \"Osobista subskrypcja\",\n      loading_info: \"Wczytywanie informacji o subskrypcji...\",\n      managed_by: \"Zarządzane przez\",\n      will_be_cancelled: \"Zostanie anulowana\",\n      currently_free: \"Obecnie posiadasz darmową subskrypcję\",\n      currently_free_until: \"Twoja obecna subskrypcja wygaśnie\",\n      free_subscription: \"Darmowa subskrypcja\",\n      was_free_until: \"Twoja obecna darmowa subskrypcja wygaśnie\",\n      managed_subs: \"Zarządzane subskrypcje\",\n      subscribing: \"Zapisywanie do subskrypcji...\",\n      current_recipients: \"Obecni odbiorcy\",\n      unsubscribing: \"Anulowanie subskrypcji\",\n      subscribe_prepaid: \"Kliknij `Zapisz się`, aby użyć kodu prepaid\",\n      using_prepaid: \"Używasz kodu prepaid dla miesięcznych subskrypcji\",\n      feature_heroes: \"Ekskluzywni bohaterowie\",\n      month_price: \"$__price__/miesiąc\",\n      lifetime: \"Dożywotnia subskrypcja\",\n      lifetime_price: \"$__price__\",\n      year_subscription: \"Roczna subskrypcja\",\n      year_price: \"$__price__/rok\",\n      support_part1: \"Potrzebujesz pomocy? Jeśli masz jakieś pytania, to napisz do nas na\",\n      support_part2: \"support@codecombat.com\"\n    },\n    announcement: {\n      now_available: \"Dostępne dla subskrybentów!\",\n      subscriber: \"subskrybentem\",\n      cuddly_companions: \"Milusi towarzysze!\",\n      kindling_name: \"Żywioł Ognia\",\n      kindling_description: \"Żywioły ognia chcą tylko, żeby było ci ciepło w nocy. I za dnia. W sumie, to cały czas.\",\n      griffin_name: \"Mały Gryf\",\n      griffin_description: \"Gryfy to pół orły, pół lwy. Czyż nie są urocze?\",\n      raven_name: \"Kruk\",\n      raven_description: \"Kruki doskonale radzą sobie w przynoszeniu błyszczących buteleczek z lekarstwami.\",\n      mimic_name: \"Mimik\",\n      mimic_description: \"Mimiki pomagają w zbieraniu monet za ciebie. Przemieść je na monetę, aby zwiększyć zapasy złota.\",\n      cougar_name: \"Puma\",\n      cougar_description: \"Pumy uwielbiają wylegiwać się na słońcu.\",\n      fox_name: \"Niebieski Lis\",\n      fox_description: \"Niebieskie lisy są bardzo cwane, uwielbiają też kopać dziury w piachu i śniegu!\",\n      pugicorn_name: \"Piesorożec\",\n      pugicorn_description: \"Piesorożce to jedne z najrzadszych stworzeń, oraz potrafią rzucać czary!\",\n      wolf_name: \"Szczenię Wilka\",\n      wolf_description: \"Szczenię wilka jest znakomite w polowaniu i zbieraniu, uwielbia też grę w chowanego!\",\n      ball_name: \"Czerwona piszcząca piła\",\n      ball_description: \"piłka.zapiszcz()\",\n      collect_pets: \"Zdobywaj zwierzaki dla swoich bohaterów!\",\n      each_pet: \"Każdy ze zwierzakówma ma bardzo pomocną unikalną zdolność!\",\n      upgrade_to_premium: \"Zostań {{subscriber}}, aby móc używać zwierzaków.\",\n      play_second_kithmaze: \"Zagraj w {{the_second_kithmaze}}, aby odblokować Szczenię Wilka!\",\n      the_second_kithmaze: \"Drugi Labirynt Kith\",\n      keep_playing: \"Kontynuuj grę, aby móc odblokować pierwszego zwierzaka!\",\n      coming_soon: \"Wkrótce\"\n    },\n    premium_features: {\n      get_premium: \"Kup<br>CodeCombat<br>Premium\",\n      master_coder: \"Zapisz się już dziś i zostań mistrzem kodu!\",\n      subscribe_now: \"Zapisz się teraz\",\n      hero_blurb_1: \"Zdobędziesz dostęp do __premiumHeroesCount__ super wypasionych, nowych bohaterów! Ujarzmij nieograniczoną moc Okara Tupistopy, zabójczą precyzję Narii Liść, albo wezwij \\\"urocze\\\" szkielety wraz z Nalfarem Cryptorem.\",\n      hero_caption: \"Nowi ekscytujący bohaterowie!\",\n      pet_blurb_1: \"Zwierzaki nie są tylko uroczymi towarzyszami, zapewniają także unikatowe umiejętności. Mały Gryf może przelatywać nad przeszkodami pomoagając bohaterowi, Szczenię Wilka umie przynosić lekarstwa, a Puma potrafi mówić!\",\n      pet_blurb_2: \"Zbierz wszystkie zwierzaki i poznaj ich unikalne zdolności!\",\n      pet_caption: \"Przygarnij zwierzaka do towarzystwa!\",\n      game_dev_blurb: \"Naucz się pisania gier i stwórz poziomy, którymi później możesz podzielić się ze znajomymi! Umieszczaj jakie chcesz przedmioty, pisz kod, który odpowiedzialny będzie za zachowanie się przeciwników i sprawdź, czy twoim kolegom uda się pokonać twój poziom\",\n      game_dev_caption: \"Stwórz własne gry i zobacz który z twoich przyjaciół je pokona!\",\n      everything_in_premium: \"Wszystko co dostaniesz wraz z CodeCombat Premium:\",\n      list_gems: \"Co miesiąc będziesz dostawać klejnoty na zakup sprzętu\",\n      list_levels: \"Dostęp do __premiumLevelsCount__, a nawet więcej poziomów\",\n      list_heroes: \"Odblokujesz ekskluzywnych bohaterów\",\n      list_game_dev: \"Stworzysz grę dla swoich przyjaciół\",\n      list_web_dev: \"Zbudujesz strony internetowe i interaktywne aplikacje\",\n      list_items: \"Będziesz mógł używać zwierzaków\",\n      list_support: \"Otrzymasz pomoc w rozwiązywaniu podchwytliwych zadań\",\n      list_clans: \"Będziesz mógł tworzyć prywatne klany i konkurować z przyjaciółmi\"\n    },\n    choose_hero: {\n      choose_hero: \"Wybierz swojego bohatera\",\n      programming_language: \"Język programowania\",\n      programming_language_description: \"Którego języka programowania chcesz używać?\",\n      \"default\": \"Domyślny\",\n      experimental: \"Eksperymentalny\",\n      python_blurb: \"Prosty ale potężny.\",\n      javascript_blurb: \"Język internetu.\",\n      coffeescript_blurb: \"Przyjemniejsza składnia JavaScript.\",\n      lua_blurb: \"Język skryptowy gier.\",\n      java_blurb: \"(Tylko subskrybenci) Android i 'enterprise'.\",\n      status: \"Status\",\n      weapons: \"Bronie\",\n      weapons_warrior: \"Miecze - Krótki zasięg, Brak magii\",\n      weapons_ranger: \"Kusze, Pistolety - Daleki zasięg, Brak magii\",\n      weapons_wizard: \"Różdżki, Laski - Daleki zasięg, Magia\",\n      attack: \"Obrażenia\",\n      health: \"Życie\",\n      speed: \"Szybkość\",\n      regeneration: \"Regeneracja\",\n      range: \"Zasięg\",\n      blocks: \"Blok\",\n      backstab: \"Cios\",\n      skills: \"Umiejętności\",\n      attack_1: \"Zadaje\",\n      attack_2: \"z możliwych\",\n      attack_3: \"obrażeń od broni.\",\n      health_1: \"Zdobywa\",\n      health_2: \"z możliwych\",\n      health_3: \"wytrzymałości pancerza.\",\n      speed_1: \"Idzie do\",\n      speed_2: \"metrów na sekundę.\",\n      available_for_purchase: \"Można wynająć\",\n      level_to_unlock: \"Musisz odblokować poziom:\",\n      restricted_to_certain_heroes: \"Tylko nieliczni bohaterowie mogą brać udział w tym poziomie.\"\n    },\n    skill_docs: {\n      \"function\": \"funkcja\",\n      method: \"metoda\",\n      snippet: \"skrawek\",\n      number: \"numer\",\n      array: \"tablica\",\n      object: \"obiekt\",\n      string: \"ciąg znaków\",\n      writable: \"zapisywalny\",\n      read_only: \"tylko do odczytu\",\n      action: \"Akcja\",\n      spell: \"Zaklęcie\",\n      action_name: \"nazwa\",\n      action_cooldown: \"Zajmuje\",\n      action_specific_cooldown: \"Odpoczynek\",\n      action_damage: \"Obrażenia\",\n      action_range: \"Zasięg\",\n      action_radius: \"Promień\",\n      action_duration: \"Czas trwania\",\n      example: \"Przykład\",\n      ex: \"np.\",\n      current_value: \"Aktualna wartość\",\n      default_value: \"Domyślna wartość\",\n      parameters: \"Parametry\",\n      required_parameters: \"Wymagane parametry\",\n      optional_parameters: \"Opcjonalne parametry\",\n      returns: \"Zwraca\",\n      granted_by: \"Zdobyte dzięki:\"\n    },\n    save_load: {\n      granularity_saved_games: \"Zapisano\",\n      granularity_change_history: \"Historia\"\n    },\n    options: {\n      general_options: \"Opcje ogólne\",\n      volume_label: \"Głośność\",\n      music_label: \"Muzyka\",\n      music_description: \"Wł/Wył muzykę w tle.\",\n      editor_config_title: \"Konfiguracja edytora\",\n      editor_config_livecompletion_label: \"Podpowiedzi na żywo\",\n      editor_config_livecompletion_description: \"Wyświetl sugestie autouzupełnienia podczas pisania.\",\n      editor_config_invisibles_label: \"Pokaż białe znaki\",\n      editor_config_invisibles_description: \"Wyświetla białe znaki takie jak spacja czy tabulator.\",\n      editor_config_indentguides_label: \"Pokaż linijki wcięć\",\n      editor_config_indentguides_description: \"Wyświetla pionowe linie, by lepiej zaznaczyć wcięcia.\",\n      editor_config_behaviors_label: \"Inteligentne zachowania\",\n      editor_config_behaviors_description: \"Autouzupełnianie nawiasów, klamer i cudzysłowów.\"\n    },\n    about: {\n      main_title: \"Jeśli chcesz nauczyć się programować, musisz napisać (mnóstwo) kodu.\",\n      main_description: \"Naszym zadaniem jest dopilnowanie, żebyś robił to z uśmiechem na twarzy.\",\n      mission_link: \"Misja\",\n      team_link: \"Zespół\",\n      story_link: \"Historia\",\n      press_link: \"Prasa\",\n      mission_title: \"Nasza misja: każdy na Ziemi powinien mieć dostęp do nauki programowania.\",\n      mission_description_1: \"<strong>Programowanie jest jak magia</strong>. To możliwość tworzenia rzeczy na podstawie własnych fantazji. Stworzyliśmy CodeCombat, by nasi użytkownicy poczuli czarodziejskie moce podczas pisania <strong>kodu</strong>.\",\n      mission_description_2: \"Jak się później okazało dzięki temu uczą się szybciej. DUŻO szybciej. To jest taka różnica jak rozmawiać o czymś, a robić to samemu. Chcemy, żeby właśnie pisanie kodu było dostępne w każdej szkole i dla <strong>każdego ucznia</strong>, ponieważ każdy powinien choć przez chwilę poczuć magię programowania.\",\n      team_title: \"Poznaj twórców CodeCombat\",\n      team_values: \"Bardzo cenimy sobie otwarty dialog, taki gdzie wygrywają najlepsze pomysły. Nasze decyzje opierają się na oczekiwaniach klientów i dawaniu im namacalnych dowodów naszej pracy. Każdy z nas czuje się zaangażowany. Począwszy od naszego CEO, aż po kontrybutorów na GitHubie, ponieważ wiemy, że każdy od kogoś może się nauczyć czegoś nowego.\",\n      nick_title: \"Współzałożyciel, CEO\",\n      matt_title: \"Współzałożyciel, CTO\",\n      cat_title: \"Twórca gry\",\n      scott_title: \"Współzałożyciel, programista\",\n      maka_title: \"Adwokat użytkowników\",\n      robin_title: \"Menedżer produktu\",\n      nolan_title: \"Menedżer regionu\",\n      titles_csm: \"Menedżer sukcesu klienta\",\n      titles_territory_manager: \"Menedżer regionu\",\n      retrostyle_title: \"Ilustracje\",\n      retrostyle_blurb: \"RetroStyle Games\",\n      community_title: \"...oraz nasza społeczność 'open-source'\",\n      community_subtitle: \"Ponad 500 kontrybutorów pomogło stworzyć CodeCombat i liczba ta cały czas rośnie!\",\n      community_description_3: \"CodeCombat jest \",\n      community_description_link_2: \"projektem społecznościowym\",\n      community_description_1: \"z setkami graczy wolontariuszy, którzy tworzą nowe poziomy, kod, nowe funkcje, naprawiają błędy, testują grę oraz tłumaczą ją na 50 języków. Pracownicy i wolontariusze wszyscy zyskali dzięki idei dzielenia się wiedzą oraz wspólnego podejmowania się wysiłków, jak to zwykle działa w społeczności open source. Ta strona powstała na dziesiątkach projektów open source i my także ją udostępniamy społeczności na zasadach open source oraz żeby dostarczyć dociekliwym programistom platformy do eksperymentowania. Każdy może dołączyć do społeczności CodeCombat! Odwiedź naszą\",\n      community_description_link: \"stronę o współpracy\",\n      community_description_2: \"żeby dowiedzieć się więcej.\",\n      number_contributors: \"Ponad 500 kontrybutorów poświęciło swoją wiedzę i czas, aby wspomóc nasz projekt.\",\n      story_title: \"Nasza historia\",\n      story_subtitle: \"Od 2013, CodeCombat wyrósł od zaledwie kilku szkiców do wspólnie rozwijanej, tętniącej życiem gry.\",\n      story_statistic_1a: \"Ponad 5,000,000\",\n      story_statistic_1b: \"graczy\",\n      story_statistic_1c: \"zaczęło przygodę z programowaniem dzięki CodeCombat\",\n      story_statistic_2a: \"Nasza strona przetłumaczona jest na 50 języków — nasi gracze pochodzą z\",\n      story_statistic_2b: \"ponad 200 krajów\",\n      story_statistic_3a: \"Razem udało im się napisać\",\n      story_statistic_3b: \"1 miliard linii kodu i cały czas rośnie.\",\n      story_statistic_3c: \"z pośród wielu dostępnych języków programowania\",\n      story_long_way_1: \"Udało nam się dużo osiągnąć, ale...\",\n      story_sketch_caption: \"Pierwszy szkic Nicka opisujący akcje w grze.\",\n      story_long_way_2: \"wciąż mamy wiele do zrobienia, więc...\",\n      jobs_title: \"Zacznij z nami pisać przyszłą historię CodeCombat!\",\n      jobs_subtitle: \"Nie za bardzo się odnajdujesz póki co, ale chcesz pozostać w kontakcie? Zobacz \\\"Stwórz Własną\\\".\",\n      jobs_benefits: \"Korzyści z pracy u nas\",\n      jobs_benefit_4: \"Nieograniczony urlop\",\n      jobs_benefit_5: \"Pomoc w rozwoju zawodowym i dalszej nauce – darmowe książki i gry!\",\n      jobs_benefit_6: \"Ubezpieczenie medyczne (pakiet złoty), dentystyczne, okulistyczne, bilety komunikacyjne\",\n      jobs_benefit_7: \"Biurko sit/stand dla wszystkich\",\n      jobs_benefit_9: \"10 lat na realizację opcji pracowniczych\",\n      jobs_benefit_10: \"Urlop macierzyński: 10 tygodni płatnych, następnych 6 w 55%\",\n      jobs_benefit_11: \"Urlop tacierzyński: 10 tygodni płatnych\",\n      jobs_custom_title: \"Stwórz własne stanowisko\",\n      jobs_custom_description: \"Zainteresował Cię CodeCombat, ale nie możesz znaleźć stanowiska odpowiadającego Twoim kwalifikacjom? Napisz do nas i pokaż co możesz wnieść do naszego zespołu. Chętnie Cię wysłuchamy!\",\n      jobs_custom_contact_1: \"Napisz do nas\",\n      jobs_custom_contact_2: \"o sobie, możliwe, że się z Tobą skontaktujemy!\",\n      contact_title: \"Prasa - Kontakt\",\n      contact_subtitle: \"Potrzebujesz więcej informacji? Napisz do nas na\",\n      screenshots_title: \"Zrzuty ekranu z gry\",\n      screenshots_hint: \"(kliknij, żeby zobaczyć w pełnym rozmiarze)\",\n      downloads_title: \"Pobierz pliki i informacje\",\n      about_codecombat: \"O CodeCombat\",\n      logo: \"Logo\",\n      screenshots: \"Zrzuty ekranu\",\n      character_art: \"Grafiki postaci\",\n      download_all: \"Pobierz wszystko\",\n      previous: \"Poprzedni\",\n      location_title: \"Nasza siedziba w San Francisco:\"\n    },\n    teachers: {\n      licenses_needed: \"Potrzebne licencje\"\n    },\n    special_offer: {\n      special_offer: \"Specjalna oferta\",\n      project_based_title: \"Kursy bazujące na projektach\",\n      project_based_description: \"Kursy tworzenia gier i stron internetowych dają możliwość podzielenia się gotowym projektem.\",\n      great_for_clubs_title: \"Idealne dla kół i klubów szkolnych\",\n      great_for_clubs_description: \"Nauczyciele mogą kupić maksymalnie __maxQuantityStarterLicenses__ licencji startowych na rok.\",\n      low_price_title: \"Jedyne __starterLicensePrice__ za ucznia\",\n      low_price_description: \"Licencje startowe są aktywne przez __starterLicenseLengthMonths__ miesięcy od daty ich zakupu.\",\n      three_great_courses: \"Trzy świetne kursy dostępne w licencji startowej:\",\n      license_limit_description: \"Nauczyciele mogą kupić aż do __maxQuantityStarterLicenses__ licencji startowych. Ty posiadasz już ich __quantityAlreadyPurchased__. Jeśli potrzebujesz więcej napisz na __supportEmail__. Licencje startowe są ważne przez __starterLicenseLengthMonths__ miesięcy.\",\n      student_starter_license: \"Licencje startowe uczniów\",\n      purchase_starter_licenses: \"Kup licencje startowe\",\n      purchase_starter_licenses_to_grant: \"Kup licencję startową, aby uzyskać dostęp do __starterLicenseCourseList__ kursów\",\n      starter_licenses_can_be_used: \"Licencje startowe mogą być natychmiast użyte do rozdysponowania.\",\n      pay_now: \"Zapłać teraz\",\n      we_accept_all_major_credit_cards: \"Akceptujemy większość kart płatniczych.\",\n      cs2_description: \"najpierw łagodnie zaczyna od podstaw, aby następnie zanurzyć uczniów w instrukcjach warunkowych, funkcjach, zdarzeniach, itp...\",\n      wd1_description: \"wprowadza w podstawy składni HTML i CSS, oraz uczy jak stworzyć swoją pierwszą stronę internetową.\",\n      gd1_description: \"używa składni, którą uczniowie już znają, aby pokazać im jak stworzyć własny, grywalny poziom w grze.\",\n      see_an_example_project: \"zobacz przykładowy projekt\",\n      get_started_today: \"Zacznij dziś!\",\n      want_all_the_courses: \"Chcesz wszystkie kursy? Poproś o informacje o pełnej licencji.\",\n      compare_license_types: \"Porównaj typy licencji:\",\n      cs: \"Informatyka\",\n      wd: \"Tworzenie stron\",\n      wd1: \"Tworzenie stron 1\",\n      gd: \"Tworzenie gier\",\n      gd1: \"Tworzenie gier 1\",\n      maximum_students: \"Maksymalna ilość uczniów\",\n      unlimited: \"Bez limitu\",\n      priority_support: \"Priorytetowe wsparcie\",\n      yes: \"Tak\",\n      price_per_student: \"__price__ za ucznia\",\n      pricing: \"Cennik\",\n      free: \"Za darmo\",\n      purchase: \"Kup\",\n      courses_prefix: \"Kursy\",\n      courses_suffix: \"\",\n      course_prefix: \"Kurs\",\n      course_suffix: \"\"\n    },\n    teachers_quote: {\n      subtitle: \"Twoi uczniowie mogą zacząć nukę w mniej niż godzinę. Będziesz mógł <strong>utworzyć klasy, dodać uczniów, doglądać ich postępy</strong> w nauce programowania.\",\n      email_exists: \"Ten adres email jest już zajęty.\",\n      phone_number: \"Numer telefonu\",\n      phone_number_help: \"Jak możemy skontaktować się z tobą w ciągu dnia pracy?\",\n      primary_role_label: \"Twoja główna rola\",\n      role_default: \"Wybierz rolę\",\n      primary_role_default: \"Wybierz kim jesteś\",\n      purchaser_role_default: \"Rola w zakupie subskrypcji\",\n      tech_coordinator: \"Koordynator technologii\",\n      advisor: \"Specjalista od nauczania/Doradca\",\n      principal: \"Dyrektor\",\n      superintendent: \"Kurator\",\n      parent: \"Rodzic\",\n      purchaser_role_label: \"Jaki masz wpływ na zakup\",\n      influence_advocate: \"Wpływam/Doradzam\",\n      evaluate_recommend: \"Oceniam/Polecam\",\n      approve_funds: \"Zatwierdzam fundusze\",\n      no_purchaser_role: \"Nie mam wpływu na zamówienia\",\n      district_label: \"Okręg\",\n      district_name: \"Nazwa okręgu\",\n      district_na: \"Wprowadź `-` jeśli nie dotyczy\",\n      organization_label: \"Szkoła\",\n      school_name: \"Nazwa szkoły\",\n      city: \"Miasto\",\n      state: \"Województwo\",\n      country: \"Kraj\",\n      num_students_help: \"Ile osób masz zamiar zapisać do CodeCombat?\",\n      num_students_default: \"Wybierz zakres\",\n      education_level_label: \"Poziom nauczania uczniów\",\n      education_level_help: \"Możesz wybrać wiele odpowiedzi.\",\n      elementary_school: \"Szkoła podstawowa\",\n      high_school: \"Liceum\",\n      please_explain: \"(proszę wyjaśnić)\",\n      middle_school: \"Gimnazjum\",\n      college_plus: \"Studia\",\n      referrer: \"Jak się o nas dowiedziałeś?\",\n      referrer_help: \"Na przykład: od innego nauczyciela, na konferencji, od swoich uczniów, Code.org, itp.\",\n      anything_else: \"Coś jeszcze powinniśmy wiedzieć?\",\n      thanks_header: \"Prośba otrzymana!\",\n      thanks_sub_header: \"Dziękujemy za okazanie zainteresowania stroną CodeCombat.\",\n      thanks_p: \"Wkrótce się odezwiemy! Jeśli chcesz się z nami skontaktować napisz na:\",\n      back_to_classes: \"Idź do klas\",\n      finish_signup: \"Zakończ tworzenie konta nauczyciela:\",\n      finish_signup_p: \"Create an account to set up a class, add your students, and monitor their progress as they learn computer science.\",\n      signup_with: \"Zarejestruj się z:\",\n      connect_with: \"Połącz się z:\",\n      conversion_warning: \"UWAGA: Obecnie posiadasz <em>konto ucznia</em>. Po wysłaniu tego formularza zostanie ono zaktualizowane do konta nauczyciela.\",\n      learn_more_modal: \"Konta nauczyciela w CodeCombat mają możliwość monitorowania postępów uczniów, używania licencji i tworzenia klas. Konto nauczyciela nie może być częścią klasy - jeśli jesteś obecnie zapisany do jakiejś klasy, nie będziesz mógł już jej odwiedzać po aktualizacji do konta nauczyciela.\",\n      create_account: \"Stwórz konto dla nauczyciela\",\n      create_account_subtitle: \"Uzyskaj wyłączny dostęp do narzędzi pomocnych podczas zajęć. <strong>Utwórz swoją klasę</strong>, dodaj uczniów i <strong>śledź ich postępy</strong>!\",\n      convert_account_title: \"Aktualizuj do konta nauczyciela\",\n      not: \"Nie jesteś\"\n    },\n    versions: {\n      save_version_title: \"Zapisz nową wersję\",\n      new_major_version: \"Nowa wersja główna\",\n      submitting_patch: \"Przesyłanie łatki...\",\n      cla_prefix: \"Aby zapisać zmiany, musisz najpierw zaakceptować naszą\",\n      cla_url: \"umowę licencyjną dla współtwórców (CLA)\",\n      cla_suffix: \".\",\n      cla_agree: \"AKCEPTUJĘ\",\n      owner_approve: \"Przed pojawieniem się zmian, właściciel musi je zatwierdzić.\"\n    },\n    contact: {\n      contact_us: \"Kontakt z CodeCombat\",\n      welcome: \"Miło Cię widzieć! Użyj tego formularza, żeby wysłać do nas wiadomość. \",\n      forum_prefix: \"W sprawach ogólnych, skorzystaj z \",\n      forum_page: \"naszego forum\",\n      forum_suffix: \".\",\n      faq_prefix: \"Jest też\",\n      faq: \"FAQ\",\n      subscribe_prefix: \"Jeśli masz jakiś problem z rozwiązaniem poziomu,\",\n      subscribe: \"wykup subskrypcję CodeCombat,\",\n      subscribe_suffix: \"a my z radością Ci pomożemy.\",\n      subscriber_support: \"Jako, że będziesz subskrybentem CodeCombat, Twoje e-maile będą miały najwyższy priorytet.\",\n      screenshot_included: \"Dołączymy zrzuty ekranu.\",\n      where_reply: \"Gdzie mamy odpisać?\",\n      send: \"Wyślij wiadomość\"\n    },\n    account_settings: {\n      title: \"Ustawienia Konta\",\n      not_logged_in: \"Zaloguj się lub stwórz konto, by dostosować ustawienia.\",\n      me_tab: \"Ja\",\n      picture_tab: \"Zdjęcie\",\n      delete_account_tab: \"Usuń swoje konto\",\n      wrong_email: \"Błędny e-mail\",\n      wrong_password: \"Błędne hasło\",\n      delete_this_account: \"Usuń to konto całkowicie\",\n      reset_progress_tab: \"Zresetuj cały postęp\",\n      reset_your_progress: \"Usuń cały postęp w grze i zacznij od początku\",\n      god_mode: \"TRYB BOGA\",\n      emails_tab: \"Powiadomienia\",\n      admin: \"Administrator\",\n      manage_subscription: \"Kliknij, aby zarządzać swoimi subskrypcjami.\",\n      new_password: \"Nowe hasło\",\n      new_password_verify: \"Zweryfikuj\",\n      type_in_email: \"Wpisz swój email albo nazwę użytkownika, aby potwierdzić usunięcie konta.\",\n      type_in_email_progress: \"Wpisz swój email, aby potwierdzić usunięcie całego swojego postępu.\",\n      type_in_password: \"Wpisz również swoje hasło.\",\n      email_subscriptions: \"Powiadomienia email\",\n      email_subscriptions_none: \"Brak powiadomień email.\",\n      email_announcements: \"Ogłoszenia\",\n      email_announcements_description: \"Otrzymuj powiadomienia o najnowszych wiadomościach i zmianach w CodeCombat.\",\n      email_notifications: \"Powiadomienia\",\n      email_notifications_summary: \"Ustawienia spersonalizowanych, automatycznych powiadomień mailowych zależnych od twojej aktywności w CodeCombat.\",\n      email_any_notes: \"Wszystkie powiadomienia\",\n      email_any_notes_description: \"Odznacz by wyłączyć wszystkie powiadomienia email.\",\n      email_news: \"Nowości\",\n      email_recruit_notes: \"Możliwości zatrudnienia\",\n      email_recruit_notes_description: \"Jeżeli grasz naprawdę dobrze, możemy się z tobą skontaktować by zaoferować (lepszą) pracę.\",\n      contributor_emails: \"Powiadomienia asystentów\",\n      contribute_prefix: \"Szukamy osób, które chciałyby do nas dołączyć! Sprawdź \",\n      contribute_page: \"stronę współpracy\",\n      contribute_suffix: \", aby dowiedzieć się więcej.\",\n      email_toggle: \"Zmień wszystkie\",\n      error_saving: \"Błąd zapisywania\",\n      saved: \"Zmiany zapisane\",\n      password_mismatch: \"Hasła różnią się od siebie\",\n      password_repeat: \"Powtórz swoje hasło.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Skróty klawiszowe\",\n      space: \"Spacja\",\n      enter: \"Enter\",\n      press_enter: \"naciśnij enter\",\n      escape: \"Escape\",\n      shift: \"Shift\",\n      run_code: \"Uruchom obecny kod.\",\n      run_real_time: \"Uruchom 'na żywo'.\",\n      continue_script: \"Kontynuuj ostatni skrypt.\",\n      skip_scripts: \"Pomiń wszystkie pomijalne skrypty.\",\n      toggle_playback: \"Graj/pauzuj.\",\n      scrub_playback: \"Przenoś się w czasie do produ i do tyłu.\",\n      single_scrub_playback: \"Przenoś się w czasie do produ i do tyłu o jedną ramkę\",\n      scrub_execution: \"Pomiń wykonywanie obecnego czaru.\",\n      toggle_debug: \"Pokaż/ukryj debugowanie.\",\n      toggle_grid: \"Pokaż/ukryj siatkę.\",\n      toggle_pathfinding: \"Pokaż/ukryj ścieżkę bohatera.\",\n      beautify: \"Upiększ kod standaryzując jego formatowanie.\",\n      maximize_editor: \"Maksymalizuj/minimalizuj edytor kodu.\"\n    },\n    community: {\n      main_title: \"Społeczność CodeCombat\",\n      introduction: \"Sprawdź poniżej jak możesz nam pomóc i co sprawia ci najwięcej radości. Nie możemy się doczekać pracy z Tobą!\",\n      level_editor_prefix: \"Użyj CodeCombat\",\n      level_editor_suffix: \"do tworzenia i edycji poziomów. Użytkownicy stworzyli poziomy dla swoich klas, przyjaciół, hackathonów, uczniów i rodzeństwa. Jeśli lubisz tworzyć nowe poziomy zacznij od przerobienia już istniejącego!\",\n      thang_editor_prefix: \"Rzeczy dostępne w grze nazywamy 'obiektami'. Użyj\",\n      thang_editor_suffix: \"do modyfikacji grafik CodeCombat. Niech jednostki czymś rzucają, zmień kierunek animacji, zmień punkty ataku jednostki, albo wyślij do nas swój własny arkusz sprite'ów.\",\n      article_editor_prefix: \"Znalazłeś błąd w dokumentacji? Chcesz napisać instrukcję do nowej rzeczy? Zajrzyj do\",\n      article_editor_suffix: \"i pomóż graczom CodeCombat w nauczeniu się jak najwięcej.\",\n      find_us: \"Znajdziesz nas na tych stronach\",\n      social_github: \"Przejrzyj cały nasz kod na platformie GitHub\",\n      social_blog: \"Przeczytaj blog CodeCombat na Sett\",\n      social_discource: \"Dołącz do dyskusji na naszym forum\",\n      social_facebook: \"Polub CodeCombat na Facebooku\",\n      social_twitter: \"Obserwuj CodeCombat na Twitterze\",\n      social_gplus: \"Dołącz do CodeCombat na Google+\",\n      social_slack: \"Porozmawiaj z nami na publicznym kanale CodeCombat na Slacku\",\n      contribute_to_the_project: \"Zostań współtwórcą CodeCombat\"\n    },\n    clans: {\n      clan: \"Klan\",\n      clans: \"Klany\",\n      new_name: \"Nazwa nowego klanu\",\n      new_description: \"Opis nowego klanu\",\n      make_private: \"Stwórz prywatny klan\",\n      subs_only: \"tylko subskrybenci\",\n      create_clan: \"Stwórz nowy klan\",\n      private_preview: \"Podgląd\",\n      private_clans: \"Prywatne klany\",\n      public_clans: \"Publiczne klany\",\n      my_clans: \"Moje klany\",\n      clan_name: \"Nazwa klanu\",\n      name: \"Nazwa\",\n      chieftain: \"Dowódca\",\n      edit_clan_name: \"Edytuj nazwę klanu\",\n      edit_clan_description: \"Edytuj opis klanu\",\n      edit_name: \"edytuj nazwę\",\n      edit_description: \"edytuj opis\",\n      \"private\": \"(prywatny)\",\n      summary: \"Podsumowanie\",\n      average_level: \"Średni poziom\",\n      average_achievements: \"Średnio osiągnięć\",\n      delete_clan: \"Usuń klan\",\n      leave_clan: \"Opuść klan\",\n      join_clan: \"Dołącz do klanu\",\n      invite_1: \"Zaproszenie:\",\n      invite_2: \"*Zaproś nowe osoby do klanu wysyłając im ten link.\",\n      members: \"Członkowie\",\n      progress: \"Postęp\",\n      not_started_1: \"nierozpoczęty\",\n      started_1: \"rozpoczęty\",\n      complete_1: \"ukończony\",\n      exp_levels: \"Rozwiń poziomy\",\n      rem_hero: \"Usuń bohatera\",\n      status: \"Status\",\n      complete_2: \"Ukończony\",\n      started_2: \"Rozpoczęto\",\n      not_started_2: \"Nie rozpoczęto\",\n      view_solution: \"Pokaż rozwiązanie.\",\n      view_attempt: \"Pokaż próbę rozwiązania.\",\n      latest_achievement: \"Ostatnie osiągnięcia\",\n      playtime: \"Czas gyr\",\n      last_played: \"Ostatnio grany\",\n      leagues_explanation: \"Zagraj w lidze przeciwko innym klanom na mapach dla wielu graczy.\",\n      track_concepts1: \"Śledź tematy\",\n      track_concepts2a: \"nauczone przez uczniów\",\n      track_concepts2b: \"nauczone przez członków\",\n      track_concepts3a: \"Śledź poziomy ukończone przez każdego z uczniów\",\n      track_concepts3b: \"Śledź poziomy ukończone przez każdego z członków\",\n      track_concepts4a: \"Obejrzyj swoich uczniów\",\n      track_concepts4b: \"Obejrzyj swoich członków\",\n      track_concepts5: \"Rozwiązania\",\n      track_concepts6a: \"Sortuj uczniów według postępu, albo nazwy\",\n      track_concepts6b: \"Sortuj członków według postępu, albo nazwy\",\n      track_concepts7: \"Do dołączenia\",\n      track_concepts8: \"wymagane zaproszenie\",\n      private_require_sub: \"Do dołaczenia, bądź stworzenia prywatnych klanów wymagana jest subskrypcja.\"\n    },\n    courses: {\n      create_new_class: \"Stwórz nową klasę\",\n      solutions_require_licenses: \"Rozwiązania poziomów dostępne są dla nauczycieli posiadających licencję.\",\n      unnamed_class: \"Klasa bez nazwy\",\n      edit_settings1: \"Edytuj ustawienia klasy\",\n      add_students: \"Dodaj uczniów\",\n      stats: \"Statystyki\",\n      student_email_invite_blurb: \"Twoi uczniowie mogą użyć kodu <strong>__classCode__</strong> zakładając konto ucznia, bez potrzeby posiadania adresu email.\",\n      total_students: \"Ilość uczniów:\",\n      average_time: \"Średni czas gry na poziom:\",\n      total_time: \"Łączny czas gry:\",\n      average_levels: \"Średnio ukończonych poziomów:\",\n      total_levels: \"Łącznie ukończonych poziomów:\",\n      students: \"Uczniowie\",\n      concepts: \"Tematy\",\n      play_time: \"Czas gry:\",\n      completed: \"Ukończono:\",\n      enter_emails: \"Wpisz emaila uczniów do zaproszenia. Wpisz każdy nowej linii, albo oddziel je przecinkiem\",\n      send_invites: \"Zaproś uczniów\",\n      number_programming_students: \"Ilość programujących uczniów\",\n      number_total_students: \"Łączna liczba uczniów w szkole\",\n      enroll: \"Zapisz\",\n      enroll_paid: \"Zapisz uczniów na opłacony kurs\",\n      get_enrollments: \"Otrzymaj więcej licencji\",\n      change_language: \"Zmień język kursu\",\n      keep_using: \"Używaj dalej\",\n      switch_to: \"Przełącz na\",\n      greetings: \"Witamy!\",\n      back_classrooms: \"Wróć do moich klas\",\n      back_classroom: \"Wróć do klasy\",\n      back_courses: \"Wróć do moich kursów\",\n      edit_details: \"Edytuj detale klasy\",\n      purchase_enrollments: \"Kup licencje dla uczniów\",\n      remove_student: \"usuń ucznia\",\n      assign: \"Przydziel\",\n      to_assign: \"Przydziel opłacone kursy.\",\n      student: \"Uczeń\",\n      teacher: \"Nauczyciel\",\n      arena: \"Arena\",\n      available_levels: \"Dostępne poziomy\",\n      started: \"rozpoczęty\",\n      complete: \"ukończ\",\n      practice: \"trenuj\",\n      required: \"wymagany\",\n      welcome_to_courses: \"Witamy w kursach podróżniku!\",\n      ready_to_play: \"Gotów, by zagrać?\",\n      start_new_game: \"Rozpocznij nową grę\",\n      play_now_learn_header: \"Zagraj teraz, a nauczysz się\",\n      play_now_learn_1: \"podstawowych komend sterujących bohaterem\",\n      play_now_learn_2: \"pętli 'while', którą rozwiążesz różne zagadki\",\n      play_now_learn_3: \"zmiennych, którymi zadecydujesz co ma robić bohater\",\n      play_now_learn_4: \"jak pokonać ogra (bardzo przydatna rzecz!)\",\n      welcome_to_page: \"Panel ucznia\",\n      my_classes: \"Moje klasy\",\n      class_added: \"Udało się dodać klasę!\",\n      view_project_gallery: \"przeglądaj projekty innych uczniów z klasy\",\n      join_class: \"Dołącz do klasy\",\n      join_class_2: \"Dołącz do klasy\",\n      ask_teacher_for_code: \"Poproś nauczyciela o kod klasy z CodeCombat! Jeśli już go masz, wpisz go poniżej:\",\n      enter_c_code: \"<Wpisz kod klasy>\",\n      join: \"Dołącz\",\n      joining: \"Dołączanie do klasy\",\n      course_complete: \"Ukończono kurs\",\n      play_arena: \"Zagraj na arenie\",\n      view_project: \"Zobacz project\",\n      start: \"Start\",\n      last_level: \"Ostatni grany poziom\",\n      not_you: \"To nie ty?\",\n      continue_playing: \"Kontynuuj grę\",\n      option1_header: \"Zaproś uczniów poprzez email\",\n      remove_student1: \"Usuń ucznia\",\n      are_you_sure: \"Na pewno chcesz usunąć tego ucznia z klasy?\",\n      remove_description1: \"Uczeń straci dostęp do klasy i przypisanych mu kursów. Postęp w grze natomiast NIE zostanie utracony, uczeń może zostać dołączony do klasy w każdym momencie.\",\n      remove_description2: \"Aktywowana licencja nie zostanie zwrócona.\",\n      license_will_revoke: \"Ta licencja ucznia będzie zablokowana i będzie mozna ją przydzielić innemu uczniowi.\",\n      keep_student: \"Zachowaj ucznia\",\n      removing_user: \"Usuwanie użytkownika\",\n      subtitle: \"Zobacz opisy kursów i poziomy\",\n      changelog: \"Pokaż ostatnie zmiany w poziomach kursu.\",\n      select_language: \"Wybierz język\",\n      select_level: \"Wybierz poziom\",\n      play_level: \"Zagraj poziom\",\n      concepts_covered: \"Omówione tematy\",\n      view_guide_online: \"Opisy i rozwiązania poziomów\",\n      grants_lifetime_access: \"Przyznaj dostęp do wszystkich kursów.\",\n      enrollment_credits_available: \"Dostępne licencje:\",\n      language_select: \"Wybierz język\",\n      language_cannot_change: \"Gdy uczniowie dołączą do klasy języka nie będzie można zmienić.\",\n      avg_student_exp_label: \"Średnie doświadczenie uczniów z programowaniem\",\n      avg_student_exp_desc: \"Pomoże nam to lepiej dopasować kursy.\",\n      avg_student_exp_select: \"Wybierz najlepszą opcję\",\n      avg_student_exp_none: \"Bez doświadczenia - brak doświadczenia z kodem\",\n      avg_student_exp_beginner: \"Początkujący - mniej więcej wie jak wygląda kod\",\n      avg_student_exp_intermediate: \"Średni - potrafi czytać i rozumieć kod\",\n      avg_student_exp_advanced: \"Zaawansowany - potrafi samemu napisać jakiś prosty program\",\n      avg_student_exp_varied: \"Różny poziom doświadczenia\",\n      student_age_range_label: \"Zakres wieku uczniów\",\n      student_age_range_younger: \"Młodsi niż 6\",\n      student_age_range_older: \"Starsi niż 18\",\n      student_age_range_to: \"do\",\n      create_class: \"Stwórz klasę\",\n      class_name: \"Nazwa klasy\",\n      teacher_account_restricted: \"Posiadasz konto nauczyciela, więc nie możesz tu zaglądać.\",\n      account_restricted: \"Dostęp do tej strony wymaga konta ucznia.\",\n      update_account_login_title: \"Zaloguj się, aby zaktualizować konto\",\n      update_account_title: \"Twoje konto wymaga uwagi!\",\n      update_account_blurb: \"Zanim będziesz mógł dołączyć do klasy, wybierz jak chcesz używać tego konta.\",\n      update_account_current_type: \"Obecny typ konta:\",\n      update_account_account_email: \"Email/Nazwa użytkownika:\",\n      update_account_am_teacher: \"Jestem nauczycielem\",\n      update_account_keep_access: \"Pozostaw dostęp do klas, którze stworzyłem\",\n      update_account_teachers_can: \"Konto nauczyciela może:\",\n      update_account_teachers_can1: \"Tworzyć/zarządzać/dodawać klasy\",\n      update_account_teachers_can2: \"Zapisywać/usuwać uczniów z kursów\",\n      update_account_teachers_can3: \"Odblokować wszystkie poziomy kursów do przetestowania\",\n      update_account_teachers_can4: \"Dostęp do funkcji tylko dla nauczyciela w momencie ich udostępnienia przez nas\",\n      update_account_teachers_warning: \"Uwaga: Zostaniesz usunięty ze wszystkich klas, do których wcześniej dołaczyłeś i nie będziesz mógł już grać jako uczeń.\",\n      update_account_remain_teacher: \"Pozostań nauczycielem\",\n      update_account_update_teacher: \"Zostań nauczycielem\",\n      update_account_am_student: \"Jestem uczniem\",\n      update_account_remove_access: \"Usuń dostęp do klas, które stworzyłem\",\n      update_account_students_can: \"Konto ucznia może:\",\n      update_account_students_can1: \"Dołączyć do klasy\",\n      update_account_students_can2: \"Grać w kursach jak uczeń i śledzić swój własny postęp\",\n      update_account_students_can3: \"Rywalizować z innymi uczniami z klasy w arenach\",\n      update_account_students_can4: \"Dostęp do funkcji tylko dla uczniów w momencie ich udostępnienia przez nas\",\n      update_account_students_warning: \"Uwaga: Nie będziesz mógł zarządzać klasami, które do tej pory posiadasz, oraz tworzyć nowych.\",\n      unsubscribe_warning: \"Uwaga: Twoja miesięczna subskrypcja zostanie anulowana.\",\n      update_account_remain_student: \"Pozostań uczniem\",\n      update_account_update_student: \"Zostań uczniem\",\n      need_a_class_code: \"Wpisz kod klasy do której chcesz dołączyć:\",\n      update_account_not_sure: \"Nie jesteś pewien co masz wybrać? Email\",\n      update_account_confirm_update_student: \"Na pewno chcesz zaktualizować swoje konto do konta ucznia?\",\n      update_account_confirm_update_student2: \"Nie będziesz mógł już zarządzać klasami które posiadasz, oraz tworzyć nowych klas. Twoje obecne klasy zostana usunięte z CodeCombat i nie będzie można ich już przywrócić.\",\n      instructor: \"Instruktor: \",\n      youve_been_invited_1: \"Otrzymałeś zaproszenie, do dołaczenia do \",\n      youve_been_invited_2: \", gdzie nauczysz się \",\n      youve_been_invited_3: \" wraz ze swoimi kolegami z klasy CodeCombat.\",\n      by_joining_1: \"Dołączając do \",\n      by_joining_2: \"będziesz mógł zmienić swoje hasło, jeśli je zapomnisz. Możesz także zweryfikować swój adres email i zmieniać hasło samemu!\",\n      sent_verification: \"Wysłaliśmy email weryfikacyjny do:\",\n      you_can_edit: \"Możesz zmienić swój email w \",\n      account_settings: \"Ustawieniach konta\",\n      select_your_hero: \"Wybierz swojego bohatera\",\n      select_your_hero_description: \"Zawsze możesz zmienić swojego bohatera wybierając stronę kursów i klikając na \\\"Zmień bohatera\\\"\",\n      select_this_hero: \"Wybierz tego bohatera\",\n      current_hero: \"Obecny bohater:\",\n      web_dev_language_transition: \"Wszystkie klasy będą używać HTML / JavaScript w tym kursie.  Klasy, które wcześniej uczyły sie Pythona, będą miały kilka dodatkowych lekcji z JavaScriptu, aby ułatwić przestawienie się na nowy język.  Klasy, które używały JavaScriptu rozpoczną grę bez tych lekcji.\",\n      course_membership_required_to_play: \"Musisz dołączyć do kursu, aby móc grać w ten poziom.\",\n      license_required_to_play: \"Poproś nauczyciela o przydzielenie ci licencji, abyś mógł kontynuować rozgrywkę w CodeCombat!\"\n    },\n    teacher: {\n      assigning_course: \"Przydziel kurs\",\n      course_solution: \"Rozwiązania kursu\",\n      level_overview_solutions: \"Opisy i rozwiązania poziomów\",\n      no_student_assigned: \"Do kursu nie został dołączony żaden uczeń.\",\n      paren_new: \"(nowy)\",\n      teacher_dashboard: \"Panel nauczyciela\",\n      my_classes: \"Moje klasy\",\n      courses: \"Przewodniki\",\n      enrollments: \"Licencje studentów\",\n      resources: \"Zasoby\",\n      help: \"Pomoc\",\n      language: \"Język\",\n      edit_class_settings: \"edytuj ustawienia klasy\",\n      access_restricted: \"Wymagana aktualizacja konta\",\n      teacher_account_required: \"Ta strona wymaga dostępu na poziomie nauczyciela.\",\n      create_teacher_account: \"Stwórz konto nauczyciela\",\n      what_is_a_teacher_account: \"Co to jest konto nauczyciela?\",\n      teacher_account_explanation: \"Konto nauczyciela w CodeCombat pozwala na stworzenie klasy, monitorowanie postępów uczniów w trakcie kursów, zarządzanie licencjami, oraz dostęp do zasobów pomocnych w budowie programów zajęć.\",\n      current_classes: \"Obecne klasy\",\n      archived_classes: \"Zarchiwizowane klasy\",\n      archived_classes_blurb: \"Klasy mogą zostać zarchiwizowane na przyszłe potrzeby. Anuluj archiwizację klasy, aby móc znowu ją przeglądać w widoku klas.\",\n      view_class: \"pokaż klasę\",\n      archive_class: \"archiwizuj klasę\",\n      unarchive_class: \"anuluj archiwizację\",\n      unarchive_this_class: \"Anuluj archiwizację klasy\",\n      no_students_yet: \"Ta klasa nie ma żadnych uczniów.\",\n      no_students_yet_view_class: \"Pokaż klasę, aby dodać uczniów.\",\n      try_refreshing: \"(Może będziesz musiał odświeżyć stronę)\",\n      create_new_class: \"Utworz nową klasę\",\n      class_overview: \"Przegląd klasy\",\n      avg_playtime: \"Średni czas gry\",\n      total_playtime: \"Łączny czas gry\",\n      avg_completed: \"Średnio ukończonych poziomów\",\n      total_completed: \"Razem ukończonych poziomów\",\n      created: \"Stworzono\",\n      concepts_covered: \"Omówione zagadnienia\",\n      earliest_incomplete: \"Pierwszy ukończony poziom\",\n      latest_complete: \"Ostatnio ukończony poziom\",\n      enroll_student: \"Zapisz ucznia\",\n      apply_license: \"Zastosuj licencję\",\n      revoke_license: \"Anuluj licencję\",\n      course_progress: \"Postępy kursu\",\n      not_applicable: \"N/A\",\n      edit: \"edytuj\",\n      edit_2: \"Edytuj\",\n      remove: \"usuń\",\n      latest_completed: \"Ostatnio ukończony:\",\n      sort_by: \"Sortuj według\",\n      progress: \"Postęp\",\n      completed: \"Ukończono\",\n      practice: \"Ćwicz\",\n      started: \"Rozpoczęto\",\n      no_progress: \"Brak postępu\",\n      not_required: \"Nie wymagane\",\n      select_course: \"Wybierz kurs do wyświetlenia\",\n      progress_color_key: \"Klucz koloru postępu:\",\n      level_in_progress: \"Poziom w trakcie...\",\n      level_not_started: \"Poziom nie rozpoczęty\",\n      project_or_arena: \"Projekt albo arena\",\n      students_not_assigned: \"Uczniowie, którzy nie zostali zapisani do {{courseName}}\",\n      course_overview: \"Przegląd kursu\",\n      copy_class_code: \"Kopiuj kod klasy\",\n      class_code_blurb: \"Uczniowie moga dołaczyc do kasy używając właśnie tego kodu. Podczas tworzenia konta ucznia wystarczy podać ten kod kasy, a dres email nie będzie wymagany.\",\n      copy_class_url: \"Kopiuj URL klasy\",\n      class_join_url_blurb: \"Możesz także umieścić ten unikalny URL klasy na waszej wspólnej stronie.\",\n      add_students_manually: \"Zaproś uczniów poprzez email\",\n      bulk_assign: \"Masowe przydzielanie\",\n      assigned_msg_1: \"{{numberAssigned}} uczniów zostało dołączonych do kursu {{courseName}}.\",\n      assigned_msg_2: \"{{numberEnrolled}} licencji zostało przypisanych.\",\n      assigned_msg_3: \"Posiadasz jeszcze {{remainingSpots}} dostępnych licencji.\",\n      assign_course: \"Przypisz kurs\",\n      not_assigned_modal_title: \"Kurs nie został przypisany\",\n      not_assigned_modal_starter_body_1: \"Ten kurs wymaga licencji startowej. Nie masz wystarczającej licby licencji startowych, aby je przydzielić do __selected__ zaznaczonych uczniów.\",\n      not_assigned_modal_starter_body_2: \"Kup licencje startowe, aby mieć dostęp do tego kursu.\",\n      not_assigned_modal_full_body_1: \"Ten kurs wymaga pełnej licencji. Nie masz wystarczającej liczby pełnych licencji, aby je przydzielić do __selected__ zaznaczonych uczniów.\",\n      not_assigned_modal_full_body_2: \"Posiadasz jedynie __numFullLicensesAvailable__ dostępnych pełnych licencji (__numStudentsWithoutFullLicenses__ uczniów nie posiada obecnie aktywnej pełnej licencji).\",\n      not_assigned_modal_full_body_3: \"Proszę wybrać mniej uczniów, albo wyślij wiadomość na __supportEmail__ po poradę.\",\n      assigned: \"Przypisany\",\n      enroll_selected_students: \"Zapisz wybranych uczniów\",\n      no_students_selected: \"Nie wybrano żadnego ucznia.\",\n      show_students_from: \"Pokaż studentów od\",\n      apply_licenses_to_the_following_students: \"Zastosuj licencję do powyższych uczniów\",\n      students_have_licenses: \"Ci uczniowie mają już zastosowaną licencję:\",\n      all_students: \"Wszyscy uczniowie\",\n      apply_licenses: \"Zastosuj licencje\",\n      not_enough_enrollments: \"Brak wsytarczającej liczby licencji.\",\n      enrollments_blurb: \"Uczniowie potrzebują licencji, aby móc kontynuować naukę po pierwszym kursie.\",\n      how_to_apply_licenses: \"Jak zastosować licencję\",\n      export_student_progress: \"Eksport postępu uczniów (do CSV)\",\n      send_email_to: \"Wyślij email do odzyskiwania hasła do:\",\n      email_sent: \"Email wysłany\",\n      send_recovery_email: \"Wyślij email do odzyskania hasła\",\n      enter_new_password_below: \"Wpisz poniżej nowe hasło:\",\n      change_password: \"Zmień hasło\",\n      changed: \"Zmieniono\",\n      available_credits: \"Dostępne licencje\",\n      pending_credits: \"Oczekujące licencje\",\n      starter_licenses: \"licencje startowe\",\n      start_date: \"data rozpoczęcia:\",\n      end_date: \"data zakonczenia:\",\n      how_to_apply_licenses_blurb_2: \"Mogę zastosować licencję, bez przydzielania kursu?\",\n      how_to_apply_licenses_blurb_3: \"Tak — przejdź do sekcji \\\"Status licencji\\\" w swojej klasie, a następnie kliknij na \\\"Zastosuj licencję\\\", aby przydzielić ja uczniowi, który jej jeszcze nie posiada.\",\n      request_sent: \"Wysłano prośbę!\",\n      license_status: \"Status licencji\",\n      status_expired: \"Licencja wygasła {{date}}\",\n      status_not_enrolled: \"Nie zapisany\",\n      status_enrolled: \"Licencja wygaśnie {{date}}\",\n      select_all: \"Wybierz wszystko\",\n      project: \"Project\",\n      view_arena_ladder: \"Pokaż drabinkę areny\",\n      resource_hub: \"Baza wiedzy\",\n      getting_started: \"Wprowadzenie\",\n      educator_faq: \"FAQ dla nauczycieli\",\n      educator_faq_desc: \"Najczęściej zadawane pytania odnośnie korzystania z CodeCombat w twojej klasie lub szkole.\",\n      teacher_getting_started: \"Przewodnik dla nauczyciela\",\n      teacher_getting_started_desc: \"Nowy w CodeCombat? Pobierz ten `Przewodnik dla nauczyciela`. Z jego pomocą założysz konto, stworzysz swoją pierwszą klasę, oraz zaprosisz swoich uczniów do udziału w kursach.\",\n      student_getting_started: \"Przewodnik dla ucznia\",\n      student_getting_started_desc: \"Możesz rozdać ten przewodnik uczniom zanim zaczną naukę w CodeCombat, aby mogli zapoznać się z edytorem kodu. Przewodnik ten może znaleźć zastosowanie zarówno dla języka Python, jak i JavaScript.\",\n      cs1: \"Wprowadzenie do informatyki\",\n      cs2: \"Informatyka 2\",\n      cs3: \"Informatyka 3\",\n      cs4: \"Informatyka 4\",\n      cs5: \"Informatyka 5\",\n      cs1_syntax_python: \"Kurs 1 - Podstawy składni Pythona\",\n      coming_soon: \"Wkrótce dodatkowe przewodniki!\",\n      engineering_cycle_worksheet_link: \"Pokaż przykład\",\n      progress_journal: \"Dziennik postępów\",\n      gd1: \"Tworzenie gier 1\",\n      wd1: \"Tworzenie stron 1\",\n      wd2: \"Tworzenie stron 2\",\n      wd2_quizlet_worksheet_instructions: \"Pokaż instrukcje i przykłady\",\n      student_overview: \"Przegląd\",\n      student_details: \"Szczegóły studenta\",\n      student_name: \"Imię ucznia\",\n      no_name: \"Nie podał imienia.\",\n      no_username: \"Nie podał nazwiska.\",\n      no_email: \"Uczeń nie ustawił adresu email.\",\n      student_profile: \"Profil ucznia\",\n      playtime_detail: \"Szczegóły czasu gry\",\n      student_completed: \"Uczeń ukończył\",\n      student_in_progress: \"Uczeń w trakcie...\",\n      class_average: \"Średnia klasy\",\n      not_assigned: \"nie został przydzielony do obecnego kursu\",\n      playtime_axis: \"Czas gry w sekundach\",\n      levels_axis: \"Poziomy w\",\n      student_state: \"Jak\",\n      student_state_2: \"sobie radzi?\",\n      student_good: \"radzi sobie dobrze w\",\n      student_good_detail: \"Ten uczeń utrzymuje tempo klasy.\",\n      student_warn: \"może potrzebować pomocy w\",\n      student_warn_detail: \"Ten uczeń może potrzebować trochę pomocy z nowymi zagadnieniami.\",\n      student_great: \"radzi sobie świetnie w\",\n      student_great_detail: \"Ten uczeń może być dobrym kandydatem do pomocy innym osobom z tego kursu.\",\n      full_license: \"Pełna licencja\",\n      starter_license: \"Licencja startowa\",\n      trial: \"Demo\",\n      hoc_game_dev: \"Tworzenie gier\",\n      hoc_and: \"oraz\",\n      hoc_programming: \"Programowanie JavaScript/Python\",\n      hoc_teacher_led: \"Lekcje nauczycielskie\",\n      hoc_teacher_led_desc1: \"Pobierz nasze\",\n      hoc_group: \"Grupowa rozgrywka\",\n      hoc_additional_desc2: \"Pytania\",\n      hoc_additional_contact: \"Bądź w kontakcie\",\n      revoking: \"Anulowanie...\",\n      remember_new_courses: \"Pamiętaj o przypisaniu nowych kursów!\",\n      more_info: \"Więcej informacji\",\n      how_to_assign_courses: \"Jak przypisać kursy\",\n      select_students: \"Wybierz uczniów\",\n      choose_course: \"Wybierz kurs\",\n      teacher_quest: \"Wyzwanie dla nauczyciela\",\n      quests_complete: \"Zadania ukonczone\",\n      teacher_quest_create_classroom: \"Stwórz klasę\",\n      teacher_quest_add_students: \"Dodaj uczniów\",\n      teacher_quest_teach_methods: \"Naucz uczniów jak wywoływać metody.\",\n      teacher_quest_teach_methods_step1: \"Niech przynajmniej 75% jednej klasy przejdzie pierwszy poziom, __Dungeons of Kithgard__\",\n      teacher_quest_teach_methods_step2: \"Wydrukuj [Krótki przewodnik ucznia](http://files.codecombat.com/docs/resources/StudentQuickStartGuide.pdf) z [Bazy wiedzy](/teachers/resources).\",\n      teacher_quest_teach_strings: \"Naucz uczniów jak budować `stringi`.\",\n      teacher_quest_teach_strings_step1: \"Niech przynajmniej 75% jednej klasy dotrze do __True Names__\",\n      teacher_quest_teach_strings_step2: \"Użyj przeglądarki poziomów w [Przewodnikach po kursach](/teachers/courses) i przeglądnij poziom __True Names__.\",\n      teacher_quest_teach_loops: \"Niech uczniowie się zapętlą. Naucz ich konstrukcji `loop`.\",\n      teacher_quest_teach_loops_step1: \"Niech przynajmniej 75% jednej klasy dotrze do __Fire Dancing__.\",\n      teacher_quest_teach_variables: \"Zmień swoje życie ze `zmiennymi`.\",\n      teacher_quest_teach_variables_step1: \"Niech przynajmniej 75% jednej klasy dotrze do __Known Enemy__.\",\n      teacher_quest_teach_variables_step2: \"Wspieraj współpracę. Wypróbuj [Programowanie w parach](/teachers/resources/pair-programming).\",\n      teacher_quest_kithgard_gates_100: \"Ucieknijcie przez Bramy Kithgardu wraz ze swoja klasą.\",\n      teacher_quest_kithgard_gates_100_step1: \"Niech przynajmniej 75% jednej klasy dotrze do __Kithgard Gates__.\",\n      teacher_quest_wakka_maul_100: \"Przygotujcie się na pojedynek w Wakka Maul.\",\n      teacher_quest_wakka_maul_100_step1: \"Niech przynajmniej 75% jednej klasy dotrze do __Wakka Maul__.\",\n      teacher_quest_wakka_maul_100_step2: \"Przeczytaj [Przewodnik po Arenie](/teachers/resources/arenas) w [Bazie wiedzy](/teachers/resources) aby dowiedzieć się jak prowadzić lekcje na Arenie.\",\n      teacher_quest_reach_gamedev: \"Zwiedzaj nowe światy!\",\n      teacher_quest_reach_gamedev_step1: \"[Uzyskaj licencję](/teachers/licenses) aby Twoi uczniowie mogli zwiedzać nowe światy, jak Programowanie Gier lub Programowanie Www!\",\n      teacher_quest_keep_going: \"Nie poddawaj się! Jako następne możesz zrobić:\",\n      teacher_quest_more: \"Pokaż wszystkie zadania\",\n      teacher_quest_less: \"Pokaż mniej zadań\",\n      refresh_to_update: \"(odśwież stronę, żeby zobaczyć aktualizację)\"\n    },\n    sharing: {\n      game: \"Gra\",\n      webpage: \"Strona internetowa\",\n      your_students_preview: \"Twoi uczniowe po kliknięciu tutaj zobaczą swoje gotowe projektyt! Niedostępne w podglądzie nauczyciela.\",\n      unavailable: \"Dzielenie się linkami nie jest dostępne w podglądzie nauczyciela.\",\n      share_game: \"Podziel się tą grą\",\n      share_web: \"Podziel się tą stroną\",\n      victory_share_prefix: \"Za pomocą tego linku możesz zaprosić swoich znajomych i rodzinę do\",\n      victory_share_game: \"zagrania w twoją grę\",\n      victory_share_web: \"obejrzenia twojej strony\",\n      victory_share_suffix: \".\",\n      victory_course_share_prefix: \"Ten link pozwoli twoim znajomym i rodzinie\",\n      victory_course_share_game: \"zagrać w grę\",\n      victory_course_share_web: \"obejrzeć stronę\",\n      victory_course_share_suffix: \"którą właśnie stworzyłeś.\",\n      copy_url: \"Kopiuj URL\"\n    },\n    game_dev: {\n      creator: \"Twórca\"\n    },\n    web_dev: {\n      image_gallery_title: \"Galeria obrazów\",\n      select_an_image: \"Wybierz obraz, którego chcesz użyć\",\n      scroll_down_for_more_images: \"(Przewiń w dół do więcej zdjęć)\",\n      copy_the_url: \"Skopiuj poniższy adres URL\",\n      copy_the_url_description: \"Przydatne, jeśli chcesz zastąpić istniejący obraz.\",\n      copy_the_img_tag: \"Kopiuj tag <img>\",\n      copy_the_img_tag_description: \"Przydatne, jeśli chcesz wstawić nowy obraz.\",\n      copy_url: \"Kopiuj URL\",\n      copy_img: \"Kopiuj <img>\",\n      how_to_copy_paste: \"Jak kopiować/wklejać\",\n      copy: \"Kopiuj\",\n      paste: \"Wklej\",\n      back_to_editing: \"Zwróć do redagowania\"\n    },\n    classes: {\n      archmage_title: \"Arcymag\",\n      archmage_title_description: \"(programista)\",\n      archmage_summary: \"Jesteś programistą zainteresowanym tworzeniem gier edukacyjnych? Zostań Arcymagiem i pomóż nam ulepszyć CodeCombat!\",\n      artisan_title: \"Rzemieślnik\",\n      artisan_title_description: \"(twórca poziomów)\",\n      artisan_summary: \"Buduj i dziel się poziomami z przyjaciółmi i innymi graczami. Zostań Rzemieślnikiem, który pomaga w uczeniu innych sztuki programowania.\",\n      adventurer_title: \"Podróżnik\",\n      adventurer_title_description: \"(playtester)\",\n      adventurer_summary: \"Zagraj w nasze nowe poziomy (nawet te dla subskrybentów) za darmo przez ich wydaniem i pomóż nam znaleźć w nich błędy zanim zostaną opublikowane.\",\n      scribe_title: \"Skryba\",\n      scribe_title_description: \"(twórca artykułów)\",\n      scribe_summary: \"Dobry kod wymaga dobrej dokumentacji. Pisz, edytuj i ulepszaj dokumentację czytana przez miliony graczy na całym świecie.\",\n      diplomat_title: \"Dyplomata\",\n      diplomat_title_description: \"(tłumacz)\",\n      diplomat_summary: \"CodeCombat jest tłumaczone na ponad 45 języków. Dołącz do naszych Dyplomatów i pomóż im w dalszych pracach.\",\n      ambassador_title: \"Ambasador\",\n      ambassador_title_description: \"(wsparcie)\",\n      ambassador_summary: \"Okiełznaj naszych użytkowników na forum, udzielaj odpowiedzi na pytania i wspieraj ich. Nasi Ambasadorzy reprezentują CodeCombat przed całym światem.\",\n      teacher_title: \"Nauczyciel\"\n    },\n    editor: {\n      main_title: \"Edytory CodeCombat\",\n      article_title: \"Edytor artykułów\",\n      thang_title: \"Edytor obiektów\",\n      level_title: \"Edytor poziomów\",\n      course_title: \"Edytor kursu\",\n      achievement_title: \"Edytor osiągnięć\",\n      poll_title: \"Edytor ankiet\",\n      back: \"Wstecz\",\n      revert: \"Przywróć\",\n      revert_models: \"Przywróć wersję\",\n      pick_a_terrain: \"Wybierz teren\",\n      dungeon: \"Loch\",\n      indoor: \"Wnętrze\",\n      desert: \"Pustynia\",\n      grassy: \"Trawa\",\n      mountain: \"Góry\",\n      glacier: \"Lodowiec\",\n      small: \"Mały\",\n      large: \"Duży\",\n      fork_title: \"Forkuj nowa wersję\",\n      fork_creating: \"Tworzenie Forka...\",\n      generate_terrain: \"Generuj teren\",\n      more: \"Więcej\",\n      wiki: \"Wiki\",\n      live_chat: \"Czat na żywo\",\n      thang_main: \"Główna\",\n      thang_spritesheets: \"Arkusze Sprite'ów\",\n      thang_colors: \"Kolory\",\n      level_some_options: \"Trochę opcji?\",\n      level_tab_thangs: \"Obiekty\",\n      level_tab_scripts: \"Skrypty\",\n      level_tab_components: \"Komponenty\",\n      level_tab_systems: \"Systemy\",\n      level_tab_docs: \"Dokumentacja\",\n      level_tab_thangs_title: \"Aktualne obiekty\",\n      level_tab_thangs_all: \"Wszystkie\",\n      level_tab_thangs_conditions: \"Warunki początkowe\",\n      level_tab_thangs_add: \"Dodaj obiekty\",\n      level_tab_thangs_search: \"Przeszukaj obiekty\",\n      add_components: \"Dodaj komponenty\",\n      component_configs: \"Konfiguracja komponentów\",\n      config_thang: \"Kliknij dwukrotnie, aby skonfigurować obiekt\",\n      \"delete\": \"Usuń\",\n      duplicate: \"Powiel\",\n      stop_duplicate: \"Przestań powielać\",\n      rotate: \"Obróć\",\n      level_component_tab_title: \"Aktualne komponenty\",\n      level_component_btn_new: \"Stwórz nowy komponent\",\n      level_systems_tab_title: \"Aktualne systemy\",\n      level_systems_btn_new: \"Stwórz nowy system\",\n      level_systems_btn_add: \"Dodaj system\",\n      level_components_title: \"Powrót do listy obiektów\",\n      level_components_type: \"Typ\",\n      level_component_edit_title: \"Edytuj komponent\",\n      level_component_config_schema: \"Schemat konfiguracji\",\n      level_system_edit_title: \"Edytuj system\",\n      create_system_title: \"Stwórz nowy system\",\n      new_component_title: \"Stwórz nowy komponent\",\n      new_component_field_system: \"System\",\n      new_article_title: \"Stwórz nowy artykuł\",\n      new_thang_title: \"Stwórz nowy typ obiektu\",\n      new_level_title: \"Stwórz nowy poziom\",\n      new_article_title_login: \"Zaloguj się, aby stworzyć nowy artykuł\",\n      new_thang_title_login: \"Zaloguj się, aby stworzyć nowy typ obiektu\",\n      new_level_title_login: \"Zaloguj się, aby stworzyć nowy poziom\",\n      new_achievement_title: \"Stwórz nowe osiągnięcie\",\n      new_achievement_title_login: \"Zaloguj się, aby stworzyć nowy osiągnięcie\",\n      new_poll_title: \"Stwórz nową ankietę\",\n      new_poll_title_login: \"Zaloguj się aby stworzyć nową ankietę\",\n      article_search_title: \"Przeszukaj artykuły\",\n      thang_search_title: \"Przeszukaj obiekty\",\n      level_search_title: \"Przeszukaj poziomy\",\n      achievement_search_title: \"Szukaj osiągnięcia\",\n      poll_search_title: \"Szukaj ankiety\",\n      read_only_warning2: \"Uwaga: nie możesz zapisać żadnych zmian, ponieważ nie jesteś zalogowany.\",\n      no_achievements: \"Dla tego poziomu nie ma żadnych osiągnięć.\",\n      level_completion: \"Ukończenie poziomu\",\n      pop_i18n: \"Uzupełnij I18N\",\n      tasks: \"Zadania\",\n      clear_storage: \"Usuń swoje lokalne zmiany\",\n      add_system_title: \"Dodaj systemy do poziomu\",\n      done_adding: \"Zakończono dodawanie\"\n    },\n    article: {\n      edit_btn_preview: \"Podgląd\",\n      edit_article_title: \"Edytuj artykuł\"\n    },\n    polls: {\n      priority: \"Priorytet\"\n    },\n    contribute: {\n      page_title: \"Współpraca\",\n      intro_blurb: \"CodeCombat ma w pełni otwarte źródła! Setki graczy pomogły stworzyć obecny wygląd gry. Dołącz do nas i napisz kolejny rozdział w zadaniu CodeCombat, którym jest nauczenie wszystkich programowania!\",\n      alert_account_message_intro: \"Hej tam!\",\n      alert_account_message: \"Musisz się najpierw zalogować, jeśli chcesz zapisać się na klasowe e-maile.\",\n      archmage_introduction: \"Jedną z najlepszych rzeczy w tworzeniu gier jest to, że syntetyzują one tak wiele różnych spraw. Grafika, dźwięk, łączność w czasie rzeczywistym, social networking i oczywiście wiele innych, bardziej popularnych, aspektów programowania, od niskopoziomowego zarządzania bazami danych i administracji serwerem do interfejsu użytkownika i jego tworzenia. Jest wiele do zrobienia i jeśli jesteś doświadczonym programistą z zacięciem, by zajrzeć do sedna CodeCombat, ta klasa może być dla ciebie. Bylibyśmy niezmiernie szczęśliwi mając twoją pomoc przy budowaniu najlepszej programistycznej gry wszech czasów.\",\n      class_attributes: \"Atrybuty klasowe\",\n      archmage_attribute_1_pref: \"Znajomość \",\n      archmage_attribute_1_suf: \" lub chęć do nauki. Większość naszego kodu napisana jest w tym języku. Jeśli jesteś fanem Ruby czy Pythona, poczujesz się jak w domu. To po prostu JavaScript, tyle że z przyjemniejszą składnią.\",\n      archmage_attribute_2: \"Pewne doświadczenie w programowaniu i własna inicjatywa. Pomożemy ci się połapać, ale nie możemy spędzić zbyt dużo czasu na szkoleniu cię.\",\n      how_to_join: \"Jak dołączyć\",\n      join_desc_1: \"Każdy może pomóc! Zerknij po prostu na nasz \",\n      join_desc_2: \", aby rozpocząć i zaznacz kratkę poniżej, aby określić sie jako mężny Arcymag oraz otrzymywać najświeższe wiadomości przez e-mail. Chcesz porozmawiać na temat tego, co robić lub w jaki sposób dołączyć do współpracy jeszcze wyraźniej? \",\n      join_desc_3: \" lub zajrzyj do naszego \",\n      join_desc_4: \", a dowiesz się wszystkiego!\",\n      join_url_email: \"Napisz do nas\",\n      join_url_slack: \"publiczny kanał Slack\",\n      archmage_subscribe_desc: \"Otrzymuj e-maile dotyczące nowych okazji programistycznych oraz ogłoszeń.\",\n      artisan_introduction_pref: \"Musimy stworzyć dodatkowe poziomy! Ludzie będą oczekiwać nowych zasobów, a my mamy ograniczone możliwości co do naszych mocy przerobowych. Obecnie, twoja stacja robocza jest na poziomie pierwszym; nasz edytor poziomów jest ledwo używalny nawet przez jego twórców - bądź tego świadom. Jeśli masz wizję nowych kampanii, od pętli typu for do\",\n      artisan_introduction_suf: \", ta klasa może być dla ciebie.\",\n      artisan_attribute_1: \"Jakiekolwiek doświadczenie w tworzeniu zasobów tego typu byłoby przydatne, na przykład używając edytora poziomów dostarczonego przez Blizzard. Nie jest to jednak wymagane.\",\n      artisan_attribute_2: \"Zacięcie do całej masy testowania i iteracji. Aby tworzyć dobre poziomy, musisz dostarczyć je innym i obserwować jak grają oraz być przygotowanym na wprowadzanie mnóstwa poprawek.\",\n      artisan_attribute_3: \"Na dzień dzisiejszy, cierpliwość wraz z naszym Podróżnikiem. Nasz Edytor Poziomów jest jest strasznie prymitywny i frustrujący w użyciu. Zostałeś ostrzeżony!\",\n      artisan_join_desc: \"Używaj Edytora Poziomów mniej-więcej zgodnie z poniższymi krokami:\",\n      artisan_join_step1: \"Przeczytaj dokumentację.\",\n      artisan_join_step2: \"Stwórz nowy poziom i przejrzyj istniejące poziomy.\",\n      artisan_join_step3: \"Zajrzyj do naszego publicznego pokoju Slack, aby uzyskać pomoc.\",\n      artisan_join_step4: \"Pokaż swoje poziomy na forum, aby uzyskać opinie.\",\n      artisan_subscribe_desc: \"Otrzymuj e-maile dotyczące aktualności w tworzeniu poziomów i ogłoszeń.\",\n      adventurer_introduction: \"Bądźmy szczerzy co do twojej roli: jesteś tankiem. Będziesz przyjmował ciężkie obrażenia. Potrzebujemy ludzi do testowania nowych poziomów i pomocy w rozpoznawaniu ulepszeń, które będzie można do nich zastosować. Będzie to bolesny proces; tworzenie dobrych gier to długi proces i nikt nie trafia w dziesiątkę za pierwszym razem. Jeśli jesteś wytrzymały i masz wysoki wskaźnik constitution (D&D), ta klasa jest dla ciebie.\",\n      adventurer_attribute_1: \"Głód wiedzy. Chcesz nauczyć się programować, a my chcemy ci to umożliwić. Prawdopodobnie w tym przypadku, to ty będziesz jednak przez wiele czasu stroną uczącą.\",\n      adventurer_attribute_2: \"Charyzma. Bądź uprzejmy, ale wyraźnie określaj, co wymaga poprawy, oferując sugestie co do sposobu jej uzyskania.\",\n      adventurer_join_pref: \"Zapoznaj się z Rzemieślnikiem (lub rekrutuj go!), aby wspólnie pracować lub też zaznacz kratkę poniżej, aby otrzymywać e-maile, kiedy pojawią się nowe poziomy do testowania. Będziemy również pisać o poziomach do sprawdzenia na naszych stronach w sieciach społecznościowych jak\",\n      adventurer_forum_url: \"nasze forum\",\n      adventurer_join_suf: \"więc jeśli wolałbyś być informowany w ten sposób, zarejestruj się na nich!\",\n      adventurer_subscribe_desc: \"Otrzymuj e-maile, gdy pojawią się nowe poziomy do testowania.\",\n      scribe_introduction_pref: \"CodeCombat nie będzie tylko zbieraniną poziomów. Będzie też zawierać źródło wiedzy, wiki programistycznych idei, na której będzie można oprzeć poziomy. Dzięki temu, każdy z Rzemieślników zamiast opisywać ze szczegółami, czym jest operator porównania, będzie mógł po prostu podać graczowi w swoim poziomie link do artykułu opisującego go. Mamy na myśli coś podobnego do \",\n      scribe_introduction_url_mozilla: \"Mozilla Developer Network\",\n      scribe_introduction_suf: \". Jeśli twoją definicją zabawy jest artykułowanie idei programistycznych przy pomocy składni Markdown, ta klasa może być dla ciebie.\",\n      scribe_attribute_1: \"Umiejętne posługiwanie się słowem to właściwie wszystko, czego potrzebujesz. Nie tylko gramatyka i ortografia, ale również umiejętność tłumaczenia trudnego materiału innym.\",\n      contact_us_url: \"Skontaktuj się z nami\",\n      scribe_join_description: \"powiedz nam coś o sobie, swoim doświadczeniu w programowaniu i rzeczach, o których chciałbyś pisać, a chętnie to z tobą uzgodnimy!\",\n      scribe_subscribe_desc: \"Otrzymuj e-maile na temat ogłoszeń dotyczących pisania artykułów.\",\n      diplomat_introduction_pref: \"Jeśli dowiedzieliśmy jednej rzeczy z naszego \",\n      diplomat_launch_url: \"otwarcia w październiku\",\n      diplomat_introduction_suf: \", to jest nią informacja o znacznym zainteresowaniu CodeCombat w innych krajach. Tworzymy zespół tłumaczy chętnych do przemieniania zestawów słów w inne zestawy słów, aby CodeCombat było tak dostępne dla całego świata, jak to tylko możliwe. Jeśli chciałbyś mieć wgląd w nadchodzącą zawartość i umożliwić swoim krajanom granie w najnowsze poziomy, ta klasa może być dla ciebie.\",\n      diplomat_attribute_1: \"Biegła znajomość angielskiego oraz języka, na który chciałbyś tłumaczyć. Kiedy przekazujesz skomplikowane idee, dobrze mieć płynność w obu z nich!\",\n      diplomat_i18n_page_prefix: \"Możesz zacząć tłumaczyć nasze poziomy przechodząc na naszą\",\n      diplomat_i18n_page: \"stronę tłumaczeń\",\n      diplomat_i18n_page_suffix: \", albo nasz interfejs i stronę na GitHub.\",\n      diplomat_join_pref_github: \"Znajdź plik lokalizacyjny dla wybranego języka \",\n      diplomat_github_url: \"na GitHubie\",\n      diplomat_join_suf_github: \", edytuj go online i wyślij pull request. Do tego, zaznacz kratkę poniżej, aby być na bieżąco z naszym międzynarodowym rozwojem!\",\n      diplomat_subscribe_desc: \"Otrzymuj e-maile na temat postępów i18n i poziomów do tłumaczenia.\",\n      ambassador_introduction: \"Oto społeczność, którą budujemy, a ty jesteś jej łącznikiem. Mamy czaty, e-maile i strony w sieciach społecznościowych oraz wielu ludzi potrzebujących pomocy w zapoznaniu się z grą oraz uczeniu się za jej pomocą. Jeśli chcesz pomóc ludziom, by do nas dołączyli i dobrze się bawili oraz mieć pełne poczucie tętna CodeCombat oraz kierunku, w którym zmierzamy, ta klasa może być dla ciebie.\",\n      ambassador_attribute_1: \"Umiejętność komunikacji. Musisz umieć rozpoznać problemy, które mają gracze i pomóc im je rozwiązać. Do tego, informuj resztę z nas, co mówią gracze - na co się skarżą, a czego chcą jeszcze więcej!\",\n      ambassador_join_desc: \"powiedz nam coś o sobie, jakie masz doświadczenie i czym byłbyś zainteresowany. Chętnie z tobą porozmawiamy!\",\n      ambassador_join_note_strong: \"Uwaga\",\n      ambassador_join_note_desc: \"Jednym z naszych priorytetów jest zbudowanie trybu multiplayer, gdzie gracze mający problem z rozwiązywaniem poziomów będą mogli wezwać czarodziejów wyższego poziomu, by im pomogli. Będzie to świetna okazja dla Ambasadorów. Spodziewajcie się ogłoszenia w tej sprawie!\",\n      ambassador_subscribe_desc: \"Otrzymuj e-maile dotyczące aktualizacji wsparcia oraz rozwoju trybu multiplayer.\",\n      teacher_subscribe_desc: \"Otrzymuj e-maile dotyczące aktualizacji wsparcia oraz rozwoju wersji dla nauczycieli.\",\n      changes_auto_save: \"Zmiany zapisują się automatycznie po kliknięci kratki.\",\n      diligent_scribes: \"Nasi pilni Skrybowie:\",\n      powerful_archmages: \"Nasi potężni Arcymagowie:\",\n      creative_artisans: \"Nasi kreatywni Rzemieślnicy:\",\n      brave_adventurers: \"Nasi dzielni Podróżnicy:\",\n      translating_diplomats: \"Nasi tłumaczący Dyplomaci:\",\n      helpful_ambassadors: \"Nasi pomocni Ambasadorzy:\"\n    },\n    ladder: {\n      my_matches: \"Moje pojedynki\",\n      simulate: \"Symuluj\",\n      simulation_explanation: \"Symulując gry możesz szybciej uzyskać ocenę swojej gry!\",\n      simulation_explanation_leagues: \"Głównie będziesz pomagał symulować gry dla sojuszniczych graczy w swojej klasie, bądź kursie.\",\n      simulate_games: \"Symuluj gry!\",\n      games_simulated_by: \"Gry symulowane przez Ciebie:\",\n      games_simulated_for: \"Gry symulowane dla Ciebie:\",\n      games_in_queue: \"Gier obecnie w kolejce:\",\n      games_simulated: \"Gier zasymulowanych\",\n      games_played: \"Gier rozegranych\",\n      ratio: \"Proporcje\",\n      leaderboard: \"Tabela rankingowa\",\n      battle_as: \"Walcz jako \",\n      summary_your: \"Twój \",\n      summary_matches: \"Pojedynki - \",\n      summary_wins: \" Wygrane, \",\n      summary_losses: \" Przegrane\",\n      rank_no_code: \"Brak nowego kodu do oceny\",\n      rank_my_game: \"Oceń moją grę!\",\n      rank_submitting: \"Wysyłanie...\",\n      rank_submitted: \"Wysłano do oceny\",\n      rank_failed: \"Błąd oceniania\",\n      rank_being_ranked: \"Aktualnie oceniane gry\",\n      rank_last_submitted: \"przesłano \",\n      help_simulate: \"Pomóc w symulowaniu gier?\",\n      code_being_simulated: \"Twój nowy kod jest aktualnie symulowany przez innych graczy w celu oceny. W miarę pojawiania sie nowych pojedynków, nastąpi odświeżenie.\",\n      no_ranked_matches_pre: \"Brak ocenionych pojedynków dla drużyny \",\n      no_ranked_matches_post: \" ! Zagraj przeciwko kilku oponentom i wróć tutaj, aby uzyskać ocenę gry.\",\n      choose_opponent: \"Wybierz przeciwnika\",\n      select_your_language: \"Wybierz swój język!\",\n      tutorial_play: \"Rozegraj samouczek\",\n      tutorial_recommended: \"Zalecane, jeśli wcześniej nie grałeś\",\n      tutorial_skip: \"Pomiń samouczek\",\n      tutorial_not_sure: \"Nie wiesz, co się dzieje?\",\n      tutorial_play_first: \"Rozegraj najpierw samouczek.\",\n      simple_ai: \"Proste AI\",\n      warmup: \"Rozgrzewka\",\n      friends_playing: \"Przyjaciele w grze\",\n      log_in_for_friends: \"Zaloguj się by grać ze swoimi znajomymi!\",\n      social_connect_blurb: \"Połącz konta i rywalizuj z przyjaciółmi!\",\n      invite_friends_to_battle: \"Zaproś przyjaciół do wspólnej walki!\",\n      fight: \"Walcz!\",\n      watch_victory: \"Obejrzyj swoje zwycięstwo\",\n      defeat_the: \"Pokonaj\",\n      watch_battle: \"Oglądaj starcie\",\n      tournament_started: \", rozpoczęto\",\n      tournament_ends: \"Turniej kończy się za\",\n      tournament_ended: \"Turniej zakończył się\",\n      tournament_rules: \"Zasady turnieju\",\n      tournament_blurb: \"Pisz kod, zbieraj złoto, buduj armię, miażdż przeciników, wygrywaj nagrody, oraz aktualizuj postęp w naszym Chciwym turnieju o $40,000! Sprawdź więcej informacji na\",\n      tournament_blurb_blog: \"naszym blogu\",\n      rules: \"Zasady\",\n      winners: \"Zwycięzcy\",\n      league: \"Liga\",\n      red_ai: \"Czerwony CPU\",\n      blue_ai: \"Niebieski CPU\",\n      wins: \"Wygrał!\",\n      humans: \"Czerwoni\",\n      ogres: \"Niebiescy\"\n    },\n    user: {\n      stats: \"Statystyki\",\n      singleplayer_title: \"Poziomy jednoosobowe\",\n      multiplayer_title: \"Poziomy multiplayer\",\n      achievements_title: \"Osiągnięcia\",\n      last_played: \"Ostatnio grany\",\n      status: \"Status\",\n      status_completed: \"Ukończono\",\n      status_unfinished: \"Nie ukończono\",\n      no_singleplayer: \"Nie rozegrałeś żadnej gry jednoosobowej.\",\n      no_multiplayer: \"Nie rozegrałeś żadnej gry multiplayer.\",\n      no_achievements: \"Nie zdobyłeś żadnych osiągnięć.\",\n      favorite_prefix: \"Ulubiony język to \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Nie jesteś członkiem żadnego klanu.\"\n    },\n    achievements: {\n      last_earned: \"Ostatnio zdobyty\",\n      amount_achieved: \"Ilość\",\n      achievement: \"Osiągnięcie\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" z możliwych\",\n      new_xp_prefix: \"zdobyto \",\n      new_xp_postfix: \" earned\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" brakuje do poziomu \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Płatności\",\n      prepaid_codes: \"Kody przedpłacone\",\n      purchased: \"Zakupiono\",\n      subscription: \"Subskrypcje\",\n      invoices: \"Faktury\",\n      service_apple: \"Apple\",\n      service_web: \"Internet\",\n      paid_on: \"Opłacono\",\n      service: \"Usługa\",\n      price: \"Cena\",\n      gems: \"Klejnoty\",\n      active: \"Aktywna\",\n      subscribed: \"Subskrybujesz\",\n      unsubscribed: \"Anulowano\",\n      active_until: \"Aktywna do\",\n      cost: \"Koszt\",\n      next_payment: \"Następna płatność\",\n      card: \"Karta\",\n      status_unsubscribed_active: \"Nie posiadasz już subskrypcji i nie obciążymy cię nowym rachunkiem. Twój profil wciąż jest aktywny.\",\n      status_unsubscribed: \"Zdobądź dostęp do nowych poziomów, bohaterów, przedmiotów i dodatkowych klejnotów z subskrypcją CodeCombat!\",\n      not_yet_verified: \"Jeszcze nie potwierdzony.\",\n      resend_email: \"Wyślij ponownie\",\n      email_sent: \"Email wysłany! sprawdź swoją skrzynkę.\",\n      verifying_email: \"Potwierdzanie twojego adresu email...\",\n      successfully_verified: \"Twój email został potwierdzony!\",\n      verify_error: \"Coś poszło nie tak podczas weryfikacji twojego adresu email :(\"\n    },\n    account_invoices: {\n      amount: \"Kwota w dolarach\",\n      declined: \"Karta została odrzucona\",\n      invalid_amount: \"Proszę podać kwotę w dolarach.\",\n      not_logged_in: \"Zaloguj się, albo stwórz konto, żeby przejrzeć faktury.\",\n      pay: \"Opłać fakturę\",\n      purchasing: \"Kupowanie...\",\n      retrying: \"Błąd serwera, ponawiam.\",\n      success: \"Zapłacono. Dziękujemy!\"\n    },\n    account_prepaid: {\n      purchase_code: \"Kup kod subskrypcji\",\n      purchase_code2: \"Każde konto w CodeCombat może wykorzysatć konkretny kod subskrypcji tylko raz.\",\n      purchase_code5: \"Po więcej informacji o licencjach studentów zajrzyj do\",\n      users: \"Użytkownicy\",\n      months: \"Miesięcy\",\n      purchase_total: \"Razem\",\n      purchase_button: \"Zapisz zakupy\",\n      your_codes: \"Twoje kody\",\n      redeem_codes: \"Zamów kod subskrypcji\",\n      prepaid_code: \"Kod przedpłacony\",\n      lookup_code: \"Sprawdź kod przedpłacony\",\n      apply_account: \"Użyj na swoim koncie\",\n      copy_link: \"Możesz skopiować link do kodu i dać go komuś.\",\n      quantity: \"Ilość\",\n      redeemed: \"Zamówione\",\n      no_codes: \"Brak kodów!\",\n      you_can1: \"Możesz\",\n      you_can2: \"kupić kod przedpłacony,\",\n      you_can3: \"następnie wykorzystać go u siebie, albo dać komuś.\"\n    },\n    loading_error: {\n      could_not_load: \"Błąd podczas ładowania danych z serwera\",\n      connection_failure: \"Błąd połączenia.\",\n      connection_failure_desc: \"Wygląda na to, że masz jakieś problemy z internetem! Sprawdź, czy wszystko działa i odśwież stronę.\",\n      login_required: \"Musisz się zalogować\",\n      login_required_desc: \"Musisz się zalogować, aby zobaczyć tą stronę.\",\n      unauthorized: \"Musisz być zalogowany. Nie masz czasem wyłączonych ciasteczek?\",\n      forbidden: \"Brak autoryzacji.\",\n      forbidden_desc: \"O nie, nie możemy ci nic pokazać! Upewnij się, że zalogowałeś się na dobre konto, albo odwiedź któryś z linków, aby wrócić do programowania!\",\n      not_found: \"Nie znaleziono.\",\n      not_found_desc: \"Hmmm... Nie udało się nam nic znaleźć. Odwiedź któryś z linków, aby wrócić do programowania!\",\n      not_allowed: \"Metoda nie dozwolona.\",\n      timeout: \"Serwer nie odpowiada.\",\n      conflict: \"Błąd zasobów.\",\n      bad_input: \"Złe dane wejściowe.\",\n      server_error: \"Błąd serwera.\",\n      unknown: \"Nieznany błąd.\",\n      error: \"BŁĄD\",\n      general_desc: \"Coś poszło nie tak, prawdopodobnie to nasza wina. Poczekaj chwilę i spróbuj odświeżyć stronę, albo kliknij któryś z linków, żeby wrócić do programowania!\"\n    },\n    resources: {\n      level: \"Poziom\",\n      patch: \"Łatka\",\n      patches: \"Łatki\",\n      system: \"System\",\n      systems: \"Systemy\",\n      component: \"Komponent\",\n      components: \"Komponenty\",\n      hero: \"Bohater\",\n      campaigns: \"Kampanie\"\n    },\n    concepts: {\n      advanced_css_rules: \"Zaawansowane reguły CSS\",\n      advanced_css_selectors: \"Zaawansowane selektory CSS\",\n      advanced_html_attributes: \"Zaawansowane atrybuty HTML\",\n      advanced_html_tags: \"Zaawansowane tagi HTML\",\n      algorithm_average: \"Algorytmy - średnia\",\n      algorithm_find_minmax: \"Algorytmy - min/maks\",\n      algorithm_search_binary: \"Algorytmy - szukanie binarne\",\n      algorithm_search_graph: \"Algorytmy - przeszukiwanie grafu\",\n      algorithm_sort: \"Algorytmy - sortowanie\",\n      algorithm_sum: \"Algorytmy - suma\",\n      \"arguments\": \"Argumenty\",\n      arithmetic: \"Arytmetyka\",\n      array_2d: \"Tablice 2D\",\n      array_index: \"Indeksy tablic\",\n      array_iterating: \"Iteracja po tablicach\",\n      array_literals: \"Literał tablicowy\",\n      array_searching: \"Przeszukiwanie tablic\",\n      array_sorting: \"Sortowanie tablic\",\n      arrays: \"Tablice\",\n      basic_css_rules: \"Podstawowe reguły CSS\",\n      basic_css_selectors: \"Podstawowe selektory CSS\",\n      basic_html_attributes: \"Podstawowe atrybuty HTML\",\n      basic_html_tags: \"Podstawowe tagi HTML\",\n      basic_syntax: \"Podstawy składni\",\n      binary: \"System binarny\",\n      boolean_and: \"Boolowski 'and'\",\n      boolean_equality: \"Boolowska równość\",\n      boolean_greater_less: \"Boolowski większy/mniejszy\",\n      boolean_logic_shortcircuit: \"Skróty w logice boole'a\",\n      boolean_not: \"Boolowski 'not'\",\n      boolean_operator_precedence: \"Boolowskie pierwszeństwo operatorów\",\n      boolean_or: \"Boolowski 'or'\",\n      bootstrap: \"Bootstrap\",\n      break_statements: \"Instrukcja 'break'\",\n      classes: \"Klasy\",\n      continue_statements: \"Instrukcja 'continue'\",\n      dom_events: \"Zdarzenia DOM\",\n      dynamic_styling: \"Style dynamiczne\",\n      event_concurrency: \"Rywalizacja zdarzeń\",\n      event_data: \"Dane zdarzeń\",\n      event_handlers: \"Obsługa zdarzeń\",\n      for_loops: \"Pętle 'for'\",\n      for_loops_nested: \"Zagnieżdżone pętle 'for'\",\n      for_loops_range: \"Funckja 'range' w pętlach 'for'\",\n      functions: \"Funkcje\",\n      game_ai: \"SI w grach\",\n      game_goals: \"Cele gry\",\n      game_spawn: \"Powstawanie gry\",\n      graphics: \"Grafika\",\n      graphs: \"Grafy\",\n      heaps: \"Kopce\",\n      if_else_statements: \"Wyrażenia if/else\",\n      if_statements: \"Wyrażenia warunkowe 'if'\",\n      if_statements_nested: \"Wyrażenia warunkowe 'if' zagnieżdżone\",\n      indexing: \"Indeksy tablicy\",\n      input_handling_flags: \"Zarządzanie wejściem - flagi\",\n      input_handling_keyboard: \"Zarządzanie wejściem - klawiatura\",\n      input_handling_mouse: \"Zarządzanie wejściem - mysz\",\n      intermediate_css_rules: \"Średnio zaawansowane reguły CSS\",\n      intermediate_css_selectors: \"Średnio zaawansowane selektory CSS\",\n      intermediate_html_attributes: \"Średnio zaawansowane atrybuty HTML\",\n      intermediate_html_tags: \"Średnio zaawansowane tagi HTML\",\n      jquery: \"jQuery\",\n      jquery_animations: \"jQuery - animacje\",\n      jquery_filtering: \"jQuery - filtrowanie elementów\",\n      jquery_selectors: \"jQuery - selektory\",\n      length: \"Rozmiar tablicy\",\n      math_geometry: \"Geometria\",\n      math_operations: \"Operacje matematyczne\",\n      math_trigonometry: \"Trygonometria\",\n      object_literals: \"Operacje na obiektach\",\n      parameters: \"Parametry\",\n      property_access: \"Dostęp do właściwości\",\n      property_assignment: \"Przypisywanie właściwości\",\n      queues: \"Struktury danych - kolejki\",\n      reading_docs: \"Czytanie dokumentacji\",\n      recursion: \"Rekurencja\",\n      return_statements: \"Instrukcja 'return'\",\n      stacks: \"Struktury danych - stosy\",\n      strings: \"Ciągi znaków\",\n      strings_concatenation: \"Konkatenacja ciągów\",\n      strings_substrings: \"Podsłowa\",\n      trees: \"Struktury danych - drzewa\",\n      variables: \"Zmienne\",\n      vectors: \"Wektory\",\n      while_condition_loops: \"Pętle 'while' z warunkami\",\n      while_loops_simple: \"Pętle 'while'\",\n      while_loops_nested: \"Zagnieżdżone pętle 'while'\",\n      xy_coordinates: \"Współrzędne kartezjańskie\",\n      advanced_strings: \"Zaawansowane ciągi znaków\",\n      algorithms: \"Algorytmy\",\n      boolean_logic: \"Algebra Boole'a\",\n      basic_html: \"Podstawowy HTML\",\n      basic_css: \"Podstawowy CSS\",\n      basic_web_scripting: \"Podstawowe web skrypty\",\n      intermediate_html: \"Średnio zaawansowany HTML\",\n      intermediate_css: \"Średnio zaawansowany CSS\",\n      intermediate_web_scripting: \"Średnio zaawansowane web skrypty\",\n      advanced_html: \"Zaawansowany HTML\",\n      advanced_css: \"Zaawansowany CSS\",\n      advanced_web_scripting: \"Zaawansowane web skrypty\",\n      input_handling: \"Zarządzanie wejściami\",\n      while_loops: \"Pętle 'while'\",\n      place_game_objects: \"Umieszczanie obiektów w grze\",\n      construct_mazes: \"Konstruowanie labiryntów\",\n      create_playable_game: \"Tworzenie działających gier\",\n      alter_existing_web_pages: \"Podmiana obecnych stron\",\n      create_sharable_web_page: \"Tworzenie stron internetowych\",\n      basic_input_handling: \"Podstawy zarządzania wejściem\",\n      basic_game_ai: \"Podstawy SI w grach\",\n      basic_javascript: \"Podstawy JavaScript\",\n      basic_event_handling: \"Podstawy zarzadzania zdarzeniami\",\n      create_sharable_interactive_web_page: \"Stworzysz interaktywną stronę internetową\"\n    },\n    anonymous_teacher: {\n      notify_teacher: \"Powiadom nauczyciela\",\n      create_teacher_account: \"Utwórz darmowe konto nauczyciela\",\n      enter_student_name: \"Twoje imię:\",\n      enter_teacher_email: \"Twój nauczycielski email:\",\n      teacher_email_placeholder: \"imie.nazwisko@nazwaszkoly.pl\",\n      student_name_placeholder: \"To wpisz swoje imię\",\n      teachers_section: \"Nauczyciele:\",\n      students_section: \"Uczniowie:\",\n      teacher_notified: \"Poinformowaliśmy Twojego nauczyciela, że chcesz więcej pograć w CodeCombat w klasie!\"\n    },\n    delta: {\n      added: \"Dodano\",\n      modified: \"Zmieniono\",\n      not_modified: \"Nie zmieniono\",\n      deleted: \"Usunięto\",\n      moved_index: \"Przesunięto Index\",\n      text_diff: \"Różnice w tekscie\",\n      merge_conflict_with: \"SCAL KONFLIKT Z\",\n      no_changes: \"Brak zmian\"\n    },\n    legal: {\n      page_title: \"Nota prawna\",\n      opensource_description_prefix: \"Zajrzyj na \",\n      github_url: \"nasz GitHub\",\n      opensource_description_center: \"i pomóż, jeśli tylko masz ochotę! CodeCombat bazuje na dziesiątkach projektów open source - kochamy je wszystkie. Wpadnij na \",\n      archmage_wiki_url: \"naszą wiki dla Arcymagów\",\n      opensource_description_suffix: \", by zobaczyć listę oprogramowania, dzięki któremu niniejsza gra może istnieć.\",\n      practices_title: \"Ludzkim językiem\",\n      practices_description: \"Oto nasze obietnice wobec ciebie, gracza, wyrażone po polsku, bez prawniczego żargonu.\",\n      privacy_title: \"Prywatność\",\n      privacy_description: \"Nie sprzedamy żadnej z Twoich prywatnych informacji.\",\n      security_title: \"Bezpieczeństwo\",\n      security_description: \"Z całych sił staramy się zabezpieczyć twoje prywatne informacje. Jako że jesteśmy projektem open source, każdy może sprawdzić i ulepszyć nasz system zabezpieczeń.\",\n      email_title: \"E-mail\",\n      email_description_prefix: \"Nie będziemy nękać cię spamem. Poprzez\",\n      email_settings_url: \"twoje ustawienia e-mail\",\n      email_description_suffix: \"lub poprzez linki w e-mailach, które wysyłamy, możesz zmienić swoje ustawienia i w prosty sposób wypisać się z subskrypcji w dowolnym momencie.\",\n      cost_title: \"Koszty\",\n      cost_description: \"W CodeCombat możesz grać we wszystkie podstawowe poziomy za darmo, za ${{price}} USD/miesięcznie dostajesz dostęp do dodatkowych poziomów, oraz {{gems}} klejnotów co miesiąc. W każdej chwili możesz jednym kliknięciem zrezygnować, gwarantujemy 100% zwrotu niewykorzystanej sumy.\",\n      copyrights_title: \"Prawa autorskie i licencje\",\n      contributor_title: \"Umowa licencyjna dla współtwórców (CLA)\",\n      contributor_description_prefix: \"Wszyscy współtwórcy, zarówno ci ze strony jak i ci z GitHuba, podlegają naszemu\",\n      cla_url: \"CLA\",\n      contributor_description_suffix: \", na które powinieneś wyrazić zgodę przed dodaniem swojego wkładu.\",\n      code_title: \"Kod - MIT\",\n      mit_license_url: \"Licencja MIT\",\n      code_description_suffix: \"Zawiera się w tym całość kodu w systemach i komponentach, które są udostępnione przez CodeCombat w celu tworzenia poziomów.\",\n      art_title: \"Grafika/muzyka - Creative Commons \",\n      art_description_prefix: \"Całość ogólnej treści dostępna jest pod licencją\",\n      cc_license_url: \"Międzynarodowa Licencja Creative Commons Attribution 4.0\",\n      art_description_suffix: \"Zawartość ogólna to wszystko, co zostało publicznie udostępnione przez CodeCombat w celu tworzenia poziomów. Wchodzą w to:\",\n      art_music: \"Muzyka\",\n      art_sound: \"Dźwięki\",\n      art_artwork: \"Artworki\",\n      art_sprites: \"Sprite'y\",\n      art_other: \"Dowolne inne prace niezwiązane z kodem, które są dostępne podczas tworzenia poziomów.\",\n      art_access: \"Obecnie nie ma uniwersalnego, prostego sposobu, by pozyskać te zasoby. Możesz wejść w ich posiadanie poprzez URL-e, z których korzysta strona, skontaktować się z nami w celu uzyskania pomocy bądź pomóc nam w ulepszeniu strony, aby zasoby te stały się łatwiej dostępne.\",\n      art_paragraph_1: \"W celu uznania autorstwa, wymień z nazwy i podaj link do codecombat.com w pobliżu miejsca, gdzie znajduje się użyty zasób bądź w miejscu odpowiednim dla twojego medium. Na przykład:\",\n      use_list_1: \"W przypadku użycia w filmie lub innej grze, zawrzyj codecombat.com w napisach końcowych.\",\n      use_list_2: \"W przypadku użycia na stronie internetowej, zawrzyj link w pobliżu miejsca użycia, na przykład po obrazkiem lub na ogólnej stronie poświęconej uznaniu twórców, gdzie możesz również wspomnieć o innych pracach licencjonowanych przy użyciu Creative Commons oraz oprogramowaniu open source używanym na stronie. Coś, co samo w sobie jednoznacznie odnosi się do CodeCombat, na przykład wpis na blogu dotyczący CodeCombat, nie wymaga już dodatkowego uznania autorstwa.\",\n      art_paragraph_2: \"Jeśli użyte przez ciebie zasoby zostały stworzone nie przez CodeCombat, ale jednego z naszych użytkowników, uznanie autorstwa należy się jemu - postępuj wówczas zgodnie z zasadami uznania autorstwa dostarczonymi wraz z rzeczonym zasobem (o ile takowe występują).\",\n      rights_title: \"Prawa zastrzeżone\",\n      rights_desc: \"Wszelkie prawa są zastrzeżone dla poziomów jako takich. Zawierają się w tym:\",\n      rights_scripts: \"Skrypty\",\n      rights_unit: \"Konfiguracje jednostek\",\n      rights_writings: \"Teksty\",\n      rights_media: \"Multimedia (dźwięki, muzyka) i jakiekolwiek inne typy prac i zasobów stworzonych specjalnie dla danego poziomu, które nie zostały publicznie udostępnione do tworzenia poziomów.\",\n      rights_clarification: \"Gwoli wyjaśnienia, wszystko, co jest dostępne w Edytorze Poziomów w celu tworzenia nowych poziomów, podlega licencji CC, podczas gdy zasoby stworzone w Edytorze Poziomów lub przesłane w toku tworzenia poziomu - nie.\",\n      nutshell_title: \"W skrócie\",\n      nutshell_description: \"Wszelkie zasoby, które dostarczamy w Edytorze Poziomów są darmowe w użyciu w jakikolwiek sposób w celu tworzenia poziomów. Jednocześnie, zastrzegamy sobie prawo do ograniczenia rozpowszechniania poziomów (stworzonych przez codecombat.com) jako takich, aby mogła być za nie w przyszłości pobierana opłata, jeśli dojdzie do takiej konieczności.\",\n      canonical: \"Angielska wersja tego dokumentu jest ostateczną, kanoniczną wersją. Jeśli zachodzą jakieś rozbieżności pomiędzy tłumaczeniami, dokument anglojęzyczny ma pierwszeństwo.\",\n      third_party_title: \"Oprogramowanie osób trzecich\",\n      third_party_description: \"CodeCombat używa (między innymi) poniższych programów osób trzecich:\"\n    },\n    ladder_prizes: {\n      title: \"Nagrody w turnieju\",\n      blurb_1: \"Nagrody zostaną rozdane zgodnie z\",\n      blurb_2: \"regulaminem turnieju\",\n      blurb_3: \"dla najlepszych ludzkich i ogrzych graczy.\",\n      blurb_4: \"Dwa zespoły oznaczają podwójne nagrody!\",\n      blurb_5: \"(Będą dwa pierwsze miejsca, dwa drugie miejsca i tak dalej...)\",\n      rank: \"Ranking\",\n      prizes: \"Nagrody\",\n      total_value: \"Łączna wartość\",\n      in_cash: \"w gotówce\",\n      custom_wizard: \"Własny Bohater w CodeCombat\",\n      custom_avatar: \"Własny avatar w CodeCombat\",\n      heap: \"sześć miesięcy dostępu\",\n      credits: \"kredyty\",\n      one_month_coupon: \"kupon: wybierz między Rails, a HTML\",\n      one_month_discount: \"zniżka 30%: wybierz między Rails, a HTML\",\n      license: \"licencja\",\n      oreilly: \"dowolny ebook\"\n    },\n    calendar: {\n      year: \"rok\",\n      day: \"dzień\",\n      month: \"miesiąc\",\n      january: \"styczeń\",\n      february: \"luty\",\n      march: \"marzec\",\n      april: \"kwiecień\",\n      may: \"maj\",\n      june: \"czerwiec\",\n      july: \"lipiec\",\n      august: \"sierpień\",\n      september: \"wrzesień\",\n      october: \"październik\",\n      november: \"listopad\",\n      december: \"grudzień\"\n    },\n    server_error: {\n      email_taken: \"Email jest już w użyciu\",\n      username_taken: \"Nazwa użytkownika jest już w użyciu\"\n    },\n    esper: {\n      line_no: \"Wiersz $1: \",\n      reference_error: \"ReferenceError (błąd referencji): \",\n      argument_error: \"Błąd argumentu: \",\n      type_error: \"TypeError (błąd typu): \",\n      syntax_error: \"Błąd składni: \",\n      error: \"Błąd: \",\n      x_not_a_function: \"`$1` nie jest funkcją\",\n      x_not_defined: \"nie zdefiniowano: $1\",\n      spelling_issues: \"Sprawdź dobrze pisownię: może chodziło ci o `$1` zamiast `$2`?\",\n      capitalization_issues: \"Uważaj na duże i małe litery: `$1` powinno wyglądać tak: `$2`.\",\n      py_empty_block: \"Pusty $1. Wstaw 4 spacje przed instrukcją wewnątrz $2.\",\n      fx_missing_paren: \"Jeśli chcesz wywołać `$1` jako funkcję, powinieneś użyć `()`\",\n      unmatched_token: \"Nawias `$1` nie ma pary.  Każdy otwierający nawias `$2` powinien posiadać jego zamykający odpowiednik `$3`.\",\n      unterminated_string: \"Ciąg znaków nie ma końca. Umieść odpowiedni znak `\\\"` na końcu swojego ciągu znaków.\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1074\n");

/***/ })

});