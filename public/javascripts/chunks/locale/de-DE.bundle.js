/*! hash:345dfe6c0e434e9c7378, chunkhash:39ce2debd20a4d10f540, name:locale/de-DE, filebase:de-DE.bundle.js, query:, file:javascripts/chunks/locale/de-DE.bundle.js */
webpackJsonp([67],{

/***/ 1041:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"Deutsch (Deutschland)\",\n  englishDescription: \"German (Germany)\",\n  translation: {\n    new_home: {\n      for_teachers_title: \"Für Lehrer\",\n      for_teachers_subtitle1: \"Projektbasiertes Lernen\",\n      global_subtitle2: \"Codezeilen\",\n      global_subtitle3: \"Lehrer\",\n      global_subtitle4: \"Länder\",\n      see_example: \"Beispiel ansehen\",\n      slogan: \"Das beste Spiel um Programmieren zu lernen.\",\n      classroom_edition: \"Klassenraum Edition:\",\n      learn_to_code: \"Lerne zu Programmieren:\",\n      play_now: \"Jetzt spielen\",\n      im_a_teacher: \"Ich bin eine Lehrkraft\",\n      im_a_student: \"Ich bin ein Schüler\",\n      learn_more: \"Mehr lernen\",\n      classroom_in_a_box: \"Ein Klassenraum in-einer-Box um Informatik zu lehren.\",\n      codecombat_is: \"CodeCombat ist eine Plattform für <strong>Schüler</strong>, um Informatik zu lernen während sie ein echtes Spiel spielen.\",\n      our_courses: \"Unsere Kurse wurden genau getestet um im <strong>Klassenraum</strong> zu bestehen, auch bei Lehrkräften mit wenig bis keiner Programmiererfahrung.\",\n      watch_how: \"Sieh dir an, wie CodeCombat die Art verändert, wie Leute Informatik lernen.\",\n      top_screenshots_hint: \"Schüler schreiben Code und ihre Veränderungen werden in Echtzeit sichtbar\",\n      designed_with: \"Entwickelt um Lehrkräften zu helfen\",\n      real_code: \"Eigener Programmcode\",\n      from_the_first_level: \"vom ersten Level an\",\n      getting_students: \"Die Schüler arbeiten von Anfang an mit selbst eingegebenen Programmzeilen und erlernen so rasch Syntax und richtige Strukturen.\",\n      educator_resources: \"Unterrichtsmaterial\",\n      course_guides: \"und Kursanleitungen\",\n      teaching_computer_science: \"Informatikunterricht auch ohne Informatikstudium - weil wir Tools bereitstellen, die Lehrer mit verschiedenstem Hintergrund unterstützen.\",\n      accessible_to: \"Zugänglich für \",\n      everyone: \"jeden\",\n      democratizing: \"Jeder sollte Programmieren lernen können. Wir wollen den den Prozess der Programmierenlernens demokratisieren.\",\n      forgot_learning: \"Ich glaube sie vergessen sogar, dass sie gerade etwas lernen.\",\n      wanted_to_do: \" Programmieren ist etwas was ich immer wollte und ich hätte nie gedacht, dass ich es in der Schule lernen könnte.\",\n      builds_concepts_up: \"Ich mag es, wie CodeCombat die Konzepte aufbaut. Es ist wirklich einfach zu verstehen und ein Spass, es zu lernen.\",\n      why_games: \"Warum ist Lernen durch Spiele wichtig?\",\n      games_reward: \"Spiele belohnen die produktive Anstrengung.\",\n      encourage: \"Spiele sind ein Medium, das Interaktionen, Entdeckungen und Versuch-und-Irrtum fördert. Ein gutes Spiel fordert den Spieler dazu auf Fähigkeiten über die Zeit hinweg zu erwerben, was der selbe entscheidende Prozess ist, durch den Schüler gehen, während sie etwas lernen.\",\n      excel: \"Spiele glänzen im Belohnen von\",\n      struggle: \"produktiven Anstrengungen\",\n      kind_of_struggle: \", also den Anstrengungen die in einem Lernen resultieren, dass gewinnbringend und\",\n      motivating: \"motivierend ist\",\n      not_tedious: \"und nicht langweilig.\",\n      gaming_is_good: \"Studien legen nahe, dass spielen gut für das kindliche Gehirn ist. (Es ist wahr!)\",\n      game_based: \"Wenn spielbasierte Lernsysteme \",\n      compared: \"mit konventionellen Lehrmethoden verglichen werden,\",\n      conventional: \"ist der Unterschied klar: Spiele sind besser darin den Schülern zu helfen Wissen zu erwerben, sich zu konzentrieren und darin eine\",\n      perform_at_higher_level: \"höhere Ebene der Leistung zu erreichen.\",\n      feedback: \"Spiele bieten außerdem ein Echtzeit Feedback, das den Schülern erlaubt ihre Lösungswege anzupassen und Konzepte ganzheitlich zu verstehen, anstelle nur limitiert zu sein auf  “Korrekt“ oder  “Inkorrekt“ Antworten.\",\n      real_game: \"Ein echtes Spiel, gespielt mit echtem Programmieren.\",\n      great_game: \"In einem guten Spiel geht es um mehr als nur Abzeichen und Erfolge - es geht um die Reise eines Spielers, gut-designte Rätsel, und die Fähigkeit Herausforderungen mit Kraft und Selbsvertrauen anzupacken.\",\n      agency: \"CodeCombat ist ein Spiel, das Spielern die Kraft und das Selbstbewusstsein gibt durch unsere robuste Programmiereingabe-Engine, die sowohl Anfänger als auch fortgeschrittenen Schülern dabei hilft richtigen, validen Code zu schreiben.\",\n      request_demo_title: \"Fangen Sie noch heute mit ihren Schülern an!\",\n      request_demo_subtitle: \"Fragen Sie nach einer Demo und lassen Sie ihre Schüler in weniger als einer Stunde anfangen.\",\n      get_started_title: \"Erstellen Sie noch heute ihre Klasse\",\n      get_started_subtitle: \"Erstellen Sie eine Klasse, fügen Sie Schüler hinzu und verfolgen Sie ihren Fortschritt während sie Informatik lernen.\",\n      request_demo: \"Demo anfragen\",\n      request_quote: \"Zitat anfragen\",\n      setup_a_class: \"Eine Klasse erstellen\",\n      have_an_account: \"Account vorhanden?\",\n      logged_in_as: \"Sie sind zurzeit eingeloggt als\",\n      computer_science: \"Informatikkurse für alle Altersgruppen\",\n      ffa: \"Kostenlos für alle Schüler\",\n      coming_soon: \"Coming soon!\",\n      courses_available_in: \"Kurse sind verfügbar in JavaScript und Python. Web-Entwicklungs-Kurse mit HTML, CSS, jQuery, and Bootstrap\",\n      boast: \"Bietet Rätsel die komplex genug sind um Spieler und Programmiere zu faszinieren.\",\n      winning: \"Eine gewinnbringende Kombination aus RPG-Gameplay und Programmierhausaufgaben die aufgeht und kindgerechte Bildung berechtigterweise unterhaltsam macht.\",\n      run_class: \"Alles was man braucht um einen Informatikkurs in der Schule zu geben, ohne dass man Hintergrundwissen braucht.\",\n      goto_classes: \"Gehe zu meinen Klassen\",\n      view_profile: \"Zeige mein Profil\",\n      view_progress: \"Fortschritt ansehen\",\n      go_to_courses: \"Zu meinen Kursen\",\n      want_coco: \"Wollen Sie CodeCombat an ihrer Schule?\"\n    },\n    nav: {\n      follow_us: \"Folge Uns\",\n      general: \"Hauptmenü\",\n      map: \"Karte\",\n      play: \"Spielen\",\n      community: \"Community\",\n      courses: \"Kurse\",\n      blog: \"Blog\",\n      forum: \"Forum\",\n      account: \"Account\",\n      my_account: \"Mein Account\",\n      profile: \"Profil\",\n      home: \"Home\",\n      contribute: \"Helfen\",\n      legal: \"Rechtliches\",\n      privacy: \"Datenschutz\",\n      about: \"Über\",\n      contact: \"Kontakt\",\n      twitter_follow: \"Folge uns auf Twitter\",\n      my_classrooms: \"Meine Klassen\",\n      my_courses: \"Meine Kurse\",\n      careers: \"Karriere mit CodeCombat!\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Erstelle eine Klasse\",\n      other: \"Andere\",\n      learn_to_code: \"Lerne zu coden!\",\n      toggle_nav: \"Navigation umschalten\",\n      schools: \"Schulen\",\n      get_involved: \"Mitmachen\",\n      open_source: \"Open source (GitHub)\",\n      support: \"Support\",\n      faqs: \"FAQs\",\n      copyright_prefix: \"Copyright\",\n      copyright_suffix: \"Alle Rechte vorbehalten.\",\n      help_pref: \"Noch Fragen? Sende eine E-Mail an\",\n      help_suff: \"und wir melden uns!\",\n      resource_hub: \"Resource Hub\",\n      apcsp: \"AP CS Prinzipien\",\n      parent: \"Eltern\"\n    },\n    modal: {\n      close: \"Schließen\",\n      okay: \"Okay\"\n    },\n    not_found: {\n      page_not_found: \"Tut uns leid! Wir haben die Seite nicht gefunden\"\n    },\n    diplomat_suggestion: {\n      title: \"Hilf mit, CodeCombat zu übersetzen!\",\n      sub_heading: \"Wir brauchen deine Sprachfähigkeiten.\",\n      pitch_body: \"Wir entwickeln CodeCombat in Englisch, aber wir haben Spieler in der ganzen Welt. Viele von ihnen wollen auf Deutsch spielen, sprechen aber kein Englisch. Wenn du also beide Sprachen beherrschst, melde dich an, um ein Diplomat zu werden und hilf die Website und die Levels ins Deutsche zu übersetzen.\",\n      missing_translations: \"Solange wir nicht alles ins Deutsche übersetzt haben, siehst du die englische Übersetzung dort, wo Deutsch leider noch nicht zur Verfügung steht.\",\n      learn_more: \"Mehr über Diplomaten:\",\n      subscribe_as_diplomat: \"Schreibe dich als Diplomat ein.\"\n    },\n    play: {\n      play_as: \"Spiele als \",\n      get_course_for_class: \"Wende Spieleentwicklung und mehr in deiner Klasse an!\",\n      request_licenses: \"Kontaktieren Sie unseren Schulspezialisten für Details.\",\n      compete: \"Teilnehmen!\",\n      spectate: \"Zuschauen\",\n      players: \"Spieler\",\n      hours_played: \"Stunden gespielt\",\n      items: \"Gegenstände\",\n      unlock: \"Freischalten\",\n      confirm: \"Bestätigen\",\n      owned: \"im Besitz\",\n      locked: \"Gesperrt\",\n      available: \"Verfügbar\",\n      skills_granted: \"Erhaltene\",\n      heroes: \"Helden\",\n      achievements: \"Errungenschaften\",\n      settings: \"Einstellungen\",\n      poll: \"Umfrage\",\n      next: \"Weiter\",\n      change_hero: \"Held wechseln\",\n      change_hero_or_language: \"Held oder Sprache wechseln\",\n      buy_gems: \"Edelsteine kaufen\",\n      subscribers_only: \"Nur Abonnenten!\",\n      subscribe_unlock: \"Freischalten mit Abo!\",\n      subscriber_heroes: \"Mit einem Abonnement direkt Amara, Hushbaum und Hattori freischalten!\",\n      subscriber_gems: \"Als Abonnent kannst du diesen Held mit Edelsteinen freischalten!\",\n      anonymous: \"Anonymer Spieler\",\n      level_difficulty: \"Schwierigkeit: \",\n      awaiting_levels_adventurer_prefix: \"Wir veröffentlichen jede Woche neue Level\",\n      awaiting_levels_adventurer: \"Registriere dich als ein Abenteurer\",\n      awaiting_levels_adventurer_suffix: \"sei der Erste, der neue Levels spielt.\",\n      adjust_volume: \"Lautstärke anpassen\",\n      campaign_multiplayer: \"Mehrspieler-Abenteuer\",\n      campaign_multiplayer_description: \"... in der du Kopf-an-Kopf gegen andere Spieler programmierst.\",\n      brain_pop_done: \"Programmierter Sieg über die Oger!\",\n      brain_pop_challenge: \"Fordere dich selbst heraus und spiele noch einmal mit einer anderen Programmiersprache!\",\n      replay: \"Neu spielen\",\n      back_to_classroom: \"Zurück zum Klassenraum\",\n      teacher_button: \"Für Lehrpersonen\",\n      get_more_codecombat: \"Erhalte mehr CodeCombat\"\n    },\n    code: {\n      \"if\": \"wenn\",\n      \"else\": \"sonst\",\n      elif: \"sonst wenn\",\n      \"while\": \"solange\",\n      loop: \"Schleife\",\n      \"for\": \"für\",\n      \"break\": \"Abbruch\",\n      \"continue\": \"weiter\",\n      pass: \"passen\",\n      \"return\": \"zurückgeben\",\n      then: \"dann\",\n      \"do\": \"tu\",\n      end: \"Ende\",\n      \"function\": \"Function\",\n      def: \"definiere\",\n      \"var\": \"Variable\",\n      self: \"selbst\",\n      hero: \"Held\",\n      \"this\": \"dies\",\n      or: \"oder\",\n      \"||\": \"oder\",\n      and: \"und\",\n      \"&&\": \"und\",\n      not: \"nicht\",\n      \"!\": \"nicht\",\n      \"=\": \"zuordnen\",\n      \"==\": \"ist gleich\",\n      \"===\": \"ist genau gleich\",\n      \"!=\": \"ist nicht gleich\",\n      \"!==\": \"ist nicht genau gleich\",\n      \">\": \"ist größer als\",\n      \">=\": \"ist größer als oder gleich\",\n      \"<\": \"ist kleiner als\",\n      \"<=\": \"ist kleiner als oder gleich\",\n      \"*\": \"multipliziert mit\",\n      \"/\": \"geteilt durch\",\n      \"+\": \"plus\",\n      \"-\": \"minus\",\n      \"+=\": \"addieren und zuweisen\",\n      \"-=\": \"subtrahieren und zuweisen\",\n      True: \"Wahr\",\n      \"true\": \"wahr\",\n      False: \"Falsch\",\n      \"false\": \"falsch\",\n      undefined: \"undefiniert\",\n      \"null\": \"null\",\n      nil: \"nil\",\n      None: \"Nichts\"\n    },\n    share_progress_modal: {\n      blurb: \"Du machst dich gut! Sag deinen Eltern wie viel du mit CodeCombat gelernt hast.\",\n      email_invalid: \"Diese E-Mail-Adresse ist leider ungültig.\",\n      form_blurb: \"Schreibe hier deine E-Mail-Adresse rein und wir werden es dir zeigen.\",\n      form_label: \"E-Mail-Adresse\",\n      placeholder: \"E-Mail-Adresse\",\n      title: \"Gute Arbeit, Lehrling\"\n    },\n    login: {\n      sign_up: \"Registrieren\",\n      email_or_username: \"E-Mail oder Username\",\n      log_in: \"Einloggen\",\n      logging_in: \"Logge dich ein\",\n      log_out: \"Ausloggen\",\n      forgot_password: \"Passwort vergessen?\",\n      finishing: \"Fertigstellen\",\n      sign_in_with_facebook: \"Melde dich mit Facebook an\",\n      sign_in_with_gplus: \"Melde dich mit Google+ an\",\n      signup_switch: \"Willst du einen Account erstellen?\"\n    },\n    signup: {\n      complete_subscription: \"Schließe die Anmeldung ab\",\n      create_student_header: \"Schülerkonto erstellen\",\n      create_teacher_header: \"Lehrerkonto erstellen\",\n      create_individual_header: \"Einzelkonto erstellen\",\n      email_announcements: \"Erhalte Benachrichtigungen über neue Level und Features per E-Mail\",\n      sign_in_to_continue: \"Melde dich an oder ertell einen Account um fortzufahren\",\n      teacher_email_announcements: \"Halte mich über neue Unterrichtsmaterialien, Inhalte und Kurse auf dem Laufenden!\",\n      creating: \"Erzeuge Account...\",\n      sign_up: \"Neuen Account anlegen\",\n      log_in: \"mit Passwort einloggen\",\n      required: \"Du musst dich vorher einloggen diesen Dienst zu nutzen\",\n      login_switch: \"Hast du schon einen Account?\",\n      optional: \"optional\",\n      connected_gplus_header: \"Du wurdest erfolgreich mit Google+ verknüpft!\",\n      connected_gplus_p: \"Schließe das Registrieren ab, so dass du dich mit deinem Google+ Account einloggen kannst.\",\n      connected_facebook_header: \"Du wurdest erfolgreich mit Facebook verknüpft!\",\n      connected_facebook_p: \"Schließe das Registrieren ab, so dass du dich mit deinem Facebook-Account einloggen kannst.\",\n      hey_students: \"Schüler, gib den Klassencode von deinem Lehrer ein.\",\n      birthday: \"Geburtstag\",\n      parent_email_blurb: \"Uns ist klar, dass du es kaum erwarten kannst, mit dem Programmieren anzufangen &mdash; Wir freuen uns auch! Deine Eltern erhalten eine E-Mail mit einer Anleitung zum Erstellen deines Kontos. Schreibe eine E-Mail an {{email_link}}, wenn du Fragen hast.\",\n      classroom_not_found: \"Es gibt keine Klassen mit diesem Klassen-Code. Prüfe deine Rechtschreibung oder bitte deinen Lehrer um Hilfe.\",\n      checking: \"Wird geprüft…\",\n      account_exists: \"Diese E-Mail wird bereits verwendet:\",\n      sign_in: \"Anmelden\",\n      email_good: \"E-Mail sieht gut aus!\",\n      name_taken: \"Benutzername bereits vergeben! Wie wäre es mit {{suggestedName}}?\",\n      name_available: \"Benutzername verfügbar!\",\n      name_is_email: \"Benutzername darf keine E-Mail sein\",\n      choose_type: \"Wähle deinen Kontotyp:\",\n      teacher_type_1: \"Unterrichte Programmieren mit CodeCombat!\",\n      teacher_type_2: \"Richte deine Klasse ein\",\n      teacher_type_3: \"Zugriff auf Kurs-Handbücher\",\n      teacher_type_4: \"Fortschritt der Schüler anzeigen\",\n      signup_as_teacher: \"Als Lehrer registrieren\",\n      student_type_1: \"Lerne Programmieren, während du ein spannendes Spiel spielst!\",\n      student_type_2: \"Spiele mit deiner Klasse\",\n      student_type_3: \"Miss dich in Arenen mit anderen\",\n      student_type_4: \"Wähle deinen Helden!\",\n      student_type_5: \"Halte deinen Klassencode bereit!\",\n      signup_as_student: \"Als Schüler registrieren\",\n      individuals_or_parents: \"Personen & Eltern\",\n      individual_type: \"Für Spieler, die außerhalb einer Klasse coden lernen wollen. Eltern sollten sich hier für ein Konto registrieren.\",\n      signup_as_individual: \"Einzelkonto einrichten\",\n      enter_class_code: \"Gib' deinen Klassencode ein \",\n      enter_birthdate: \"Gib' dein Geburtsdatum ein:\",\n      parent_use_birthdate: \"Eltern benutzen ihr eigenes Geburtsdatum.\",\n      ask_teacher_1: \"Frage deinen Lehrer nach deinem Klassencode.\",\n      ask_teacher_2: \"In keiner Klasse? Erstelle stattdessen eine\",\n      ask_teacher_3: \"Einzelkonto\",\n      ask_teacher_4: \".\",\n      about_to_join: \"Du trittst bei:\",\n      enter_parent_email: \"Gib die E-Mail-Adresse deiner Eltern ein:\",\n      parent_email_error: \"Beim Verschicken der E-Mail ist etwas schiefgelaufen. Überprüfe die E-Mail-Adresse und versuche es erneut.\",\n      parent_email_sent: \"Wir haben dir eine E-Mail mit weiteren Anweisungen zum Erstellen eines Kontos zugeschickt. Bitte deine Eltern, in ihr Postfach zu schauen.\",\n      account_created: \"Konto erstellt!\",\n      confirm_student_blurb: \"Schreibe dir deine Daten auf, damit du sie nicht vergisst. Dein Lehrer kann dir jederzeit helfen, dein Passwort zurückzusetzen\",\n      confirm_individual_blurb: \"Schreibe dir deine Login-Daten auf, falls du sie später brauchst. Bestätige deine E-Mail-Adresse, damit du dein Konto wiederherstellen kannst, wenn du dein Passwort mal vergessen solltest – schau in deinen Posteingang!\",\n      write_this_down: \"Schreib das auf:\",\n      start_playing: \"Spiel beginnen!\",\n      sso_connected: \"Erfolgreich verbunden mit:\",\n      select_your_starting_hero: \"Wähle deinen Anfangshelden:\",\n      you_can_always_change_your_hero_later: \"Du kannst ihn später jederzeit wechseln.\",\n      finish: \"Abschließen\",\n      teacher_ready_to_create_class: \"Erstelle jetzt deine erste Klasse!\",\n      teacher_students_can_start_now: \"Gleich können deine Schüler mit dem ersten Kurs, Einführung in die Informatik, beginnen.\",\n      teacher_list_create_class: \"Auf der nächsten Seite kannst du eine neue Klasse erstellen.\",\n      teacher_list_add_students: \"Füge Schüler zur Klassen hinzu, indem du auf Klasse anzeigen klickst und ihnen den Klassencode oder die URL schickst. Du kannst auch Schüler per E-Mail einladen, wenn Sie E-Mail-Adressen haben.\",\n      teacher_list_resource_hub_1: \"Beachte auch die\",\n      teacher_list_resource_hub_2: \"Kursanleitungen\",\n      teacher_list_resource_hub_3: \"mit Lösungen für alle Level und den\",\n      teacher_list_resource_hub_4: \"Resource Hub\",\n      teacher_list_resource_hub_5: \"für Curriculumleitfäden, Aktivitäten und mehr!\",\n      teacher_additional_questions: \"Fertig! Wenn du weitere Hilfe benötigst oder Fragen hast, wende dich an __supportEmail__.\",\n      dont_use_our_email_silly: \"Bitte gib die E-Mail deiner Eltern an, nicht unsere!\",\n      want_codecombat_in_school: \"Möchtest du die ganze Zeit CodeCombat spielen?\",\n      eu_confirmation: \"Ich stimme zu, dass CodeCombat meine Daten auf US-Servern speichern darf.\",\n      eu_confirmation_place_of_processing: \"Erfahre mehr über die möglichen Risiken\",\n      eu_confirmation_student: \"Wenn du dir nicht sicher bist, frag deinen Lehrer.\",\n      eu_confirmation_individual: \"Wenn du deine Daten nicht auf US-Servern gespeichaert haben möchtest, kannst du Anonym weiterspielen. Dein Code wird nicht gesichert.\"\n    },\n    recover: {\n      recover_account_title: \"Account-Wiederherstellung\",\n      send_password: \"Wiederherstellungskennwort senden\",\n      recovery_sent: \"Wiederherstellungs-E-Mail versandt.\"\n    },\n    items: {\n      primary: \"Primär\",\n      secondary: \"Sekundär\",\n      armor: \"Rüstung\",\n      accessories: \"Zubehör\",\n      misc: \"Sonstiges\",\n      books: \"Bücher\"\n    },\n    common: {\n      back: \"Zurück\",\n      coming_soon: \"Demnächst!\",\n      \"continue\": \"Weiter\",\n      next: \"Weiter\",\n      default_code: \"Standardcode\",\n      loading: \"Lade...\",\n      overview: \"Übersicht\",\n      processing: \"In Bearbeitung...\",\n      solution: \"Lösung\",\n      table_of_contents: \"Inhaltsverzeichnis\",\n      intro: \"Einführung\",\n      saving: \"Speichere...\",\n      sending: \"Sende...\",\n      send: \"Senden\",\n      sent: \"Gesendet\",\n      cancel: \"Abbrechen\",\n      save: \"Speichern\",\n      publish: \"Veröffentlichen\",\n      create: \"Erstellen\",\n      fork: \"Kopieren\",\n      play: \"Spielen\",\n      retry: \"Erneut versuchen\",\n      actions: \"Aktionen\",\n      info: \"Informationen\",\n      help: \"Hilfe\",\n      watch: \"Beobachten\",\n      unwatch: \"Nicht beobachten\",\n      submit_patch: \"Patch einreichen\",\n      submit_changes: \"Änderungen einreichen\",\n      save_changes: \"Änderungen speichern\",\n      required_field: \"Pflichtfeld\"\n    },\n    general: {\n      and: \"und\",\n      name: \"Name\",\n      date: \"Datum\",\n      body: \"Inhalt\",\n      version: \"Version\",\n      pending: \"ausstehend\",\n      accepted: \"akzeptiert\",\n      rejected: \"abgelehnt\",\n      withdrawn: \"zurückgezogen\",\n      accept: \"Akzeptieren\",\n      accept_and_save: \"Akzeptieren&Speichern\",\n      reject: \"Verwerfen\",\n      withdraw: \"Zurückziehen\",\n      submitter: \"Übermittler\",\n      submitted: \"Übermittelt\",\n      commit_msg: \"Übertrage Nachricht\",\n      version_history: \"Versionshistorie\",\n      version_history_for: \"Versionsgeschichte für: \",\n      select_changes: \"Wähle zwei Änderungen unten, um den Unterschied sehen zu können.\",\n      undo_prefix: \"Rückgängig\",\n      undo_shortcut: \"(Strg+Z)\",\n      redo_prefix: \"Wiederholen\",\n      redo_shortcut: \"(Strg+Umschalt+Z)\",\n      play_preview: \"Spiele eine Vorschau des momentanen Levels.\",\n      result: \"Ergebnis\",\n      results: \"Ergebnisse\",\n      description: \"Beschreibung\",\n      or: \"oder\",\n      subject: \"Betreff\",\n      email: \"E-Mail\",\n      password: \"Passwort\",\n      confirm_password: \"Passwort bestätigen\",\n      message: \"Nachricht\",\n      code: \"Code\",\n      ladder: \"Rangliste\",\n      when: \"Wann\",\n      opponent: \"Gegner\",\n      rank: \"Rang\",\n      score: \"Punktzahl\",\n      win: \"Sieg\",\n      loss: \"Niederlage\",\n      tie: \"Unentschieden\",\n      easy: \"Einfach\",\n      medium: \"Mittel\",\n      hard: \"Schwer\",\n      player: \"Spieler\",\n      player_level: \"Stufe\",\n      warrior: \"Krieger\",\n      ranger: \"Waldläufer\",\n      wizard: \"Magier\",\n      first_name: \"Vorname\",\n      last_name: \"Nachname\",\n      last_initial: \"Letzte Initialie\",\n      username: \"Username\",\n      contact_us: \"Kontaktiere uns\",\n      close_window: \"Fenster schließen\",\n      learn_more: \"Mehr erfahren\",\n      more: \"Mehr\",\n      fewer: \"Fieber\",\n      \"with\": \"Mit\"\n    },\n    units: {\n      second: \"Sekunde\",\n      seconds: \"Sekunden\",\n      sec: \"Sek\",\n      minute: \"Minute\",\n      minutes: \"Minuten\",\n      hour: \"Stunde\",\n      hours: \"Stunden\",\n      day: \"Tag\",\n      days: \"Tage\",\n      week: \"Woche\",\n      weeks: \"Wochen\",\n      month: \"Monat\",\n      months: \"Monate\",\n      year: \"Jahr\",\n      years: \"Jahre\"\n    },\n    play_level: {\n      back_to_map: \"Zurück zur Karte\",\n      directions: \"Richtungen\",\n      edit_level: \"Level bearbeiten\",\n      keep_learning: \"Lern weiter\",\n      explore_codecombat: \"CodeCombat entdecken\",\n      finished_hoc: \"Ich bin mit meiner Stunde Code fertig\",\n      get_certificate: \"Hol dir dein Zertifikat!\",\n      level_complete: \"Level abgeschlossen\",\n      completed_level: \"Abgeschlossene Level:\",\n      course: \"Kurse:\",\n      done: \"Fertig\",\n      next_level: \"Nächster Level\",\n      combo_challenge: \"Combo Challenge\",\n      concept_challenge: \"Concept Challenge\",\n      challenge_unlocked: \"Challenge freigeschaltet\",\n      combo_challenge_unlocked: \"Combo Challenge freigeschaltet\",\n      concept_challenge_unlocked: \"Konzept Challenge freigeschaltet\",\n      concept_challenge_complete: \"Konzept Challenge fertiggestellt!\",\n      combo_challenge_complete: \"Combo Challenge fertiggestellt!\",\n      combo_challenge_complete_body: \"Großartige Leistung, es sieht so aus als wärst du auf einem guten Weg __concept__ zu verstehen!\",\n      replay_level: \"Wiederhole das Level\",\n      combo_concepts_used: \"__complete__/__total__ Konzepte genutzt\",\n      combo_all_concepts_used: \"Du hast alle möglichen Konzepte zum Lösen der Herausforderung genutzt. Großartige Leistung!\",\n      combo_not_all_concepts_used: \"Du hast __complete__ out of the __total__ mögliche Konzepte genutzt bei der Lösung der Herausforderung. Versuche das nächste Mal alle __total__ Konzepte zu nutzen!\",\n      start_challenge: \"Starte die Herausforderung\",\n      next_game: \"Nächstes Spiel\",\n      languages: \"Sprachen\",\n      programming_language: \"Programmiersprache\",\n      show_menu: \"Menü anzeigen\",\n      home: \"Startseite\",\n      level: \"Level\",\n      skip: \"Überspringen\",\n      game_menu: \"Spielmenü\",\n      restart: \"Neustart\",\n      goals: \"Ziele\",\n      goal: \"Ziel\",\n      challenge_level_goals: \"Challenge Level Ziele\",\n      challenge_level_goal: \"Challenge Level Ziel\",\n      concept_challenge_goals: \"Konzept Challenge Ziele\",\n      combo_challenge_goals: \"Combo Challenge Ziele\",\n      concept_challenge_goal: \"Konzept Challenge Ziel\",\n      combo_challenge_goal: \"Combo Challenge Ziel\",\n      running: \"Läuft...\",\n      success: \"Erfolgreich!\",\n      incomplete: \"Unvollständig\",\n      timed_out: \"Zeit abgelaufen\",\n      failing: \"Fehlgeschlagen\",\n      reload: \"Neu laden\",\n      reload_title: \"Gesamten Code neu laden?\",\n      reload_really: \"Bist du sicher, dass du das Level neu beginnen willst?\",\n      reload_confirm: \"Alles neu laden\",\n      test_level: \"Testlevel\",\n      victory: \"Triumph\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" Abgeschlossen\",\n      victory_sign_up: \"Melde dich an, um Fortschritte zu speichern.\",\n      victory_sign_up_poke: \"Möchtest du Neuigkeiten per Mail erhalten? Erstelle einen kostenlosen Account und wir halten dich auf dem Laufenden.\",\n      victory_rate_the_level: \"Spaßfaktor des Levels?: \",\n      victory_return_to_ladder: \"Zurück zur Rangliste\",\n      victory_saving_progress: \"Fortschritt speichern\",\n      victory_go_home: \"Geh auf die Startseite\",\n      victory_review: \"Erzähl uns davon!\",\n      victory_review_placeholder: \"Wie war das Level?\",\n      victory_hour_of_code_done: \"Bist du fertig?\",\n      victory_hour_of_code_done_yes: \"Ja, ich bin mit meiner Code-Stunde fertig!\",\n      victory_experience_gained: \"Gewonnene XP\",\n      victory_gems_gained: \"Gewonnene Edelsteine\",\n      victory_new_item: \"Neuen Gegenstand gewonnen\",\n      victory_new_hero: \"Neuer Held\",\n      victory_viking_code_school: \"Heiliger Bimbam, das war ein schweres Level, dass du gerade gemeister hast! Wenn du noch kein Softwareentwickler bist, solltest du darüber nachdenken. Du wurdest zum Eilverfahren für die Annahme an der Viking Code School eingeschrieben, wo du deine Skills auf den nächsten Level bringen kannst und ein professioneller Web-developer in 14 Wochen werden kannst.\",\n      victory_become_a_viking: \"Werde ein Viking\",\n      victory_no_progress_for_teachers: \"Der Fortschritt wird für Lehrer nicht gespeichert. Aber du kannst ein Schüler-Konto für deine Klasse hinzufügen und es selbst benutzen.\",\n      tome_cast_button_run: \"Ausführen\",\n      tome_cast_button_running: \"Wird ausgeführt\",\n      tome_cast_button_ran: \"Wurde ausgeführt\",\n      tome_submit_button: \"Absenden\",\n      tome_reload_method: \"Ursprünglichen Code laden zum Neustart\",\n      tome_available_spells: \"Verfügbare Zauber\",\n      tome_your_skills: \"Deine Fähigkeiten\",\n      hints: \"Tipps\",\n      hints_title: \"Tipp {{number}}\",\n      code_saved: \"Code gespeichert\",\n      skip_tutorial: \"Überspringen (Esc)\",\n      keyboard_shortcuts: \"Tastenkürzel\",\n      loading_start: \"Starte Level\",\n      loading_start_combo: \"Starte die Kombinationsherausforderung\",\n      loading_start_concept: \"Starte die Konzeptherausforderung\",\n      problem_alert_title: \"Repariere deinen Code\",\n      time_current: \"Aktuell:\",\n      time_total: \"Gesamt:\",\n      time_goto: \"Gehe zu:\",\n      non_user_code_problem_title: \"Level konnte nicht geladen werden\",\n      infinite_loop_title: \"Unendliche Schleife entdeckt\",\n      infinite_loop_description: \"Der eingegebene Code für die Erschaffung dieser Welt findet kein Ende. Er ist entweder sehr langsam oder hat eine unendliche Schleife. Oder es gibt einen Bug. Du kannst entweder versuchen den Code nochmal zu starten oder den Code zum Ursprungscode zurücksetzen. Falls das nicht hilft, dann lass es uns bitte wissen.\",\n      check_dev_console: \"Du kannst auch die Entwicklerkonsole öffnen um zu sehen was schief lief.\",\n      check_dev_console_link: \"(Instruktionen)\",\n      infinite_loop_try_again: \"Erneut versuchen\",\n      infinite_loop_reset_level: \"Level zurücksetzen\",\n      infinite_loop_comment_out: \"Meinen Code auskommentieren\",\n      tip_toggle_play: \"Wechsel zwischen Play und Pause mit Strg+P.\",\n      tip_scrub_shortcut: \"Spule vor und zurück mit Strg+[ und Strg+]\",\n      tip_guide_exists: \"Klicke auf die Anleitung am oberen Ende der Seite für nützliche Informationen.\",\n      tip_open_source: \"CodeCombat ist 100% open Source!\",\n      tip_tell_friends: \"Gefällt dir CodeCombat? Dann erzähl es deinen Freunden!\",\n      tip_beta_launch: \"CodeCombat startete seine Beta im Oktober 2013.\",\n      tip_think_solution: \"Denke über die Lösung nach, nicht über das Problem.\",\n      tip_theory_practice: \"In der Theorie gibt es keinen Unterschied zwischen Theorie und Praxis. In der Praxis schon. - Yogi Berra\",\n      tip_error_free: \"Es gibt zwei Wege fehlerfreie Programme zu schreiben. Nur der Dritte funktioniert. - Alan Perlis\",\n      tip_debugging_program: \"Wenn Debugging der Prozess zum Fehler entfernen ist, dann muss Programmieren der Prozess sein Fehler zu machen. - Edsger W. Dijkstra\",\n      tip_forums: \"Komm ins Forum und sage uns was du denkst!\",\n      tip_baby_coders: \"In der Zukunft werden sogar Babies Erzmagier sein.\",\n      tip_morale_improves: \"Das Laden wird weiter gehen bis die Stimmung sich verbessert.\",\n      tip_all_species: \"Wir glauben an gleiche Chancen für alle Arten Programmieren zu lernen.\",\n      tip_reticulating: \"Spines neu berechnen.\",\n      tip_harry: \"Du bist ein Zauberer, \",\n      tip_great_responsibility: \"Mit großen Programmierfähigkeiten kommt große Verantwortung.\",\n      tip_munchkin: \"Wenn du dein Gemüse nicht isst, besucht dich ein Zwerg während du schläfst.\",\n      tip_binary: \"Es gibt auf der Welt nur 10 Arten von Menschen: Die, die Binär verstehen und die, die es nicht tun.\",\n      tip_commitment_yoda: \"Ein Programmierer muss die größte Hingabe haben, den ernstesten Verstand. - Yoda\",\n      tip_no_try: \"Tun oder nicht tun. Es gibt kein Versuchen. - Yoda\",\n      tip_patience: \"Geduld du haben musst, junger Padawan. - Yoda\",\n      tip_documented_bug: \"Ein dokumentierter Fehler ist kein Fehler: Er ist ein Besonderheit.\",\n      tip_impossible: \"Es wirkt immer unmöglich, bis es vollbracht ist. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Reden ist billig. Zeig mir den Code. - Linus Torvalds\",\n      tip_first_language: \"Das Schwierigste, das du jemals lernen wirst, ist die erste Programmiersprache. - Alan Kay\",\n      tip_hardware_problem: \"Q: Wie viele Programmierer braucht man um eine Glühbirne auszuwechseln? A: Keine, es ist ein Hardware-Problem.\",\n      tip_hofstadters_law: \"Hofstadter's Gesetz: Es dauert immer länger als erwartet, auch wenn du Hofstadter's Gesetz anwendest.\",\n      tip_premature_optimization: \"Vorzeitige Optimierung ist die Wurzel allen Übels (oder mindestens des meisten) bei der Programmierung. - Donald Knuth\",\n      tip_brute_force: \"Verwende im Zweifelsfall rohe Gewalt. - Ken Thompson\",\n      tip_extrapolation: \"Es gibt nur zwei Sorten Menschen, diejenigen die aus unvollständigen Informationen Schlüsse ziehen können, ...\",\n      tip_superpower: \"Programmieren ist das nächste an einer Superkraft was wir haben.\",\n      tip_control_destiny: \"In wirklichem Open Source hat man das Recht, sein Schicksal selbst zu bestimmen. - Linus Torvalds\",\n      tip_no_code: \"Kein Code ist schneller als kein Code.\",\n      tip_code_never_lies: \"Der Code lügt nie, Kommentare manchmal schon. - Ron Jeffries\",\n      tip_reusable_software: \"Bevor ein Programm wiederverwendbar ist, muss es erst mal verwendbar sein.\",\n      tip_optimization_operator: \"Jede Sprache hat einen Optimierungs-Operator. In den meisten Sprachen lautet der Operator ‘//’\",\n      tip_lines_of_code: \"Ein Programm an den Zeilen seines Quellcodes zu messen entspricht dem Messen des Fortschritts eines Flugzeugentwurfsprozesses nach Gewicht. - Bill Gates\",\n      tip_source_code: \"Ich will die Welt verändern, aber sie werden mir den Quellcode nicht geben\",\n      tip_javascript_java: \"Java is to JavaScript what Car is to Carpet. - Chris Heilmann\",\n      tip_move_forward: \"Was auch immer du tust, geh immer weiter geradeaus. - Martin Luther King Jr.\",\n      tip_google: \"Hast du ein Problem, das du nicht lösen kannst? Google es!\",\n      tip_adding_evil: \"Wir fügen eine Prise des Bösen hinzu.\",\n      tip_hate_computers: \"Das ist das Problem mit Leuten, die denken sie hassen Computer. Was sie wirklich hassen sind lausige Programmierer. - Larry Niven\",\n      tip_open_source_contribute: \"Du kannst dabei helfen, CodeCombat zu verbessern.\",\n      tip_recurse: \"Iteration ist menschlich, Rekursion göttlich. - L. Peter Deutsch\",\n      tip_free_your_mind: \"Mach dich von allem frei, Neo. Angst, Zweifel, Misstrauen. Du musst deinen Geist befreien! - Morpheus\",\n      tip_strong_opponents: \"Auch die stärksten Gegner haben immer ihre Schwächen. - Itachi Uchiha\",\n      tip_paper_and_pen: \"Bevor du beginnst zu programmieren, kannst du immer einen Plan mit Stift und Papier machen.\",\n      tip_solve_then_write: \"Als Erstes, löse dass Problem. Dann, schreibe den Code. - John Johnson\",\n      tip_compiler_ignores_comments: \"Manchmal denke ich der Compiler ignoriert meine Kommentare.\",\n      tip_understand_recursion: \"Der einzige Weg um Rekursion zu verstehen, ist Rekursion zu verstehen.\",\n      tip_life_and_polymorphism: \"Open Source ist wie eine polymorphe heterogene Struktur: Alle Typen sind willkommen.\",\n      tip_mistakes_proof_of_trying: \"Fehler in deinem Code sind Beweise, dass du es versuchst.\",\n      tip_adding_orgres: \"Oger zusammentreiben.\",\n      tip_sharpening_swords: \"Die Schwerter schärfen.\",\n      tip_ratatouille: \"Niemand sollte deine Grenzen aufgrund deiner Herkunft bestimmen. Deine einzige Grenze ist deine Seele. – Gusteau, Ratatouille\",\n      tip_nemo: \"Wenn das Leben dich niederschlägt, weißt du, was du machen musst? Einfach schwimmen, einfach weiterschwimmen. – Dory, Findet Nemo\",\n      tip_internet_weather: \"Zieh einfach ins Internet um, es ist super hier. Wir können drinnen leben, wo das Wetter immer gut ist. – John Green\",\n      tip_nerds: \"Nerds dürfen noch etwas lieben, die ich-springe-in-meinem-Stuhl-hoch-und-runter-und-kann-mich-nicht-beherrschen-Liebe. – John Green\",\n      tip_self_taught: \"90% von dem, was ich gelernt habe, habe ich mir selbst beigebracht. Und das ist normal! – Hank Green\",\n      tip_luna_lovegood: \"Mach dir keine Sorgen, du bist genauso bei gutem Verstand wie ich. – Luna Lovegood\",\n      tip_good_idea: \"Die beste Möglichkeit, eine gute Idee zu haben, ist, eine Menge Ideen zu haben. – Linus Pauling\",\n      tip_programming_not_about_computers: \"In der Informatik geht es ebenso wenig um Computer, wie es in der Astronomie um Teleskope geht. – Edsger Dijkstra\",\n      tip_mulan: \"Glaube, dass du es kannst, dann wirst du es tun. – Mulan\",\n      project_complete: \"Projekt abgeschlossen!\",\n      share_this_project: \"Teile dieses Projekt mit Freunden oder der Familie:\",\n      ready_to_share: \"Bereit, dein Projekt zu veröffentlichen?\",\n      click_publish: \"Klicke auf \\\"Veröffentlichen\\\" damit es in der Klassengalerie erscheint, dann sieh dir an, wass deine Klassenkameraden erstellt haben. Du kannst später an diesem Projekt weiterarbeiten. Alle Änderungen werden automatisch gesichert und mit deinen Klassenkameraden geteilt.\",\n      already_published_prefix: \"Deine Änderungen wurden in der Galerie veröffentlicht.\",\n      already_published_suffix: \"Experimentiere weiter und mach diese Projekt noch besser oder sieh dir an, was der Rest der Klasse erstellt hat! Deine Änderungen werden automatisch gesichert und mit deinen Klassenkameraden geteilt.\",\n      view_gallery: \"Gallerie\",\n      project_published_noty: \"Dein Level wurde veröffentlicht!\",\n      keep_editing: \"Bearbeite weiter!\"\n    },\n    apis: {\n      methods: \"Methoden\",\n      events: \"Ereignisse\",\n      handlers: \"Handler\",\n      properties: \"Eigenschaften\",\n      snippets: \"Schnipsel\",\n      html: \"HTML\",\n      math: \"Mathematik\",\n      array: \"Array\",\n      object: \"Objekt\",\n      string: \"String\",\n      \"function\": \"Funktion\",\n      vector: \"Vektor\",\n      date: \"Datum\",\n      jquery: \"jQuery\",\n      json: \"JSON\",\n      number: \"Nummer\",\n      webjavascript: \"JavaScript\"\n    },\n    play_game_dev_level: {\n      created_by: \"Erstellt von {{name}}\",\n      created_during_hoc: \"Während Hour of Code erstellt\",\n      restart: \"Level neu starten\",\n      play: \"Level spielen\",\n      play_more_codecombat: \"Mehr CodeCombat spielen\",\n      default_student_instructions: \"Benutze die Maus, um deinen Helden zu steuern und das Spiel zu gewinnen!\",\n      goal_survive: \"Überlebe.\",\n      goal_survive_time: \"Überlebe für __seconds__ Sekunden.\",\n      goal_defeat: \"Besiege alle Gegner.\",\n      goal_defeat_amount: \"Besiege __amount__ Gegner.\",\n      goal_move: \"Bewege dich zu allen roten X-Markierungen.\",\n      goal_collect: \"Sammle alle Gegenstände.\",\n      goal_collect_amount: \"Sammle __amount__ Gegenstände.\"\n    },\n    game_menu: {\n      inventory_tab: \"Inventar\",\n      save_load_tab: \"Speicher/Lade\",\n      options_tab: \"Einstellungen\",\n      guide_tab: \"Handbuch\",\n      guide_video_tutorial: \"Video Anleitung\",\n      guide_tips: \"Hinweise\",\n      multiplayer_tab: \"Mehrspieler\",\n      auth_tab: \"Registrieren\",\n      inventory_caption: \"Rüste deinen Helden aus\",\n      choose_hero_caption: \"Wähle Helden, Sprache\",\n      options_caption: \"konfiguriere Einstellungen\",\n      guide_caption: \"Handbuch und Tipps\",\n      multiplayer_caption: \"Spiele mit Freunden!\",\n      auth_caption: \"Fortschritt speichern.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Zur Bestenliste\",\n      scores: \"Bestenliste\",\n      top_players: \"Die besten Spieler nach\",\n      day: \"Heute\",\n      week: \"diese Woche\",\n      all: \"insgesamt\",\n      latest: \"zuletzt\",\n      time: \"Zeit\",\n      damage_taken: \"Schaden (ausgeteilt)\",\n      damage_dealt: \"Schaden (erhalten)\",\n      difficulty: \"Schwierigkeit\",\n      gold_collected: \"Gold gesammelt\",\n      survival_time: \"Überlebt\",\n      defeated: \"Gegner besiegt\",\n      code_length: \"Codezeilen\",\n      score_display: \"__scoreType__: __score__\"\n    },\n    inventory: {\n      equipped_item: \"Hinzugefügt\",\n      required_purchase_title: \"Benötigt\",\n      available_item: \"Verfügbar\",\n      restricted_title: \"Eingeschränkt\",\n      should_equip: \"Doppelklicken um Ausrüstung zu wählen\",\n      equipped: \"(ausgewählt)\",\n      locked: \"(gesperrt)\",\n      restricted: \"(In diesem Level nicht verfügbar)\",\n      equip: \"Wähle\",\n      unequip: \"Ablegen\",\n      warrior_only: \"Nur für Krieger\",\n      ranger_only: \"Nur für Waldläufer\",\n      wizard_only: \"Nur für Magier\"\n    },\n    buy_gems: {\n      few_gems: \"Ein paar Edelsteine\",\n      pile_gems: \"Ein Stapel Edelsteine\",\n      chest_gems: \"Eine Kiste voller Edelsteine\",\n      purchasing: \"Kaufabwicklung...\",\n      declined: \"Deine Karte wurde abgelehnt\",\n      retrying: \"Serverfehler, versuche es erneut.\",\n      prompt_title: \"Nicht genug Edelsteine\",\n      prompt_body: \"Benötigst du mehr?\",\n      prompt_button: \"Laden betreten\",\n      recovered: \"Vorangegangener Edelsteinkauf rückgängig gemacht. Aktualisiere bitte die Seite.\",\n      price: \"x{{gems}} / Monat\",\n      buy_premium: \"Kaufe Premium\",\n      purchase: \"Kauf\",\n      purchased: \"Gekauft\"\n    },\n    subscribe_for_gems: {\n      prompt_title: \"Nicht genug Juwelen!\",\n      prompt_body: \"Abonniere Premuim um mehr Edelsteine und Levels zu erhalten!\"\n    },\n    earn_gems: {\n      prompt_title: \"Zuwenig Edelsteine\",\n      prompt_body: \"Spiele weiter und verdiene mehr!\"\n    },\n    subscribe: {\n      best_deal: \"Bestes Angebot!\",\n      confirmation: \"Congratulations! Sie haben jetzt ein CodeCombat Premium Abonnement!\",\n      premium_already_subscribed: \"Du bist bereits Abonnent!\",\n      subscribe_modal_title: \"CodeCombat Premium\",\n      comparison_blurb: \"Werde Master Coder und bestelle das <b>Premium-Abonnent</b>!\",\n      must_be_logged: \"Du musst eingeloggt sein. Bitte kreiere einen Account oder logge dich oben im Menü ein.\",\n      subscribe_title: \"Abonnieren\",\n      unsubscribe: \"Abmelden\",\n      confirm_unsubscribe: \"Abmeldung bestätigen\",\n      never_mind: \"Keine Sorge. Ich hab dich trotzdem lieb.\",\n      thank_you_months_prefix: \"Danke für deine Unterstützung in den letzten\",\n      thank_you_months_suffix: \"Monaten.\",\n      thank_you: \"Danke, dass du CodeCombat unterstützt.\",\n      sorry_to_see_you_go: \"Schade, dass du gehst! Bitte teile uns mit, was wir hätten besser machen können.\",\n      unsubscribe_feedback_placeholder: \"Oh, was haben wir getan?\",\n      stripe_description: \"Monatsabo\",\n      buy_now: \"Bestellen\",\n      subscription_required_to_play: \"Leider musst du ein Abo haben, um dieses Level spielen zu können.\",\n      unlock_help_videos: \"Abonniere, um alle Videoanleitungen freizuschalten.\",\n      personal_sub: \"Persönliches Abonnement\",\n      loading_info: \"Lade Abonnementinformationen...\",\n      managed_by: \"Verwaltet durch\",\n      will_be_cancelled: \"Läuft ab am\",\n      currently_free: \"Du hast aktuell ein kostenloses Abonnement\",\n      currently_free_until: \"Du hast aktuell ein kostenloses Abonnement bis zum\",\n      free_subscription: \"Kostenloses Abonnement\",\n      was_free_until: \"Du hattest ein kostenloses Abonnement bis zum\",\n      managed_subs: \"Verwaltete Abonnements\",\n      subscribing: \"Abonniere...\",\n      current_recipients: \"Aktuelle Empfänger\",\n      unsubscribing: \"Abonnement wird gekündigt...\",\n      subscribe_prepaid: \"Klicke auf abonnieren, um einen Prepaidcode zu benutzen\",\n      using_prepaid: \"Benutze einen Prepaidcode für ein Monatsabo\",\n      feature_heroes: \"Schalte exklusive Helden frei\",\n      feature_learn: \"Lerne die Erstellung von Websiten und Spielen\",\n      month_price: \"$__price__/Mon\",\n      first_month_price: \"Nur $__price__ für deinen ersten Monat!\",\n      lifetime: \"Lebenslanges Abonnement\",\n      lifetime_price: \"$__price__\",\n      year_subscription: \"Jahresabonnement\",\n      year_price: \"$__price__/Jahr\",\n      support_part1: \"Brauchst du Hilfe bei den Zahlungsoptionen? Schicke eine E-Mail an\",\n      support_part2: \"support@codecombat.com\"\n    },\n    announcement: {\n      now_available: \"Jetzt verfügbar für Abonnenten!\",\n      subscriber: \"Abonnent\",\n      cuddly_companions: \"Flauschige Begleiter!\",\n      kindling_name: \"Entflammter Elementar\",\n      kindling_description: \"Entflammte Elementare wollen dir nur nachts etwas Wärme geben. Und tagsüber. Eigentlich die ganze Zeit, genaugenommen.\",\n      griffin_name: \"Babygreif\",\n      griffin_description: \"Greife sind halb Adler, halb Löwe und ganz und gar hinreißend.\",\n      raven_name: \"Rabe\",\n      raven_description: \"Raben können dir ganz hervorragend glitzernde Flaschen mit Heiltränken herbeiholen\",\n      mimic_name: \"Mimic\",\n      mimic_description: \"Mimics können dir Münzen beschaffen. Bewege sie auf einen Münzhaufen um deine Goldvorräte zu erhöhen.\",\n      cougar_name: \"Puma\",\n      cougar_description: \"Ein Puma möchte täglich glücklich schnurren - bis der Arzt kommt.\",\n      fox_name: \"Blaufuchs\",\n      fox_description: \"Blauchfüchse sind sehr schlau und lieben es, der Erde oder im Schnee zu graben!\",\n      pugicorn_name: \"Mops-Einhorn\",\n      pugicorn_description: \"Das Mops-Einhörn ist eine der seltensten Kreaturen und es kann zaubern!\",\n      wolf_name: \"Wolfswelpe\",\n      wolf_description: \"Wolfswelpen können ganz hervorragend jagen, sammeln und hervorragend gemein verstecken und aufspüren.\",\n      ball_name: \"Roter quietschender Ball\",\n      ball_description: \"ball.squeak()\",\n      collect_pets: \"Sammle Lieblingstiere für deine Helden!\",\n      each_pet: \"Jedes Tier hat seine ganz eigenen Fähigkeiten um dir zu helfen!\",\n      upgrade_to_premium: \"Werde {{subscriber}} um Lieblingstiere mitzunehmen.\",\n      play_second_kithmaze: \"Spiele {{the_second_kithmaze}} um den Wolfswelpen freizuschalten!\",\n      the_second_kithmaze: \"Das zweite Kith Labyrinth\",\n      keep_playing: \"Spiele weiter um dein erstes Lieblingstier zu entdecken!\",\n      coming_soon: \"Bald erhältlich!\",\n      ritic: \"Ritic der Kalte\",\n      ritic_description: \"Ritic der Kalte. Lange eingeschlossen im Kelvintaph Gletscher, endlich frei und bereit, sich den Ogern anzunehmen, die ihn gefangen setzen.\",\n      ice_block: \"Ein Eisblock\",\n      ice_description: \"Da scheint etwas eingeschlossen zu sein...\",\n      blink_name: \"Blinzel\",\n      blink_description: \"Ritic erscheint und verschwindet in einem Wimpernschlag und lässt nur seinen Schatten zurück\",\n      shadowStep_name: \"Schattenschrit\",\n      shadowStep_description: \"Ein Meister-Assassine weiß, wie man sich zwischen den Schatten bewegt.\",\n      tornado_name: \"Tornado\",\n      tornado_description: \"Man sollte einen Reset-Knopf haben, wenn die Tarnung auffliegt.\",\n      wallOfDarkness_name: \"Schattenwand\",\n      wallOfDarkness_description: \"Verbirg dich hinter der Schattenwand vor neugierigen Augen.\"\n    },\n    premium_features: {\n      get_premium: \"Werde<br>CodeCombat<br>Abonnent\",\n      master_coder: \"Schließe jetzt ein Abonnement ab und werde Master Coder!\",\n      paypal_redirect: \"Sie werden zu PayPal weitergeleitet um Ihre Zahlung abschliessen zu können.\",\n      subscribe_now: \"Abonniere heute\",\n      hero_blurb_1: \"Du bekommst Zugang zu __premiumHeroesCount__ extrastarken Helden nur für Abonnenten! Nutze die Macht von Okar Stompfoot, die tödliche Präzision von Naria von Blatt oder beschwöre \\\"hinreißende\\\" Skelette mit Nalfar Cryptor.\",\n      hero_blurb_2: \"Premium-Krieger erschließen beeindruckende Kampfkünste wie Kampf-Schrei, Stampfen oder Feinde-Wirbeln. Oder spiele als Waldläufer und nutze Tarntechnik, Messer und Borgen. Werde ein wahrer Programmier-Zauberer und entfessele Ur-, Nekromantie- oder Elementar-Magie!\",\n      hero_caption: \"Spannende neue Helden!\",\n      pet_blurb_1: \"Lieblingstiere sind nicht nur hinreißend, sie stellen auch ganz neue Funktionen und Methoden zur Verfügung. Der Babygreif fliegt über Hindernisse, der Wolfswelpe kann Zaubertränke holen und der Puma kann sprechen!\",\n      pet_blurb_2: \"Sammle alle und entdecke ihre einzigartigen Fähigkeiten\",\n      pet_caption: \"Lieblingstiere für deine Helden!\",\n      game_dev_blurb: \"Lerne, wie man Spiele mit Scripten steuert und erstelle neue Level, die du mit deinen Freunden teilen kannst! Plaziere die Gegenstände, die du willst, schreibe Programme für die Logik und das Verhalten der Einheiten und beobachte, ob deine Freunde das Level schaffen können.\",\n      game_dev_caption: \"Gestalte Spiele für deine Freunde!\",\n      everything_in_premium: \"Das alles erhälst du als CodeCombat Premium-Abonnent:\",\n      list_gems: \"Du erhälst jeden Monat Bonus-Edelsteine um Ausrüstung, Tiere und Helden zu kaufen.\",\n      list_levels: \"Du erhälst Zugang zu __premiumLevelsCount__ weiteren Leveln\",\n      list_heroes: \"Schalte exklusive Helden frei, beispielsweise Waldläufer- und Zauberer-Klassen\",\n      list_game_dev: \"Erstelle Spiele und teile sie mit Freunden\",\n      list_web_dev: \"Erstelle Webseiten und interaktive Apps\",\n      list_items: \"Rüste dich mit Dingen aus, die nur für Abonnenten verfügbar sind, wie zum Beispiel Lieblingstieren\",\n      list_support: \"Erhalte Premium-Support der dir hilft, Fehler in kompliziertem Code zu finden\",\n      list_clans: \"Gründe private Clans um deine Freunde einzuladen und führe eine Gruppen-Rangliste\"\n    },\n    choose_hero: {\n      choose_hero: \"Wähle deinen Helden\",\n      programming_language: \"Programmiersprache\",\n      programming_language_description: \"Welche Programmiersprache möchtest du verwenden?\",\n      \"default\": \"Standard\",\n      experimental: \"Experimentell\",\n      python_blurb: \"Einfach jedoch leistungsfähig, Python ist eine gute Allzweck-Programmiersprache.\",\n      javascript_blurb: \"Die Sprache des Netzes.\",\n      coffeescript_blurb: \"Schönere JavaScript Syntax.\",\n      lua_blurb: \"Skriptsprache für Spiele.\",\n      java_blurb: \"(Nur Abonenten) Android und Unternehmen.\",\n      status: \"Status\",\n      weapons: \"Waffen\",\n      weapons_warrior: \"Schwerter - Kurze Reichweite, Keine Zauber\",\n      weapons_ranger: \"Schusswaffen - Hohe Reichweite, Keine Zauber\",\n      weapons_wizard: \"Stäbe - Lange Reichweite, Zauber\",\n      attack: \"Schaden\",\n      health: \"Gesundheit\",\n      speed: \"Geschwindigkeit\",\n      regeneration: \"Regeneration\",\n      range: \"Reichweite\",\n      blocks: \"Blocken\",\n      backstab: \"Meucheln\",\n      skills: \"Fähigkeiten\",\n      attack_1: \"Teilt aus\",\n      attack_2: \"des genannten\",\n      attack_3: \"Waffenschadens.\",\n      health_1: \"Erhält\",\n      health_2: \"der genannten\",\n      health_3: \"Rüstungspunkte.\",\n      speed_1: \"Bewegt sich mit\",\n      speed_2: \"Meter pro Sekunde.\",\n      available_for_purchase: \"Zum Kauf verfügbar\",\n      level_to_unlock: \"Level zum Freischalten:\",\n      restricted_to_certain_heroes: \"Nur bestimmte Helden können dieses Level spielen.\"\n    },\n    skill_docs: {\n      \"function\": \"Funktion\",\n      method: \"Methode\",\n      snippet: \"Snippet\",\n      number: \"Zahl\",\n      array: \"Array\",\n      object: \"Objekt\",\n      string: \"String\",\n      writable: \"beschreibbar\",\n      read_only: \"schreibgeschützt\",\n      action: \"Aktion\",\n      spell: \"Zaubersprüche\",\n      action_name: \"Name\",\n      action_cooldown: \"Benötigt\",\n      action_specific_cooldown: \"Cooldown\",\n      action_damage: \"Schaden\",\n      action_range: \"Reichweite\",\n      action_radius: \"Radius\",\n      action_duration: \"Dauer\",\n      example: \"Beispiel\",\n      ex: \"z.B.\",\n      current_value: \"Aktueller Wert\",\n      default_value: \"Standardwert\",\n      parameters: \"Parameter\",\n      required_parameters: \"Erforderliche Parameter\",\n      optional_parameters: \"Optionale Parameter\",\n      returns: \"Gibt zurück\",\n      granted_by: \"Gewährt durch\"\n    },\n    save_load: {\n      granularity_saved_games: \"Gespeichert\",\n      granularity_change_history: \"Historie\"\n    },\n    options: {\n      general_options: \"Allgemeine Einstellungen\",\n      volume_label: \"Lautstärke\",\n      music_label: \"Musik\",\n      music_description: \"Schalte Hintergrundmusik an/aus.\",\n      editor_config_title: \"Editor Einstellungen\",\n      editor_config_livecompletion_label: \"Live Auto-Vervollständigung\",\n      editor_config_livecompletion_description: \"Zeigt Vorschläge der Auto-Vervollständigung an während du tippst.\",\n      editor_config_invisibles_label: \"Zeige unsichtbare Zeichen\",\n      editor_config_invisibles_description: \"Zeigt unsichtbare Zeichen wie Leertasten an.\",\n      editor_config_indentguides_label: \"Zeige Einrückhilfe\",\n      editor_config_indentguides_description: \"Zeigt vertikale Linien an, um Einrückungen besser zu sehen.\",\n      editor_config_behaviors_label: \"Intelligentes Verhalten\",\n      editor_config_behaviors_description: \"Vervollständigt automatisch Klammern und Anführungszeichen.\"\n    },\n    about: {\n      learn_more: \"Mehr erfahren\",\n      main_title: \"Wenn du das Programmieren erlernen willst, musst du (viel) Code schreiben.\",\n      main_description: \"Bei CodeCombat ist es unser Job, dass du das mit einem Lächeln im Gesicht tust.\",\n      mission_link: \"Mission\",\n      team_link: \"Team\",\n      story_link: \"Geschichte\",\n      press_link: \"Presse\",\n      mission_title: \"Unsere Mission: Programmieren jedem Schüler auf der Erde zugänglich zu machen.\",\n      mission_description_1: \"<strong>Programmieren ist Magie</strong>. Es ist die Fähigkeit Dinge aus purer Vorstellungskraft zu erschaffen. Wir haben CodeCombat gegründet, um Lernenden dieses Gefühl zu geben während sie <strong>getippten Code</strong> benutzen.\",\n      mission_description_2: \"Wie sich herausstellt, können sie dadurch auch schneller lernen. Sehr viel schneller - wie eine Unterhaltung und nicht wie das Lesen einer Anleitung. Wir wollen diese Unterhaltung in jede Schule zu <strong>jedem Schüler</strong> bringen, weil jeder die Magie des Programmierens erlernen können sollte.\",\n      team_title: \"Triff das CodeCombat Team\",\n      team_values: \"Wir legen Wert auf einen offenen und respektvollen Dialog, wo die besten Ideen gewinnen. Unsere Entscheidungen basieren auf Benutzerforschung und unser Fortschritt richtet sich danach ihnen handfeste Resultate zu liefern. Jeder packt mit an von unserem Geschäftsführer bis hin zu unseren  Github-Unterstützern, weil wir Wert auf Zuwachs und Lernen in unserem Team legen.\",\n      nick_title: \"Mitbegründer, Geschäftsführer\",\n      matt_title: \"Mitbegründer, Technischer Leiter\",\n      cat_title: \"Game Designerin\",\n      scott_title: \"Mitbegründer, Software Ingeneur\",\n      maka_title: \"Kundenabteilung\",\n      robin_title: \"Produktmanager\",\n      nolan_title: \"Territorialmanager\",\n      david_title: \"Leitung Marketing\",\n      titles_csm: \"Kundenerfolgsmanager\",\n      titles_territory_manager: \"Territorialmanager\",\n      bryukh_title: \"Game Designer\",\n      retrostyle_title: \"Illustration\",\n      retrostyle_blurb: \"RetroStyle Games\",\n      bryukh_blurb: \"Rätselkonstruktör\",\n      community_title: \"...und unsere Open-Source Community\",\n      community_subtitle: \"Mehr als 500 Unterstützer haben mitgeholfen, CodeCombat zu erstellen, und es werden jede Woche mehr!\",\n      community_description_3: \"CodeCombat ist ein\",\n      community_description_link_2: \"Gemeinschaftsprojekt\",\n      community_description_1: \"mit hunderten von Spielern, die freiwillig Level erstellen, neue Features zum Quellcode beitragen, Bugs beheben, testen und sogar das Spiel in bisher mehr als 50 Sprachen übersetzen. Angestellte, Unterstützer und die Seite profitieren vom Teilen von Ideen und von den gemeinsamen Anstrengungen, so wie die Open-Source-Community im Allgemeinen. Die Seite basiert auf mehreren Open Source Projekten und wir sind Open-Source um der Community etwas zurückzugeben und neugierigen Spielern ein bereits bekanntes Projekt zum entdecken und experimentieren verfügbar zu machen. Jeder kann der CodeCombat-Community beitreten! Schau auf unserer\",\n      community_description_link: \" Mitwirken Seite\",\n      community_description_2: \"für weitere Informationen vorbei.\",\n      number_contributors: \"Mehr als 450 Unterstützer haben ihre Zeit und Hilfe für dieses Projekt zur Verfügung gestellt.\",\n      story_title: \"Unsere bisherige Geschichte\",\n      story_subtitle: \"Seit 2013 ist CodeCombat aus einigen Skizzen zu einem lebenden, florierenden Spiel gewachsen.\",\n      story_statistic_1a: \"Mehr als 5,000,000\",\n      story_statistic_1b: \"Spieler\",\n      story_statistic_1c: \"haben ihre Programmierreise durch CodeCombat begonnen.\",\n      story_statistic_2a: \"Wir wurden in über 50 Sprachen übersetzt — unsere Spieler kommen aus mehr als\",\n      story_statistic_2b: \"200 Staaten\",\n      story_statistic_3a: \"Zusammen haben sie mehr als\",\n      story_statistic_3b: \"1 Milliarde Zeilen Code geschrieben,\",\n      story_statistic_3c: \"in verschiedensten Programmiersprachen\",\n      story_long_way_1: \"Obwohl wir einen langen Weg gegangen sind...\",\n      story_sketch_caption: \"Nick's allererste Skizze zeigt ein Programmierspiel in Aktion.\",\n      story_long_way_2: \"haben wir noch viel zu tun bevor unser Auftrag abgeschlossen ist, also...\",\n      jobs_title: \"Komm arbeite mit uns und hilf mit CodeCombat Geschichte zu schreiben!\",\n      jobs_subtitle: \"Nichts gutes gefunden aber du bist trotzdem interessiert mit uns zu arbeiten? Schau dir unseren \\\"Kreiere deinen Eigenen\\\" Eintrag an.\",\n      jobs_benefits: \"Angestellten Vorteile\",\n      jobs_benefit_4: \"Unbegrenzter Urlaub\",\n      jobs_benefit_5: \"Professionelle Entwicklung und fortlaufende Unterstützung für Bildungsmöglichkeiten, kostenlose Bücher und Spiele!\",\n      jobs_benefit_6: \"Kranken- (Gold), Zahn-, Augenversicherung, Commuter-Versicherung\",\n      jobs_benefit_7: \"Sitz-Stehtische für alle\",\n      jobs_benefit_9: \"10 Jahre Options-Ausübungsfenster\",\n      jobs_benefit_10: \"Mutterschaftsurlaub: 10 Wochen bezahlt, die nächsten 6 bei 55% des Gehalts\",\n      jobs_benefit_11: \"Vaterschaftsurlaub: 10 Wochen bezahlt\",\n      jobs_custom_title: \"Kreiere deinen Eigenen\",\n      jobs_custom_description: \"Du bist fasziniert von CodeCombat aber siehst keinen Job aufgeführt, der zu deinen Qualifikationen passt? Schreib uns und überzeuge uns wie du denkst, wie du in unserem Team mitwirken kannst. Wir freuen uns von dir zu hören!\",\n      jobs_custom_contact_1: \"Sende uns eine Nachricht in der du \",\n      jobs_custom_contact_2: \"dich vorstellst und wir sehen uns vielleicht in naher Zukunft!\",\n      contact_title: \"Presse & Kontakt\",\n      contact_subtitle: \"Brauchst du weitere Informationen? Melde dich bei uns unter\",\n      screenshots_title: \"Game Screenshots\",\n      screenshots_hint: \"(Klicken um in Vollbild zu betrachten)\",\n      downloads_title: \"Downloade Vorzüge & Informationen\",\n      about_codecombat: \"Über CodeCombat\",\n      logo: \"Logo\",\n      screenshots: \"Screenshots\",\n      character_art: \"Character Art\",\n      download_all: \"Downloade Alles\",\n      previous: \"Vorheriges\",\n      location_title: \"Wir haben unseren Sitz in Downtown SanFrancisco:\"\n    },\n    teachers: {\n      licenses_needed: \"Lizenzen benötigt\"\n    },\n    special_offer: {\n      special_offer: \"Spezialangebot\",\n      project_based_title: \"Projektbasierte Kurse\",\n      project_based_description: \"Web- und Spiele-Entwicklungskurse umfassen Abschlussprojekte, die man teilen kann.\",\n      great_for_clubs_title: \"Ideal für AGs und Wahlfächer\",\n      great_for_clubs_description: \"Lehrer können bis zu __maxQuantityStarterLicenses__ Starterlizenzen pro Jahr erwerben.\",\n      low_price_title: \"Nur __starterLicensePrice__ pro Schüler\",\n      low_price_description: \"Starterlizenzen sind __starterLicenseLengthMonths__ Monate ab Kauf aktiv.\",\n      three_great_courses: \"Die Starter-Lizenz enthält drei tolle Kurse:\",\n      license_limit_description: \"Lehrer können bis zu __maxQuantityStarterLicenses__ Starter-Lizenzen erwerben. Du hast bereits __quantityAlreadyPurchased__ gekauft. Wenn du mehr benötigst, kontaktiere __supportEmail__. Starter-Lizenzen sind __starterLicenseLengthMonths__ Monate lang gültig.\",\n      student_starter_license: \"Schüler-Starterlizenz\",\n      purchase_starter_licenses: \"Starterlizenzen kaufen\",\n      purchase_starter_licenses_to_grant: \"Kaufen Sie Starterlizenzen, um Zugriff auf die __starterLicenseCourseList__ zu erhalten.\",\n      starter_licenses_can_be_used: \"Mit Starterlizenzen können direkt nach dem Kauf zusätzliche Kurse zugewiesen werden.\",\n      pay_now: \"Jetzt bezahlen\",\n      we_accept_all_major_credit_cards: \"Wir akzeptieren alle gängigen Kreditkarten.\",\n      cs2_description: \"baut auf die Grundlage von „Einführung in die Informatik“ auf, und beschäftigt sich mit If-Statements, Funktionen, Events und mehr.\",\n      wd1_description: \"stellt die Grundlagen von HTML und CSS vor und vermittelt den Schülern Fähigkeiten zum Erstellen ihrer ersten Website.\",\n      gd1_description: \"benutzt Syntax, mit der die Schüler bereits vertraut sind, um ihnen zu zeigen, wie sie ihre eigenen, spielbaren Levels bauen und teilen können.\",\n      see_an_example_project: \"siehe Beispielprojekt\",\n      get_started_today: \"Fang noch heute an!\",\n      want_all_the_courses: \"Willst du alle Kurse? Fordere Informationen zu unseren Volllizenzen an.\",\n      compare_license_types: \"Lizenztypen vergleichen:\",\n      cs: \"Informatik\",\n      wd: \"Web-Entwicklung\",\n      wd1: \"Web-Entwicklung 1\",\n      gd: \"Spiele-Entwicklung\",\n      gd1: \"Spiele-Entwicklung 1\",\n      maximum_students: \"Maximale Schüleranzahl\",\n      unlimited: \"Unbegrenzt\",\n      priority_support: \"Bevorzugter Support\",\n      yes: \"Ja\",\n      price_per_student: \"__price__ pro Schüler\",\n      pricing: \"Preise\",\n      free: \"Kostenlos\",\n      purchase: \"Kauf\",\n      courses_prefix: \"Kurse\",\n      courses_suffix: \"\",\n      course_prefix: \"Kurs\",\n      course_suffix: \"\"\n    },\n    teachers_quote: {\n      subtitle: \"Holen Sie sich CodeCombat in ihren Klassenraum, Club, ihre Schule oder Ortsteil!\",\n      email_exists: \"Benutzer mit dieser E-Mail existiert bereits.\",\n      phone_number: \"Telefonnummer\",\n      phone_number_help: \"Wo können wir Sie wochentags erreichen?\",\n      primary_role_label: \"Deine Position\",\n      role_default: \"Rolle auswählen\",\n      primary_role_default: \"Position auswählen\",\n      purchaser_role_default: \"Käuferrolle auswählen\",\n      tech_coordinator: \"EDV- / Technikplanung\",\n      advisor: \"Stundenplanplanung / Tutor\",\n      principal: \"Direktor\",\n      superintendent: \"Schulträger\",\n      parent: \"Elternteil\",\n      purchaser_role_label: \"Rolle im Beschaffungsprozess\",\n      influence_advocate: \"beeinflussen/befürworten\",\n      evaluate_recommend: \"bewerten/empfehlen\",\n      approve_funds: \"Mittelfreigabe\",\n      no_purchaser_role: \"Keine Rolle bei Kaufentscheidungen\",\n      district_label: \"Bezirk\",\n      district_name: \"Schulträger\",\n      district_na: \"Falls nicht zutreffend, gib N/A ein\",\n      organization_label: \"Schule\",\n      school_name: \"Schulname\",\n      city: \"Ort\",\n      state: \"Bundesland\",\n      country: \"Land\",\n      num_students_help: \"Wieviele Schüler sollen bei CodeCombat eingeschrieben werden?\",\n      num_students_default: \"Umfang auswählen\",\n      education_level_label: \"Bildungsniveau der Schüler\",\n      education_level_help: \"Bitte alle zutreffenden auswählen.\",\n      elementary_school: \"Primarstufe / Grundschule\",\n      high_school: \"Sekundarstufe II\",\n      please_explain: \"(bitte erläutern)\",\n      middle_school: \"Sekundarstufe I\",\n      college_plus: \"Hochschule oder vergleichbar\",\n      referrer: \"Wie hast du von uns erfahren?\",\n      referrer_help: \"Zum Beispiel: von einem anderen Lehrer, auf einer Konferenz, von deinen Schülern, Code.org, etc.\",\n      referrer_default: \"Wähle einen aus\",\n      referrer_teacher: \"Ein Lehrer\",\n      referrer_admin: \"Ein Administrator\",\n      referrer_student: \"Ein Schüler\",\n      referrer_pd: \"Professionelle Trainings/Workshops\",\n      referrer_web: \"Google\",\n      referrer_other: \"Andere\",\n      anything_else: \"Weitere Dinge die wir wissen sollten?\",\n      thanks_header: \"Anforderung erhalten!\",\n      thanks_sub_header: \"Vielen Dank für dein Interesse an CodeCombat für deine Schule.\",\n      thanks_p: \"Wir melden uns bald. Fragen? Schreibe uns eine E-Mail:\",\n      back_to_classes: \"Zurück zu den Klassen\",\n      finish_signup: \"Schließe die Einrichtung deines Lehrerkontos ab:\",\n      finish_signup_p: \"Erstelle ein Konto, um eine Klasse einzurichten, deine Schüler hinzuzufügen und ihre Fortschritte zu verfolgen.\",\n      signup_with: \"Anmelden mit:\",\n      connect_with: \"Verbinden mit:\",\n      conversion_warning: \"WARNUNG: Dein aktuelles Konto ist ein <em>Schülerkonto</em>. Sobald du dieses Formular abschickst, wird dein Konto zu einem Lehrerkonto geändert.\",\n      learn_more_modal: \"Mit einem Lehrerkonto in CodeCombat kann man die Fortschritte der Schüler beobachten, Lizenzen zuweisen und Klassen verwalten. Lehrerkonten können kein Teil einer Klasse sein – wenn du derzeit mit diesem Konto in einer Klasse bist, kannst du darauf nicht mehr zugreifen, wenn du es in ein Lehrerkonto umwandelst.\",\n      create_account: \"Lehrerkonto erstellen\",\n      create_account_subtitle: \"Erhalte Zugriff auf Lehrerwerkzeuge zu, die man im CodeCombat-Klassenzimmer benutzen kann.  <strong>Richte eine Klasse ein</strong>, füge deine Schüler hinzu <strong>und verfolge ihren Fortschritt</strong>!\",\n      convert_account_title: \"In Lehrerkonto umwandeln\",\n      not: \"Nicht\"\n    },\n    versions: {\n      save_version_title: \"Neue Version speichern\",\n      new_major_version: \"Neue Hauptversion\",\n      submitting_patch: \"Übermittele Patch...\",\n      cla_prefix: \"Damit Änderungen gespeichert werden können, musst du unsere Lizenzbedingungen (\",\n      cla_url: \"CLA\",\n      cla_suffix: \") akzeptieren.\",\n      cla_agree: \"Ich stimme zu\",\n      owner_approve: \"Ein Eigentümer muss deine Änderungen genehmigen, bevor sie sichtbar werden.\"\n    },\n    contact: {\n      contact_us: \"Kontaktiere CodeCombat\",\n      welcome: \"Schön von dir zu hören! Benutze dieses Formular um uns eine E-Mail zu schicken.\",\n      forum_prefix: \"Für alle öffentlichen Themen, benutze stattdessen \",\n      forum_page: \"unser Forum\",\n      forum_suffix: \".\",\n      faq_prefix: \"Es gibt auch ein\",\n      faq: \"FAQ\",\n      subscribe_prefix: \"Wenn du Hilfe brauchst ein Level zu lösen, bitte\",\n      subscribe: \"kaufe ein CodeCombat Abonnement\",\n      subscribe_suffix: \"und wir werden dir gerne bei deinem Code helfen.\",\n      subscriber_support: \"Da du ein CodeCombat Abonnent bist, bekommt deine E-Mail Priorität.\",\n      screenshot_included: \"Bildschirmfoto hinzugefügt.\",\n      where_reply: \"Wohin sollen wir antworten?\",\n      send: \"Sende Feedback\"\n    },\n    account_settings: {\n      title: \"Accounteinstellungen\",\n      not_logged_in: \"Logge dich ein oder lege einen Account an, um deine Einstellungen ändern zu können.\",\n      me_tab: \"Ich\",\n      picture_tab: \"Bild\",\n      delete_account_tab: \"Account löschen\",\n      wrong_email: \"Die E-Mail-Adresse ist falsch\",\n      wrong_password: \"Das Passwort ist falsch\",\n      delete_this_account: \"Den Account unwiderruflich löschen!\",\n      reset_progress_tab: \"Spielfortschritt zurücksetzen\",\n      reset_your_progress: \"Gesamten Fortschritt zurücksetzen und Spiel von vorn beginnen\",\n      god_mode: \"Gottmodus\",\n      emails_tab: \"E-Mails\",\n      admin: \"Admin\",\n      manage_subscription: \"Klicke hier um dein Abo zu verwalten.\",\n      new_password: \"Neues Passwort\",\n      new_password_verify: \"Passwort verifizieren\",\n      type_in_email: \"E-Mail oder Benutzername eingeben um das Löschen des Accounts zu bestätigen\",\n      type_in_email_progress: \"Gib zum Bestätigen deine E-Mail ein.\",\n      type_in_password: \"Gib dein Passwort ebenfalls ein.\",\n      email_subscriptions: \"E-Mail Abonnements\",\n      email_subscriptions_none: \"Keine E-Mail Abonnements.\",\n      email_announcements: \"Ankündigungen\",\n      email_announcements_description: \"Erhalte regelmäßig Ankündigungen zu deinem Account.\",\n      email_notifications: \"Benachrichtigungen\",\n      email_notifications_summary: \"Steuerung für personalisierte, automatische E-Mail-Benachrichtigungen im Zusammenhang mit deiner CodeCombat Aktivität.\",\n      email_any_notes: \"Jegliche Benachrichtigungen\",\n      email_any_notes_description: \"Deaktivieren, um alle aktiven Benachrichtigungen zu stoppen.\",\n      email_news: \"News\",\n      email_recruit_notes: \"Job-Angebote\",\n      email_recruit_notes_description: \"Wenn du besonders gut spielst, werden wir dich evtl. kontaktieren um dir einen (besseren) Job zu suchen.\",\n      contributor_emails: \"Unterstützer E-Mail\",\n      contribute_prefix: \"Wir suchen nach Leuten, die mitmachen! Schau dir die\",\n      contribute_page: \"Unterstützer Seite\",\n      contribute_suffix: \" an um mehr zu erfahren.\",\n      email_toggle: \"Alles wählen\",\n      error_saving: \"Fehler beim Speichern\",\n      saved: \"Änderungen gespeichert\",\n      password_mismatch: \"Passwörter stimmen nicht überein.\",\n      password_repeat: \"Bitte wiederhole dein Passwort.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Tastaturkürzel\",\n      space: \"Leertaste\",\n      enter: \"Eingabetaste\",\n      press_enter: \"Drück die Eingabetaste\",\n      escape: \"Escape\",\n      shift: \"Umschalttaste\",\n      run_code: \"Starte aktuellen Code.\",\n      run_real_time: \"Führe in Echtzeit aus.\",\n      continue_script: \"Setze nach aktuellem Skript fort.\",\n      skip_scripts: \"Überspringe alle überspringbaren Skripte.\",\n      toggle_playback: \"Umschalten Play/Pause.\",\n      scrub_playback: \"Scrubbe vor und zurück durch die Zeit.\",\n      single_scrub_playback: \"Scrubbe ein Frame vor und zurück durch die Zeit.\",\n      scrub_execution: \"Scrubbe durch die aktuelle Zauberspruch-Ausführung.\",\n      toggle_debug: \"Debug-Anzeige an/aus.\",\n      toggle_grid: \"Grid-Overlay an/aus.\",\n      toggle_pathfinding: \"Wegfindungs-Overlay an/aus.\",\n      beautify: \"Verschönere deinen Code durch die Standardisierung der Formatierung.\",\n      maximize_editor: \"Maximiere/Minimiere Code Editor.\"\n    },\n    community: {\n      main_title: \"CodeCombat Community\",\n      introduction: \"Schaue dir unten die Möglichkeiten wie du mitwirken kannst an und entscheide, was dir am meisten Spaß macht. Wir freuen uns auf die Zusammenarbeit mit dir!\",\n      level_editor_prefix: \"Benutze den CodeCombat\",\n      level_editor_suffix: \"um Level zu erstellen oder zu bearbeiten. Benutzer haben bereits Level für ihre Klassen, Freunde, Hackathons, Schüler und Geschwister erstellt. Wenn das Neuerstellen eines Levels abschreckend wirkt, dann kannst du erst mal ein bestehendes kopieren!\",\n      thang_editor_prefix: \"Wir nennen Einheiten innerhalb des Spiels 'Thangs'. Benutze den\",\n      thang_editor_suffix: \"um den CodeCombat Grafikquelltext zu ändern. Erlaube Einheiten Geschosse zu werfen, ändere die Richtung einer Animation, ändere die Trefferpunkte einer Einheit, oder lade deine eigenen Vektorsprite hoch.\",\n      article_editor_prefix: \"Hast du einen Fehler in unseren Dokus gefunden? Willst du Anleitungen für deine Kreationen erstellen? Schau dir den\",\n      article_editor_suffix: \"und hilf CodeCombat Spielern, das meiste aus ihrer Spielzeit herauszuholen.\",\n      find_us: \"Finde uns auf diesen Seiten\",\n      social_github: \"Schau dir all unseren Code auf GitHub an\",\n      social_blog: \"Lese den CodeCombat Blog auf Sett\",\n      social_discource: \"Schließe dich den Diskussionen in unserem Discourse Forum an\",\n      social_facebook: \"Like CodeCombat auf Facebook\",\n      social_twitter: \"Folge CodeCombat auf Twitter\",\n      social_gplus: \"Schließe dich CodeCombat bei Google+ an\",\n      social_slack: \"Im öffentlichen Slack-Channel von CodeCombat kannst du mit uns chatten\",\n      contribute_to_the_project: \"Trage zu diesem Projekt bei\"\n    },\n    clans: {\n      clan: \"Clan\",\n      clans: \"Clans\",\n      new_name: \"Neuer Clanname\",\n      new_description: \"Neue Clanbeschreibung\",\n      make_private: \"Mach deinen Clan privat\",\n      subs_only: \"Nur für Abonnenten\",\n      create_clan: \"Erstelle einen neuen Clan\",\n      private_preview: \"Vorschau\",\n      private_clans: \"Private Clans\",\n      public_clans: \"Öffentliche Clans\",\n      my_clans: \"Meine Clans\",\n      clan_name: \"Clanname\",\n      name: \"Name\",\n      chieftain: \"Häuptling\",\n      edit_clan_name: \"Clannamen bearbeiten\",\n      edit_clan_description: \"Clanbeschreibung bearbeiten\",\n      edit_name: \"Namen bearbeiten\",\n      edit_description: \"Beschreibung bearbeiten\",\n      \"private\": \"(privat)\",\n      summary: \"Zusammenfassung\",\n      average_level: \"Leveldurchschnitt\",\n      average_achievements: \"Errungenschaftsdurchschnitt\",\n      delete_clan: \"Clan löschen\",\n      leave_clan: \"Clan verlassen\",\n      join_clan: \"Clan beitreten\",\n      invite_1: \"Einladen:\",\n      invite_2: \"*Lade Spieler zu diesem Clan ein, indem du ihnen diesen Links sendest.\",\n      members: \"Mitglieder\",\n      progress: \"Fortschritt\",\n      not_started_1: \"nicht gestartet\",\n      started_1: \"gestartet\",\n      complete_1: \"abgeschlossen\",\n      exp_levels: \"Level erweitern\",\n      rem_hero: \"Held entfernen\",\n      status: \"Status\",\n      complete_2: \"Abgeschlossen\",\n      started_2: \"Gestartet\",\n      not_started_2: \"Nicht gestartet\",\n      view_solution: \"Klicke um die Lösung zu sehen.\",\n      view_attempt: \"Klicke um den Versuch zu sehen.\",\n      latest_achievement: \"Letzte Errungenschaft\",\n      playtime: \"Spielzeit\",\n      last_played: \"Zuletzt gespielt\",\n      leagues_explanation: \"Spiele in einer Liga gegen andere Clanmitglieder in diesen Multiplayer-Arena-Instanzen.\",\n      track_concepts1: \"Verfolge Konzepte\",\n      track_concepts2a: \"die von jedem Schüler erlernt wurden\",\n      track_concepts2b: \"die von jedem Mitglied erlernt wurden\",\n      track_concepts3a: \"Verfolge Level, die von jedem Schüler abgeschlossen wurden\",\n      track_concepts3b: \"Verfolge Level, die von jedem Mitglied abgeschlossen wurden\",\n      track_concepts4a: \"Sieh deine Schüler\",\n      track_concepts4b: \"Sieh deine Mitglieder\",\n      track_concepts5: \"Lösungen\",\n      track_concepts6a: \"Sortiere deine Schüler nach Name oder Fortschritt\",\n      track_concepts6b: \"Sortiere deine Mitglieder nach Name oder Fortschritt\",\n      track_concepts7: \"Benötigt eine Einladung\",\n      track_concepts8: \"beitreten\",\n      private_require_sub: \"Private Clans benötigen ein Abonnement zum Erstellen oder Beitreten.\"\n    },\n    courses: {\n      create_new_class: \"Erstellen Sie eine neue Klasse\",\n      solutions_require_licenses: \"Level Lösungen sind für Lehrkräfte verfügbar, die eine Lizenz haben.\",\n      unnamed_class: \"Unbenannte Klasse\",\n      edit_settings1: \"Klasseneinstellungen bearbeiten\",\n      add_students: \"Schüler hinzufügen\",\n      stats: \"Statistiken\",\n      student_email_invite_blurb: \"Ihre Schüler können auch den Klassencode nutzen <strong>__classCode__</strong> um einen Schüler-Account zu erstellen, keine E-Mail-Adresse erforderlich.\",\n      total_students: \"Anzahl Schüler:\",\n      average_time: \"Durchschnittliche Levelspielzeit:\",\n      total_time: \"Gesamte Spielzeit:\",\n      average_levels: \"Durchschnittlich abgeschlossene Level:\",\n      total_levels: \"Anzahl abgeschlossener Level:\",\n      students: \"Schüler\",\n      concepts: \"Konzepten\",\n      play_time: \"Spielzeit:\",\n      completed: \"Abgeschlossen:\",\n      enter_emails: \"E-Mail-Adressen durch Komma oder Zeilenumbruch trennen\",\n      send_invites: \"Schüler einladen\",\n      number_programming_students: \"Anzahl der Schüler\",\n      number_total_students: \"Gesamtzahl der Schüler in Schule/Bezirk\",\n      enroll: \"Einschreiben\",\n      enroll_paid: \"Schreiben Sie Schüler in Bezahlkurse ein\",\n      get_enrollments: \"Mehr Einschreibungen erhalten\",\n      change_language: \"Kurssprache wechseln\",\n      keep_using: \"Beibehalten\",\n      switch_to: \"Wechseln zu\",\n      greetings: \"Grüße!\",\n      back_classrooms: \"Zurück zu meinem Klassenraum\",\n      back_classroom: \"Zurück zum Klassenraum\",\n      back_courses: \"Zurück zu meinen Kursen\",\n      edit_details: \"Klassendetails bearbeiten\",\n      purchase_enrollments: \"Kaufe Schüler-Lizenzen\",\n      remove_student: \"Schüler entfernen\",\n      assign: \"Zuordnen\",\n      to_assign: \"um bezahlte Kurse zuzuordnen.\",\n      student: \"Schüler\",\n      teacher: \"Lehrer\",\n      arena: \"Arena\",\n      available_levels: \"Verfügbare Level\",\n      started: \"angefangen\",\n      complete: \"abgeschlossen\",\n      practice: \"Übung\",\n      required: \"benötigt\",\n      welcome_to_courses: \"Abenteurer, willkomen zu den Kursen!\",\n      ready_to_play: \"Bereit zum Spielen?\",\n      start_new_game: \"Starten Sie ein neues Spiel\",\n      play_now_learn_header: \"Jetzt spielen um folgendes zu lernen\",\n      play_now_learn_1: \"grundlegende Syntax um deinen Character zu kontrollieren\",\n      play_now_learn_2: \"while-Schleifen um nervtötende Rätsel zu lösen\",\n      play_now_learn_3: \"Strings & Variablen um Aktionen anzupassen\",\n      play_now_learn_4: \"Wie man einen Oger besiegt (wichtige Lebensfähigkeit!)\",\n      welcome_to_page: \"Mein Schüler-Dashboard\",\n      my_classes: \"Meine Klassen\",\n      class_added: \"Klasse erfolgreich hinzugefügt!\",\n      view_project_gallery: \"Projekte der Klassenkameraden ansehen\",\n      join_class: \"Einer Klasse beitreten\",\n      join_class_2: \"In Klasse einschreiben\",\n      ask_teacher_for_code: \"Frag deine Lehrkraft ob ihr einen CodeCombat Klassencode habt! Gib ihn hier ein:\",\n      enter_c_code: \"<Klassencode hier eingeben>\",\n      join: \"Beitreten\",\n      joining: \"Der Klasse beitreten\",\n      course_complete: \"Kurs Abgeschlossen\",\n      play_arena: \"Arena spielen\",\n      view_project: \"Projekt anzeigen\",\n      start: \"Start\",\n      last_level: \"Zuletzt gespieltes Level\",\n      not_you: \"Nicht du?\",\n      continue_playing: \"Weiterspielen\",\n      option1_header: \"Lade Schüler via E-Mail ein\",\n      remove_student1: \"Schüler entfernen\",\n      are_you_sure: \"Bist du sicher, dass du diesen Schüler von deiner Klasse entfernen möchtest?\",\n      remove_description1: \"Der Schüler wird den Zugang zu dem Klassenraum und zu den zugewiesenen Klassen verlieren. Der Spielfortschritt geht NICHT verloren, und der Schüler kann zu jeder Zeit wieder in die Klasse eingschrieben werden.\",\n      remove_description2: \"Die aktivierte und bezahlte Lizenz wird nicht zurückgenommen.\",\n      keep_student: \"Schüler behalten\",\n      removing_user: \"Benutzer entfernen\",\n      subtitle: \"Kursübersichten und Level anzeigen\",\n      changelog: \"Letzte Änderungen an Kurs-Leveln anzeigen.\",\n      select_language: \"Sprache auswählen\",\n      select_level: \"Level auswählen\",\n      play_level: \"Level spielen\",\n      concepts_covered: \"Abgedeckte Konzepte\",\n      view_guide_online: \"Levelübersichten und Lösungen\",\n      grants_lifetime_access: \"Ermöglicht Zugriff auf alle Kurse.\",\n      enrollment_credits_available: \"Verfügbare Lizenzen:\",\n      language_select: \"Sprache auswählen\",\n      language_cannot_change: \"Die Sprache kann nicht geändert werden sobald ein Schüler der Klasse beigetreten ist.\",\n      avg_student_exp_label: \"Durchschnittliche Programmiererfahrung der Schüler\",\n      avg_student_exp_desc: \"So hilfst du uns zu lernen, wie wir das Tempo unserer Kurse angemessen gestalten können.\",\n      avg_student_exp_select: \"Beste Option auswählen\",\n      avg_student_exp_none: \"Keine Erfahrung – wenig bis keine Erfahrung\",\n      avg_student_exp_beginner: \"Anfänger – ein wenig Erfahrung / blockbasierte Programmierung\",\n      avg_student_exp_intermediate: \"Fortgeschrittener – einige Erfahrungen mit geschriebenem Code\",\n      avg_student_exp_advanced: \"Experte – umfangreiche Erfahrungen mit geschriebenem Code\",\n      avg_student_exp_varied: \"Verschiedene Erfahrungsstufen\",\n      student_age_range_label: \"Altersgruppen der Schüler\",\n      student_age_range_younger: \"Unter 6 Jahren\",\n      student_age_range_older: \"Älter als 18 Jahre\",\n      student_age_range_to: \"bis\",\n      create_class: \"Klasse erstellen\",\n      class_name: \"Klassenname\",\n      teacher_account_restricted: \"Dein Konto ist ein Lehrerkonto und hat keinen Zugriff auf Schülerinhalte.\",\n      account_restricted: \"Ein Schülerkonto ist für den Zugriff auf diese Seite erforderlich.\",\n      update_account_login_title: \"Melde dich an, um dein Konto zu aktualisieren\",\n      update_account_title: \"Dein Konto erfordert Aufmerksamkeit!\",\n      update_account_blurb: \"Bevor du Zugriff auf deine Klassen hast, wähle bitte, wie du dieses Konto benutzen willst.\",\n      update_account_current_type: \"Aktueller Kontotyp:\",\n      update_account_account_email: \"Konto-E-Mail / Benutzername:\",\n      update_account_am_teacher: \"Ich bin ein Lehrer\",\n      update_account_keep_access: \"Zugriff auf von mir erstellte Klassen behalten\",\n      update_account_teachers_can: \"Lehrerkonten können:\",\n      update_account_teachers_can1: \"Klassen erstellen/verwalten/hinzufügen\",\n      update_account_teachers_can2: \"Schüler zu Kursen zuweisen/einschreiben\",\n      update_account_teachers_can3: \"Alle Kurs-Level zum Test freischalten\",\n      update_account_teachers_can4: \"Zugriff auf aktuelle Lehrerfunktionen erhalten, sobald wir sie veröffentlichen.\",\n      update_account_teachers_warning: \"Warnung: Du wirst aus allen Klassen, denen du zuvor beigetreten bist, entfernt, und du wirst nicht mehr als Schüler spielen können.\",\n      update_account_remain_teacher: \"Lehrer bleiben\",\n      update_account_update_teacher: \"In Lehrerkonto umwandeln\",\n      update_account_am_student: \"Ich bin Schüler\",\n      update_account_remove_access: \"Zugriff auf von mir erstellte Klassen entfernen\",\n      update_account_students_can: \"Schülerkonten können:\",\n      update_account_students_can1: \"Klassen beitreten\",\n      update_account_students_can2: \"Sich als Schüler durch Kurse spielen und seinen eigenen Fortschritt verfolgen\",\n      update_account_students_can3: \"Sich in Arenen mit Mitschülern messen\",\n      update_account_students_can4: \"Zugriff auf aktuelle Scülerfunktionen erhalten, sobald wir sie veröffentlichen.\",\n      update_account_students_warning: \"Warnung: Du wirst keine Möglichkeit mehr haben, zuvor von dir erstellte Klassen zu verwalten oder neue zu erstellen.\",\n      unsubscribe_warning: \"Warnung: Dein Monats-Abonnement wird beendet werden.\",\n      update_account_remain_student: \"Schüler bleiben\",\n      update_account_update_student: \"In Schülerkonto umwandeln\",\n      need_a_class_code: \"Du brauchst einen Klassencode für die Klasse, der du beitrittst:\",\n      update_account_not_sure: \"Nicht sicher, welchen du nehmen sollst? E-Mail\",\n      update_account_confirm_update_student: \"Bist du sicher, dass du dein Konto in das Schülererlebnis umwandeln willst?\",\n      update_account_confirm_update_student2: \"Du wirst keine Möglichkeit mehr haben, zuvor von dir erstellte Klassen zu verwalten oder neue zu erstellen. Deine zuvor erstellten Klassen werden von CodeCombat entfernt und können nicht wiederhergestellt werden.\",\n      instructor: \"Lehrer \",\n      youve_been_invited_1: \"Du wurdest eingeladen,  \",\n      youve_been_invited_2: \"beizutreten, wo du mit deinen Klassenkameraden \",\n      youve_been_invited_3: \" in CodeCombat lernen wirst.\",\n      by_joining_1: \"Indem du \",\n      by_joining_2: \"beitrittst, kannst du beim Zurücksetzen deines Passworts helfen, wenn du es vergisst oder löschst. Du kannst auch deine E-Mail-Adresse bestätigen, damit du das Passwort selbst zurücksetzen kannst!\",\n      sent_verification: \"Wir haben eine Bestätigungs-Mail geschickt an:\",\n      you_can_edit: \"Du kannst deine E-Mail-Adresse bearbeiten unter \",\n      account_settings: \"Kontoeinstellungen\",\n      select_your_hero: \"Wähle deinen Helden!\",\n      select_your_hero_description: \"Du kannst deinen Helden jederzeit wechseln, indem du auf deine Kurseseite gehst und auf \\\"Held wechseln\\\" klickst\",\n      select_this_hero: \"Wähle diesen Helden\",\n      current_hero: \"Aktueller Held:\",\n      current_hero_female: \"Aktuelle Heldin:\",\n      web_dev_language_transition: \"Alle Klassen für diesen Kurs programmieren in HTML / JavaScript.  Klassen, die Python verwendet haben, fangen mit gesonderten Einführungsleveln für JavaScript an, um den Übergang zu erleichtern.  Klassen, die bereits JavaScript verwenden, überspringen die Einführungslevel.\",\n      course_membership_required_to_play: \"Du musst einen Kurs belegen, um dieses Level zu spielen.\",\n      license_required_to_play: \"Bitte deinen Lehrer, dir eine Lizenz zuzuweisen, damit du weiter CodeCombat spielen kannst!\",\n      update_old_classroom: \"Neues Schuljahr, neue Levels!\",\n      challenge: \"Aufgabe:\",\n      keep_trying: \"Versuche es weiter\",\n      start_challenge: \"Aufgabe starten\",\n      locked: \"Gesperrt\",\n      concepts_used: \"Benutzte Konzepte:\"\n    },\n    project_gallery: {\n      no_projects_published: \"Sei der oder die erste, die in diesem Kurs ein Projekt veröffentlicht\",\n      view_project: \"Projekt ansehen\",\n      edit_project: \"Projekt bearbeiten\"\n    },\n    teacher: {\n      assigning_course: \"Kurs zuweisen\",\n      back_to_top: \"Zurück nach oben\",\n      click_student_code: \"Klicke auf das Level, das der Schüler begonnen oder fertiggestellt hat um den geschriebenen Code zu sehen.\",\n      code: \"__name__'s Code\",\n      complete_solution: \"Vollständige Lösung\",\n      course_not_started: \"Der Schüler hat den Kurs bisher nicht begonnen.\",\n      no_code_yet: \"Der Schüler hat noch keine Code für dieses Level geschrieben.\",\n      open_ended_level: \"Unvollendetes Level\",\n      partial_solution: \"Teilweise gelöst\",\n      removing_course: \"Kurs wieder entfernen\",\n      course_solution: \"Kurslösung\",\n      level_overview_solutions: \"Level-Übersicht und Lösungen\",\n      no_student_assigned: \"Diesem Kurs wurden keine Schüler zugewiesen.\",\n      paren_new: \"(neu)\",\n      student_code: \"__name__'s Schülercode\",\n      teacher_dashboard: \"Lehrer-Dashboard\",\n      my_classes: \"Meine Klassen\",\n      courses: \"Kurs-Handbücher\",\n      enrollments: \"Schülerlizenzen\",\n      resources: \"Ressourcen\",\n      help: \"Hilfe\",\n      language: \"Sprache\",\n      edit_class_settings: \"Klasseneinstellungen bearbeiten\",\n      access_restricted: \"Konto-Update erforderlich\",\n      teacher_account_required: \"Ein Lehrerkonto wird benötigt, um auf diese Inhalte zuzugreifen.\",\n      create_teacher_account: \"Lehrerkonto erstellen\",\n      what_is_a_teacher_account: \"Was ist ein Lehrerkonto?\",\n      teacher_account_explanation: \"Ein CodeCombat-Lehrerkonto ermöglicht es dir, Klassenzimmer einzurichten, Schüler zu beobachten, während sie sich durch die Kurse arbeiten, Lizenzen zu verwalten und auf Hilfsressourcen für deinen Curriculumsaufbau zuzugreifen.\",\n      current_classes: \"Aktuelle Klassen\",\n      archived_classes: \"Archivierte Klassen\",\n      archived_classes_blurb: \"Klassen können zur späteren Referenz archiviert werden. Dearchiviere eine Klasse, um sie wieder in der Liste aktueller Klassen anzuzeigen.\",\n      view_class: \"Klasse anzeigen\",\n      archive_class: \"Klasse archivieren\",\n      unarchive_class: \"Klasse dearchivieren\",\n      unarchive_this_class: \"Diese Klasse dearchivieren\",\n      no_students_yet: \"Diese Klasse hat noch keine Schüler.\",\n      no_students_yet_view_class: \"Klasse anzeigen, um Schüler hinzuzufügen.\",\n      try_refreshing: \"(Eventuell musst du diese Seite aktualisieren)\",\n      create_new_class: \"Neue Klasse erstellen\",\n      class_overview: \"Klassenübersicht\",\n      avg_playtime: \"Durchschnittliche Level-Spielzeit\",\n      total_playtime: \"Gesamte Spielzeit\",\n      avg_completed: \"Durchschnitt abgeschlossener Level\",\n      total_completed: \"Summe abgeschlossener Level\",\n      created: \"Erstellt\",\n      concepts_covered: \"Konzepte abgedeckt\",\n      earliest_incomplete: \"Frühestes unabgeschlossenes Level\",\n      latest_complete: \"Letztes abgeschlossenes Level\",\n      enroll_student: \"Schüler einschreiben\",\n      apply_license: \"Lizenz anwenden\",\n      revoke_license: \"Lizenz entziehen\",\n      revoke_licenses: \"Entziehe alle Lizenzen\",\n      course_progress: \"Kursfortschritt\",\n      not_applicable: \"n. v.\",\n      edit: \"bearbeiten\",\n      edit_2: \"Bearbeiten\",\n      remove: \"eintfernen\",\n      latest_completed: \"Zuletzt abgeschlossen:\",\n      sort_by: \"Sortieren nach\",\n      progress: \"Fortschritt\",\n      concepts_used: \"Kenzepte benutzt durch Schüler:\",\n      concept_checked: \"Konzept überprüft:\",\n      completed: \"Abgeschlossen\",\n      practice: \"Übung\",\n      started: \"Gestartet\",\n      no_progress: \"Kein Fortschritt\",\n      not_required: \"Nicht erforderlich\",\n      view_student_code: \"Klicken um den Schülercode anzuzeigen\",\n      select_course: \"Anzuzeigenden Kurs auswählen\",\n      progress_color_key: \"Farbschlüssel des Fortschritts:\",\n      level_in_progress: \"Level im Gange\",\n      level_not_started: \"Level nicht gestartet\",\n      project_or_arena: \"Projekt oder Arena\",\n      students_not_assigned: \"Studenten, die nicht zu {{courseName}} zugewiesen wurden\",\n      course_overview: \"Kursübersicht\",\n      copy_class_code: \"Klassencode kopieren\",\n      class_code_blurb: \"Schüler können mit diesem Klassencode deiner Klasse beitreten. Mit dem Klassencode ist beim Erstellen des Schülerkontos keine E-Mail erforderlich.\",\n      copy_class_url: \"Klassen-URL kopieren\",\n      class_join_url_blurb: \"Du kannst auch diese eindeutige Klassen-URL auf eine öffentliche Seite posten.\",\n      add_students_manually: \"Schüler per E-Mail einladen\",\n      bulk_assign: \"Mehrere zuordnen\",\n      assigned_msg_1: \"{{numberAssigned}} Schüler wurden {{courseName}} zugeordnet.\",\n      assigned_msg_2: \"{{numberEnrolled}} Lizenzen wurden angewendet.\",\n      assigned_msg_3: \"Nun stehen dir noch {{remainingSpots}} Lizenzen zur Verfügung.\",\n      assign_course: \"Kurs zuweisen\",\n      removed_course_msg: \"{{numberRemoved}} Schüler wurden von {{courseName}} entfernt.\",\n      remove_course: \"Kurs entfernen\",\n      not_assigned_modal_title: \"Kurse wurden nicht zugewiesen\",\n      not_assigned_modal_starter_body_1: \"Dieser Kurs erfordert eine Anfängerlizenz. Du hast nicht genug Starterlizenzen zur Verfügung, um diesen Kurs allen __selected__ Schülern zuzuweisen.\",\n      not_assigned_modal_starter_body_2: \"Kaufe Starterlizenzen, um vollständigen Zugriff auf diesen Kurs zu erhalten.\",\n      not_assigned_modal_full_body_1: \"Dieser Kurs erfordert eine Volllizenz. Du hast nicht genug Volllizenzen zur Verfügung, um diesen Kurs allen __selected__ Schülern zuzuweisen.\",\n      not_assigned_modal_full_body_2: \"Du hast nur __numFullLicensesAvailable__ Volllizenzen zur Verfügung (__numStudentsWithoutFullLicenses__ Schüler haben derzeit keine aktive Volllizenz).\",\n      not_assigned_modal_full_body_3: \"Bitte wähle weniger Schüler aus, oder kontaktiere __supportEmail__ für Unterstützung.\",\n      assigned: \"Zugewiesen\",\n      enroll_selected_students: \"Ausgewählte Schüler einschreiben\",\n      no_students_selected: \"Es wurden keine Schüler ausgewählt.\",\n      show_students_from: \"Schüler anzeigen aus\",\n      apply_licenses_to_the_following_students: \"Wende Lizenzen für die folgenden Schüler an\",\n      students_have_licenses: \"Auf die folgenden Schüler wurden bereits Lizenzen angewandt:\",\n      all_students: \"Alle Schüler\",\n      apply_licenses: \"Lizenzen anwenden\",\n      not_enough_enrollments: \"Nicht genug Lizenzen verfügbar.\",\n      enrollments_blurb: \"Schüler müssen eine Lizenz haben, um nach dem ersten Kurs auf Inhalte zuzugriefen.\",\n      how_to_apply_licenses: \"Wie man Lizenzen anwendet\",\n      export_student_progress: \"Fortschritt der Schüler exportieren (CSV)\",\n      send_email_to: \"E-Mail für Passwort-Wiederherstellung schicken an:\",\n      email_sent: \"E-Mail verschickt\",\n      send_recovery_email: \"E-Mail für Wiederherstellung schicken\",\n      enter_new_password_below: \"Neues Passwort unten eingeben:\",\n      change_password: \"Passwort ändern\",\n      changed: \"Geändert\",\n      available_credits: \"Lizenzen verfügbar\",\n      pending_credits: \"Lizenzen ausstehend\",\n      empty_credits: \"Verbrauchte Lizenzen\",\n      license_remaining: \"Lizenz übrig\",\n      licenses_remaining: \"Lizenzen übrig\",\n      one_license_used: \"1 Lizenz wurde verwendet\",\n      num_licenses_used: \"__numLicensesUsed__ Lizenzen wurden verwendet\",\n      starter_licenses: \"Starterlizenzen\",\n      start_date: \"Startdatum:\",\n      end_date: \"Enddatum:\",\n      get_enrollments_blurb: \" Wir helfen dir, eine Lösung zu entwickeln, die die Anforderungen deiner Klasse, Schule oder deines Bezirks erfüllt.\",\n      how_to_apply_licenses_blurb_1: \"Wenn ein Lehrer einem Schüler zum ersten Mal einen Kurs zuordnet, wenden wir automatisch eine Lizenz an. Benutze das Dropdown-Menü im Klassenzimmer, um den ausgewählten Schülern einen Kurs zuzuordnen:\",\n      how_to_apply_licenses_blurb_2: \"Kann ich auch eine Lizenz anwenden, ohne einen Kurs zuzuordnen?\",\n      how_to_apply_licenses_blurb_3: \"Ja, gehe zur Registerkarte „Lizenzstatus“ in deinem Klassenzimmer und klicke auf  \\\"Lizenz anwenden\\\" für jeden Schüler, der keine aktive Lizenz hat.\",\n      request_sent: \"Anfrage verschickt!\",\n      assessments: \"Bewertungen\",\n      license_status: \"Lizenzstatus\",\n      status_expired: \"Abgelaufen am {{date}}\",\n      status_not_enrolled: \"Nicht eingeschrieben\",\n      status_enrolled: \"Läuft ab am {{date}}\",\n      select_all: \"Alle auswählen\",\n      project: \"Projekt\",\n      project_gallery: \"Projekt-Galerie\",\n      view_project: \"Projekt ansehen\",\n      unpublished: \"(nicht veröffnetlicht)\",\n      view_arena_ladder: \"Arenarangliste anzeigen\",\n      resource_hub: \"Resource Hub\",\n      getting_started: \"Erste Schritte\",\n      educator_faq: \"Lehrer-FAQ\",\n      educator_faq_desc: \"Häufig gestellte Fragen zur Verwendung von CodeCombat in deinem Klassenzimmer oder in deiner Schule.\",\n      teacher_getting_started: \"Erste Schritte-Anleitung für Lehrer\",\n      teacher_getting_started_desc: \"Neu bei CodeCombat? Lade dir unsere Erste Schritte-Anleitung für Lehrer runter, um dein Konto einzurichten, deine erste Klasse zu erstellen, und deine Schüler zum ersten Kurs einzuladen.\",\n      student_getting_started: \"Schnellstart-Anleitung für Schüler\",\n      student_getting_started_desc: \"Diese Anleitung kannst du an deine Schüler verteilen, bevor ihr mit CodeCombat anfangt, damit sie sich mit dem Code-Editor vertraut machen können. Diese Anleitung kann sowohl für Python- als auch für JavaScript-Klassenzimmer benutzt werden.\",\n      cs1: \"Einführung in die Informatik\",\n      cs2: \"Informatik 2\",\n      cs3: \"Informatik 3\",\n      cs4: \"Informatik 4\",\n      cs5: \"Informatik 5\",\n      cs1_syntax_python: \"Kurs 1: Python-Syntaxanleitung\",\n      cs1_syntax_python_desc: \"Spickzettel mit Referenzen auf die gängige Python-Syntax, die die Schüler in „Einführung in die Informatik“ lernen.\",\n      cs1_syntax_javascript: \"Kurs 1: JavaScript-Syntaxanleitung\",\n      cs1_syntax_javascript_desc: \"Spickzettel mit Referenzen auf die gängige JavaScript-Syntax, die die Schüler in „Einführung in die Informatik“ lernen.\",\n      coming_soon: \"Weitere Anleitungen kommen bald!\",\n      engineering_cycle_worksheet: \"Arbeitsblatt zur Softwareentwicklung (Engineering Cycle Worksheet)\",\n      engineering_cycle_worksheet_desc: \"Benutze dieses Arbeitsblatt, um den Schülern systematische Programmentwicklung nahezubringen: Problemdefinition, Lösungsentwurf, Umsetzun und Fehlerbehebung. Das ausgefüllte Beispielarbeitsblatt kann dir als Orientierungshilfe dienen.\",\n      engineering_cycle_worksheet_link: \"Beispiel anzeigen\",\n      progress_journal: \"Fortschrittstagebuch\",\n      progress_journal_desc: \"Halte deine Schüler an, ihren Fortschritt mithilfe eines Fortschrittstagebuchs aufzuzeichnen.\",\n      cs1_curriculum: \"Einführung in die Informatik – Curriculumsleitfaden\",\n      cs1_curriculum_desc: \"Umfang und Reihenfolge, Unterrichtspläne und mehr für Kurs 1.\",\n      arenas_curriculum: \"Arena Level - Teacher Guide\",\n      arenas_curriculum_desc: \"Anleitung zum Betreiben von Wakka Maul, Cross Bones and Power Peak Multiplayer-Arenen mit deiner Klasse.\",\n      cs2_curriculum: \"Informatik 2 – Curriculumsleitfaden\",\n      cs2_curriculum_desc: \"Umfang und Reihenfolge, Unterrichtspläne und mehr für Kurs 2.\",\n      cs3_curriculum: \"Informatik 3 – Curriculumsleitfaden\",\n      cs3_curriculum_desc: \"Umfang und Reihenfolge, Unterrichtspläne und mehr für Kurs 3.\",\n      cs4_curriculum: \"Informatik 4 – Curriculumsleitfaden\",\n      cs4_curriculum_desc: \"Umfang und Reihenfolge, Unterrichtspläne und mehr für Kurs 4.\",\n      cs5_curriculum_js: \"Informatik 5 - Curriculumsleitfaden (JavaScript)\",\n      cs5_curriculum_desc_js: \"Umfang und Reihenfolge, Unterrichtspläne und mehr für Kurs 5-Klassen mit JavaScript.\",\n      cs5_curriculum_py: \"Informatik 5 - Curriculumsleitfaden (Python)\",\n      cs5_curriculum_desc_py: \"Umfang und Reihenfolge, Unterrichtspläne und mehr für Kurs 5-Klassen mit Python.\",\n      cs1_pairprogramming: \"Paar-Programmieraktivität\",\n      cs1_pairprogramming_desc: \"Zeige deinen Schülern eine paarweise Programmierübung. So lernen sie, besser zuzuhören und zu kommunizieren.\",\n      gd1: \"Spiele-Entwicklung 1\",\n      gd1_guide: \"Spiele-Entwicklung 1 - Projektleitfaden\",\n      gd1_guide_desc: \"Benutze diesen Leitfaden, um deine Schüler zu begleiten während sie in 5 Tagen ihr erstes Spielprojekt erstellen.\",\n      wd1: \"Web-Entwicklung 1\",\n      wd1_headlines: \"Schlagzeilen & Kopfzeilen Aktivität\",\n      wd1_headlines_example: \"Beispiel-Lösung ansehen\",\n      wd1_headlines_desc: \"Warum sind Absatz- und Header-Markierungen wichtig? Benutzen Sie diese Aktivität, um zu zeigen, wie gut gewählte Header Webseiten einfacher lesbar machen. Es gibt viele richtige Lösungswege!\",\n      wd1_html_syntax: \"HTML Syntax-Anleitung\",\n      wd1_html_syntax_desc: \"Kurzreferenz für HTML Style Elemente, welche Studenten in Web-Entwicklung 1 kennenlernen.\",\n      wd1_css_syntax: \"CSS Syntax-Anleitung\",\n      wd1_css_syntax_desc: \"Kurzreferenz für die CSS Style Syntax, die Schüler in Web-Entwicklung 1 lernen.\",\n      wd2: \"Web-Entwicklung 2\",\n      wd2_jquery_syntax: \"jQuery Funktionen Syntax-Anleitung\",\n      wd2_jquery_syntax_desc: \"Kurzreferenz für die jQuery-Funktionen, die Schüler in Web-Entwicklung 2 kennenlernen.\",\n      wd2_quizlet_worksheet: \"Quizlet Planungs-Arbeitsblatt\",\n      wd2_quizlet_worksheet_instructions: \"Anleitung und Beispiele ansehen\",\n      wd2_quizlet_worksheet_desc: \"Bevor die Schüler am Ende von Web-Entwicklung 2 ihr Test-Projekt erstellen, sollten sie die Fragen, Ergebnisse und Antworten mit Hilfe dieses Arbeitsbogens planen. Lehrer können die Anleitung und Beispiele an die Schüler zur Bezugnahme verteilen.\",\n      student_overview: \"Übersicht\",\n      student_details: \"Studenten Details\",\n      student_name: \"Studenten Name\",\n      no_name: \"Kein Name angegeben.\",\n      no_username: \"Kein Benutzername angegeben\",\n      no_email: \"Der Schüler hat keine E-Mail-Adresse eingestellt.\",\n      student_profile: \"Schülerprofil\",\n      playtime_detail: \"Spielzeit Details\",\n      student_completed: \"Schüler abgeschlossen\",\n      student_in_progress: \"Schüler im Gange\",\n      class_average: \"Klassendurchschnitt\",\n      not_assigned: \"wurde den folgenden Kursen nicht zugeordnet\",\n      playtime_axis: \"Spielzeit in Sekunden\",\n      levels_axis: \"Levels in\",\n      student_state: \"Wie geht es\",\n      student_state_2: \"?\",\n      student_good: \"geht es gut in\",\n      student_good_detail: \"Dieser Schüler kommt mit der Klasse mit.\",\n      student_warn: \"könnte Hilfe gebrauchen in\",\n      student_warn_detail: \"Diese Schüler könnte etwas Hilfe mit neuen Konzepten gebrauchen, die in diesem Kurs eingeführt wurden.\",\n      student_great: \"hat viel Erfolg mit\",\n      student_great_detail: \"Dieser Schüler ist möglicherweise ein guter Kandidat, um andere Schülern beim Bearbeiten dieses Kurses zu helfen.\",\n      full_license: \"Volllizenz\",\n      starter_license: \"Starterlizenz\",\n      trial: \"Testversion\",\n      hoc_welcome: \"Fröhliche Informatik-Bildungswoche\",\n      hoc_intro: \"Es gibt drei Möglichkeiten für deine Klasse, mit CodeCombat an einer Stunde Code teilzunehmen\",\n      hoc_self_led: \"Selbstgeführtes Gameplay\",\n      hoc_self_led_desc: \"Schüler können selbstständig zwei Stunden CodeCombat-Tutorials durchspielen\",\n      hoc_game_dev: \"Spiele-Entwicklung\",\n      hoc_and: \"und\",\n      hoc_programming: \"JavaScript/Python-Programmierung\",\n      hoc_teacher_led: \"Vom Lehrer geführte Stunden\",\n      hoc_teacher_led_desc1: \"Lade unsere\",\n      hoc_teacher_led_link: \"Unterrichtspläne für die Einführung in die Informatik runter,\",\n      hoc_teacher_led_desc2: \"um deinen Schülern mit Offline-Aktivitäten die Konzepte des Programmierens näherzubringen\",\n      hoc_group: \"Gruppen-Gameplay\",\n      hoc_group_desc_1: \"Lehrer können diese Stunden in Verbindung mit unserem Kurs „Einführung in die Informatik“ benutzt, um den Fortschritt der Schüler zu beobachten. Siehe\",\n      hoc_group_link: \"Erste Schritte-Anleitung\",\n      hoc_group_desc_2: \"für weitere Details.\",\n      hoc_additional_desc1: \"Für zusätzliche CodeCombat-Ressourcen und -Aktivitäten, siehe unsere\",\n      hoc_additional_desc2: \"Fragen\",\n      hoc_additional_contact: \"Kontakt\",\n      revoke_confirm: \"Bist du sicher, dass die Lizenz für {{student_name}} entzogen werden soll? Die Lizenz kann dann einem anderen Schüler zugewiesen werden.\",\n      revoking: \"wird zurückgezogen...\",\n      unused_licenses: \"Du hast ungenutzte Lizenzen, um Schülern bezahlte Kurse zuzuweisen, wenn sie soweit sind, mehr zu lernen!\",\n      remember_new_courses: \"Neue Kurse können zugewiesen werden!\",\n      more_info: \"Weitere Informationen\",\n      how_to_assign_courses: \"Wie Kurse zugewiesen werden\",\n      select_students: \"Studenten auswählen\",\n      select_instructions: \"Kreuze die Ankreuzfelder neben den Schülern an, denen du Kurse zuweisen willst.\",\n      choose_course: \"Kursauswahl\",\n      choose_instructions: \"Wähle den Kurs vom Dropdown-Menu aus, den du zuweisen möchstest, und klicke auf “Ausgewählten Schülern zuweisen”\",\n      push_projects: \"Wir empfehlen, Web-Entwicklung 1 oder Spiele-Entwicklung 1 zuzuweisen, nachdem die Schüler “Einführung in die Informatik” beendet haben! Weitere Informationen über diese Kurse unter {{resource_hub}}.\",\n      teacher_quest: \"Schritte zum Lehrerfolg\",\n      quests_complete: \"erreicht\",\n      teacher_quest_create_classroom: \"Klasse erstellen\",\n      teacher_quest_add_students: \"Studenten hinzufügen\",\n      teacher_quest_teach_methods: \"Hilf den Schülern, `Methodenaufrufe zu lernen`.\",\n      teacher_quest_teach_methods_step1: \"Bringe 75% mindestens einer Klasse durch das erste Level, __Dungeons of Kithgard__\",\n      teacher_quest_teach_methods_step2: \"Drucke die [Student Quick Start Guide](http://files.codecombat.com/docs/resources/StudentQuickStartGuide.pdf) im Resource Hub aus.\",\n      teacher_quest_teach_strings: \"Zeige deinen Schülern, wie Zeichenketten gehen.\",\n      teacher_quest_teach_strings_step1: \"Bringe 75% mindestens einer Klasse durch  __True Names__\",\n      teacher_quest_teach_strings_step2: \"Benutze den Teacher Level Selector auf der [Kurs-Handbücher](/teachers/courses) Seite für eine Vorschauf auf __True Names__.\",\n      teacher_quest_teach_loops: \"`Schleifen` für die Schüler\",\n      teacher_quest_teach_loops_step1: \"Bringe 75% mindestens einer Klasse durch __Fire Dancing__.\",\n      teacher_quest_teach_loops_step2: \"Nutze __Loops Activity__ im [CS1 Curriculum guide](/teachers/resources/cs1) um diese Konzept zu vertiefen.\",\n      teacher_quest_teach_variables: \"Variationen durch  `Variablen`.\",\n      teacher_quest_teach_variables_step1: \"Bringe 75% mindestens einer Klasse durch __Known Enemy__.\",\n      teacher_quest_teach_variables_step2: \"Fördere Teamarbeit durch die [Pair Programming Activity](/teachers/resources/pair-programming).\",\n      teacher_quest_kithgard_gates_100: \"Schreite mit der Klasse durch __Kithgard Gates__.\",\n      teacher_quest_kithgard_gates_100_step1: \"Bringe 75% mindestens einer Klasse durch __Kithgard Gates__.\",\n      teacher_quest_kithgard_gates_100_step2: \"Nutze den [Engineering Cycle Worksheet](http://files.codecombat.com/docs/resources/EngineeringCycleWorksheet.pdf) um Schüler mit systematischen Problemlösungsstategien vertrautzumachen.\",\n      teacher_quest_wakka_maul_100: \"Bereite Zweikämpfe in Wakka Maul vor.\",\n      teacher_quest_wakka_maul_100_step1: \"Bringe 75% mindestens einer Klasse durch __Wakka Maul__.\",\n      teacher_quest_wakka_maul_100_step2: \"In der [Arena Guide](/teachers/resources/arenas) im [Resource Hub](/teachers/resources) findest du Tipps wie du einen erfolgreichen Tag in der Arena gestaltest.\",\n      teacher_quest_reach_gamedev: \"Erkunde neue Welten!\",\n      teacher_quest_reach_gamedev_step1: \"[Erwirb Lizenzen](/teachers/licenses), damit deine Stundenten neue Welten wie Spiele-Entwicklung und Web-Entwicklung entdecken können!\",\n      teacher_quest_done: \"Wenn deine Studenten mehr programmieren wollen? Kontaktiere unsere [Schulbetreuer](mailto:schools@codecombat.com) noch heute!\",\n      teacher_quest_keep_going: \"Weiter geht's! Das kannst du alles noch machen:\",\n      teacher_quest_more: \"Alle Schritte anzeigen\",\n      teacher_quest_less: \"Weniger Schritte anzeigen\",\n      refresh_to_update: \"(Seite aktualisieren)\",\n      view_project_gallery: \"Projekt-Galerie ansehen\",\n      office_hours: \"Lehrer Webinars\",\n      success: \"Erfolgreich\",\n      in_progress: \"In Arbeit\",\n      not_started: \"Nicht Begonnen\",\n      time_played_label: \"Gespielte Zeit:\",\n      print_guide: \"Drucke diese Anleitung\",\n      combo: \"Combo\",\n      concept: \"Konzept\"\n    },\n    share_licenses: {\n      share_licenses: \"Gemeinsam genutzte Lizenzen\",\n      shared_by: \"Bereitgestellt von:\",\n      add_teacher_label: \"Genaue E-Mail-Adresse eingeben:\",\n      add_teacher_button: \"Lehrer hinzufügen\",\n      subheader: \"Du kannst deine Lizenzen anderen Lehrern deiner Einrichtung zur Verfügung stellen. Jede Lizenz kann nur für einen Studenden zur Zeit genutzt werden.\",\n      teacher_not_found: \"Lehrer nicht gefunden. Bitte überprüfe, ob dieser Lehrer schon einen Lehrerkonto eingerichtet hat.\",\n      teacher_not_valid: \"Dies ist kein gültiges Lehrerkonto. Nur Lehrerkonten können Lizenzen gemeinsam nutzen.\",\n      already_shared: \"Du nutzt diese Lizenzen bereit mit diesem Lehrer gemeinsam.\",\n      teachers_using_these: \"Lehrer, die diese Lizenzen nutzen können:\",\n      footer: \"Wenn Lehrer einem Schüler die Lizenz entziehen, so geht diese zurück in den gemeinsamen Pool, den andere Lehrer in dieser Gruppe nutzen können.\",\n      you: \"(du)\",\n      one_license_used: \"(1 Lizenz verwendet)\",\n      licenses_used: \"(__licensesUsed__ Lizenzen verwendet)\",\n      more_info: \"Weitere Informationen\"\n    },\n    sharing: {\n      game: \"Spiel\",\n      webpage: \"Website\",\n      your_students_preview: \"Deine Schüler klicken hier, um ihre abgeschlossenen Projekte anzuzeigen! In der Lehrer-Vorschau nicht verfügbar.\",\n      unavailable: \"Link-Sharing in der Lehrervorschau nicht verfügbar.\",\n      share_game: \"Dieses Spiel teilen\",\n      share_web: \"Diese Website teilen\",\n      victory_share_prefix: \"Diesen Link teilen, um deine Freunde & Familie einzuladen,\",\n      victory_share_prefix_short: \"Lade Jemanden ein zu\",\n      victory_share_game: \"dein Level zu spielen\",\n      victory_share_web: \"deine Webiste anzuschauen\",\n      victory_share_suffix: \".\",\n      victory_course_share_prefix: \"Dieser Link lässt deine Freunde & Familie\",\n      victory_course_share_game: \"das Spiel spielen\",\n      victory_course_share_web: \"die Website anzeigen\",\n      victory_course_share_suffix: \"die du eben erstellt hast.\",\n      copy_url: \"URL kopieren\",\n      share_with_teacher_email: \"Sende an deinen Lehrer\"\n    },\n    game_dev: {\n      creator: \"Editor\"\n    },\n    web_dev: {\n      image_gallery_title: \"Bildergalerie\",\n      select_an_image: \"Wähle ein Bild aus, das du benutzen willst\",\n      scroll_down_for_more_images: \"(Runterscrollen für mehr Bilder)\",\n      copy_the_url: \"Kopiere die folgende URL\",\n      copy_the_url_description: \"Nützlich, wenn du ein bestehendes Bild ersetzen willst.\",\n      copy_the_img_tag: \"Kopiere den <img>-Tag\",\n      copy_the_img_tag_description: \"Nützlich, wenn du ein neues Bild einsetzen willst.\",\n      copy_url: \"URL kopieren\",\n      copy_img: \"<img> kopieren\",\n      how_to_copy_paste: \"Wie man Kopiert/Einfügt\",\n      copy: \"Kopieren\",\n      paste: \"Einfügen\",\n      back_to_editing: \"Zurück zum Editor\"\n    },\n    classes: {\n      archmage_title: \"Erzmagier\",\n      archmage_title_description: \"(Programmierer)\",\n      archmage_summary: \"Wenn du ein Entwickler bist, der daran interessiert ist Lernspiele zu programmieren, werde ein Erzmagier, um uns zu helfen, CodeCombat zu erschaffen!\",\n      artisan_title: \"Handwerker\",\n      artisan_title_description: \"(Level Entwickler)\",\n      artisan_summary: \"Erschaffe und teile Level zum spielen für dich und deine Freunde. Werde ein Handwerker, um die Kunst zu erlernen, anderen Programmieren zu lehren.\",\n      adventurer_title: \"Abenteurer\",\n      adventurer_title_description: \"(Level Spieltester)\",\n      adventurer_summary: \"Bekomme unsere neuen Level (sogar unseren Abonnement Inhalt) kostenlos eine Woche früher und hilf uns, Fehler vor der Veröffentlichung zu finden.\",\n      scribe_title: \"Schreiber\",\n      scribe_title_description: \"(Artikel Editor)\",\n      scribe_summary: \"Guter Code braucht gute Dokumentation. Schreibe, bearbeite und verbessere die, von weltweit Millionen von Spielern, gelesenen Dokumentationen.\",\n      diplomat_title: \"Diplomat\",\n      diplomat_title_description: \"(Übersetzer)\",\n      diplomat_summary: \"CodeCombat wird in 45+ Sprachen von unseren Diplomaten übersetzt. Hilf uns und steuere Übersetzungen bei.\",\n      ambassador_title: \"Botschafter\",\n      ambassador_title_description: \"(Support)\",\n      ambassador_summary: \"Zähme unsere Forum Benutzer und weise jenen mit Fragen die Richtung. Unsere Botschafter repräsentieren CodeCombat vor der Welt.\",\n      teacher_title: \"Lehrkräfte\"\n    },\n    editor: {\n      main_title: \"CodeCombat Editoren\",\n      article_title: \"Artikel Editor\",\n      thang_title: \"Thang Editor\",\n      level_title: \"Level Editor\",\n      course_title: \"Kurs-Editor\",\n      achievement_title: \"Achievement Editor\",\n      poll_title: \"Umfrage Editor\",\n      back: \"Zurück\",\n      revert: \"Zurücksetzen\",\n      revert_models: \"Modelle zurücksetzen.\",\n      pick_a_terrain: \"Wähle ein Terrain\",\n      dungeon: \"Dungeon\",\n      indoor: \"Indoor\",\n      desert: \"Wüste\",\n      grassy: \"Gräsern\",\n      mountain: \"Berg\",\n      glacier: \"Gletscher\",\n      small: \"Klein\",\n      large: \"Groß\",\n      fork_title: \"Forke neue Version\",\n      fork_creating: \"Erzeuge Fork...\",\n      generate_terrain: \"Generiere Terrain\",\n      more: \"Mehr\",\n      wiki: \"Wiki\",\n      live_chat: \"Live Chat\",\n      thang_main: \"Main\",\n      thang_spritesheets: \"Sprite Palette\",\n      thang_colors: \"Farben\",\n      level_some_options: \"Einige Einstellungsmöglichkeiten?\",\n      level_tab_thangs: \"Thangs\",\n      level_tab_scripts: \"Skripte\",\n      level_tab_components: \"Komponenten\",\n      level_tab_systems: \"Systeme\",\n      level_tab_docs: \"Dokumentation\",\n      level_tab_thangs_title: \"Aktuelle Thangs\",\n      level_tab_thangs_all: \"Alle\",\n      level_tab_thangs_conditions: \"Startbedingungen\",\n      level_tab_thangs_add: \"Thangs hinzufügen\",\n      level_tab_thangs_search: \"Thangs suchen\",\n      add_components: \"Kommentar hinzufügen\",\n      component_configs: \"Komponenten Konfiguration\",\n      config_thang: \"Doppelklicke, um Thang zu konfigurieren\",\n      \"delete\": \"Löschen\",\n      duplicate: \"Duplizieren\",\n      stop_duplicate: \"Stop Duplizieren\",\n      rotate: \"Drehen\",\n      level_component_tab_title: \"Aktuelle Komponenten\",\n      level_component_btn_new: \"neue Komponente erstellen\",\n      level_systems_tab_title: \"Aktuelle Systeme\",\n      level_systems_btn_new: \"neues System erstellen\",\n      level_systems_btn_add: \"System hinzufügen\",\n      level_components_title: \"Zurück zu allen Thangs\",\n      level_components_type: \"Typ\",\n      level_component_edit_title: \"Komponente bearbeiten\",\n      level_component_config_schema: \"Konfigurationsschema\",\n      level_system_edit_title: \"System bearbeiten\",\n      create_system_title: \"neues System erstellen\",\n      new_component_title: \"Neue Komponente erstellen\",\n      new_component_field_system: \"System\",\n      new_article_title: \"Erstelle einen neuen Artikel\",\n      new_thang_title: \"Erstelle einen neuen Thang-Typen\",\n      new_level_title: \"Erstelle ein neues Level\",\n      new_article_title_login: \"Melde dich an um einen neuen Artikel zu erstellen\",\n      new_thang_title_login: \"Melde dich an um einen neuen Thang-Typen zu erstellen\",\n      new_level_title_login: \"Melde dich an um ein neues Level zu erstellen\",\n      new_achievement_title: \"Erstelle ein neues Achievement\",\n      new_achievement_title_login: \"Melde dich an um einen neuen Erfolg zu erstellen\",\n      new_poll_title: \"Erstelle eine neue Umfrage\",\n      new_poll_title_login: \"Melde dich an um eine neue Umfrage zu erstellen\",\n      article_search_title: \"Durchsuche Artikel hier\",\n      thang_search_title: \"Durchsuche Thang-Typen hier\",\n      level_search_title: \"Durchsuche Levels hier\",\n      achievement_search_title: \"Durchsuche Erfolge\",\n      poll_search_title: \"Durchsuche Umfragen\",\n      read_only_warning2: \"Warnung: Du kannst hier keine Änderungen speichern, weil du nicht angemeldet bist.\",\n      no_achievements: \"Es wurden noch keine Erfolge zu diesem Level hinzugefügt.\",\n      achievement_query_misc: \"Sonstige Schlüsselerfolge\",\n      achievement_query_goals: \"Level Erfolge\",\n      level_completion: \"abgeschlossene Level\",\n      pop_i18n: \"Bevölkere I18N\",\n      tasks: \"Aufgaben\",\n      clear_storage: \"Lösche deine lokalen Änderungen\",\n      add_system_title: \"Füge Systeme zum Level hinzu\",\n      done_adding: \"Hinzufügen abgeschlossen\"\n    },\n    article: {\n      edit_btn_preview: \"Vorschau\",\n      edit_article_title: \"Artikel bearbeiten\"\n    },\n    polls: {\n      priority: \"Priorität\"\n    },\n    contribute: {\n      page_title: \"Mitwirken\",\n      intro_blurb: \"CodeCombat ist zu 100% Open Source! Hunderte hingebungsvolle Spieler haben uns geholfen das Spiel zu dem zu machen, was es heute ist. Tritt uns bei und schreibe das nächste Kapitel in CodeCombats Mission, der Welt das Programmieren zu lehren!\",\n      alert_account_message_intro: \"Hey du!\",\n      alert_account_message: \"Um Klassen-E-Mails abonnieren zu können, musst du dich zuerst anmelden.\",\n      archmage_introduction: \"Einer der größten Vorteile daran ein Spiel aufzubauen, ist es, dass so viele verschiedene Aspekte eine Rolle spielen. Grafiken, Sound, Echtzeit Networking, Social Networking und natürlich viele der gewöhnlichen Aspekte des Programmierens, von low-level Datenbankmanagement und Server Administration bis hin zum Aufbau von Design und Interface. Es gibt viel zu tun und wenn du ein erfahrener Programmierer bist, mit einer Veranlagung dazu, wirklich knallhart bei CodeCombat einzutauchen, dann könnte diese Klasse etwas für dich sein. Wir würden uns wahnsinnig  über deine Hilfe dabei freuen, das beste Programmierspiel der Welt aufzubauen.\",\n      class_attributes: \"Eigenschaften\",\n      archmage_attribute_1_pref: \"Kenntnisse in \",\n      archmage_attribute_1_suf: \", oder der Drang danach zu lernen. Das meiste unseres Codes ist in dieser Sprache geschrieben. Wenn du ein Fan von Ruby oder Python bist, dann wirst du dich pudelwohl fühlen. Es ist wie JavaScript, nur mit einer angenehmeren Syntax.\",\n      archmage_attribute_2: \"Einige Erfahrung in Programmieren und Eigeninitiative. Wir werden dir helfen dich zu orientieren, aber wir haben nicht Zeit, dich zu trainieren.\",\n      how_to_join: \"Wie du mitmachen kannst\",\n      join_desc_1: \"Jeder kann mithelfen! Schau dir unseren \",\n      join_desc_2: \"um anzufangen, und hake die Checkbox unten an um dich als mutiger Erzmagier einzutragen und über die neuesten Nachrichten per E-Mail zu erhalten. Möchtest du dich darüber unterhalten was zu tun ist oder wie du dich besser beteiligen kannst? \",\n      join_desc_3: \", oder finde uns in unserem \",\n      join_desc_4: \"und wir schauen von dort mal!\",\n      join_url_email: \"Schreibe uns eine E-Mail\",\n      join_url_slack: \"öffentlichen Slack-Channel\",\n      archmage_subscribe_desc: \"Erhalte E-Mails über neue Programmier-Möglichkeiten und Ankündigungen.\",\n      artisan_introduction_pref: \"Wir müssen neue Level erstellen. Problem: ihr wollt mehr und mehr Inhalte, aber unser Tag hat auch nur 24 Stunden. Und leider ist weder unsere Workstation die Beste, noch unser Leveleditor. Um es konkret zu sagen: selbst die Erschaffer des Level Editors können ihn gerade so benutzen, also Vorsicht. Wenn du aber Ideen für eine Kampagne hast, die von for-loops bis\",\n      artisan_introduction_suf: \"reichen kann, dann ist diese Klasse vielleicht für dich.\",\n      artisan_attribute_1: \"Erfahrung in der Erstellung von Inhalten (z.B. mit Blizzards level Editoren) ist von Vorteil, aber nicht Grundvoraussetzung!\",\n      artisan_attribute_2: \"Was ihr aber unbedingt benötigt ist der Wille wieder und wieder und wieder zu testen, auszuprobieren und zu ändern. Gute Level erstellt man, indem man sie selber testet, und vor allem anderen dabei zuschaut was sie anstellen. Um dann die dutzende von nötigen Fixes zu erstellen.\",\n      artisan_attribute_3: \"Ausdauer!!! Unser Level Editor ist super vorläufig/alpha und frustrierend in der Nutzung. Du wurdest gewarnt!\",\n      artisan_join_desc: \"Verwende den Level-Editor mit diesen Schritten, mehr oder weniger:\",\n      artisan_join_step1: \"Lese die Dokumentation.\",\n      artisan_join_step2: \"Erstelle ein neues Level und erkunde existierende Level.\",\n      artisan_join_step3: \"Finde uns im öffentlichen Slack Raum, falls du Hilfe brauchst.\",\n      artisan_join_step4: \"Poste deine Level im Forum um Feedback zu erhalten.\",\n      artisan_subscribe_desc: \"Erhalte E-Mails über Level-Editor Updates und Ankündigungen.\",\n      adventurer_introduction: \"Dein Job: du bist der Tank. Du wirst einstecken müssen, als gäbe es kein Morgen. Du wirst, fluchen, schwitzen und verzweifeln. Wir brauchen Leute, die unsere nagelneuen Level ausprobieren, und alle Bugs durchleiden. Spieldesign ist ein langer Prozeß, und niemand macht beim ersten Versuch alles richtig. Aber wenn du mithelfen willst, und aushalten kannst, dann sei dabei. Denn nur mit dieser deiner Klasse, gibt es beim zweiten, dritten, x-ten Versuch ein besseres Level.\",\n      adventurer_attribute_1: \"Ein Heißhunger nach Wissen. Du willst lernen wie man programmiert, und wir wollen es dir beibringen. Oder genauer, du willst es dir selber beibringen (und wir dir dabei helfen).\",\n      adventurer_attribute_2: \"Charismatisch. Sei rücksichtsvoll aber deutlich, wenn du erklärst was verbessert werden muss. Und gib Tipps wie dies umzusetzen ist.\",\n      adventurer_join_pref: \"Schließe dich entweder mit einem Handwerker zusammen (oder rekrutiere einen!), oder klicke unten das Kästchen an, um E-Mails zu erhalten wenn wir neue Level zum Testen haben. Wir werden dies auch über unsere Netzwerke veröffentlichen, wie z.B.\",\n      adventurer_forum_url: \"unser Forum\",\n      adventurer_join_suf: \"wenn du also auf diese Weise informiert werden willst, melde dich hier an!\",\n      adventurer_subscribe_desc: \"Erhalte E-Mails wenn es neue Levels zum Testen gibt.\",\n      scribe_introduction_pref: \"CodeCombat soll mehr sein als eine Aneinanderreihung von Leveln. Es soll auch ein Behälter des Programmierwissens sein, eine Wiki der Programmierkonzepte mit der Level verknüpft werden können. Auf diese Weise müssen unsere Handwerker nicht jedesmal umständlich erklären, was ein Vergleichsoperator ist. Sondern sie können direkt auf detaillierte Artikel verlinken, die dies bereits ausführlich beschreiben. So ähnlich wie \",\n      scribe_introduction_url_mozilla: \"Mozillas Developer Network\",\n      scribe_introduction_suf: \" erstellt wurde. Wenn deine Idee von Spaß ist, das Konzept des Programmierens in Markdown zu Datei zu bringen, dann ist dies deine Klasse.\",\n      scribe_attribute_1: \"Ein Händchen für Worte ist eigentlich alles was du brauchst. Nicht nur in Grammatik und Rechtschreibung, sondern die Fähigkeit, komplexe und komplizierte Ideen anderen zu vermitteln.\",\n      contact_us_url: \"Kontaktiere uns\",\n      scribe_join_description: \"erzähle uns ein bisschen über dich, deine Erfahrung mit der Programmierung und über welche Themen du schreiben möchtest. Wir werden von dort aus gehen!\",\n      scribe_subscribe_desc: \"Erhalte E-Mails über Ankündigungen zu schreibenden Artikeln.\",\n      diplomat_introduction_pref: \"Also wenn es etwas gibt, was wir gelernt haben beim \",\n      diplomat_launch_url: \"Launch im Oktober\",\n      diplomat_introduction_suf: \"dann ist es, dass es ein großes Interesse an CodeCombat in anderen Ländern gibt! Wir stellen eine Truppe von Übersetzern zusammen, die mithelfen wollen, CodeCombat der Welt so zugänglich wie möglich zu machen. Wenn es Dir gefällt, Einblicke in zukünftige Inhalte zu erhalten und neue Level so schnell wie möglich in Deiner Sprache zur Verfügung zu stellen, dann ist diese Klasse vielleicht etwas für dich.\",\n      diplomat_attribute_1: \"Du sprichst/schreibst sowohl Englisch als auch die Sprache deiner Wahl flüssig. Wenn man komplizierte Informationen vermitteln will, muss man BEIDE Sprachen wirklich beherrschen.\",\n      diplomat_i18n_page_prefix: \"Du kannst anfangen unsere Levels zu übersetzen, indem du auf unsere\",\n      diplomat_i18n_page: \"Übersetzungs-Seite\",\n      diplomat_i18n_page_suffix: \" gehst, oder unsere Schnittstelle und Webseite bei GitHub benutzt.\",\n      diplomat_join_pref_github: \"Finde deine Sprachdatei \",\n      diplomat_github_url: \"bei GitHub\",\n      diplomat_join_suf_github: \", editiere sie online und reiche einen Pull Request ein. Außerdem hake gerne die Checkbox unten an, um über neue Entwicklungen bei der Internationalisierung auf dem laufenden zu bleiben!\",\n      diplomat_subscribe_desc: \"Erhalte E-Mails über i18n Entwicklungen und Level, die übersetzt werden müssen.\",\n      ambassador_introduction: \"Wir bauen eine Community und du bist die Verbindung dazu. Wir haben Olark Chats, E-Mail und soziale Netzwerke mit vielen Menschen mit denen man sprechen, dabei helfen mit dem Spiel vertraut zu werden und von lernen kann. Wenn du helfen möchtest Leute zu involvieren, Spaß zu haben und ein gutes Gefühl für den Puls von CodeCombat und wo wir ihn wollen, dann könnte diese Klasse für dich sein.\",\n      ambassador_attribute_1: \"Kommunikation! Du bist fähig, die Probleme die Spieler haben zu erkennen, und ihnen dabei zu helfen, diese zu lösen. Außerdem informierst du uns andere Teammitglieder darüber, was die Spieler beschäftigt, was sie mögen, oder auch nicht, und wovon sie gar nicht genug kriegen!\",\n      ambassador_join_desc: \"erzähl uns ein wenig über dich selber, was du so tust, und was du gern tun würdest. Alles Weitere ergibt sich im Gespräch!\",\n      ambassador_join_note_strong: \"Anmerkung\",\n      ambassador_join_note_desc: \"Eine unserer Top Prioritäten ist Mehrspieler Level zu entwerfen. Dort können Spieler, die noch Probleme mit bestimmten Themen haben erfahrenere Zauberer beschwören um ihnen zu helfen. Dies wird ein hervorragender Weg für unsere Botschafter sein, um ihren Job zu erledigen. Wir halten dich auf dem Laufenden!\",\n      ambassador_subscribe_desc: \"Erhalte E-Mails über Support-Updates und Mehrspieler-Entwicklungen.\",\n      teacher_subscribe_desc: \"Erhalte E-Mails über Updates und Ankündigungen für Lehrkräfte.\",\n      changes_auto_save: \"Änderungen an Checkboxen werden automatisch gespeichert.\",\n      diligent_scribes: \"Unsere fleißigen Schreiber:\",\n      powerful_archmages: \"Unsere mächtigen Erzmagier:\",\n      creative_artisans: \"Unsere kreativen Handwerker:\",\n      brave_adventurers: \"Unsere mutigen Abenteurer:\",\n      translating_diplomats: \"Unsere übersetzenden Diplomaten:\",\n      helpful_ambassadors: \"Unsere hilfreichen Botschafter:\"\n    },\n    ladder: {\n      my_matches: \"Meine Matches\",\n      simulate: \"Simuliere\",\n      simulation_explanation: \"Durch die Simulation von Spielen kannst du dein Spiel schneller ranken lassen!\",\n      simulation_explanation_leagues: \"In erster Linie hilfst du dabei, Spiele für verbündete Spiele in deinen Clans und Kursen zu simulieren.\",\n      simulate_games: \"Simuliere Spiele!\",\n      games_simulated_by: \"Spiele die durch dich simuliert worden:\",\n      games_simulated_for: \"Spiele die für dich simuliert worden:\",\n      games_in_queue: \"Spiele momentan in der Warteschlange:\",\n      games_simulated: \"simulierte Spiele\",\n      games_played: \"gespielte Spiele\",\n      ratio: \"Ratio\",\n      leaderboard: \"Rangliste\",\n      battle_as: \"Kämpfe als \",\n      summary_your: \"Deine \",\n      summary_matches: \"Matches - \",\n      summary_wins: \" Siege, \",\n      summary_losses: \" Verluste\",\n      rank_no_code: \"Kein neuer Code zu bewerten\",\n      rank_my_game: \"Bewerte mein Spiel!\",\n      rank_submitting: \"Übermitteln...\",\n      rank_submitted: \"Zur Bewertung übermittelt\",\n      rank_failed: \"Bewertung gescheitert\",\n      rank_being_ranked: \"Spiel wird bewertet\",\n      rank_last_submitted: \"übermittelt \",\n      help_simulate: \"Hilf Spiele zu simulieren?\",\n      code_being_simulated: \"Dein Code wird von anderen Spielern für die Bewertung simuliert. Sobald neue Ergebnisse reinkommen, wird dies aktualisiert.\",\n      no_ranked_matches_pre: \"Keine bewerteten Ergebnisse für\",\n      no_ranked_matches_post: \" Team! Spiele gegen einige Konkurrenten und komm dann hierher zurück um deine Spiele bewertet zu bekommen.\",\n      choose_opponent: \"Wähle einen Gegner\",\n      select_your_language: \"Wähle deine Sprache!\",\n      tutorial_play: \"Spiele Tutorial\",\n      tutorial_recommended: \"Empfohlen, wenn du noch nie zuvor gespielt hast.\",\n      tutorial_skip: \"Überspringe Tutorial\",\n      tutorial_not_sure: \"Nicht sicher was hier ab geht?\",\n      tutorial_play_first: \"Spiele zuerst das Tutorial.\",\n      simple_ai: \"Einfache CPU\",\n      warmup: \"Aufwärmen\",\n      friends_playing: \"spielende Freunde\",\n      log_in_for_friends: \"Melde dich an, um mit deinen Freunden zu spielen!\",\n      social_connect_blurb: \"Verbinde und spiele gegen deine Freunde!\",\n      invite_friends_to_battle: \"Lade deine Freunde zum Kampf ein!\",\n      fight: \"Kämpft!\",\n      watch_victory: \"Schau dir deinen Sieg an\",\n      defeat_the: \"Besiege den\",\n      watch_battle: \"Dem Kampf zuschauen\",\n      tournament_started: \", gestartet\",\n      tournament_ends: \"Turnier endet\",\n      tournament_ended: \"Turnier beendet\",\n      tournament_rules: \"Turnier-Regeln\",\n      tournament_blurb: \"Schreibe Code, sammle Gold, erstelle Armeen, zerquetsche Feinde, gewinne Preis und verbessere deine Karriere in unserem 40.000 $ Greed-Turnier! Schau dir die Details\",\n      tournament_blurb_criss_cross: \"Gewinne Gebote, konstruiere Pfade, trickse Feinde aus, greife Edelsteine ab und verbessere deine Karriere in unserem Criss-Cross-Turnier! Schau dir die Details\",\n      tournament_blurb_zero_sum: \"Entfessle deine Coding-Kreativität, sowohl beim Goldsammeln als auch für Kampftaktiken in diesem Alpenspiegel-Match zwischen dem roten Zauberer und dem blauen Zauberer. Das Turnier hat am Freitag, den 27. März, begonnen, und läuft bis Dienstag, den 7. April um 2 Uhr Nachts mitteleuropäischer Zeit. Kämpfe um Spaß und Ruhm! Schau dir die Details an\",\n      tournament_blurb_ace_of_coders: \"Kämpfe in diesem gefrorenen Gletscher um den Sieg in einem Domination-Style Spiegelmatch! Das Turnier hat am Mittwoch, den 16. September, begonnen, und läuft bis Donnerstag, den 15. Oktober um 2 Uhr Nachts mitteleuropäischer Zeit. Schau dir die Details an\",\n      tournament_blurb_blog: \"auf unserem Blog an\",\n      rules: \"Regeln\",\n      winners: \"Gewinner\",\n      league: \"Liga\",\n      red_ai: \"Rote CPU\",\n      blue_ai: \"Blaue CPU\",\n      wins: \"gewinnt\",\n      humans: \"Rot\",\n      ogres: \"Blau\"\n    },\n    user: {\n      stats: \"Statistiken\",\n      singleplayer_title: \"Einzelspieler Level\",\n      multiplayer_title: \"Mehrspieler Level\",\n      achievements_title: \"Erfolge\",\n      last_played: \"Zuletzt gespielt\",\n      status: \"Status\",\n      status_completed: \"Vollendet\",\n      status_unfinished: \"Unvollendet\",\n      no_singleplayer: \"Noch keine Einzelspieler-Spiele gespielt.\",\n      no_multiplayer: \"Noch keine Mehrspieler-Spiele gespielt.\",\n      no_achievements: \"Noch keine Erfolge verdient.\",\n      favorite_prefix: \"Lieblingssprache ist \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Noch kein Mitglied eines Clans.\",\n      certificate_view: \"Zertifikat ansehen\",\n      certificate_click_to_view: \"Klicke um das Zertifikat zu sehen\",\n      certificate_course_incomplete: \"Kurs unvollständig\",\n      certificate_of_completion: \"Abschlusszertifikate\",\n      certificate_endorsed_by: \"Empfohlen von\",\n      certificate_levels_completed: \"Levels abgeschlossen\",\n      certificate_for: \"Für\"\n    },\n    achievements: {\n      last_earned: \"Zuletzt erhalten\",\n      amount_achieved: \"Anzahl\",\n      achievement: \"Erfolge\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" Gesamt\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" erworben\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" bis Level \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Zahlungen\",\n      prepaid_codes: \"Prepaid Codes\",\n      purchased: \"Gekauft\",\n      subscribe_for_gems: \"Abbonieren für Juwelen\",\n      subscription: \"Abonnement\",\n      invoices: \"Rechnungen\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Gezahlt am\",\n      service: \"Service\",\n      price: \"Preis\",\n      gems: \"Edelsteine\",\n      active: \"Aktive\",\n      subscribed: \"Abonniert\",\n      unsubscribed: \"Abbestellt\",\n      active_until: \"Aktive bis\",\n      cost: \"Kosten\",\n      next_payment: \"Nächste Zahlung\",\n      card: \"Karte\",\n      status_unsubscribed_active: \"Du hast kein Abonnement und bekommst keine Rechnung, aber dein Account ist weiterhin aktiv.\",\n      status_unsubscribed: \"Erhalte Zugang zu neuen Leveln, Helden, Gegenständen und Bonus-Edelsteinen mit einem CodeCombat-Abo!\",\n      not_yet_verified: \"Noch nicht verifiziert.\",\n      resend_email: \"E-Mail erneut schicken\",\n      email_sent: \"E-Mail verschickt! Überprüfe deinen Posteingang.\",\n      verifying_email: \"E-Mail-Adressen verifizieren...\",\n      successfully_verified: \"Du hast deine E-Mail-Adresse erfolgreich verifiziert!\",\n      verify_error: \"Etwas ist bei der Verifikation deiner E-Mail schiefgelaufen :(\",\n      unsubscribe_from_marketing: \"__email__ von allen CodeCombat-Werbemails abmelden?\",\n      unsubscribe_button: \"Ja, abmelden\",\n      unsubscribe_failed: \"Erfolg\",\n      unsubscribe_success: \"Fehlgeschlagen\"\n    },\n    account_invoices: {\n      amount: \"Betrag in US-Dollar\",\n      declined: \"Ihre Karte wurde nicht akzeptiert\",\n      invalid_amount: \"Bitte gib einen Betrag in US-Dollar ein.\",\n      not_logged_in: \"Melde dich an oder erstelle einen Account um deine Rechnungen an zu sehen.\",\n      pay: \"Bezahle Rechnung\",\n      purchasing: \"Kaufe...\",\n      retrying: \"Serverfehler, versuche es erneut.\",\n      success: \"Erfolgreich bezahlt. Danke!\"\n    },\n    account_prepaid: {\n      purchase_code: \"Einen Abocode kaufen\",\n      purchase_code1: \"Abocodes können eingelöst werden um Premiumabozeit zu einem oder mehreren CodeCombat-Einzelkonten hinzuzufügen.\",\n      purchase_code2: \"Jeder CodeCombat-Account kann nur einen einzigen Abocode auf einmal einlösen.\",\n      purchase_code3: \"Abocodes-Monate werden an das Ende der existierenden Abozeit des Accounts hinzugefügt.\",\n      purchase_code4: \"Abonnement-Codes sind für Konten, die die Heimversion von CodeCombat spielen. Sie können nicht anstatt einer Schülerlizenz für die Klassenzimmer-Version benutzt werden.\",\n      purchase_code5: \"Für mehr Informationen zu Schülerlizenzen, kontaktiere uns unter\",\n      users: \"Benutzer\",\n      months: \"Monate\",\n      purchase_total: \"Gesamt\",\n      purchase_button: \"Kauf abschließen\",\n      your_codes: \"Ihre Codes\",\n      redeem_codes: \"Einen Abocode einlösen\",\n      prepaid_code: \"Prepaidcode\",\n      lookup_code: \"Prepaidcode freischalten\",\n      apply_account: \"Ihrem Account hinzufügen\",\n      copy_link: \"Sie können den Codelink kopieren und an jemanden senden.\",\n      quantity: \"Quantität\",\n      redeemed: \"Eingelöst\",\n      no_codes: \"Keine Codes bisher!\",\n      you_can1: \"Sie können\",\n      you_can2: \"einen Prepaidcode kaufen\",\n      you_can3: \"der ihrem Account hinzugefügt werden kann oder den Sie verschenken können.\"\n    },\n    loading_error: {\n      could_not_load: \"Fehler beim Laden vom Server\",\n      connection_failure: \"Verbindung fehlgeschlagen.\",\n      connection_failure_desc: \"Es sieht so aus, als wärest du nicht mit dem Internet verbunden! Überprüfe deine Netzwerkverbindung und lade die Seite neu.\",\n      login_required: \"Login benötigt\",\n      login_required_desc: \"Du musst eingeloggt sein um auf diese Seite zuzugreifen.\",\n      unauthorized: \"Du musst angemeldet sein. Hast du möglicherweise Cookies ausgeschaltet?\",\n      forbidden: \"Unzulässig\",\n      forbidden_desc: \"Oh nein, hier ist nichts was wir dir zeigen können! Stelle sicher, dass du mit dem korrekten Account angemeldet bist oder besuche einen der folgenden Links um zurück zum Programmieren zu kommen!\",\n      not_found: \"Nicht gefunden\",\n      not_found_desc: \"Hm, hier ist nichts. Schaue dir einige der folgenden Links an um zurück zum Programmieren zu kommen!\",\n      not_allowed: \"Methode nicht erlaubt.\",\n      timeout: \"Server timeout\",\n      conflict: \"Ressourcenkonflikt.\",\n      bad_input: \"Falsche Eingabe.\",\n      server_error: \"Server Fehler.\",\n      unknown: \"Unbekannter Fehler\",\n      error: \"FEHLER\",\n      general_desc: \"Irgendwas lief schief und es ist wahrscheinlich unsere Schuld. Versuche etwas zu warten und die Seite neu zu laden, oder besuche einen der folgenden Links um zurück zum Programmieren zu kommen!\"\n    },\n    resources: {\n      level: \"Level\",\n      patch: \"Patch\",\n      patches: \"Patche\",\n      system: \"System\",\n      systems: \"Systeme\",\n      component: \"Komponente\",\n      components: \"Komponenten\",\n      hero: \"Held\",\n      campaigns: \"Kampagne\"\n    },\n    concepts: {\n      advanced_css_rules: \"Fortgeschrittene CSS-Regeln\",\n      advanced_css_selectors: \"Fortgeschrittene CSS-Selektoren\",\n      advanced_html_attributes: \"Fortgeschrittene HTML-Attribute\",\n      advanced_html_tags: \"Fortgeschrittene HTML-Tags\",\n      algorithm_average: \"Algorithmus Durchschnitt\",\n      algorithm_find_minmax: \"Algorithmus Min/Max finden\",\n      algorithm_search_binary: \"Algorithmus Binary Suchen\",\n      algorithm_search_graph: \"Algorithmus Graph Suchen\",\n      algorithm_sort: \"Algorithmus Sortieren\",\n      algorithm_sum: \"Algorithmus Summieren\",\n      \"arguments\": \"Argumente\",\n      arithmetic: \"Arithmetic\",\n      array_2d: \"2D-Array\",\n      array_index: \"Arrayindizierung\",\n      array_iterating: \"Über Arrays Iterieren\",\n      array_literals: \"Array-Buchstabensymbole\",\n      array_searching: \"Array-Suche\",\n      array_sorting: \"Array-Sortierung\",\n      arrays: \"Arrays\",\n      basic_css_rules: \"Grundlegende CSS-Regeln\",\n      basic_css_selectors: \"Grundlegende CSS-Selektoren\",\n      basic_html_attributes: \"Grundlegende HTML-Attribute\",\n      basic_html_tags: \"Grundlegende HTML-Tags\",\n      basic_syntax: \"Grundlegende Syntax\",\n      binary: \"Binary\",\n      boolean_and: \"Boolesches Und\",\n      boolean_inequality: \"Boolesche Ungleichheit\",\n      boolean_equality: \"Boolesche Gleichheit\",\n      boolean_greater_less: \"Boolesches Kleiner/Größer\",\n      boolean_logic_shortcircuit: \"Boolescher Logik-Kurzschluss\",\n      boolean_not: \"Boolesches Not\",\n      boolean_operator_precedence: \"Rangfolge Boolescher Operatoren\",\n      boolean_or: \"Boolesches Or\",\n      boolean_with_xycoordinates: \"Koordinatenvergleich\",\n      bootstrap: \"Startprogramm\",\n      break_statements: \"Break Anweisungen\",\n      classes: \"Klassen\",\n      continue_statements: \"Continue Anweisungen\",\n      dom_events: \"DOM-Ereignisse\",\n      dynamic_styling: \"Dynamischer Style\",\n      event_concurrency: \"Event-Konkurrenz\",\n      event_data: \"Event-Daten\",\n      event_handlers: \"Event-Handler\",\n      event_spawn: \"Spawn Event\",\n      for_loops: \"For Schleifen\",\n      for_loops_nested: \"Verschachtelten For-Schleifen\",\n      for_loops_range: \"Umfang von For-Schleifen\",\n      functions: \"Funktionen\",\n      functions_parameters: \"Parameter\",\n      functions_multiple_parameters: \"Mehrfache Parameter\",\n      game_ai: \"Spiel-KI\",\n      game_goals: \"Spielziele\",\n      game_spawn: \"Spielspawn\",\n      graphics: \"Graphiken\",\n      graphs: \"Graphen\",\n      heaps: \"Heaps\",\n      if_condition: \"Bedingte If-Anweisungen\",\n      if_else_if: \"If/Else If Anweisungen\",\n      if_else_statements: \"If/Else-Anweisungen\",\n      if_statements: \"If Anweisungen\",\n      if_statements_nested: \"Verschachtelte If-Anweisungen\",\n      indexing: \"Array-Indizes\",\n      input_handling_flags: \"Eingabehandling – Flags\",\n      input_handling_keyboard: \"Eingabehandling – Tastatur\",\n      input_handling_mouse: \"Eingabehandling – Maus\",\n      intermediate_css_rules: \"Mittlere CSS-Regeln\",\n      intermediate_css_selectors: \"Mittlere CSS-Selektoren\",\n      intermediate_html_attributes: \"Mittlere HTML-Attribute\",\n      intermediate_html_tags: \"Mittlere HTML-Tags\",\n      jquery: \"jQuery\",\n      jquery_animations: \"jQuery Animationen\",\n      jquery_filtering: \"jQuery Elementfilterung\",\n      jquery_selectors: \"jQuery Selektoren\",\n      length: \"Array-Länge\",\n      math_coordinates: \"Koordinaten\",\n      math_geometry: \"Geometrie\",\n      math_operations: \"Mathematische Operationen\",\n      math_proportions: \"Proportionen\",\n      math_trigonometry: \"Trigonometrie\",\n      object_literals: \"Objekt Literale\",\n      parameters: \"Parameter\",\n      property_access: \"Zugriff auf Eigenschaften\",\n      property_assignment: \"Zuweisen von Eigenschaften\",\n      property_coordinate: \"Koordinateneigenschaft\",\n      queues: \"Datenstrukturen - Warteschlangen\",\n      reading_docs: \"Die Dokumente lesen\",\n      recursion: \"Rekursionen\",\n      return_statements: \"Return-Anweisungen\",\n      stacks: \"Datenstrukturen – Stacks\",\n      strings: \"Strings\",\n      strings_concatenation: \"String-Verkettung\",\n      strings_substrings: \"Teilstring\",\n      trees: \"Datenstrukturen – Bäume\",\n      variables: \"Variablen\",\n      vectors: \"Vektoren\",\n      while_condition_loops: \"While-Schleifen mit Bedingungen\",\n      while_loops_simple: \"While-Schleifen\",\n      while_loops_nested: \"Verschachtelte While-Schleifen\",\n      xy_coordinates: \"Kartesische Koordinaten\",\n      advanced_strings: \"Fortgeschrittene Zeichenketten\",\n      algorithms: \"Algorithmen\",\n      boolean_logic: \"Boole'sche Logik\",\n      basic_html: \"Grundlegendes HTML\",\n      basic_css: \"Grundlegendes CSS\",\n      basic_web_scripting: \"Grundlegendes Web-Scripting\",\n      intermediate_html: \"Mittleres HTML\",\n      intermediate_css: \"Mittleres HTML\",\n      intermediate_web_scripting: \"Mittleres Web-Scripting\",\n      advanced_html: \"Fortgeschrittenes HTML\",\n      advanced_css: \"Fortgeschrittenes CSS\",\n      advanced_web_scripting: \"Fortgeschrittenes Web-Scripting\",\n      input_handling: \"Eingabebehandlung\",\n      while_loops: \"while-Schleifen\",\n      place_game_objects: \"Spielobjekte plazieren\",\n      construct_mazes: \"Labyrinthe entwerfen\",\n      create_playable_game: \"Programmiere ein spielbares Spielprojekt das geteilt werden kann\",\n      alter_existing_web_pages: \"Ändere bestehende Webseiten\",\n      create_sharable_web_page: \"Erstelle Webseiten, die geteilt werden klönnen\",\n      basic_input_handling: \"Grundlagen Behandlung von Eingaben\",\n      basic_game_ai: \"Grundlagen Spiel-AI\",\n      basic_javascript: \"Grundlagen JavaScript\",\n      basic_event_handling: \"Grundlagen Ereignisbehandlung\",\n      create_sharable_interactive_web_page: \"Erstelle interaktive Webseiten, die geteilt werden können.\"\n    },\n    anonymous_teacher: {\n      notify_teacher: \"Lehrer benachrichtigen\",\n      create_teacher_account: \"Kostenlosen Lehreracount erstellen\",\n      enter_student_name: \"Dein Name:\",\n      enter_teacher_email: \"Email deines Lehrers:\",\n      teacher_email_placeholder: \"lehrer.email@beispiel.com\",\n      student_name_placeholder: \"Gib deinen Namen hier ein\",\n      teachers_section: \"Lehrer:\",\n      students_section: \"Schüler:\",\n      teacher_notified: \"Wir haben deinen Lehrer benachrichtigt, dass du mehr CodeCombat im Klassenzimmer spielen möchtest!\"\n    },\n    delta: {\n      added: \"hinzugefügt\",\n      modified: \"modifiziert\",\n      not_modified: \"nicht modifiziert\",\n      deleted: \"gelöscht\",\n      moved_index: \"Verschobener Index\",\n      text_diff: \"Text Diff\",\n      merge_conflict_with: \"MERGE KONFLIKT MIT\",\n      no_changes: \"Keine Änderungen\"\n    },\n    legal: {\n      page_title: \"Rechtliches\",\n      opensource_introduction: \"CodeCombat ist ein Teil der open source community.\",\n      opensource_description_prefix: \"Schau dir \",\n      github_url: \"unsere GitHub-Seite\",\n      opensource_description_center: \" an und mach mit wenn du möchtest! CodeCombat baut auf dutzenden Open Source Projekten auf, und wir lieben sie. Schau dir die Liste in \",\n      archmage_wiki_url: \"unserem Erzmagier-Wiki\",\n      opensource_description_suffix: \" an, welche Software dieses Spiel möglich macht.\",\n      practices_title: \"Best Practices\",\n      practices_description: \"Dies sind unsere Versprechen an dich, den Spieler, in weniger Fachchinesisch.\",\n      privacy_title: \"Datenschutz\",\n      privacy_description: \"Wir werden keine deiner persönlichen Informationen verkaufen!\",\n      security_title: \"Datensicherheit\",\n      security_description: \"Wir streben an, deine persönlichen Daten sicher zu verwahren. Als Open Source Projekt ist unsere Site frei zugänglich für jedermann, auch um unsere Sicherheitsmaßnahmen in Augenschein zu nehmen und zu verbessern.\",\n      email_title: \"E-Mail\",\n      email_description_prefix: \"Wir werden dich nicht mit Spam überschwemmen. Mittels\",\n      email_settings_url: \"deiner E-Mail-Einstellungen\",\n      email_description_suffix: \"oder durch von uns gesendete Links kannst du jederzeit deine Einstellungen ändern und Abonnements kündigen.\",\n      cost_title: \"Kosten\",\n      cost_description: \"Alle normalen Level von CodeCombat sind kostenlos spielbar, mit einem Abonnement von ${{price}} USD/Monat kann man extra Level Verzweigungen und {{gems}} Bonus Juwelen pro Monat. Du kannst das Abonnement mit nur einem Klick widerrufen und wir versprechen eine 100% Geld-zurück Garantie.\",\n      copyrights_title: \"Copyrights und Lizenzen\",\n      contributor_title: \"Contributor License Agreement\",\n      contributor_description_prefix: \"Alle Beiträge, sowohl auf unserer Webseite als auch in unserem GitHub Repository, unterliegen unserer\",\n      cla_url: \"CLA\",\n      contributor_description_suffix: \"zu welcher du dich einverstanden erklären musst bevor du zu der Entwicklung beitragen kannst.\",\n      code_title: \"Code - MIT\",\n      client_code_description_prefix: \"Der ganze Clientcode für codecombat.com im öffentlichen GitHub-Verzeichnis und in der codecombat.com Datenbank ist lizenziert unter der\",\n      mit_license_url: \"MIT Lizenz\",\n      code_description_suffix: \"Dies beinhaltet all den Code in Systemen und Komponenten der für die Erstellung von Levels durch CodeCombat zu Verfügung gestellt wird.\",\n      art_title: \"Grafiken/Musik - Creative Commons \",\n      art_description_prefix: \"Gemeinsamer Inhalt ist verfügbar unter\",\n      cc_license_url: \"Creative Commons Attribution 4.0 International License\",\n      art_description_suffix: \"Gemeinsamer Inhalt ist alles, was durch CodeCombat für den Zweck der Erstellung von Levels allgemein verfügbar gemacht wird. Dies beinhaltet:\",\n      art_music: \"Musik\",\n      art_sound: \"Sound\",\n      art_artwork: \"Grafiken\",\n      art_sprites: \"Sprites\",\n      art_other: \"Jegliche oder alle kreative nicht-Code Arbeit, die zur Verfügung gestellt wird, wenn Level erstellt werden.\",\n      art_access: \"Derzeit gibt es kein universelles, einfaches System, um diese Assets zu holen. Generell kannst du sie von den URLs holen, die auf der Seite verwendet werden. Kontaktiere uns, wenn du hilfe brauchst, oder um uns zu helfen, die Seite auszubauen, um diese Assets leichter zugänglich zu machen.\",\n      art_paragraph_1: \"Für den Verweis auf CodeCombat, nenne und verlinke bitte die Website codecombat.com nahe der Quelle oder an der Stelle, wo es für das Medium angemessen ist. Zum Beispiel:\",\n      use_list_1: \"Wenn in einem Film verwendet, nenne codecombat.com in den Credits/Abspann\",\n      use_list_2: \"Wenn auf einer Webseite verwendet, füge einen Link nahe bei der Verwendung ein, z.B. unter einem Bild oder auf der generellen Beitragsseite, wo auch andere Creative Commons Werke und Open Source Software genannt wird, die auf der Seite verwendet wird. Wenn deutlich auf CodeCombat Bezug genommen wird, wie z.B. in einem Blogeintrag, in dem CodeCombat erwähnt wird, dann muss CodeCombat nicht separat belegt werden.\",\n      art_paragraph_2: \"Wenn der benutzte Inhalt nicht von CodeCombat sonder einem Benutzer von codecombat.com geschaffen wurde, schreibe es diesem stattdessen zu und folge den Anweisungen, wenn es welche gibt, in der Beschreibung dieses Inhalts.\",\n      rights_title: \"Rechte vorbehalten\",\n      rights_desc: \"Alle Rechte vorbehalten für die Level selbst. Dies beinhaltet\",\n      rights_scripts: \"Skripte\",\n      rights_unit: \"Einheitenkonfiguration\",\n      rights_writings: \"Schriftliches\",\n      rights_media: \"Medien (Sounds, Musik) und jede andere Form von kreativem Inhalt der spezifisch für das Level ist nicht generell für die Levelerstellung bereitgestellt wird.\",\n      rights_clarification: \"Zur Klarstellung: Alles, was im Level Editor zur Verfügung steht, um Levels zu erstellen, unterliegt CC; jedoch nicht der Content, der mit dem Level Editor erstellt wird oder im Rahmen der Erstellung von Levels hochgeladen wird.\",\n      nutshell_title: \"Zusammenfassung\",\n      nutshell_description: \"Jegliche Ressourcen, die wir im Level Editor zur Verfügung stellen, sind für dich frei nutzbar, um Levels zu erstellen. Doch wir behalten uns das Recht vor, die Verbreitung der Levels (welche auf codecombat.com erstellt werden) einzuschränken, so dass in der Zukunft dafür gezahlt werden muss, wenn es das ist, was letztendlich passieren wird.\",\n      nutshell_see_also: \"Siehe auch:\",\n      canonical: \"Die englische Version dieses Dokuments ist die definitive, kanonische Version. Sollte es Unterschiede zwischen den Übersetzungen geben, dann hat das englische Dokument Vorrang.\",\n      third_party_title: \"Third Party Dienste\",\n      third_party_description: \"CodeCombat benutzt folgende Third Party Dienste (unter anderem):\",\n      cookies_message: \"CodeCombat nutzt essentielle und einige nicht-essentielle Cookies.\",\n      cookies_deny: \"Nicht-essentielle Cookies ablehnen\"\n    },\n    ladder_prizes: {\n      title: \"Turnierpreise\",\n      blurb_1: \"Die Preise werden verliehen nach\",\n      blurb_2: \"den Turnierregeln\",\n      blurb_3: \"und dem Top Mensch und Oger-Spieler.\",\n      blurb_4: \"Zwei Teams heißt die doppelte Anzahl zu gewinnender Preise!\",\n      blurb_5: \"(Es wird zwei Erstplazierte, zwei Zweitplatzierte, usw. geben)\",\n      rank: \"Rang\",\n      prizes: \"Gewinne\",\n      total_value: \"Gesamtwert\",\n      in_cash: \"in Bar\",\n      custom_wizard: \"Benutzerdefinierter CodeCombat Zauberer\",\n      custom_avatar: \"Benutzerdefinierter CodeCombat Avatar\",\n      heap: \"für sechs Monate \\\"Startup\\\" Zugriff\",\n      credits: \"Guthaben\",\n      one_month_coupon: \"Gutschein: Wähle entweder Rails oder HTML\",\n      one_month_discount: \"30% Rabatt: Wähle entweder Rails oder HTML\",\n      license: \"Lizenz\",\n      oreilly: \"Ebook deiner Wahl\"\n    },\n    calendar: {\n      year: \"Jahr\",\n      day: \"Tag\",\n      month: \"Monat\",\n      january: \"Januar\",\n      february: \"Februar\",\n      march: \"März\",\n      april: \"April\",\n      may: \"Mai\",\n      june: \"Juni\",\n      july: \"July\",\n      august: \"August\",\n      september: \"September\",\n      october: \"Oktober\",\n      november: \"November\",\n      december: \"Dezember\"\n    },\n    code_play_create_account_modal: {\n      title: \"DU HAST ES GESCHAFFT!\",\n      body: \"Du bist nun auf dem besten Weg, ein Master Coder zu werden. Melde dich an und erhalte zusätzliche <strong>100 EDELSTEINE</strong> sowie die Chance, <strong>2.500 € UND ANDERE PREISE VON LENOVO ZU GEWINNEN</strong>.\",\n      sign_up: \"MELDE DICH AN UND PROGRAMMIERE WEITER ▶\",\n      victory_sign_up_poke: \"ERSTELLE EIN KOSTENLOSES KONTO, UM DEINEN CODE ZU SPEICHERN UND EINE CHANCE AUF DEN GEWINN VON PREISEN ZU HABEN!\",\n      victory_sign_up: \"MELDE DICH AN FÜR EINE CHANCE AUF DEN <strong>GEWINN VON 2.500 €</strong>\"\n    },\n    server_error: {\n      email_taken: \"Diese E-Mail wird bereits verwendet\",\n      username_taken: \"Benutzername ist bereits vergeben\"\n    },\n    esper: {\n      line_no: \"Zeile $1: \",\n      uncaught: \"Nicht abgefangener $1\",\n      reference_error: \"Bezugs-Fehler: \",\n      argument_error: \"Argument-Fehler: \",\n      type_error: \"Typ-Fehler: \",\n      syntax_error: \"Syntax-Fehler: \",\n      error: \"Fehler: \",\n      x_not_a_function: \"`$1` ist keine Funktion.\",\n      x_not_defined: \"$1 ist nicht definiert\",\n      spelling_issues: \"Achte auf die Schreibweise: meintest du `$1` anstelle von `$2`?\",\n      capitalization_issues: \"Achte auf Groß-/Kleinschreibung: `$1` sollte `$2` heißen.\",\n      py_empty_block: \"Leeres $1. Schreibe 4 Leerzeichen vor allen Anweisungen innerhalb des $2.\",\n      fx_missing_paren: \"Wenn du `$1` als Funktion verwenden möchtest, dann brauchst du `()`.\",\n      unmatched_token: \"`$1` ohne Gegenpart.  Jede öffnende `$2` benötigt eine zugehörige schließende `$3`.\",\n      unterminated_string: \"String ohne Abschluss. Füge ein ein `\\\"` am Ende deiner Zeichenkette hinzu.\",\n      missing_semicolon: \"Semikolon fehlt.\",\n      missing_quotes: \"Anführungszeichen fehlen. Versuche `$1`\",\n      argument_type: \"Das Argument `$2` von `$1` sollte den Typ `$3` haben, hat aber `$4`: `$5`.\",\n      argument_type2: \"Das Argument `$2` von `$1`' sollte den Typ `$3` haben, hat aber `$4`.\",\n      target_a_unit: \"Ziel(target) sollte eine Einheit(unit) sein.\",\n      attack_capitalization: \"Greife $1 an, nicht $2. (Groß-/Kleinschreibung ist wichtig.)\",\n      empty_while: \"Leere While-Schleife. Setze 4 Leerzeichen vor die Befehle innerhalb der While-Schleife.\",\n      line_of_site: \"Argument `$2` von `$1` hat ein Problem. Gibt es schon einen Feind  mit Sichtverbindung?\",\n      need_a_after_while: \"`$1` erforderlich nach `$2`.\",\n      too_much_indentation: \"Zu viele Leerzeichen eingerückt am Anfang dieser Zeile.\",\n      missing_hero: \"Das Schlüsselwort `$1` fehlt; es sollte `$2` sein.\",\n      takes_no_arguments: \"`$1` hat keine Argumente.\",\n      no_one_named: \"Es gibt kein Ziel mit Namen \\\"$1\\\".\",\n      separated_by_comma: \"Parameter in Funktionsaufrufen müssen durch `,`s getrennt werden\",\n      protected_property: \"Kann geschütze Eigenschaft nicht auslesen: $1\",\n      need_parens_to_call: \"Wenn du `$1` als Funktion aufrufen willst musst du `()` verwenden\",\n      expected_an_identifier: \"Erwartete einen Bezeichner, fand stattdessen '$1'.\",\n      unexpected_identifier: \"Unerwarteter Bezeichner\",\n      unexpected_end_of: \"Unerwartetes Ende der Eingabe\",\n      unnecessary_semicolon: \"Überzähliges Semikolon.\",\n      unexpected_token_expected: \"Unerwartetes Token. Erwartete $1, fand aber $2 beim Parsen (aufteilen) von $3\",\n      unexpected_token: \"Unerwartetes Token $1\",\n      unexpected_token2: \"Unerwartetes Token\",\n      unexpected_number: \"Unnerwartete Zahl\",\n      unexpected: \"Unerwartet: '$1'.\",\n      escape_pressed_code: \"Escape-Taste gedrückt; Programm abgebrochen.\",\n      target_an_enemy: \"Wenn du einen Feind als Ziel auswählst, verwende den Namen wie `$1`, nicht den String `$2`.\",\n      target_an_enemy_2: \"Wähle einen Feind als Ziel mit dem Namen, wie $1.\",\n      cannot_read_property: \"Kann die Eigenschaft '$1' von Undefiniert nicht auslesen.\",\n      attempted_to_assign: \"Du hast versucht, einer schreibgeschützten Eigenschaft etwas zuzuordnen.\",\n      unexpected_early_end: \"Unerwartetes frühes Ende des Programms.\",\n      you_need_a_string: \"Du brauchst einen String um zu bauen. Einen von $1\",\n      unable_to_get_property: \"Konnte Eigenschaft '$1' von Undefiniert oder Null-Verweis nicht auslesen.\",\n      code_never_finished_its: \"Das Programm wurde nie fertig. Es ist entweder wirklich langsam oder hat eine Endlos-Schleife.\",\n      unclosed_string: \"String ist nicht abgeschlossen.\",\n      unmatched: \"ohne Gegenstück: '$1'.\",\n      error_you_said_achoo: \"Du sagtest: $1, aber das Kennwort ist: $2. (Beachte die Groß-/Kleinschreibung.)\",\n      indentation_error_unindent_does: \"Einrück-Fehler: Das weiter nach links Einrücken passt nicht zu den äußeren Einrückebenen\",\n      indentation_error: \"Einrück-Fehler.\",\n      need_a_on_the: \"Am Ende der Zeile wird ein `:` nach `$1` benötigt.\",\n      attempt_to_call_undefined: \"Versuch, '$1' aufzurufen (ein null/nil-Wert)\",\n      unterminated: \"`$1` ohne Abschluss\",\n      target_an_enemy_variable: \"Wähle als Ziel Variable $1, nicht den String $2. (Versuche $3.)\",\n      error_use_the_variable: \"Benutze den Variablennamen: `$1` - und nicht als String: `$2`\",\n      indentation_unindent_does_not: \"Das weiter nach links-Einrücken passt nicht zu den äußeren Einrückebenen.\",\n      unclosed_paren_in_function_arguments: \"Nicht geschlossene $1 in Argumenten der Funktion.\",\n      unexpected_end_of_input: \"Unerwartetes Ende der Eingabe\",\n      there_is_no_enemy: \"Hier ist kein `$1`. Verwende zuerst `$2`.\",\n      try_herofindnearestenemy: \"Versuche `$1`\",\n      there_is_no_function: \"Es gibt keine Funktion `$1`, aber `$2` hat eine Methode namens `$3`.\",\n      attacks_argument_enemy_has: \"`$1` hat ein Problem mit Argument `$2`.\",\n      is_there_an_enemy: \"Gibt es schon einen Feind mit Sichtverbindung?\",\n      target_is_null_is: \"Ziel ist $1. Gibt es immer ein Ziel, das angegriffen werden kann? (Verwende $2?)\",\n      hero_has_no_method: \"`$1` hat keine Methode `$2`.\",\n      there_is_a_problem: \"Es gibt ein Problem mit deinem Programm.\",\n      did_you_mean: \"Meintest du $1? Du hast keinen Ausrüstungsgegenstand, der diese Fertigkeit hat.\",\n      missing_a_quotation_mark: \"Fehlendes Anführungszeichen\",\n      missing_var_use_var: \"`$1` fehlt. Verwende `$2`, um eine neue Variable zu definieren.\",\n      you_do_not_have: \"Du hast keinen Ausrüstungsgegenstand mit Fertigkeit $1.\",\n      put_each_command_on: \"Schreibe jeden Befehl in eine eigene Zeile\",\n      are_you_missing_a: \"Fehlt ein '$1' hinter '$2'? \",\n      your_parentheses_must_match: \"Deine Klammern müssen paarweise zusammenpassen.\"\n    },\n    parent_landing: {\n      slogan_quote: \"\\\"CodeCombat macht eine Menge Spass und du wirst viel dabei lernen.\\\"\",\n      quote_attr: \"5. Klässler, Oakland\",\n      refer_teacher: \"Empfehlen Sie einen Lehrer\",\n      focus_quote: \"Ermöglichen Sie eine noch bessere Zukunft Ihres Kindes\",\n      value_head1: \"Der engagierenste Weg, programmieren zu lernen\",\n      value_copy1: \"CodeCombat der persönliche Coach des Kindes. Indem es nationale Lehrplanstandards abdeckt, wird es Ihrem Kind auf spielerische Weise beibringen Algorithmen zu programmieren, Websiten zu erstellen und sogar ihre eigenen Spiele zu realisieren.\",\n      value_head2: \"Baue wichtige Fähigkeiten für das 21 Jahrhundert aus\",\n      value_copy2: \"Ihre Kinder werden die Navigation in der digitalen Welt lernen und sich damit zurechtfinden können. CodeCombat ist ein Problemlöser, der das kritische Denken und die Belastbarkeit Ihres Kindes verbessern wird.\",\n      value_head3: \"Helden, die Ihr Kind lieben wird\",\n      value_copy3: \"Wir wissen, wie wichtig Spaß und Engagement für das sich entwickelnde Hirn sind, also haben wir so viel Lernen wie wir können in ein Spiel verpackt, welches sie lieben werden.\",\n      dive_head1: \"Nicht nur für Programmierer\",\n      dive_intro: \"Computerwissen hat eine weite Bandbreite an möglichen Anwendungen. Sehen Sie sich mal die unten aufgeführten Beispiele an!\",\n      medical_flag: \"Medizinische Anwendungen\",\n      medical_flag_copy: \"Vom Erforschen des Menschliches Genoms zu MRI-Maschinen, programmieren erlaubt es, den Körper wie noch nie zuvor zu sehen und zu erleben.\",\n      explore_flag: \"Die Erkundung des Weltalls\",\n      explore_flag_copy: \"Apollo schaftte es nur dank hart arbeitenden Rechnern auf den Mond, und Wissenschaflter nutzen Computerprogramme, um (unter anderem) die Schwerkraft von Plantetn zu berechnen und neue Sterne zu finden.\",\n      filmaking_flag: \"Filme und Animationen\",\n      filmaking_flag_copy: \"Von der Technik hinter Jurassic Park zu den unglaublichen Animationsfilmen von Dreamworks und Pixar, Filme wären nicht dasselbe ohne die digitale Kreativität dahinter.\"\n    },\n    parent_modal: {\n      refer_teacher: \"Lehrperson empfehlen\",\n      name: \"Ihr Name\",\n      parent_email: \"Ihre Emailadresse\",\n      teacher_email: \"Die Emailadresse der Lehrperson\",\n      message: \"Nachricht\",\n      custom_message: \"Ich habe gerade eben CodeCombat gefunden und dachte mir, dass es eine großartige Erweiterung für unseren Unterricht sein könte! Es ist eine Lernplattform für Computerwissen mit auf Standards ausgerichteten Lehrplänen.\\n\\n Computerkentnisse sind so wichtig und ich denke, es wäre ein guter Weg, um den Schülern das Programieren beizubringen.\",\n      send: \"Email senden\"\n    },\n    hoc_2018: {\n      download_pdf: \"PDF herunterladen\",\n      about: \"Über CodeCombat:\",\n      about_copy: \"CodeCombat ist ein Spiel-basiertes Informatikprogramm um echtes Python und JavaScript zu lehren. CodeCombat ist an Standardlehrplänen ausgerichtet und um ein Spiel herum gebaut, das Schüler lieben. Über 12 Millionen Schüler haben mit CodeCombat programmieren gelernt!\",\n      point4: \"✓ Projekt-basierte Kurse\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1041\n");

/***/ })

});