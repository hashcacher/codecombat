/*! hash:345dfe6c0e434e9c7378, chunkhash:de8e8960e75660db4c38, name:locale/hu, filebase:hu.bundle.js, query:, file:javascripts/chunks/locale/hu.bundle.js */
webpackJsonp([51],{

/***/ 1057:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"magyar\",\n  englishDescription: \"Hungarian\",\n  translation: {\n    new_home: {\n      slogan: \"A legvonzóbb játék, amivel megtanulhatsz programozni.\",\n      classroom_edition: \"Tantermi változat:\",\n      learn_to_code: \"Tanulj meg kódolni:\",\n      play_now: \"Játssz Most\",\n      im_a_teacher: \"Tanár vagyok\",\n      im_a_student: \"Diák vagyok\",\n      learn_more: \"Tudj meg többet\",\n      classroom_in_a_box: \"Egy mindent-egyben megoldás programozás tanításra.\",\n      codecombat_is: \"A CodeCombat a diákoknak egy olyan platform, melyben programozni tanulnak, miközben egy igazi játékot játszanak.\",\n      our_courses: \"Kurzusaink osztálytermi keretek közötti oktatásra kiválóan alkalmasak, akár informatikában kevésbé jártas tanárok számára is.\",\n      watch_how: \"Nézd meg hogyan alakítja át a CodeCombat az emberek tanuási módját a számítástechnikát illetően.\",\n      top_screenshots_hint: \"A tanulók valós időben láthatják a beírt kód működését.\",\n      designed_with: \"Tanárok igényeihez tervezve\",\n      real_code: \"Valódi, beírandó kódolás\",\n      from_the_first_level: \"az első pályától kezdve\",\n      getting_students: \"A szintaxis és a helyes struktúrák elsajátításához kritikus fontosságú, hogy a kódírást rögtön az elején elkezdjék a tanulók.\",\n      educator_resources: \"Oktatási segédanyagok\",\n      course_guides: \"és kurzus útmutatók\",\n      teaching_computer_science: \"A programozás oktatása nem igényel drága képesítést, mivel számos eszközzel segítjük az eltérő felkészültségű tanárokat.\",\n      accessible_to: \"Hozzáférhető\",\n      everyone: \"mindenki számára\",\n      democratizing: \"A programozni tanulás demokratizálása filozófiánk lényege. Mindenki számára hozzáférhetővé kell tenni ezt az ismeretanyagot.\",\n      forgot_learning: \"Azt hiszem teljesen megfeledkeztek róla, hogy valójában tanulnak valamit.\",\n      wanted_to_do: \"Mindig is szerettem volna kódolni, de sosem gondoltam volna, hogy a suliban megtanulhatom.\",\n      builds_concepts_up: \"Tetszik a CodeCombat fogalmainak felépítése. Nagyon egyszerű ezeket megérteni és könnyen ki lehet mindent találni.\",\n      why_games: \"Miért fontos játékokon keresztül tanulni?\",\n      games_reward: \"A játékok jutalmazzák a kreatív erőfeszítést.\",\n      encourage: \"A játék olyan közeg, ami elősegíti az interakciót, a kezdeményezést, és a kísérletezést. Egy jó játék ösztönzi a játékost,hogy idővel egyre jobb legyen bizonyos képességekben. Ez ugyanaz a fontos folyamat, melyen a tanulás során megyünk keresztül.\",\n      excel: \"A játékok kiválóan jutalmazzák az\",\n      struggle: \"alkotó erőfeszítést\",\n      kind_of_struggle: \"azt a fajta erőfeszítést, ami olyan tanuláshoz vezet, ami\",\n      motivating: \"magával ragadó\",\n      not_tedious: \"nem egyhangú.\",\n      gaming_is_good: \"Kutatások alapján valószínű, hogy a játék jó hatással van a fejlődő agyra. (Bizony!)\",\n      game_based: \"A játék-alapú tanító rendszereket\",\n      compared: \"összevetve\",\n      conventional: \"a hagyományos kiértékelő módszerekkel világos különbséget kapunk: a játékok jobban segítenek a tudás rögzítésében, koncentrálásban és\",\n      perform_at_higher_level: \"nagyobb teljesítmény elérésében.\",\n      feedback: \"A játékok valós idejű visszajelzést adnak, ami lehetővé teszi a tanulóknak, hogy helyesbítsék megoldásaikat és teljesebben megértsék az anyagot, mintha csak \\\"helyes\\\" és \\\"hibás\\\" válaszokra támaszkodnak.\",\n      real_game: \"Valódi játék, mely valódi programozással játszható.\",\n      great_game: \"Egy nagyszerű játék több mint jelvények és kitüntetések - a játékos fejlődéséről, jól kidolgozott rejtvényekről, kihívások magabiztos kezeléséről szól.\",\n      agency: \"CodeCombat a játék, mely megadja a játékosoknak azt az eszköztárat és magabiztosságot, melynek segítségével kezdő és haladó tanulók is helyes kódot írhatnak.\",\n      request_demo_title: \"Már ma érdemes elkezdeni!\",\n      request_demo_subtitle: \"Nézd meg a bemutatót, és a diákok akár egy órán belül elkezdhetik a játékot.\",\n      get_started_title: \"Hozd létre a saját osztályodat\",\n      get_started_subtitle: \"Hozd létre az osztályod, add hozzá a diákokat, és kövesd nyomon fejlődésüket az informatikában.\",\n      request_demo: \"Bemutató kérése\",\n      setup_a_class: \"Osztály létrehozása\",\n      have_an_account: \"Van már fiókod?\",\n      logged_in_as: \"Jelenleg így vagy belépve\",\n      computer_science: \"Programozás kurzusok minden korosztálynak\",\n      ffa: \"Ingyenes minden tanulónak\",\n      coming_soon: \"Hamarosan!\",\n      courses_available_in: \"A Kurzusok elérhetőek JavaScript, Python, és Java (hamarosan!) nyelveken\",\n      boast: \"Elég bonyolult feladványokkal dicsekedhet, melyek játékosokat és kódereket egyaránt elbűvölnek.\",\n      winning: \"Programozás házi feladatok és RPG játékélmény nyerő kombinációja, mely tényleg élvezetessé teszi a tanulást.\",\n      run_class: \"Minden, amire egy programozás óra megtartásához szükséged lehet. Mély szaktudás nem szükséges.\",\n      goto_classes: \"Ugrás a saját osztályokhoz\",\n      view_profile: \"Saját profil megtekintése\",\n      view_progress: \"Fejlődés megtekintése\",\n      go_to_courses: \"Ugrás a Kurzusaimhoz\",\n      want_coco: \"Szeretnéd kipróbálni a CodeCombatot az iskoládban?\"\n    },\n    nav: {\n      map: \"Térkép\",\n      play: \"Játék\",\n      community: \"Közösség\",\n      courses: \"Kurzusok\",\n      blog: \"Blog\",\n      forum: \"Fórum\",\n      account: \"Fiók\",\n      my_account: \"Fiókom\",\n      profile: \"Profil\",\n      home: \"Kezdőlap\",\n      contribute: \"Segítségnyújtás\",\n      legal: \"Jogi információk\",\n      privacy: \"Adatvédelmi megjegyzés\",\n      about: \"Rólunk\",\n      contact: \"Kapcsolat\",\n      twitter_follow: \"Követés\",\n      my_classrooms: \"Tantermeim\",\n      my_courses: \"Kurzusaim\",\n      careers: \"Karrier\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Hozz létre egy Osztályt\",\n      other: \"Egyéb\",\n      learn_to_code: \"Tanulj meg Kódolni!\",\n      toggle_nav: \"Navigációs kapcsoló\",\n      schools: \"Iskolák\",\n      get_involved: \"Indítás\",\n      open_source: \"Nyílt forráskód (GitHub)\",\n      support: \"Támogatás\",\n      faqs: \"GYIK\",\n      copyright_prefix: \"Copyright\",\n      copyright_suffix: \"Minden jog fenntartva.\",\n      help_pref: \"Segítségre van szükséged? Küldj egy e-mailt\",\n      help_suff: \"és mi fölvesszük veled a kapcsolatot!\",\n      resource_hub: \"Segédanyag központ\",\n      apcsp: \"Számítógép-tudományi alapelvek\",\n      parent: \"Szülők\"\n    },\n    modal: {\n      close: \"Bezár\",\n      okay: \"Oké\"\n    },\n    not_found: {\n      page_not_found: \"Az oldal nem található\"\n    },\n    diplomat_suggestion: {\n      title: \"Segítsd lefordítani a CodeCombat-ot!\",\n      sub_heading: \"Szükségünk van a segítségedre!\",\n      pitch_body: \"Az oldalt angol nyelven fejlesztettük, de máris rengeteg játékosunk van szerte a világban. Nagyon sokan szeretnének közülük magyarul játszani, de nem beszélnek angolul. Ha te beszélsz angolul is, magyarul is, kérlek jelentkezz Diplomatának, s segíts lefordítani mind a honlapot, mind a pályákat magyarra.\",\n      missing_translations: \"Addig, amíg nincs minden lefordítva magyarra, angol szöveget fogsz látni ott, ahol még nincs fordítás.\",\n      learn_more: \"Tudj meg többet a Diplomatákról!\",\n      subscribe_as_diplomat: \"Jelentkezz Diplomatának\"\n    },\n    play: {\n      anon_signup_title_1: \"A CodeCombat-ban van \",\n      anon_signup_title_2: \"Tantermi változat!\",\n      anon_signup_enter_code: \"Tanterem kód:\",\n      anon_signup_ask_teacher: \"Nincs kódot? Kérdezd a tanárodat!\",\n      anon_signup_create_class: \"Szeretnél egy tantermet létrehozni?\",\n      anon_signup_setup_class: \"Hozz létre egy tantermet, adj hozzá diákokat, és kísérd figyelemmel a haladásukat!\",\n      anon_signup_create_teacher: \"Hozz létre egy ingyenes tanári azonosítót\",\n      play_as: \"Játssz mint\",\n      get_course_for_class: \"A tantermeidhez adj hozzá játék-fejlesztési és egyéb kurzusokat!\",\n      request_licenses: \"A részletekért kérdezd iskolai kapcsolattartóinkat!\",\n      compete: \"Mérkőzz!\",\n      spectate: \"Néző\",\n      players: \"Játékosok\",\n      hours_played: \"Játékidő\",\n      items: \"Tárgyak\",\n      unlock: \"Feloldás\",\n      confirm: \"Megerősítés\",\n      owned: \"Megszerzett\",\n      locked: \"Zárolva\",\n      available: \"Elérhető\",\n      skills_granted: \"Elnyert képességek\",\n      heroes: \"Hősök\",\n      achievements: \"Eredmények\",\n      settings: \"Beállítások\",\n      poll: \"Kérdőív\",\n      next: \"Következő\",\n      change_hero: \"Hős váltás\",\n      change_hero_or_language: \"Válts hőst vagy nyelvet\",\n      buy_gems: \"Vásárolj Drágköveket\",\n      subscribers_only: \"Csak előfizetőknek!\",\n      subscribe_unlock: \"Fizess elő, hogy hozzáférhess!\",\n      subscriber_heroes: \"Fizess elő még ma, hogy azonnal hozzáférhess Amara-hoz, Hushbaum-hoz és Hattori-hoz!\",\n      subscriber_gems: \"Fizess elő még ma, hogy megvehesd ezt a hőst drágakövekért!\",\n      anonymous: \"Anonymus Játékos\",\n      level_difficulty: \"Nehézség: \",\n      awaiting_levels_adventurer_prefix: \"Minden héten öt új pályát teszünk elérhetővé.\",\n      awaiting_levels_adventurer: \"Jelentkezz mint Kalandor\",\n      awaiting_levels_adventurer_suffix: \"legyél az első aki új pályákon játszik.\",\n      adjust_volume: \"Hangerő beállítása\",\n      campaign_multiplayer: \"Multiplayer Arénák\",\n      campaign_multiplayer_description: \"... amelyekben a kódod felveheti a versenyt más játékosok kódjával\",\n      brain_pop_done: \"Legyőzted az Ogrékat a programkódoddal! Győztél!\",\n      brain_pop_challenge: \"Tedd próbára magad újra, egy másik programnyelvet használva!\",\n      replay: \"Újra\",\n      back_to_classroom: \"Vissza az Osztályterembe\",\n      teacher_button: \"Tanároknak\",\n      get_more_codecombat: \"Még több CodeCombat\"\n    },\n    code: {\n      \"if\": \"ha\",\n      \"else\": \"különben\",\n      elif: \"különben ha\",\n      \"while\": \"amíg\",\n      loop: \"ciklus\",\n      \"for\": \"ismétlés\",\n      \"break\": \"megszakítás\",\n      \"continue\": \"folytatás\",\n      pass: \"kihagy\",\n      \"return\": \"visszatérés\",\n      then: \"akkor\",\n      \"do\": \"csináld\",\n      end: \"vége\",\n      \"function\": \"függvény\",\n      def: \"definíció\",\n      \"var\": \"változó\",\n      self: \"saját\",\n      hero: \"hős\",\n      \"this\": \"ez\",\n      or: \"vagy\",\n      \"||\": \"vagy\",\n      and: \"és\",\n      \"&&\": \"és\",\n      not: \"nem\",\n      \"!\": \"nem\",\n      \"=\": \"legyen\",\n      \"==\": \"egyenlő\",\n      \"===\": \"szigorúan egyenlő\",\n      \"!=\": \"nem egyenlő\",\n      \"!==\": \"nem szigorúan egyenlő\",\n      \">\": \"nagyobb, mint\",\n      \">=\": \"nagyobb vagy egyenlő, mint\",\n      \"<\": \"kisebb, mint\",\n      \"<=\": \"kisebb vagy egyenlő, mint\",\n      \"*\": \"szorozva\",\n      \"/\": \"osztva\",\n      \"+\": \"plusz\",\n      \"-\": \"mínusz\",\n      \"+=\": \"legyen hozzáadva\",\n      \"-=\": \"legyen kivonva\",\n      True: \"Igaz\",\n      \"true\": \"igaz\",\n      False: \"Hamis\",\n      \"false\": \"hamis\",\n      undefined: \"meghatározatlan\",\n      \"null\": \"üres\",\n      nil: \"üres\",\n      None: \"Semmi\"\n    },\n    share_progress_modal: {\n      blurb: \"Nagyon szépen fejlődsz! Mondd el a szüleidnek, mit tanultál a CodeCombat-ban.\",\n      email_invalid: \"Érvénytelen e-mail-cím.\",\n      form_blurb: \"Írd be valamelyik szülőd e-mail-címét, és mi megmutatjuk neki!\",\n      form_label: \"E-mail-cím\",\n      placeholder: \"e-mail-cím\",\n      title: \"Szép munka, Tanítvány\"\n    },\n    login: {\n      sign_up: \"Regisztráció\",\n      email_or_username: \"E-mail vagy felhasználónév\",\n      log_in: \"Bejelentkezés\",\n      logging_in: \"Bejelentkezés\",\n      log_out: \"Kijelentkezés\",\n      forgot_password: \"Elfelejtetted a jelszavad?\",\n      finishing: \"Befejezés\",\n      sign_in_with_facebook: \"Jelentkezz be Facebook-kal\",\n      sign_in_with_gplus: \"Jelentkezz be G+-szal\",\n      signup_switch: \"Hozz létre egy fiókot!\"\n    },\n    signup: {\n      complete_subscription: \"Előfizetés létrehozása\",\n      create_student_header: \"Tanulói fiók létrehozása\",\n      create_teacher_header: \"Oktatói fiók létrehozása\",\n      create_individual_header: \"Egyéni fiók létrehozása\",\n      email_announcements: \"Szeretnél kapni hírlevelet?\",\n      sign_in_to_continue: \"Lépj be vagy hozz létre egy felhasználót a folytatáshoz!\",\n      teacher_email_announcements: \"Értesítéseket kérek az új tanári segédanyagokról, tantervekről és kurzusokról.\",\n      creating: \"Fiók létrehozása\",\n      sign_up: \"Regisztráció\",\n      log_in: \"Belépés meglévő fiókkal\",\n      required: \"Csak akkor mehetsz arra, ha már bejelentkeztél.\",\n      login_switch: \"Már van fiókod?\",\n      optional: \"nem kötelező\",\n      connected_gplus_header: \"Sikeresen kapcsolódtál a Google+ fiókon keresztül.\",\n      connected_gplus_p: \"Fejezd be a feliratkozást, hogy be tudj jelentkezni a Google+ fiókodon keresztül.\",\n      connected_facebook_header: \"Sikeresen kapcsolódtál a Facebook fiókon keresztül.\",\n      connected_facebook_p: \"Fejezd be a feliratkozást, hogy be tudj jelentkezni a Facebook fiókodon keresztül.\",\n      hey_students: \"A tanulóknak meg kell adniuk a tanártól kapott osztálykódot.\",\n      birthday: \"Születésnap\",\n      parent_email_blurb: \"Biztosan már alig várod, hogy programozhass &mdash; mi legalább ilyen izgatottak vagyunk! A szüleidnek e-mailben elküldjük a további utasításokat ahhoz, hogy létrehozhassanak számodra egy fiókot. Küldj egy e-mailt {{email_link}}, ha kérdésed van.\",\n      classroom_not_found: \"Ezzel az osztálykóddal nem létezik osztály. Ellenőrizd a helyesírásod vagy fordulj segítségért a tanárodhoz.\",\n      checking: \"Ellenőrzés...\",\n      account_exists: \"Ez az e-mail cím már foglalt:\",\n      sign_in: \"Feliratkozás\",\n      email_good: \"Ez az e-mail jónak tűnik!\",\n      name_taken: \"Ez a felhasználónév már foglalt. Próbáld meg ezt: {{suggestedName}}\",\n      name_available: \"A felhasználónév elérhető.\",\n      name_is_email: \"A felhasználónév nem lehet e-mail cím.\",\n      choose_type: \"Válassz fióktípust:\",\n      teacher_type_1: \"Tanítsd a programozást a CodeCombat játékkal!\",\n      teacher_type_2: \"Hozz létre saját osztályt\",\n      teacher_type_3: \"Kurzus útmutatók megtekintése\",\n      teacher_type_4: \"Tanulói fejlődés megtekintése\",\n      signup_as_teacher: \"Feliratkozás tanárként\",\n      student_type_1: \"Tanulj meg programozni egy lebilincselő játékban!\",\n      student_type_2: \"Játssz az osztályoddal\",\n      student_type_3: \"Versenyezz az arénákban\",\n      student_type_4: \"Válassz hőst\",\n      student_type_5: \"Készítsd elő az osztálykódot!\",\n      signup_as_student: \"Feliratkozás tanulóként\",\n      individuals_or_parents: \"Egyéni játékosok és szülők\",\n      individual_type: \"Egyéni játékosok számára iskolai kereteken kívül. A szülők itt iratkozhatnak fel fiók létrehozásához.\",\n      signup_as_individual: \"Feliratkozás egyéni játékosként\",\n      enter_class_code: \"Osztálykód megadása\",\n      enter_birthdate: \"Születési dátum megadása:\",\n      parent_use_birthdate: \"Szülőknek: kérjük, a saját születési dátumotokat adjátok meg.\",\n      ask_teacher_1: \"Az osztálykódot a tanárodtól kérheted el.\",\n      ask_teacher_2: \"Nem vagy osztálytag? Hozz létre \",\n      ask_teacher_3: \"Egyéni fiókot\",\n      ask_teacher_4: \" inkább.\",\n      about_to_join: \"Ide fogsz csatlakozni:\",\n      enter_parent_email: \"Add meg a szülőd e-mail címét:\",\n      parent_email_error: \"Hiba történt az e-mail küldése közben. Ellenőrizd az e-mail címet, majd próbáld meg újra.\",\n      parent_email_sent: \"E-mailben elküldtük a további utasításokat fiók létrehozásához. Kérd meg a szülődet, hogy ellenőrizze a postafiókját.\",\n      account_created: \"A fiók létrejött.\",\n      confirm_student_blurb: \"Jegyezd fel az adatokat, mert később is szükséged lesz rájuk. A tanárod is tud segíteni, ha bármikor új jelszót szeretnél beállítani.\",\n      confirm_individual_blurb: \"Jegyezd fel a bejelentkezési adataidat, később is szükséged lehet rájuk. Erősítsd meg az e-mail címed, így akkor is helyreállíthatod a fiókod, ha elfelejtenéd a jelszavadat. Ellenőrizd a postafiókod.\",\n      write_this_down: \"Jegyezd fel ezeket az adatokat:\",\n      start_playing: \"Kezdd el a játékot!\",\n      sso_connected: \"Sikeresen kapcsolódtál:\",\n      select_your_starting_hero: \"Válaszd ki azt a hőst, amelyikkel el szeretnéd kezdeni a játékot:\",\n      you_can_always_change_your_hero_later: \"A kiválasztott hőst a későbbiekben bármikor lecserélheted.\",\n      finish: \"Befejezés\"\n    },\n    recover: {\n      recover_account_title: \"Meglévő fiók visszaállítása\",\n      send_password: \"Küldj Új Jelszót\",\n      recovery_sent: \"Új jelszó elküldve.\"\n    },\n    items: {\n      primary: \"Elsődleges\",\n      secondary: \"Másodlagos\",\n      armor: \"Vért\",\n      accessories: \"Kiegészítők\",\n      misc: \"Egyveleg\",\n      books: \"Könyvek\"\n    },\n    common: {\n      back: \"Vissza\",\n      coming_soon: \"Hamarosan!\",\n      \"continue\": \"Folytasd\",\n      next: \"Következő\",\n      default_code: \"Alapértelmezett kód\",\n      loading: \"Töltés...\",\n      overview: \"Áttekintés\",\n      processing: \"Feldolgozás...\",\n      solution: \"Megoldás\",\n      table_of_contents: \"Tartalomjegyzék\",\n      intro: \"Bevezető\",\n      saving: \"Mentés...\",\n      sending: \"Küldés...\",\n      send: \"Küldés indítása\",\n      sent: \"Elküldve\",\n      cancel: \"Mégse\",\n      save: \"Mentés\",\n      publish: \"Publikálás\",\n      create: \"Létrehozás\",\n      fork: \"Villára vesz\",\n      play: \"Játszd\",\n      retry: \"Próbáld újra!\",\n      actions: \"Lehetőségek\",\n      info: \"Infó\",\n      help: \"Segítség\",\n      watch: \"Követés\",\n      unwatch: \"Követés vége\",\n      submit_patch: \"Kiegészítés bemutatása\",\n      submit_changes: \"Változások véglegesítése\",\n      save_changes: \"Változások mentése\",\n      required_field: \"kötelező\"\n    },\n    general: {\n      and: \"és\",\n      name: \"Név\",\n      date: \"Dátum\",\n      body: \"Test\",\n      version: \"Verzió\",\n      pending: \"Függőben\",\n      accepted: \"Elfogadva\",\n      rejected: \"Elutasítva\",\n      withdrawn: \"Visszavon\",\n      accept: \"Elfogad\",\n      accept_and_save: \"Elfogadás és mentés\",\n      reject: \"Visszautasít\",\n      withdraw: \"Visszavon\",\n      submitter: \"Beküldő\",\n      submitted: \"Beküldött\",\n      commit_msg: \"Üzenet feladása\",\n      version_history: \"Verzió történet\",\n      version_history_for: \"Verzió története ennek: \",\n      select_changes: \"Válassz két lehetőséget alul, hogy lásd a különbséget.\",\n      undo_prefix: \"Visszavonás\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Mégis\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Aktuális pálya előnézete\",\n      result: \"Eredmény\",\n      results: \"Eredmények\",\n      description: \"Leírás\",\n      or: \"vagy\",\n      subject: \"Tárgy\",\n      email: \"E-mail\",\n      password: \"Jelszó\",\n      confirm_password: \"Jelszó megerősítése\",\n      message: \"Üzenet\",\n      code: \"Kód\",\n      ladder: \"Ranglétra\",\n      when: \"Mikor\",\n      opponent: \"Ellenfél\",\n      rank: \"Rang\",\n      score: \"Pont\",\n      win: \"Győzelem\",\n      loss: \"Vereség\",\n      tie: \"Döntetlen\",\n      easy: \"Könnyű\",\n      medium: \"Közepes\",\n      hard: \"Nehéz\",\n      player: \"Játékos\",\n      player_level: \"Szint\",\n      warrior: \"Harcos\",\n      ranger: \"Távolsági\",\n      wizard: \"Varázsló\",\n      first_name: \"Utónév\",\n      last_name: \"Családnév\",\n      last_initial: \"Családnév kezdőbetűje\",\n      username: \"Felhasználónév\",\n      contact_us: \"Írj nekünk\",\n      close_window: \"Ablak bezárása\",\n      learn_more: \"Tudj meg többet\",\n      more: \"Több\",\n      fewer: \"Kevesebb\",\n      \"with\": \"ezzel:\"\n    },\n    units: {\n      second: \"másodperc\",\n      seconds: \"másodpercek\",\n      sec: \"másodperc\",\n      minute: \"perc\",\n      minutes: \"percek\",\n      hour: \"óra\",\n      hours: \"órák\",\n      day: \"nap\",\n      days: \"napok\",\n      week: \"hét\",\n      weeks: \"hetek\",\n      month: \"hónap\",\n      months: \"hónapok\",\n      year: \"év\",\n      years: \"évek\"\n    },\n    play_level: {\n      back_to_map: \"Vissza a térképhez\",\n      directions: \"Irányok\",\n      edit_level: \"Pálya szerkesztése\",\n      keep_learning: \"Tanulás folytatása\",\n      explore_codecombat: \"Fedezd fel a CodeCombat-ot\",\n      finished_hoc: \"Befejeztem a Kódolás Óráját\",\n      get_certificate: \"Szerezd meg az okleveled!\",\n      level_complete: \"Szint teljesítve\",\n      completed_level: \"Teljesített pálya:\",\n      course: \"Kurzus:\",\n      done: \"Kész\",\n      next_level: \"Következő pálya\",\n      next_game: \"Következő játék\",\n      languages: \"Nyelvek\",\n      programming_language: \"Programnyelv\",\n      show_menu: \"Játék Menü\",\n      home: \"Kezdőlap\",\n      level: \"Pálya\",\n      skip: \"Ugrás\",\n      game_menu: \"Játék Menü\",\n      restart: \"Előlről\",\n      goals: \"Célok\",\n      goal: \"Cél\",\n      running: \"Futás...\",\n      success: \"Sikerült!\",\n      incomplete: \"Hiányos\",\n      timed_out: \"Kifutottál az időből\",\n      failing: \"Bukás\",\n      reload: \"Újratöltés\",\n      reload_title: \"Újra kezded mindet?\",\n      reload_really: \"Biztos vagy benne, hogy előlről szeretnéd kezdeni az egész pályát?\",\n      reload_confirm: \"Előlről az egészet\",\n      test_level: \"Teszt pálya\",\n      victory: \"Győzelem\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \"Kész\",\n      victory_sign_up: \"Regisztrálj a friss infókért\",\n      victory_sign_up_poke: \"Szeretnéd, ha levelet küldenénk neked az újításokról? Regisztrálj ingyen egy fiókot, és nem maradsz le semmiről!\",\n      victory_rate_the_level: \"Értékeld a pályát: \",\n      victory_return_to_ladder: \"Vissza a ranglétrához\",\n      victory_saving_progress: \"Folyamat mentése\",\n      victory_go_home: \"Vissza a kezdőoldalra\",\n      victory_review: \"Mondd el a véleményedet!\",\n      victory_review_placeholder: \"Milyen volt a pálya?\",\n      victory_hour_of_code_done: \"Készen vagy?\",\n      victory_hour_of_code_done_yes: \"Igen, ez volt életem kódja!\",\n      victory_experience_gained: \"Szerzett tapasztalat\",\n      victory_gems_gained: \"Szerzett Drágakövek\",\n      victory_new_item: \"Új tárgy\",\n      victory_new_hero: \"Új hős\",\n      victory_viking_code_school: \"Szent ég! Ez a szint brutális volt, de megcsináltad! Ha véletlenül nem programozó vagy, akkor érdemes megpróbálnod. A Viking Code School felfigyelt rád. Ebben a programozó iskolában továbbfejlesztheted a készségeid, és akár 14 hét alatt profi programozó válhat belőled.\",\n      victory_become_a_viking: \"Legyél Viking\",\n      victory_no_progress_for_teachers: \"A fejlődés nem lett elmentve a tanár számára. Viszont lehetőséged van arra, hogy tanulói fiókot rendelj az osztályodhoz.\",\n      tome_cast_button_run: \"Futtatás\",\n      tome_cast_button_running: \"Futás...\",\n      tome_cast_button_ran: \"Lefutott\",\n      tome_submit_button: \"Beküldés\",\n      tome_reload_method: \"Eredeti Eljárás újratöltése\",\n      tome_available_spells: \"Elérhető varázslatok\",\n      tome_your_skills: \"Képességeid\",\n      hints: \"Tippek\",\n      hints_title: \"Tipp {{number}}\",\n      code_saved: \"Kód mentve\",\n      skip_tutorial: \"Továbblépés (esc)\",\n      keyboard_shortcuts: \"Billentyűparancsok\",\n      loading_start: \"Pálya kezdése\",\n      loading_start_combo: \"Kombinált kihívás elkezdése\",\n      loading_start_concept: \"Fogalom kihívás elkezdése\",\n      problem_alert_title: \"Javítsd ki a Kódod\",\n      time_current: \"Most:\",\n      time_total: \"Maximum:\",\n      time_goto: \"Menj\",\n      non_user_code_problem_title: \"Nem sikerült betölteni a pályát\",\n      infinite_loop_title: \"Végtelen ciklust észleltünk\",\n      infinite_loop_description: \"A kezdeti kód, ami a világot építi fel, nem fejeződött be. Valószínűleg vagy nagyon lassú, vagy végtelen ciklust tartalmaz. Esetleg hibát tartalmaz. Megpróbálkozhatsz a kód újrafuttatásával, vagy állítsd vissza a kódot a kezdő állapotba. Ha ez sem segít, kérlek tudasd velünk!\",\n      check_dev_console: \"Továbbá megnyithatod a böngésző konzolját is (developer console), hogy lásd mi a hiba.\",\n      check_dev_console_link: \"(útmatató)\",\n      infinite_loop_try_again: \"Próbáld meg újra!\",\n      infinite_loop_reset_level: \"Pálya újrakezdés\",\n      infinite_loop_comment_out: \"Tegye a kódom kommentárba\",\n      tip_toggle_play: \"Játék/Szünet kapcsoló Ctrl+P.\",\n      tip_scrub_shortcut: \"Ctrl+[ és Ctrl+] visszatekerés és gyors-előre.\",\n      tip_guide_exists: \"Hasznos információkért kattints az oldal tetején az útmutatóra..\",\n      tip_open_source: \"A CodeCombat 100%-osan nyitott forráskódú.\",\n      tip_tell_friends: \"Élvezed a CodeCombat-ot? Mesélj rólunk a barátaidnak!\",\n      tip_beta_launch: \"CodeCombat Béta teszt 2013 Októberétől elérhető.\",\n      tip_think_solution: \"A megoldásra gondolj, ne a problémára!\",\n      tip_theory_practice: \"Elméletben nincs különbség elmélet és gyakorlat között. A gyakorlatban viszont van. - Yogi Berra\",\n      tip_error_free: \"Két módon lehet hibátlan programot írni. De csak a harmadik működik. - Alan Perlis\",\n      tip_debugging_program: \"Ha a hibakeresés az az eljárás amikor eltüntetjük a program hibákat, akkor a programozás biztosan az az eljárás amikor elhelyezzük őket. - Edsger W. Dijkstra\",\n      tip_forums: \"Irány a fórumok, és mondd el mit gondolsz!!\",\n      tip_baby_coders: \"A jövőben még a bébik is Főmágusok lesznek.\",\n      tip_morale_improves: \"A töltés addig folytatódik, amíg a morál javul.\",\n      tip_all_species: \"Hisszük, hogy minden fajnak egyenlő lehetőségekkel kell bírnia a programozás megtanulására.\",\n      tip_reticulating: \"Recézett tüskék.\",\n      tip_harry: \"Te, Mágus, \",\n      tip_great_responsibility: \"Nagy kódolási képességgel nagy hibaelhárítási felelősség jár.\",\n      tip_munchkin: \"Ha nem eszed meg a zöldségedet, akkor egy máncskin eljön érted álmodban.\",\n      tip_binary: \"A világon csak 10 féle ember van: azok, akik értik a kettes számrendszert és azok, akik nem..\",\n      tip_commitment_yoda: \"A programozónak van a legmélyebb elköteleződése és a legélesebb elméje. - Yoda\",\n      tip_no_try: \"Csináld, vagy ne csináld. Próbálkozás nincs. - Yoda\",\n      tip_patience: \"Türelmed pedig kell, hogy legyen ifjú Padawan. - Yoda\",\n      tip_documented_bug: \"A dokumentált programhiba már nem hiba; az már jellegzetesség.\",\n      tip_impossible: \"Mindig lehetetlennek tűnik, amíg meg nem tetted. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Dumálni könnyű. Mutasd a kódot!. - Linus Torvalds\",\n      tip_first_language: \"A legszörnyűbb dolog, amit valaha tanulhatsz, az az első programnyelved. - Alan Kay\",\n      tip_hardware_problem: \"Kérdés: Hány programozó kell egy lámpakörte kicseréléséhez? Válasz: Egysem, ez hardware-es hiba.\",\n      tip_hofstadters_law: \"Hofstadter törvénye: Mindig tovább tart, mint ahogy tervezted. Még akkor is, ha figyelembe vetted Hofstadter törvényét.\",\n      tip_premature_optimization: \"Minden rossz gyökere a korai optimalizáció. - Donald Knuth\",\n      tip_brute_force: \"Ha kérdéses a helyzet, használj nyers erőt. - Ken Thompson\",\n      tip_extrapolation: \"Csak két fajta ember létezik. Az egyik, aki extrapolál hiányos adatokból...\",\n      tip_superpower: \"A programozás képessége van legközelebb a szuperképességekhez.\",\n      tip_control_destiny: \"A valódi nyílt forráskódban, jogodban áll irányítani a sorsod. - Linus Torvalds\",\n      tip_no_code: \"Semmilyen kód nem gyorsabb a semmi-kódnál.\",\n      tip_code_never_lies: \"A kód sosem hazudik, a kommentek néha. — Ron Jeffries\",\n      tip_reusable_software: \"Mielőtt a szoftware újrafelhasználható lesz, előbb használhatónak kell lennie.\",\n      tip_optimization_operator: \"Minden nyelvben van egy optimalizáló operátor. A legtöbb nyelvben ez a ‘//’\",\n      tip_lines_of_code: \"A programírás állapotát mérni a programsorok által olyan, mint a repülő építés állapotát mérni a repülő súlya által. — Bill Gates\",\n      tip_source_code: \"Meg akarom változtatni a világot, de nem adnák oda a forráskódját.\",\n      tip_javascript_java: \"A Java és a JavaScript úgy viszonyul egymáshoz, mint a kalap és a kalapács. - Chris Heilmann\",\n      tip_move_forward: \"Bármit is teszel, haladj előre. - Martin Luther King Jr.\",\n      tip_google: \"Elakadtál? Keress rá a Googleben!\",\n      tip_adding_evil: \"Egy ördögi sugallat.\",\n      tip_hate_computers: \"Ez történik azokkal az emberekkel, akik úgy gondolják, hogy utálják a számítógépeket. Valójában a rossz programozókat utálják. - Larry Niven\",\n      tip_open_source_contribute: \"Segíthetsz a CodeCombat fejlesztésében!\",\n      tip_recurse: \"Az ismétlés emberi dolog, a rekurzió viszont isteni. - L. Peter Deutsch\",\n      tip_free_your_mind: \"Ürits ki magadból mindent, Neo. Félelmet, kétséget, hitetlenséget. Szabadítsd fel a tudatod! - Morpheus\",\n      tip_strong_opponents: \"A legerősebb ellenfélnek is van gyengéje. - Itachi Uchiha\",\n      tip_paper_and_pen: \"Mielőtt nekiállsz kódolni, mindig segítségül hívhatsz a tervezéshez papírt és ceruzát.\",\n      tip_solve_then_write: \"Először, old meg a problémát, aztán állj neki kódolni! - John Johnson\",\n      tip_compiler_ignores_comments: \"Néha úgy tűnik, a fordító program el sem olvassa a kommentjeimet.\",\n      tip_understand_recursion: \"A rekurzió megértésének egyetlen módja a rekurzió megértése.\",\n      tip_life_and_polymorphism: \"A nyílt forráskód olyan, mint egy teljesen polimorfikus heterogén struktúra: Minden jöhet.\",\n      tip_mistakes_proof_of_trying: \"A kódhibák csupán a próbálkozásod bizonyítékai.\",\n      tip_adding_orgres: \"Az ogrék bekerítése.\",\n      tip_sharpening_swords: \"A kardok élesítése.\",\n      tip_ratatouille: \"Senki sem szabhat neked határokat, bárhonnan jöttél is. Az egyetlen határ a saját lelked. - Gusteau, L’ecsó\",\n      tip_nemo: \"Tudod mit kell tenned, ha úgy érzed, hogy reménytelen a helyzeted? Csak ússz tovább! - Szenilla, Némó nyomában 2.\",\n      tip_internet_weather: \"Csak ússz és szörfölj az interneten, ez egy nagyon klassz hely! Olyan világot teremtünk magunkban, ahol az időjárás mindig csodálatos. - John Green\",\n      tip_nerds: \"A csodabogaraknak elnézik, ha szeretnek olyan dolgokat, mint a himbálózok-az-ágon-egy-szép-hosszú-ágon-amit-hintáztat-a-szél. - John Green\",\n      tip_self_taught: \"Mindarra, amit tanultam, 90%-ban magamtól jöttem rá. És ez teljesen normális! - Hank Green\",\n      tip_luna_lovegood: \"Ne aggódj, te ugyanolyan őrült vagy, mint én.\",\n      tip_good_idea: \"Ahhoz, hogy legyen egy jó ötleted, a legjobb módszer, ha rengeteg ötleted van. - Linus Pauling\",\n      tip_programming_not_about_computers: \"A számítástechnika csak annyiban szól a számítógépekről, mint a csillagászat a távcsövekről. - Edsger Dijkstra\",\n      tip_mulan: \"Először hidd el, hogy képes vagy rá, aztán majd az leszel. - Mulan\"\n    },\n    play_game_dev_level: {\n      created_by: \"Készítette: {{name}}\",\n      created_during_hoc: \"Készült a Kódolás Órája során\",\n      restart: \"Pálya újrakezdése\",\n      play: \"Pálya indítása\",\n      play_more_codecombat: \"További játék a CodeCombattel\",\n      default_student_instructions: \"Hősödet kattintásokkal irányíthatod – vezesd hát végig a győzelem felé vezető úton!\",\n      goal_survive: \"Éld túl!\",\n      goal_survive_time: \"Éld túl __seconds__ másodpercig!\",\n      goal_defeat: \"Győzz le minden ellenfelet!\",\n      goal_defeat_amount: \"Győzz le __amount__ ellenfelet!\",\n      goal_move: \"Menj oda minden piros X jelhez!\",\n      goal_collect: \"Gyűjts össze minden tárgyat!\",\n      goal_collect_amount: \"Gyűjts össze __amount__ tárgyat!\"\n    },\n    game_menu: {\n      inventory_tab: \"Raktár\",\n      save_load_tab: \"Ment/Betölt\",\n      options_tab: \"Beállítások\",\n      guide_tab: \"Vezérfonal\",\n      guide_video_tutorial: \"Bevezető videó\",\n      guide_tips: \"Tippek\",\n      multiplayer_tab: \"Többjátékos\",\n      auth_tab: \"Iratkozz fel!\",\n      inventory_caption: \"Szereld fel a hősöd!\",\n      choose_hero_caption: \"Válassz hős, nyelvet.\",\n      options_caption: \"Beállítások módosítása\",\n      guide_caption: \"Jegyzőkönyv és tippek\",\n      multiplayer_caption: \"Játssz a barátaiddal!\",\n      auth_caption: \"Mentsd el a fejlődésed.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Más Megoldások Megtekintése\",\n      scores: \"Pontok\",\n      top_players: \"Legjobb játékosok\",\n      day: \"Ma\",\n      week: \"A Héten\",\n      all: \"Mindenkori\",\n      latest: \"Utolsó\",\n      time: \"Idő\",\n      damage_taken: \"Kapott Sebzés\",\n      damage_dealt: \"Kiosztott Sebzés\",\n      difficulty: \"Nehézség\",\n      gold_collected: \"Összegyűjtött Arany\",\n      survival_time: \"Túlélted\",\n      defeated: \"Ellenfél legyőzve\",\n      code_length: \"Kód sorainak száma\",\n      score_display: \"__scoreType__: __score__\"\n    },\n    inventory: {\n      equipped_item: \"Felvett\",\n      required_purchase_title: \"Szükséges\",\n      available_item: \"Elérhető\",\n      restricted_title: \"Limitált\",\n      should_equip: \"(dupla katt, hogy felvedd)\",\n      equipped: \"(felvett)\",\n      locked: \"(zárt)\",\n      restricted: \"(Limitált ezen a szinten)\",\n      equip: \"Felvesz\",\n      unequip: \"Levesz\",\n      warrior_only: \"Csak harcos\",\n      ranger_only: \"Csak őr\",\n      wizard_only: \"Csak varázsló\"\n    },\n    buy_gems: {\n      few_gems: \"Néhány drágakő\",\n      pile_gems: \"Halom drágakő\",\n      chest_gems: \"Láda drágakő\",\n      purchasing: \"Vásárlás...\",\n      declined: \"A kártyád elutasításra került\",\n      retrying: \"Szerver hiba, újra próbálkozás.\",\n      prompt_title: \"Nincs elég drágaköved\",\n      prompt_body: \"Szeretnél többet?\",\n      prompt_button: \"Lépj be a boltba\",\n      recovered: \"Az előző drágakő vásárlás helyreállt. Kérlek frissítsd az oldalt.\",\n      price: \"x {{gems}} / hó\",\n      buy_premium: \"Vegyél Premium tagságot\",\n      purchase: \"Vásárlás\",\n      purchased: \"Megvetted\"\n    },\n    earn_gems: {\n      prompt_title: \"Nincs elég drágaköved\",\n      prompt_body: \"Játssz tovább, hogy szerezz még!\"\n    },\n    subscribe: {\n      comparison_blurb: \"Élesítsd képességeid CodeCombat feliratkozással!\",\n      must_be_logged: \"Ehhez be kell jelentkezned. Kérlek regisztrálj, vagy lépj be a fenti menüben!\",\n      subscribe_title: \"Feliratkozás\",\n      unsubscribe: \"Leiratkozás\",\n      confirm_unsubscribe: \"Leiratkozás megerősítése\",\n      never_mind: \"Nembaj, akkor is Szeretlek\",\n      thank_you_months_prefix: \"Köszönjük hogy támogattál minket az elmúlt\",\n      thank_you_months_suffix: \"hónapban.\",\n      thank_you: \"Köszönjük, hogy támogatod a CodeCombat-ot.\",\n      sorry_to_see_you_go: \"Sajnáljuk hogy elmész. Kérlek tudasd velünk mit csinálhattunk volna jobban.\",\n      unsubscribe_feedback_placeholder: \"O, mit tettünk?\",\n      stripe_description: \"Havi előfizetés\",\n      subscription_required_to_play: \"Ehhez a szinthez elő kell fizetnek.\",\n      unlock_help_videos: \"Végy előfizetést, hogy feloldd az összes videó oktatóanyagot.\",\n      personal_sub: \"Egyéni előfizetés\",\n      loading_info: \"Előfizetési információk betöltése...\",\n      managed_by: \"Kezelő\",\n      will_be_cancelled: \"Törlés dátuma\",\n      currently_free: \"Jelenleg ingyenes előfizetéssel rendelkezel\",\n      currently_free_until: \"Jelenlegi előfizetésed lejárati dátuma\",\n      was_free_until: \"Ingyenes előfizetésed lejárati dátuma\",\n      managed_subs: \"Kezelt előfizetések\",\n      subscribing: \"Előfizetés folyamatban\",\n      current_recipients: \"Jelenlegi címzettek\",\n      unsubscribing: \"Leiratkozás\",\n      subscribe_prepaid: \"Az előre utalt előfizetési kód használatához kattints az Előfizetés lehetőségre\",\n      using_prepaid: \"Előre utalt előfizetési kód használata havi előfizetéshez\"\n    },\n    choose_hero: {\n      choose_hero: \"Válassz hőst.\",\n      programming_language: \"Programnyelv\",\n      programming_language_description: \"Melyik programnyelvet akarod használni?\",\n      \"default\": \"Alapbeállítás\",\n      experimental: \"Kísérleti\",\n      python_blurb: \"Egyszerű és mégis hatékony, kezdőknek és szakértőknek is.\",\n      javascript_blurb: \"Az internet nyelve. (Nem azonos a Java-val.)\",\n      coffeescript_blurb: \"Szerethetőbb JavaScript szintaxis.\",\n      lua_blurb: \"Játék programozó nyelv\",\n      java_blurb: \"(Csak előfizetőknek) Android és vállalati felhasználók.\",\n      status: \"Státusz\",\n      weapons: \"Fegyverek\",\n      weapons_warrior: \"Kardok - Rövid hatótávolság, mágikus erő nélkül.\",\n      weapons_ranger: \"Számszeríj, Fegyverek - Nagy hatótávolság, mágikus erő nélkül.\",\n      weapons_wizard: \"Pálcák és Botok - Nagy hatótávolság és mágikus erő.\",\n      attack: \"Támadás\",\n      health: \"Élet\",\n      speed: \"Sebesség\",\n      regeneration: \"Gyógyulás\",\n      range: \"Hatótáv\",\n      blocks: \"Blokkolás\",\n      backstab: \"Hátbaszúrás\",\n      skills: \"Képességek\",\n      attack_1: \"Sebez\",\n      attack_2: \"az alábbi\",\n      attack_3: \"fegyver sebzés.\",\n      health_1: \"Kap\",\n      health_2: \"az alábbi\",\n      health_3: \"páncél életerő.\",\n      speed_1: \"Mozog\",\n      speed_2: \"méter / másodperc.\",\n      available_for_purchase: \"Megvehető\",\n      level_to_unlock: \"Szükséges pályák:\",\n      restricted_to_certain_heroes: \"Csak bizonyos hős játszhatja ezt a pályát.\"\n    },\n    skill_docs: {\n      \"function\": \"függvény (function)\",\n      method: \"metódus\",\n      snippet: \"snippet\",\n      number: \"szám\",\n      array: \"tömb\",\n      object: \"objektum\",\n      string: \"szöveg (string)\",\n      writable: \"írható\",\n      read_only: \"csak olvasható\",\n      action: \"Akció\",\n      spell: \"Varázsige\",\n      action_name: \"név\",\n      action_cooldown: \"Újratöltés\",\n      action_specific_cooldown: \"Speciális újratöltés\",\n      action_damage: \"Sebzés\",\n      action_range: \"Lőtávolság\",\n      action_radius: \"Körzet\",\n      action_duration: \"Hatásidő\",\n      example: \"Példa\",\n      ex: \"pl.\",\n      current_value: \"Aktuális érték\",\n      default_value: \"Eredeti érték\",\n      parameters: \"Paraméterek\",\n      required_parameters: \"Kötelező paraméterek\",\n      optional_parameters: \"Nem kötelező paraméterek\",\n      returns: \"Visszatérés\",\n      granted_by: \"Megkapva\"\n    },\n    save_load: {\n      granularity_saved_games: \"Mentve\",\n      granularity_change_history: \"Történet\"\n    },\n    options: {\n      general_options: \"Általános beállítások\",\n      volume_label: \"Hangerő\",\n      music_label: \"Zene\",\n      music_description: \"Háttérzene ki/bekapcsolása\",\n      editor_config_title: \"Szerkesztő Beállítások\",\n      editor_config_livecompletion_label: \"Automatikus kód-kitöltés\",\n      editor_config_livecompletion_description: \"Gépelés közben automatikus kód-kitöltés javaslatok megmutatása.\",\n      editor_config_invisibles_label: \"Láthatatlan karakterek\",\n      editor_config_invisibles_description: \"Megjeleníti a láthatatlan karaktereket, úgymint a szóközt vagy a tab-ot\",\n      editor_config_indentguides_label: \"Bekezdés segítő\",\n      editor_config_indentguides_description: \"Vízszintes vonalak megjelenítése a jobb áttekinthetőség érdekében.\",\n      editor_config_behaviors_label: \"Okos viselkedés\",\n      editor_config_behaviors_description: \"Automata zárójel és idézet befejezés.\"\n    },\n    about: {\n      main_title: \"Ha meg akarsz tanulni programozni, rengeteg kódot kell írnod.\",\n      main_description: \"A CodeCombat szerepe ebben az, hogy mindezt mosolyogva tedd.\",\n      mission_link: \"Küldetés\",\n      team_link: \"Csapat\",\n      story_link: \"Történet\",\n      press_link: \"Sajtó\",\n      mission_title: \"Küldetésünk az, hogy a programozást a földkerekség minden diákja számára elérhetővé tegyük.\",\n      mission_description_1: \"<strong>A programozás varázslat!</strong>. A programozás az a képesség, amellyel a semmiből teremthetünk világokat a puszta képzeletünk révén. A CodeCombat azzal a céllal indult el, hogy a diákoknak megadja ezt a varázslatos képességet, így a <strong>begépelt kód</strong> életre kelhet az ujjaik nyomán.\",\n      mission_description_2: \"Úgy tűnik, hogy ez a módszer a tanulást is felgyorsítja. Jelentősen felgyorsítja. A különbség olyan, mint ha az útmutató olvasása helyett egy jót beszélgetnénk. Ezt a laza beszélgetős módszert szeretnénk elhozni minden iskola és <strong>minden egyes diák</strong> életébe, mert mindenkinek lehetőséget kell adni, hogy elsajátítsa a programozás varázslatos tudományát.\",\n      team_title: \"Ismerd meg a CodeCombat csapatát\",\n      team_values: \"A nyitott párbeszédben, az egymás iránti tiszteletben hiszünk, ahol a legjobb ötlet a nyerő. A döntéseink piackutatáson alapulnak, a folyamataink kialakítása pedig a kézzelfogható eredmények létrehozását célozza meg. Mindenki együttműködő és az ügyvezetőtől a GitHub fejlesztőkig mindenki aktívan részt vesz a munkában. Nagyrértékeljük a növekedést és készek vagyunk tanulni egymástól.\",\n      nick_title: \"Programozó\",\n      matt_title: \"Programozó\",\n      cat_title: \"Játéktervező\",\n      scott_title: \"Programozó\",\n      maka_title: \"Az ügyfelek őrangyala\",\n      robin_title: \"UX-tervező és -fejlesztő\",\n      nolan_title: \"Territory Manager\",\n      titles_csm: \"Ügyfél sikermenedzser\",\n      retrostyle_title: \"Illusztráció\",\n      retrostyle_blurb: \"RetroStyle Games\",\n      community_title: \"...és a nyílt támogatói közösségünk\",\n      community_subtitle: \"Eddig több mint 450 támogató járult hozzá a CodeCombat építéséhez, és minden héten egyre többen csatlakoznak!\",\n      community_description_1: \"A CodeCombat egy közösségi kezdeményezés, így játékosok százai csatlakoztak önkéntesen, akik új szinteket, új funkciókat hoztak létre, tesztelték és javították a programot. Sőt, az önkéntes fordítók révén a játék már 50 nyelven elérhető! A fejlesztők, támogatók és az egész közösség is rengeteget nyer az ötletek megosztása és az együttes erőfeszítéseink által. A játék számtalan nyílt forráskódú projektből tevődik össze, így mi is visszadunk a közösségnek, és egy izgalmas utat nyitunk a kis felfedezőknek a kódolás világába. A CodeCombat közösséghez bárki csatlakozhat! Látogass el a\",\n      community_description_link: \"segítők oldalára\",\n      community_description_2: \"további információkért.\",\n      number_contributors: \"Eddig több mint 450 támogató segítette munkájával a projektet.\",\n      story_title: \"Történetünk számokban\",\n      story_subtitle: \"2013 óta a CodeCombat néhány vázlatos rajzból egy élő és folyamatosan fejlődő játékká nőtte ki magát.\",\n      story_statistic_1a: \"5 000 000+\",\n      story_statistic_1b: \"játékos\",\n      story_statistic_1c: \"kezdte el eddig utazását a kódolás világában a CodeCombat révén\",\n      story_statistic_2a: \"Több mint 50 nyelvre fordították le eddig a játékot, a játokosaink pedig mintegy\",\n      story_statistic_2b: \"200 különböző országból tevődnek össze\",\n      story_statistic_3a: \"Ők együttesen\",\n      story_statistic_3b: \"1 milliárd sornyi kódot írtak\",\n      story_statistic_3c: \"számtalan különböző programozási nyelven\",\n      story_long_way_1: \"Nagy utat tettünk meg eddig...\",\n      story_sketch_caption: \"Nick első vázlata az egyik játékról.\",\n      story_long_way_2: \"mégis hosszú még az út a küldetésünk teljesítéséig, ezért...\",\n      jobs_title: \"Gyere, dolgozz velünk és segíts újraírni a CodeCombat történetét!\",\n      jobs_subtitle: \"Nem látsz hozzádillő munkát a listában, de figyelemmel kísérnéd a lehetőségeket? Tekintsd meg a ”Hozd létre a sajátod\\\" listát.\",\n      jobs_benefits: \"Juttatások\",\n      jobs_benefit_4: \"Korlátlan szabadság\",\n      jobs_benefit_5: \"Szakmai előmenetel és folyamatos támogatás, ingyenes könyvek és játékok!\",\n      jobs_benefit_6: \"Orvosi (arany), fogorvosi, szemészeti ellátás\",\n      jobs_benefit_7: \"Állítható magasságú asztalok\",\n      jobs_benefit_9: \"10 éves részvényopció-lehívási lehetőség\",\n      jobs_benefit_10: \"Szülési szabadság nőknek: 10 hét fizetett szabadság, további 6 hétig a fizetés 55%-a\",\n      jobs_benefit_11: \"Szülési szabadság férfiaknak: 10 hét fizetett szabadság\",\n      jobs_custom_title: \"Hozd létre a sajátod\",\n      jobs_custom_description: \"Elkötelezett híve vagy a CodeCombat küldetésének, de nem látsz számodra megfelelő állást az ajánlatok között? Írj nekünk az elképzeléseidről és hogy mivel tudnál hozzájárulni a csapatunkhoz. Kíváncsiak vagyunk az ötleteidre!\",\n      jobs_custom_contact_1: \"Írj nekünk a\",\n      jobs_custom_contact_2: \"címre, és mi hamarosan kapcsolatba lépünk veled.\",\n      contact_title: \"Sajtó & Kapcsolat\",\n      contact_subtitle: \"Toábbi információra van szükséged? Erre a címre írhatsz nekünk:\",\n      screenshots_title: \"Képek a játékból\",\n      screenshots_hint: \"(kattints a képre a teljes méret megtekintéséhez)\",\n      downloads_title: \"Letöltés\",\n      about_codecombat: \"A CodeCombat bemutatása\",\n      logo: \"Logó\",\n      screenshots: \"Képek\",\n      character_art: \"Karakterek\",\n      download_all: \"Összes letöltése\",\n      previous: \"Előző\",\n      location_title: \"Az irodánkat San Francisco szívében találod:\"\n    },\n    teachers: {\n      licenses_needed: \"Licensz szükséges\"\n    },\n    teachers_quote: {\n      subtitle: \"A diákok akár egy órán belül elkezdhetik a játékot. A bemutatóval <strong>osztályokat állíthatsz össze, hozzájuk rendelheted a diákokat, és nyomon követheted tanítványaid fejlődését,</strong> miközben ők elmélyednek az informatikában.\",\n      email_exists: \"Ehhez az e-mail címhez már tartozik egy felhasználói fiók.\",\n      phone_number: \"Telefonszám\",\n      phone_number_help: \"Milyen számon érhetünk el munkaidőben?\",\n      primary_role_label: \"Elsődleges szerepkör\",\n      role_default: \"Válassz egy szerepkört\",\n      primary_role_default: \"Válassz elsődleges szerepkört\",\n      purchaser_role_default: \"Válassz egy beszerzési szerepkört\",\n      tech_coordinator: \"Műszaki koordinátor\",\n      advisor: \"Tanácsadó\",\n      principal: \"Igazgató\",\n      superintendent: \"Tanfelügyelő\",\n      parent: \"Szülő\",\n      purchaser_role_label: \"Beszerzési szerepkör\",\n      influence_advocate: \"Befolyásolás/támogatás\",\n      evaluate_recommend: \"Értékelés/ajánlás\",\n      approve_funds: \"Költségvetés jóváhagyása\",\n      no_purchaser_role: \"Nincs szerepem a beszerzési döntésekben\",\n      district_label: \"Iskolakörzet\",\n      district_na: \"Ha nincs, a következőt írd be: N/A\",\n      organization_label: \"Iskola\",\n      city: \"Város\",\n      state: \"Megye\",\n      country: \"Ország\",\n      num_students_help: \"Hány tanulóval szeretnéd megismertetni a CodeCombatet?\",\n      num_students_default: \"Válassz egy tartományt\",\n      education_level_label: \"Oktatási szint\",\n      education_level_help: \"Jelöld be az összes érvényes lehetőséget.\",\n      elementary_school: \"Általános iskola\",\n      high_school: \"Főiskola/Egyetem\",\n      please_explain: \"(kérjük, fejtsd ki bővebben)\",\n      middle_school: \"Középiskola\",\n      college_plus: \"Főiskolai vagy magasabb szintű felsőfokú képzés\",\n      anything_else: \"Egyéb tudnivalók\",\n      thanks_header: \"Kérésedet megkaptuk!\",\n      thanks_sub_header: \"Köszönjük az érdeklődésedet, örülünk, hogy fel szeretnéd használni a CodeCombatet az iskoládban.\",\n      thanks_p: \"Hamarosan jelentkezünk. Addig is szükség esetén a következő e-mail címen érhetsz el minket:\",\n      back_to_classes: \"Vissza az osztályokhoz\",\n      finish_signup: \"Fejezd be az oktatói fiókod létrehozását:\",\n      finish_signup_p: \"Hozz létre egy fiókot, amellyel osztályokat állíthatsz össze, hozzájuk rendelheted a diákokat, és nyomon követheted a tanítványaid fejlődését, miközben ők elmélyednek az informatikában.\",\n      signup_with: \"Feliratkozás ezzel a fiókkal:\",\n      connect_with: \"Kapcsolódás ezzel a fiókkal:\",\n      conversion_warning: \"FIGYELEM! Az aktuális fiókod <em>tanulói fiók</em>. A jelen űrlap leadását követően fiókodat oktatói fiókra frissítjük.\",\n      learn_more_modal: \"Az oktatói CodeCombat fiókkal nyomon követheted a tanulóid fejlődését, licenceket oszthatsz ki, és kezelheted az osztályaidat. Az oktatói fiókkal rendelkező felhasználókat nem lehet osztályokhoz rendelni. Ha tehát az aktuális fiókoddal be vagy iratkozva egy osztályba, az oktatói fiókra történő frissítést követően nem férhetsz többé hozzá.\",\n      create_account: \"Oktatói fiók létrehozása\",\n      create_account_subtitle: \"Férj hozzá az oktatói funkciókhoz, amelyekkel a CodeCombat tanterved szerves részévé válhat.  <strong>Állíts össze osztályokat</strong>, rendeld hozzájuk a diákokat, és <strong>kövesd nyomon a fejlődésüket</strong>!\",\n      convert_account_title: \"Frissítés oktatói fiókra\",\n      not: \"Nem\"\n    },\n    versions: {\n      save_version_title: \"Új verzió mentése\",\n      new_major_version: \"Új főverzió\",\n      submitting_patch: \"Patch beküldése...\",\n      cla_prefix: \"A módosítások elmentéséhez el kell fogadnod a \",\n      cla_url: \"CLA\",\n      cla_suffix: \"tartalmát.\",\n      cla_agree: \"ELFOGADOM\",\n      owner_approve: \"Minden tulajdonosnak jóvá kell hagynia, mielőtt a változtatásaid láthatóvá válnak.\"\n    },\n    contact: {\n      contact_us: \"Lépj kapcsolatba velünk\",\n      welcome: \"Jó hallani felőled! Az alábbi űrlappal tudsz levelet küldeni nekünk.\",\n      forum_prefix: \"Ha publikus dologról van szó, megpróbálhatod a \",\n      forum_page: \"fórumban\",\n      forum_suffix: \" is.\",\n      faq_prefix: \"Továbbá van egy\",\n      faq: \"GYIK\",\n      subscribe_prefix: \"Ha segítségre van szükséged egy pályán, \",\n      subscribe: \"vásárolj CodeCombat előfizetést\",\n      subscribe_suffix: \"és mi örömmel segítünk. \",\n      subscriber_support: \"A CodeCombat előfizetők elsőbbséget élveznek az e-mail ügyfélszolgálaton.\",\n      screenshot_included: \"Képernyőkép (screenshot) mellékelve.\",\n      where_reply: \"Milyen címre válaszoljunk?\",\n      send: \"Visszajelzés küldése\"\n    },\n    account_settings: {\n      title: \"Fiók beállítások\",\n      not_logged_in: \"Jelentkezz be, vagy hozz létre egy fiókot, hogy változtathass a beállításokon!\",\n      me_tab: \"Rólad\",\n      picture_tab: \"Kép\",\n      delete_account_tab: \"Fiók törlése\",\n      wrong_email: \"Rossz e-mail-cím\",\n      wrong_password: \"Hibás jelszó\",\n      delete_this_account: \"Fiók végleges törlése\",\n      reset_progress_tab: \"Eredmények törlése\",\n      reset_your_progress: \"Törli az össze eredményed. Tiszta lappal kezdhetsz újra.\",\n      god_mode: \"God mód\",\n      emails_tab: \"Levelek\",\n      admin: \"Adminisztrátor\",\n      manage_subscription: \"Kattints ide az előfizetések kezeléséhez.\",\n      new_password: \"Új jelszó\",\n      new_password_verify: \"Új jelszó megismétlése\",\n      type_in_email: \"Írd be az e-mail-címed a törlés megerősítéséhez\",\n      type_in_email_progress: \"Add meg az e-mail címedet az eredmények törléséhez!\",\n      type_in_password: \"Továbbá add meg a jelszavad is!\",\n      email_subscriptions: \"Hírlevél feliratkozások\",\n      email_subscriptions_none: \"Nem kérek e-mail értesítéseket.\",\n      email_announcements: \"Bejelentések\",\n      email_announcements_description: \"Szeretnél levelet kapni a legújabb fejlesztéseinkről?\",\n      email_notifications: \"Értesítések\",\n      email_notifications_summary: \"CodeCombat tevékenységedre vonatkozó személyre szóló, automatikus értesítések beállításai.\",\n      email_any_notes: \"Bármely megjegyzés\",\n      email_any_notes_description: \"Minden tevékenységgel kapcsolatos e-mail értesítés letiltása.\",\n      email_news: \"Hírek\",\n      email_recruit_notes: \"Álláslehetőségek\",\n      email_recruit_notes_description: \"Ha igazán jól játszol lehet, hogy felvesszük veled a kapcsolatot és megbeszéljük, hogy szerezzünk-e neked egy (jobb) állást.\",\n      contributor_emails: \"Hozzájárulóknak szóló levelek\",\n      contribute_prefix: \"Folyamatosan keresünk embereket, hogy csatlakozzanak hozzánk. Nézz rá a \",\n      contribute_page: \"segítők oldalára\",\n      contribute_suffix: \" információkért.\",\n      email_toggle: \"Az összes megjelölése\",\n      error_saving: \"Hiba a mentés során\",\n      saved: \"Változtatások elmentve\",\n      password_mismatch: \"A jelszavak nem egyeznek.\",\n      password_repeat: \"Kérlek ismételd meg a jelszavadat\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Billentyűparancsok\",\n      space: \"Szünet\",\n      enter: \"Enter\",\n      press_enter: \"Nyomj Entert\",\n      escape: \"Kilépés\",\n      shift: \"Shift\",\n      run_code: \"Aktuális kód futtatása.\",\n      run_real_time: \"Futtatás valós időben.\",\n      continue_script: \"Megállított kód folytatása.\",\n      skip_scripts: \"Kihagyható kódrészletek kihagyása.\",\n      toggle_playback: \"Játék/Megállítás kapcsoló.\",\n      scrub_playback: \"A kurzor előre- és hátrahúzása az időben történő ugráshoz.\",\n      single_scrub_playback: \"A kurzor előre- és hátrahúzása a képkockánként történő ugráshoz.\",\n      scrub_execution: \"A kurzor elhúzása az aktuális varázsige felolvasásához.\",\n      toggle_debug: \"Hibakeresési nézet be-/kikapcsolása.\",\n      toggle_grid: \"Rácsos átfedő panel be-/kikapcsolása.\",\n      toggle_pathfinding: \"Útkeresési átfedő panel be-/kikapcsolása.\",\n      beautify: \"A kód kicsinosítása és szabványos formátumra hozása.\",\n      maximize_editor: \"Maximális/Minimális kód szerkesztő.\"\n    },\n    community: {\n      main_title: \"CodeCombat Közösség\",\n      introduction: \"Nézd meg, milyen módokon járulhatsz hozzá a játék fejlesztéséhez, és válaszd ki a számodra legjobban tetsző lehetőséget. Alig várjuk, hogy veled dolgozhassunk!\",\n      level_editor_prefix: \"Használd a CodeCombat\",\n      level_editor_suffix: \"-t, hogy szerkessz meglévő-, vagy készíts új pályákat. A felhasználók készítettek már pályákat az osztálytársaiknak, hackathonokra, tanulóiknak és testvéreiknek is. Ha egy új pálya elkészítése túl nagy feladatnak tűnik, kezdhetsz egy általunk készített pálya módosításával is.\",\n      thang_editor_prefix: \"A játékon belüli egységeket „dolgoknak” nevezzük. A\",\n      thang_editor_suffix: \"segítségével módosíthatod a CodeCombat-alapjáték illusztrációit. Emellett beállíthatod, hogy az egységek lövedékekkel támadjanak, módosíthatod a dolgok animációját és életerőpontjait, illetve feltöltheted a saját készítésű vektorgrafikus sprite-jaidat is.\",\n      article_editor_prefix: \"Hibát találtál valamelyik dokumentumunkban? Szeretnél útmutatót adni valamelyik alkotásodhoz? Próbáld ki a\",\n      article_editor_suffix: \"-t és segíts a CodeCombat játékosoknak, hogy a legtöbbet hozhassák ki a játékkal töltött idejükből.\",\n      find_us: \"Ezeken az oldalakon is megtalálhatsz minket\",\n      social_github: \"Nézd meg a teljes forráskódot a GitHubon\",\n      social_blog: \"Olvasd a CodeCombat blogot a Sett-en\",\n      social_discource: \"Csatlakozz a beszélgetéshez a Discourse forumon\",\n      social_facebook: \"Like-old a CodeCombat-et a Facebookon\",\n      social_twitter: \"Kövesd a CodeCombat-et a Twitteren\",\n      social_gplus: \"Csatlakozz a CodeCombat-hez a Google+ -on\",\n      social_slack: \"Csatlakozz a nyilvános CodeCombat Slack csatornához\",\n      contribute_to_the_project: \"Vegyél részt a projektben\"\n    },\n    clans: {\n      clan: \"Klán\",\n      clans: \"Klánok\",\n      new_name: \"Új klán neve\",\n      new_description: \"Új klán leírása\",\n      make_private: \"Privát klán\",\n      subs_only: \"csak előfizetőknek\",\n      create_clan: \"Új klán létrehozása\",\n      private_preview: \"Előnézet\",\n      private_clans: \"Privát klánok\",\n      public_clans: \"Nyilvános klánok\",\n      my_clans: \"Saját klánok\",\n      clan_name: \"Klán neve\",\n      name: \"Név\",\n      chieftain: \"Törzsfőnök\",\n      edit_clan_name: \"Klán nevének szerkesztése\",\n      edit_clan_description: \"Klán leírásának szerkesztése\",\n      edit_name: \"név szerkesztése\",\n      edit_description: \"leírás szerkesztése\",\n      \"private\": \"(privát)\",\n      summary: \"Összegzés\",\n      average_level: \"Szintek átlaga\",\n      average_achievements: \"Eredmények átlaga\",\n      delete_clan: \"Klán törlése\",\n      leave_clan: \"Klán elhagyása\",\n      join_clan: \"Klánhoz csatlakozás\",\n      invite_1: \"Meghívás:\",\n      invite_2: \"*Küldd el ezt a linket más játékosoknak, hogy csatlakozhassanak ehhez a klánhoz.\",\n      members: \"Tagok\",\n      progress: \"Fejlődés\",\n      not_started_1: \"nincs elkezdve\",\n      started_1: \"elkezdve\",\n      complete_1: \"teljesítve\",\n      exp_levels: \"Pályák kibontása\",\n      rem_hero: \"Hős eltávolítása\",\n      status: \"Állapot\",\n      complete_2: \"Teljesítve\",\n      started_2: \"Elkezdve\",\n      not_started_2: \"Nincs elkezdve\",\n      view_solution: \"Kattints ide a megoldás megtekintéséhez.\",\n      view_attempt: \"Kattints ide a próbálkozás megtekintéséhez.\",\n      latest_achievement: \"Legutóbb elért eredmény\",\n      playtime: \"Játékidő\",\n      last_played: \"Utoljára játszott\",\n      leagues_explanation: \"Mérkőzz meg más klánok tagjaival a többjátékos arénákban.\",\n      track_concepts1: \"Fogalmak nyomon követése\",\n      track_concepts2a: \"adott tanulók által elsajátított fogalmak\",\n      track_concepts2b: \"adott tagok által elsajátított fogalmak\",\n      track_concepts3a: \"Adott tanulók által teljesített pályák nyomon követése\",\n      track_concepts3b: \"Adott tagok által teljesített pályák nyomon követése\",\n      track_concepts4a: \"Tanulók\",\n      track_concepts4b: \"Tagok\",\n      track_concepts5: \"megoldásainak megtekintése\",\n      track_concepts6a: \"Tanulók rendezése név vagy fejlődési szintjük szerint\",\n      track_concepts6b: \"Tagok rendezése név vagy fejlődési szintjük szerint\",\n      track_concepts7: \"A csatlakozáshoz\",\n      track_concepts8: \"meghívó szükséges\",\n      private_require_sub: \"A privát klánok létrehozásához, illetve a hozzájuk történő csatlakozáshoz előfizetés szükséges.\"\n    },\n    courses: {\n      create_new_class: \"Új osztály\",\n      unnamed_class: \"Névtelen osztály\",\n      edit_settings1: \"Osztály szerkesztése\",\n      add_students: \"Tanulók hozzáadása\",\n      stats: \"Statisztikai adatok\",\n      total_students: \"Összes tanuló:\",\n      average_time: \"Átlagos játékidő pályánként:\",\n      total_time: \"Teljes játékidő:\",\n      average_levels: \"Teljesített pályák átlaga:\",\n      total_levels: \"Teljesített pályák összesen:\",\n      students: \"Tanulók\",\n      concepts: \"Fogalmak\",\n      play_time: \"Játékidő:\",\n      completed: \"Teljesítve:\",\n      enter_emails: \"Írd külön sorba az e-mail címeket, vagy tegyél vesszőt közéjük\",\n      send_invites: \"Tanulók meghívása\",\n      number_programming_students: \"Programozást tanuló diákok száma\",\n      number_total_students: \"Az iskola/iskolai körzet tanulóinak száma összesen\",\n      enroll: \"Beiratkozás\",\n      enroll_paid: \"Tanulók beíratása térítéses kurzusokra\",\n      get_enrollments: \"További licencek vásárlása\",\n      change_language: \"Kurzus nyelvének megváltoztatása\",\n      keep_using: \"A következő használata:\",\n      switch_to: \"Váltás a következőre:\",\n      greetings: \"Üdvözlünk!\",\n      back_classrooms: \"Vissza a saját osztályokhoz\",\n      back_courses: \"Vissza a saját kurzusokhoz\",\n      edit_details: \"Osztály részletes adatainak szerkesztése\",\n      purchase_enrollments: \"Tanulói licencek vásárlása\",\n      remove_student: \"tanuló eltávolítása\",\n      assign: \"Hozzárendelés\",\n      to_assign: \"Térítéses kurzusok hozzárendelése.\",\n      student: \"Tanuló\",\n      teacher: \"Tanár\",\n      arena: \"Aréna\",\n      available_levels: \"Játszható pályák\",\n      welcome_to_courses: \"Üdvözlünk a kurzusok lapján, kalandor!\",\n      ready_to_play: \"Készen állsz a játékra?\",\n      start_new_game: \"Új játék\",\n      play_now_learn_header: \"Kezdj el játszani, és ismerd meg\",\n      play_now_learn_1: \"az alapvető szintaxist, amellyel irányíthatod a karakteredet\",\n      play_now_learn_2: \"a while-ciklusokat, amelyekkel megoldhatod a fejtörőket\",\n      play_now_learn_3: \"a stringeket és a változókat, amelyekkel finomhangolhatod a műveleteket\",\n      play_now_learn_4: \"az ogrék gyenge pontjait (ez különösen jól fog jönni a nagybetűs életben)\",\n      welcome_to_page: \"Tanulói irányítópult\",\n      my_classes: \"Jelenlegi osztályok\",\n      class_added: \"Az osztály létrehozása sikeresen megtörtént.\",\n      join_class: \"Csatlakozás egy osztályhoz\",\n      join_class_2: \"Osztályhoz csatlakozás\",\n      ask_teacher_for_code: \"Kérd el a CodeCombat osztály kódját a tanárodtól! Ha megvan, írd be ide:\",\n      enter_c_code: \"<Add meg az osztálykódot>\",\n      join: \"Csatlakozás\",\n      joining: \"Osztályhoz csatlakozás\",\n      course_complete: \"Kurzus teljesítve\",\n      play_arena: \"Aréna indítása\",\n      view_project: \"Projekt megtekintése\",\n      start: \"Kezdés\",\n      last_level: \"Utoljára játszott pálya\",\n      not_you: \"Nem te vagy?\",\n      continue_playing: \"Játék folytatása\",\n      option1_header: \"Tanulók meghívása e-mailben\",\n      remove_student1: \"Tanuló eltávolítása\",\n      are_you_sure: \"Biztosan el szeretnéd távolítani a kijelölt tanulót az osztályból?\",\n      remove_description1: \"A kijelölt tanuló a továbbiakban nem férhet hozzá az osztályhoz és a kurzusokhoz. A játékban elért szint NEM fog elveszni – a tanuló folytathatja a játékot, és bármikor ismét hozzárendelheted az osztályhoz.\",\n      remove_description2: \"Az aktivált, kifizetett licenc nem kerül vissza hozzád.\",\n      keep_student: \"Tanuló megtartása\",\n      removing_user: \"Felhasználó eltávolítása\",\n      subtitle: \"Kurzusleírások és pályák áttekintése\",\n      changelog: \"Tekintsd meg a kurzus részét képező pályákkal kapcsolatos módosításokat.\",\n      select_language: \"Válassz nyelvet\",\n      select_level: \"Válassz egy pályát\",\n      play_level: \"Pálya indítása\",\n      concepts_covered: \"Tárgyalt fogalmak\",\n      view_guide_online: \"Pályaleírások és megoldókulcs\",\n      grants_lifetime_access: \"Minden kurzushoz hozzáférést biztosít.\",\n      enrollment_credits_available: \"Elérhető licencek:\",\n      language_select: \"Válassz egy nyelvet\",\n      language_cannot_change: \"Ha a tanulók már csatlakoztak az osztályhoz, a nyelv többé nem módosítható.\",\n      avg_student_exp_label: \"A tanulók átlagos programozási ismeretei\",\n      avg_student_exp_desc: \"Ennek megadásával könnyebben meghatározható a kurzusok ütemezése.\",\n      avg_student_exp_select: \"Válaszd ki a legmegfelelőbb lehetőséget\",\n      avg_student_exp_none: \"Tapasztalatlan – semennyi, vagy csak kevés ismerettel rendelkeznek\",\n      avg_student_exp_beginner: \"Kezdő – némi tapasztalat vagy blokkalapú programozási nyelvek ismerete\",\n      avg_student_exp_intermediate: \"Középhaladó – némi tapasztalat gépelt kóddal\",\n      avg_student_exp_advanced: \"Haladó – gépelt kód átfogó ismerete\",\n      avg_student_exp_varied: \"Különböző ismereti szintek\",\n      student_age_range_label: \"A tanulók korosztálya\",\n      student_age_range_younger: \"6 évesnél fiatalabb\",\n      student_age_range_older: \"18 évesnél idősebb\",\n      student_age_range_to: \"–\",\n      create_class: \"Osztály létrehozása\",\n      class_name: \"Osztály neve\",\n      teacher_account_restricted: \"A fiókod oktatói fiók, amellyel nem tekintheted meg a tanulóknak szóló tartalmat.\",\n      account_restricted: \"A lap csak tanulói fiókból érhető el.\",\n      update_account_login_title: \"Jelentkezz be a fiókod frissítéséhez\",\n      update_account_title: \"A fiókod beavatkozást igényel!\",\n      update_account_blurb: \"Mielőtt még hozzáférhetnél az osztályokat tartalmazó laphoz, kérjük, add meg, hogyan szeretnéd használni ezt a fiókot.\",\n      update_account_current_type: \"Aktuális fiók típusa:\",\n      update_account_account_email: \"Fiókhoz tartozó e-mail cím vagy felhasználónév:\",\n      update_account_am_teacher: \"Tanár vagyok\",\n      update_account_keep_access: \"Továbbra is hozzá szeretnék férni az általam létrehozott osztályokhoz\",\n      update_account_teachers_can: \"Az oktatói fiókkal rendelkező felhasználók:\",\n      update_account_teachers_can1: \"Létrehozhatják és kezelhetik az osztályokat, illetve tanulókat rendelhetnek hozzájuk\",\n      update_account_teachers_can2: \"Felvehetik a tanulókat és beírathatják őket a kurzusokra\",\n      update_account_teachers_can3: \"Kipróbálhatják a kurzusok összes pályáját\",\n      update_account_teachers_can4: \"Hozzáférhetnek az új oktatói funkciókhoz, amint azok elérhetővé válnak\",\n      update_account_teachers_warning: \"Figyelem! Rendszerünk el fog távolítani az összes osztályból, és ezentúl nem játszhatsz tanulóként.\",\n      update_account_remain_teacher: \"Tanár szeretnék maradni\",\n      update_account_update_teacher: \"Tanár szeretnék lenni\",\n      update_account_am_student: \"Tanuló vagyok\",\n      update_account_remove_access: \"Nem szeretnék a továbbiakban hozzáférni az általam létrehozott osztályokhoz\",\n      update_account_students_can: \"A tanulói fiókkal rendelkező felhasználók:\",\n      update_account_students_can1: \"Csatlakozhatnak az osztályokhoz\",\n      update_account_students_can2: \"Részt vehetnek a kurzusokon tanulóként, és nyomon követhetik saját fejlődésüket\",\n      update_account_students_can3: \"Megküzdhetnek az osztálytársaikkal az arénában\",\n      update_account_students_can4: \"Hozzáférhetnek az új tanulói funkciókhoz, amint azok elérhetővé válnak\",\n      update_account_students_warning: \"Figyelem! A továbbiakban nem kezelheted az általad létrehozott osztályokat, és nem hozhatsz létre újakat.\",\n      update_account_remain_student: \"Tanuló szeretnék maradni\",\n      update_account_update_student: \"Frissítés tanulói fiókra\",\n      need_a_class_code: \"Ehhez az osztályhoz csak osztálykóddal csatlakozhatsz:\",\n      update_account_not_sure: \"Nem tudsz dönteni? Küldj egy e-mailt\",\n      update_account_confirm_update_student: \"Biztosan frissíteni szeretnéd a fiókodat tanulói fiókra?\",\n      update_account_confirm_update_student2: \"A továbbiakban nem kezelheted az általad létrehozott osztályokat, és nem hozhatsz létre újakat. A korábban létrehozott osztályaid el lesznek távolítva a CodeCombat rendszeréből, és nem állíthatod őket vissza.\",\n      instructor: \"Oktató: \",\n      youve_been_invited_1: \"Meghívást kaptál a(z) \",\n      youve_been_invited_2: \"osztályba, ahol az osztálytársaiddal együtt elmélyülhetsz a(z) \",\n      youve_been_invited_3: \" rejtelmeiben a CodeCombat keretein belül.\",\n      by_joining_1: \"A csatlakozást követően \",\n      by_joining_2: \"segíthet a jelszavad visszaállításában, ha esetleg elfelejtenéd vagy elveszítenéd azt. Az e-mail címed megerősítésével pedig szükség esetén te magad is visszaállíthatod a jelszavad.\",\n      sent_verification: \"Az ellenőrző e-mailt elküldtük a következő címre:\",\n      you_can_edit: \"E-mail címedet itt szerkesztheted: \",\n      account_settings: \"Fiókbeállítások\",\n      select_your_hero: \"Válassz hőst\",\n      select_your_hero_description: \"Másik hős választásához nyisd meg a „Kurzusok” lapot, majd kattints a „Hős lecserélése” gombra.\",\n      select_this_hero: \"Kijelölt hős kiválasztása\",\n      current_hero: \"Aktuális hős:\"\n    },\n    teacher: {\n      course_solution: \"Kurzusmegoldókulcs\",\n      level_overview_solutions: \"Pályaleírások és megoldókulcs\",\n      teacher_dashboard: \"Tanári irányítópult\",\n      my_classes: \"Saját osztályok\",\n      courses: \"Kurzus útmutatók\",\n      enrollments: \"Tanulói licencek\",\n      resources: \"Erőforrások\",\n      help: \"Segítség\",\n      language: \"Nyelv\",\n      edit_class_settings: \"Osztály szerkesztése\",\n      access_restricted: \"A fiókot frissíteni kell!\",\n      teacher_account_required: \"A tartalom csak oktatói fiókból érhető el.\",\n      create_teacher_account: \"Oktatói fiók létrehozása\",\n      what_is_a_teacher_account: \"Mi az az oktatói fiók?\",\n      teacher_account_explanation: \"CodeCombat oktatói fiókkal osztályokat állíthatsz össze, követheted tanulóid fejlődését, valamint különböző erőforrásokhoz férhetsz hozzá, melyek segítenek a tananyag létrehozásában.\",\n      current_classes: \"Jelenlegi osztályok\",\n      archived_classes: \"Archivált osztályok\",\n      archived_classes_blurb: \"Az osztályok archiválhatók későbbi megtekintés céljából. Az osztály újraaktiválásakor az osztály újra megjelenik a Jelenlegi osztályok listán.\",\n      view_class: \"osztály megtekintése\",\n      archive_class: \"osztály archiválása\",\n      unarchive_class: \"osztály újraaktiválása\",\n      unarchive_this_class: \"Aktiváld újra ezt az osztályt\",\n      no_students_yet: \"Ennek az osztálynak még nincsen tanulója.\",\n      try_refreshing: \"(Szükség lehet az oldal frissítésére)\",\n      create_new_class: \"Új osztály\",\n      class_overview: \"Osztály áttekintése\",\n      avg_playtime: \"Átlagos pályánkénti játékidő\",\n      total_playtime: \"Teljes játékidő\",\n      avg_completed: \"Teljesített pályák - átlag\",\n      total_completed: \"Teljesített pályák\",\n      created: \"Létrehozva\",\n      concepts_covered: \"Tárgyalt fogalmak\",\n      earliest_incomplete: \"Legkorábbi teljesítetlen pálya\",\n      latest_complete: \"Legkésőbbi teljesített pálya\",\n      enroll_student: \"Tanuló beíratása\",\n      course_progress: \"Kurzus állapota\",\n      not_applicable: \"[nem elérhető]\",\n      edit: \"szerkesztés\",\n      edit_2: \"Szerkesztés\",\n      remove: \"eltávolítás\",\n      latest_completed: \"Legkésőbbi teljesített\",\n      sort_by: \"Rendezés\",\n      progress: \"Fejlődés\",\n      completed: \"Teljesítve\",\n      started: \"Elkezdve\",\n      no_progress: \"Nincs fejlődés\",\n      select_course: \"Megnézendő kurzus kiválasztása\",\n      course_overview: \"Kurzus áttekintése\",\n      copy_class_code: \"Osztálykód másolása\",\n      class_code_blurb: \"Diákjaid ezzel a kóddal csatlakozhatnak az osztályodhoz. Osztálykód használata esetén nem kell e-mail címet megadni a tanulói fiók létrehozása során.\",\n      copy_class_url: \"Osztály-URL másolása\",\n      class_join_url_blurb: \"Az osztály egyedi URL-címét közzéteheted egy diákjaiddal közösen használt weboldalon.\",\n      add_students_manually: \"Tanulók meghívása e-mailben\",\n      bulk_assign: \"Csoportos hozzárendelés\",\n      assigned: \"Hozzárendelve\",\n      enroll_selected_students: \"Kiválasztott tanulók beíratása\",\n      no_students_selected: \"Nincsenek kiválasztott tanulók.\",\n      show_students_from: \"Mutasd a tanulókat innen:\",\n      all_students: \"Minden tanuló\",\n      not_enough_enrollments: \"Nincs elég licenc.\",\n      export_student_progress: \"Tanuló fejlődésének exportálása (CSV)\",\n      send_email_to: \"Jelszó-emlékeztető e-mail küldése ide:\",\n      email_sent: \"E-mail elküldve\",\n      send_recovery_email: \"Jelszó-emlékeztető e-mail elküldése\",\n      enter_new_password_below: \"Add meg az új jelszót a lenti mezőben:\",\n      change_password: \"Jelszó megváltoztatása\",\n      changed: \"Megváltoztatva\",\n      available_credits: \"Rendelkezésre álló licencek\",\n      pending_credits: \"Függő licencek\",\n      start_date: \"Kezdő dátum:\",\n      end_date: \"Befejező dátum:\",\n      get_enrollments_blurb: \" Segítünk osztályod, iskolád vagy lakóterületed igényeire szabott megoldást találni!\",\n      request_sent: \"Kérés elküldve.\",\n      status_expired: \"Lejárt: {{date}}\",\n      status_not_enrolled: \"Nincs beíratva.\",\n      status_enrolled: \"Lejár: {{date}}\",\n      select_all: \"Összes kiválasztása\"\n    },\n    sharing: {\n      game: \"Játék\",\n      webpage: \"Weboldal\",\n      share_game: \"A játék megosztása\",\n      share_web: \"A weboldal megosztása\",\n      victory_share_prefix: \"Oszd meg ezt a linket, hogy barátaidat, családtagjaidat is\",\n      victory_share_game: \"meghívd a pályádra játszani\",\n      victory_share_web: \"meghívd a weboldaladra\",\n      victory_share_suffix: \".\",\n      victory_course_share_prefix: \"Ezen a linken barátaid és családtagjaid is\",\n      victory_course_share_game: \"játszhatnak a játékkal\",\n      victory_course_share_web: \"megnézhetik a weboldalt\",\n      victory_course_share_suffix: \"amit létrehoztál.\",\n      copy_url: \"URL másolása\"\n    },\n    game_dev: {\n      creator: \"Létrehozta\"\n    },\n    web_dev: {\n      image_gallery_title: \"Galéria\",\n      select_an_image: \"Válassz egy képet\",\n      scroll_down_for_more_images: \"(További képek megtekintéséhez görgess lejjebb)\",\n      copy_the_url: \"Másold a lenti URL-címet a vágólapra\",\n      copy_the_url_description: \"Ez jól jöhet a meglévő képek lecseréléséhez.\",\n      copy_the_img_tag: \"Másold az <img> címkét a vágólapra\",\n      copy_the_img_tag_description: \"Ez jól jöhet az új képek beszúrásához.\",\n      copy_url: \"URL másolása\",\n      copy_img: \"<img> másolása\",\n      how_to_copy_paste: \"A másolás/beillesztés módja\",\n      copy: \"Másolás\",\n      paste: \"Beillesztés\",\n      back_to_editing: \"Vissza a szerkesztőbe\"\n    },\n    classes: {\n      archmage_title: \"Főmágus\",\n      archmage_title_description: \"(Kódoló)\",\n      archmage_summary: \"Ha oktatási célú játékokban érdekelt fejlesztő vagy csatlakozz főmágusként a CodeCombat csapatához!\",\n      artisan_title: \"Alkotóművész\",\n      artisan_title_description: \"(Szint Építő)\",\n      artisan_summary: \"Építs és ossz meg szinteket a barátaiddal. Legyél Alkotóművész, aki másokat tanít programozni.\",\n      adventurer_title: \"Kalandor\",\n      adventurer_title_description: \"(Játékteszter)\",\n      adventurer_summary: \"Szerezd meg az új szinteket, meg a feliratkozással elérhetőeket is egy héttel korábban és ingyen, és segíts a debugging-ban a hivatalos kiadás előtt.\",\n      scribe_title: \"Írnok\",\n      scribe_title_description: \"(Cikk Szerkesztő)\",\n      scribe_summary: \"A jó kód jó dokumentációt igényel. Írd, szekeszd és fejleszd a fájlokat, amelyeket milliók használnak a Föld minden pontjáról.\",\n      diplomat_title: \"Diplomata\",\n      diplomat_title_description: \"(Fordító)\",\n      diplomat_summary: \"CodeCombat fordítása már több mint 45 nyelvre elkezdődött. Segítsd a fordításoddal te is a munkát.\",\n      ambassador_title: \"Nagykövet\",\n      ambassador_title_description: \"(Támogató)\",\n      ambassador_summary: \"Vezesd a fórumozókat és mutass utat a kérdezőknek. A CodeCombatot a Nagykövetek reprezentálják a világban.\",\n      teacher_title: \"Tanár\"\n    },\n    editor: {\n      main_title: \"CodeCombat Szerkesztők\",\n      article_title: \"Cikk Szerkesztő\",\n      thang_title: \"Dolog szerkesztő\",\n      level_title: \"Szint Szerkesztő\",\n      course_title: \"Kurzus szerkesztő\",\n      achievement_title: \"Eredmény szerkesztő\",\n      poll_title: \"Kérdőív szerkesztő\",\n      back: \"Vissza\",\n      revert: \"Revert\",\n      revert_models: \"Revert Models\",\n      pick_a_terrain: \"Válassz terepet\",\n      dungeon: \"Labirintus\",\n      indoor: \"Beltér\",\n      desert: \"Sivatag\",\n      grassy: \"Füves\",\n      mountain: \"Hegyes\",\n      glacier: \"Gleccser\",\n      small: \"Kicsi\",\n      large: \"Nagy\",\n      fork_title: \"Új Verzió villára vétele\",\n      fork_creating: \"Villára vétel...\",\n      generate_terrain: \"Terület generálása\",\n      more: \"Több\",\n      wiki: \"Tudásbázis\",\n      live_chat: \"Élő cset\",\n      thang_main: \"Főoldal\",\n      thang_spritesheets: \"Spritesheet-ek\",\n      thang_colors: \"Színek\",\n      level_some_options: \"Opciók?\",\n      level_tab_thangs: \"Dolgok\",\n      level_tab_scripts: \"Kódok\",\n      level_tab_components: \"Komponensek\",\n      level_tab_systems: \"Rendszerek\",\n      level_tab_docs: \"Dokumentáció\",\n      level_tab_thangs_title: \"Jelenlegi Egységek\",\n      level_tab_thangs_all: \"Mind\",\n      level_tab_thangs_conditions: \"Kezdeti feltételek\",\n      level_tab_thangs_add: \"Egységek hozzáadása\",\n      level_tab_thangs_search: \"Egység keresése\",\n      add_components: \"Komponensek hozzáadása\",\n      component_configs: \"Komponens konfigurációk\",\n      config_thang: \"Kattints duplán egy egység beállításához\",\n      \"delete\": \"Törlés\",\n      duplicate: \"Duplikálás\",\n      stop_duplicate: \"Duplikálás megszüntetése\",\n      rotate: \"Forgatás\",\n      level_component_tab_title: \"Jelenlegi komponensek\",\n      level_component_btn_new: \"Új komponens létrehozása\",\n      level_systems_tab_title: \"Jelenlegi rendszerek\",\n      level_systems_btn_new: \"Új rendszer létrehozása\",\n      level_systems_btn_add: \"Rendszer hozzáadása\",\n      level_components_title: \"Vissza az összes egységhez\",\n      level_components_type: \"Típus\",\n      level_component_edit_title: \"Komponens szerkesztése\",\n      level_component_config_schema: \"Konfig. séma\",\n      level_system_edit_title: \"Rendszer szerkesztése\",\n      create_system_title: \"Új rendszer létrehozása\",\n      new_component_title: \"Új komponens létrehozása\",\n      new_component_field_system: \"Rendszer\",\n      new_article_title: \"Új cikk létrehozása\",\n      new_thang_title: \"Új egységtípus létrehozása\",\n      new_level_title: \"Új pálya létrehozása\",\n      new_article_title_login: \"Új cikk létrehozásához be kell lépned\",\n      new_thang_title_login: \"Új egységtípus létrehozásához be kell lépned\",\n      new_level_title_login: \"Új pálya létrehozásához be kell lépned\",\n      new_achievement_title: \"Új eredmény létrehozása\",\n      new_achievement_title_login: \"Új eredmény létrehozásához be kell lépned\",\n      new_poll_title: \"Új kérdőív létrehozása\",\n      new_poll_title_login: \"Új kérdőív létrehozásához be kell lépned\",\n      article_search_title: \"Cikk keresése itt\",\n      thang_search_title: \"Dologtípus keresése itt\",\n      level_search_title: \"Pályák keresése itt\",\n      achievement_search_title: \"Eredmények keresése\",\n      poll_search_title: \"Kérdőív keresése\",\n      read_only_warning2: \"Megjegyzés: itt nem menthetsz el változtatást, mert nem vagy belépve.\",\n      no_achievements: \"Ehhez a pályához még nem rendeltek eredményeket.\",\n      achievement_query_misc: \"Egyéb kategóriákon kívüli kulcseredmény\",\n      achievement_query_goals: \"Pályacélokon kívüli kulcseredmény\",\n      level_completion: \"Pálya befejezése\",\n      pop_i18n: \"I18n előkészítése\",\n      tasks: \"Feladatok\",\n      clear_storage: \"Helyi változtatások törlése\",\n      add_system_title: \"Rendszerek hozzáadása a pályához\",\n      done_adding: \"Hozzáadás kész\"\n    },\n    article: {\n      edit_btn_preview: \"Előnézet\",\n      edit_article_title: \"Cikk szerkesztés\"\n    },\n    polls: {\n      priority: \"Prioritás\"\n    },\n    contribute: {\n      page_title: \"Hozzájárulás\",\n      intro_blurb: \"A CodeCombat 100%-ban nyílt forráskódú! Több száz elkötelezett játékosunk segített abban, hogy a játék elérhesse jelenlegi állapotát. Állj be közénk, nyiss új fejezetet a CodeCombat történetében, hogy megtaníthassuk az embereket kódolni!\",\n      alert_account_message_intro: \"Hellóhelló.\",\n      alert_account_message: \"Ha fel szeretnél iratkozni az osztály levelezésére, először be kell lépned.\",\n      archmage_introduction: \"A játékok fejlesztésében az egyik legszebb dolog az, hogy annyi mindent hoznak létre. Grafikát, hangot, valós idejű kommunikációt, közösségi hálón való kommunikációt, és persze a programozás legfontosabb vonatkozásait az alacsony szintű adatbáziskezeléstől és szerveradminisztrációtól kezdve a user interface design és interface building folyamatokig. Sok itt még a tennivaló, ezért ha tapasztalt programozó vagy, és szívesen belevetnéd magad a CodeCombat sűrűjébe, ez az osztály való neked. Nagyon jól jönne a segítséged, hogy megcsinálhassuk a világ legjobb programozós játékát!\",\n      class_attributes: \"Az osztály jellemzői\",\n      archmage_attribute_1_pref: \"Ismeretek \",\n      archmage_attribute_1_suf: \"terén, vagy a vágy, hogy elsajátítsd őket. A legtöbb kódunk ezen a nyelven íródott. Ha Ruby- vagy Python-fan vagy, ebben otthon érzed majd magadat. Ez valójában JavaScript, de barátságosabb a szintaxis.\",\n      archmage_attribute_2: \"Némi programozási tapasztalat és személyes kezdeményezőkészség. Segítünk az eligazodásban, de nincs túl sok időnk a kikupálásodra.\",\n      how_to_join: \"Hogyan csatlakozhatok?\",\n      join_desc_1: \"Ebben bárki tud segíteni. Csak látogass el ide: \",\n      join_desc_2: \", és jelöld be a lenti jelölőnégyzetet, hogy kinevezd magad főmágusnak, és megkapd legfrissebb híreinket e-mailben. Szeretnéd chaten megbeszélni a teendőket, a továbblépés lehetőségeit? \",\n      join_desc_3: \"(írj e-mailt), vagy látogass el ide: \",\n      join_desc_4: \", és összehozunk valamit!\",\n      join_url_email: \"Küldj e-mailt\",\n      join_url_slack: \"publikus Slack channel\",\n      archmage_subscribe_desc: \"Szeretnék e-mailt kapni az új fejlesztési lehetőségekről, a bejelentésekről.\",\n      artisan_introduction_pref: \"Még több pályát kell csinálnunk! Az emberek további tartalmakat követelnek, ám mi nem tudjuk tartani a lépést. A munkaállomásod most első szintű; a pályaszerkesztőnket még a készítői is alig tudják használni, szóval vigyázz! Ha van már víziód a programozás világát a for-ciklusoktól a\",\n      artisan_introduction_suf: \"-ig lefedő kampányokról, tied a pálya!\",\n      artisan_attribute_1: \"A hasonló tartalom létrehozásában való tapasztalat (például Blizzard pályaszerkesztői) sokat számíthat, de korántsem elengedhetetlen.\",\n      artisan_attribute_2: \"Nem tudsz ellenálni a jó sok tesztelésnek és iterálásnak. A jó pálya úgy születik, hogy átküldöd másoknak, és nézed, ahogy játszanak vele, és lélekben felkészülsz a sok javításra.\",\n      artisan_attribute_3: \"Közben pedig gyúrhatsz egy Kalandorral. Pályaszerkesztőnk nagyon kezdetleges, elég idegesítő dolgozni vele. Mi szóltunk!\",\n      artisan_join_desc: \"Nagyjából ezek a pályaszerkesztő használatának lépései:\",\n      artisan_join_step1: \"Olvasd el a dokumentációt!\",\n      artisan_join_step2: \"Készíts új pályát és fedezz fel meglévőket!\",\n      artisan_join_step3: \"Keress fel minket a publikus Slack channelünkön!\",\n      artisan_join_step4: \"Posztold ki a pályáidat a fórumon, így kaphatsz róluk visszajelzést.\",\n      artisan_subscribe_desc: \"Szeretnék e-mailt kapni a pályaszerkesztő frissítéseiről és a bejelentésekről.\",\n      adventurer_introduction: \"Tisztázzuk: te leszel itt a tank. Te kapod majd a golyók nagy részét. Szükségünk van olyanokra, akik kipróbálják a vadonatúj pályákat , és ezzel segítenek megtalálni a javítandó pontokat a játékban. A fájdalom számodra elkerülhetetlen - egy jó játék elkészítése sokáig tart, és senkinek sem sikerül elsőre rendesen. Ha kemény fából faragtak és bírod a gyűrődést, ezt az osztályt neked találták ki.\",\n      adventurer_attribute_1: \"Tudásszomj. Meg szeretnéd tanulni a programozás fortélyait, mi pedig meg szeretnénk tanítani rájuk. Bár itt főleg te leszel az, aki a többieket tanítgatja.\",\n      adventurer_attribute_2: \"Barátságos. Légy kedves, de határozott, amikor felvázolod, hogy min lehetne javítani vagy mit lehetne továbbfejleszteni.\",\n      adventurer_join_pref: \"Állj össze egy Alkotóművésszel és dolgozzatok együtt, vagy pipáld be az alsó jelölőnégyzetet, hogy értesülj róla, ha új pálya készült. A következő felületeken szintén kaphatsz értesítést arról, hogy új pályát kell kipróbálni:\",\n      adventurer_forum_url: \"a játékfórum\",\n      adventurer_join_suf: \"Szóval ha szeretnéd ezeket megkapni, iratkozz fel!\",\n      adventurer_subscribe_desc: \"Szeretnék e-mailt kapni az tesztelendő új pályákról.\",\n      scribe_introduction_pref: \"A CodeCombat nem egyszerűen egy rakás pálya lesz. Lesz benne ismeretanyag is, egy „wiki” a pályák által használt programozási fogalmakról. Tehát ahelyett, hogy az Alkotóművészeknek részletesen el kellene magyarázniuk, hogy mi az az összehasonlító operátor, egyszerűen belinkelik a pályájukat a cikkhez, ahol már megvan a leírás. Valahogy úgy, ahogy a \",\n      scribe_introduction_url_mozilla: \"Mozilla Developer Network\",\n      scribe_introduction_suf: \" csinálta. Ha szívesen írnál a programozásról Markdown formában, ez az osztály neked való.\",\n      scribe_attribute_1: \"Jól kell tudnod bánni a szavakkal. Nem csak a nyelvhelyesség és a helyesírás számít. Képesnek kell lenned az összetett fogalmak átadására is.\",\n      contact_us_url: \"Írj nekünk\",\n      scribe_join_description: \"mesélj egy kicsit magadról, a programozás terén szerzett tapasztalataidról, és hogy milyen dolgokról írogatnál szívesen. Kezdetnek ennyi!\",\n      scribe_subscribe_desc: \"Szeretném e-mailben megkapni a cikkekkel kapcsolatos bejelentéseket.\",\n      diplomat_introduction_pref: \"Szóval ha levonhatunk valami tanulságot az \",\n      diplomat_launch_url: \"októberi indulásról,\",\n      diplomat_introduction_suf: \"akkor az az, hogy más országokban is nagy az érdeklődés a CodeCombat iránt! Fel szeretnénk állítani egy fordítói hadtestet, hogy a CodeCombat a világ minél több pontján elérhető legyen. Ha szívesen belesel néha a kulisszák mögé hogy lásd, milyen tartalmak vannak előkészületben, ez az osztály neked való.\",\n      diplomat_attribute_1: \"Az angol és a választott célnyelv magas szintű ismerete. Amikor bonyolultabb fogalmak átadásáról van szó, mindkettőt nagy biztonsággal kell tudnod használlni.\",\n      diplomat_i18n_page_prefix: \"Elkezdheted fordítani a pályákat a\",\n      diplomat_i18n_page: \"fordítások oldalon\",\n      diplomat_i18n_page_suffix: \", vagy pedig a GitHub-os felületen/website-on.\",\n      diplomat_join_pref_github: \"Keresd meg a language local fájlt \",\n      diplomat_github_url: \"a GitHub-on\",\n      diplomat_join_suf_github: \", szerkeszd online, majd submitolj egy pull request-et. Pipáld be a lenti jelölőnégyzetet, ha naprakész információkat szeretnél kapni a fordítással kapcsolatos fejleményekről!\",\n      diplomat_subscribe_desc: \"Szeretnék e-maileket kapni az internacionalizációval kapcsolatos fejleményekről és a pálya-fordítási lehetőségekről.\",\n      ambassador_introduction: \"Egy közösséget építünk, aminek te építed a kapcsolatait. Van fórumunk, levelezőlistánk, és vannak közösségi hálóink, ahol beszélgethetsz sok emberrel, ismerkedhetsz a játékkal, és sokat tanulhatsz. Ha szívesen vonnál be másokat a játékba, te pedig szeretnél bekerülni a CodeCombat sodrásába hogy lásd, hogyan fejlődik a játék, ezt az osztályt válaszd!\",\n      ambassador_attribute_1: \"Jó kommunikációs készség. Képesnek kell lenned beazonosítani a játékosok problémáit, és segíteni nekik a megoldásában. Rendszeresen okosíts minket ki, hogy miről beszélnek a játékosok - mi tetszik nekik, mi nem tetszik nekik, miből szeretnének többet!\",\n      ambassador_join_desc: \"mesélj kicsit magadról, arról hogy miket csináltál eddig, és mi az, ami érdekelne! Kezdetnek ennyi!\",\n      ambassador_join_note_strong: \"Megjegyzés\",\n      ambassador_join_note_desc: \"Egyik fő prioritásunk a többjátékos mód, ahol az egyes szintekkel megbirkózni nem képes játékosok megidézhetnek magasabb szintű varázslókat, hogy segítsenek nekik. Ezzel a nagykövetek is megmutathatják, mit tudnak. Később még jelentkezünk!\",\n      ambassador_subscribe_desc: \"Szeretnék e-mailt kapni a support frissítésekről és a többjátékos móddal kapcsolatos fejleményekről.\",\n      teacher_subscribe_desc: \"Szeretnék e-mailt kapni a tanárokat érintő frissítésekről és bejelentésekről.\",\n      changes_auto_save: \"Ha rákattintasz egy jelölőnégyzetre, a változásokat automatikusan elmentjük.\",\n      diligent_scribes: \"Szorgos írnokaink:\",\n      powerful_archmages: \"Félelmetes főmágusaink:\",\n      creative_artisans: \"Tehetséges alkotóművészeink:\",\n      brave_adventurers: \"Bátor kalandoraink:\",\n      translating_diplomats: \"Nyelvekben jeleskedő diplomatáink:\",\n      helpful_ambassadors: \"Segítőkész nagyköveteink:\"\n    },\n    ladder: {\n      my_matches: \"Saját eredmények\",\n      simulate: \"Szimuláció\",\n      simulation_explanation: \"A szimuláció révén hamarabb rangsorolhatod a játékot.\",\n      simulation_explanation_leagues: \"Elsősorban a saját klánjaidhoz tartozó és szövetséges játékosoknak segíthetsz játékot szimulálni.\",\n      simulate_games: \"Szimuláld a játékot!\",\n      games_simulated_by: \"Általad szimulált játékok:\",\n      games_simulated_for: \"Számodra szimulált játékok:\",\n      games_in_queue: \"Folyamatban lévő játékok:\",\n      games_simulated: \"Szimulált játékok\",\n      games_played: \"Befejezett játékok\",\n      ratio: \"Arány\",\n      leaderboard: \"Eredménytábla\",\n      battle_as: \"Választott szerep \",\n      summary_your: \"Saját \",\n      summary_matches: \"eredmények \",\n      summary_wins: \" Győzelmek \",\n      summary_losses: \" Vereségek\",\n      rank_no_code: \"Nincs új kód értékeléshez\",\n      rank_my_game: \"Értékeld a játékomat!\",\n      rank_submitting: \"Beküldés...\",\n      rank_submitted: \"Beküldve értékelésre\",\n      rank_failed: \"Sikertelen értékelés\",\n      rank_being_ranked: \"Játék értékelése folyamatban\",\n      rank_last_submitted: \"beküldve \",\n      help_simulate: \"Szükséged van segítségre a játékok szimulálásához?\",\n      code_being_simulated: \"Az új kódodat más játékosok szimulálják az értékeléshez. Új eredmények esetén frissülni fog.\",\n      no_ranked_matches_pre: \"Nincsenek értékelt eredmények \",\n      no_ranked_matches_post: \" a csapathoz! Játssz a versenytársakkal, majd gyere vissza, hogy megnézd a játékod értékelését.\",\n      choose_opponent: \"Válassz ellenfelet!\",\n      select_your_language: \"Válassz nyelvet!\",\n      tutorial_play: \"Gyakorlójáték\",\n      tutorial_recommended: \"Javasolt, ha még sohasem játszottál.\",\n      tutorial_skip: \"Gyakorlójáték átugrása\",\n      tutorial_not_sure: \"Nem érted mi folyik?\",\n      tutorial_play_first: \"Játssz egy gyakorlójátékot először!\",\n      simple_ai: \"Egyszerű MI\",\n      warmup: \"Bemelegítés\",\n      friends_playing: \"Baráti csata\",\n      log_in_for_friends: \"Jelentkezz be, hogy játszhass a barátaiddal!\",\n      social_connect_blurb: \"Kapcsolódj be és versenyezz a barátaiddal!\",\n      invite_friends_to_battle: \"Hívd meg a barátaidat a játékba!\",\n      fight: \"Harc!\",\n      watch_victory: \"Kövesd a saját győzelmedet\",\n      defeat_the: \"Győzd le\",\n      watch_battle: \"Nézd meg a csatát\",\n      tournament_started: \", elkezdve\",\n      tournament_ends: \"A torna vége\",\n      tournament_ended: \"A torna véget ért\",\n      tournament_rules: \"A torna szabályai\",\n      tournament_blurb: \"Kódolj, gyűjtsd az aranyakat, építs hadsereget, győzd le az ellenségeid, küzdj a jutalmakért és szállj be a 40 000 dolláros bajnokságunkba! Nézd meg a részleteket\",\n      tournament_blurb_criss_cross: \"Köss fogadásokat, építs ösvényeket, járj túl az ellenségeid eszén, szerezd meg a drágaköveket és szállj be a Criss-Cross bajnokságba! Nézd meg a részleteket\",\n      tournament_blurb_zero_sum: \"Engedd ki a kódot a palackból és gyűjtsd az aranyat vagy légy a legjobb stratéga a vörös és kék varázslók tükrözős csatájában. A bajnokság március 27-én, pénteken kezdődik és április 6-án, hétfőn, délután 5 órakor (PDT) zárul. Küzdj a dicsőségért! Nézd meg a részleteket\",\n      tournament_blurb_ace_of_coders: \"Csatázz a fagyos gleccserek uralta tájon a tükrözős ütközetben! A bajnokság szeptember 16-án, szerdán kezdődik és október 14-én, szerdán, délután 5 órakor (PDT) zárul. Nézd meg a részleteket\",\n      tournament_blurb_blog: \"a blogunkon\",\n      rules: \"Szabályok\",\n      winners: \"Győztesek\",\n      league: \"Liga\",\n      red_ai: \"Vörös CPU\",\n      blue_ai: \"Kék CPU\",\n      wins: \"Győzelmek\",\n      humans: \"Vörös\",\n      ogres: \"Kék\"\n    },\n    user: {\n      stats: \"Statisztika\",\n      singleplayer_title: \"Egyjátékos Pályák\",\n      multiplayer_title: \"Többjátékos Pályák\",\n      achievements_title: \"Eredmények\",\n      last_played: \"Utoljára játszott\",\n      status: \"Státusz\",\n      status_completed: \"Befejezett\",\n      status_unfinished: \"Folyamatban lévő\",\n      no_singleplayer: \"Még nem játszott egyjátékos játékot.\",\n      no_multiplayer: \"Még nem játszott többjátékos játékot.\",\n      no_achievements: \"Egyelőre nincsenek szerzett eredmények.\",\n      favorite_prefix: \"A kedvenc nyelv \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Még egy Klánnak sem tagja.\"\n    },\n    achievements: {\n      last_earned: \"Utolsónak megszerzett\",\n      amount_achieved: \"Mennyiség\",\n      achievement: \"Eredmények\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" összesen\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" megszerzett\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" következő szinthez \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Befizetések\",\n      prepaid_codes: \"Fizetős kódok\",\n      purchased: \"Vásárolt\",\n      subscription: \"Előfizetés\",\n      invoices: \"Számlák\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Fizetve\",\n      service: \"Szolgáltatás\",\n      price: \"Ár\",\n      gems: \"Drágakövek\",\n      active: \"Aktív\",\n      subscribed: \"Előfizetett\",\n      unsubscribed: \"Lemondott\",\n      active_until: \"Aktív eddig:\",\n      cost: \"Ár\",\n      next_payment: \"Következő befizetés\",\n      card: \"Bankkártya\",\n      status_unsubscribed_active: \"Nincs további előfizetés, így a kártya nem lesz megterhelve, de a már kifizetett fennmaradó időben az előfizetés aktív marad.\",\n      status_unsubscribed: \"Szerezd meg az új pályákat, hősöket, tárgyakat és bónusz drágaköveket CodeCombat előfizetéssel!\",\n      not_yet_verified: \"Nem hitelesített.\",\n      resend_email: \"E-mail újraküldése\",\n      email_sent: \"E-mail elküldve! Nézd meg a postfiókod!\",\n      verifying_email: \"E-mail cím hitelesítése...\",\n      successfully_verified: \"E-mail cím sikeres hitelesítése.\",\n      verify_error: \"Hiba történt az e-mail cím hitelesítésekor :(\"\n    },\n    account_invoices: {\n      amount: \"Összeg US dollárban\",\n      declined: \"A kártyád elutasításra került\",\n      invalid_amount: \"Kérjük, hogy US dollárban add meg az összeget.\",\n      not_logged_in: \"A számlák megtekintéséhez jelentkezz be vagy hozz létre egy fiókot.\",\n      pay: \"Számla kifizetése\",\n      purchasing: \"Vásárlás...\",\n      retrying: \"Szerverhiba, új próbálkozás.\",\n      success: \"Sikeres fizetés. Köszönjük!\"\n    },\n    account_prepaid: {\n      purchase_code: \"Előfizetéses kód vásárlása\",\n      purchase_code1: \"Az előfizetéses kódok beválthatók további prémium előfizetői időre egy vagy több fiókhoz is.\",\n      purchase_code2: \"Egy adott előfizetéses kód csak egy adott CodeCombat fiókhoz váltható be.\",\n      purchase_code3: \"A fiókban a meglévő előfizetéshez hozzáadódnak a hónapok annak lejártával.\",\n      users: \"Felhasználók\",\n      months: \"Hónapok\",\n      purchase_total: \"Összesen\",\n      purchase_button: \"Vásárlás\",\n      your_codes: \"Saját kódok\",\n      redeem_codes: \"Előfizetéses kód beváltása\",\n      prepaid_code: \"Fizetős kód\",\n      lookup_code: \"Fizetős kód keresése\",\n      apply_account: \"Alkalmazás a saját fiókra\",\n      copy_link: \"Másold ki a kód linkjét, majd küldd el valakinek.\",\n      quantity: \"Mennyiség\",\n      redeemed: \"Beváltva\",\n      no_codes: \"Nincs még kód!\",\n      you_can1: \"Vásárolhatsz\",\n      you_can2: \"egy fizetős kódot,\",\n      you_can3: \"amelyet a saját fiókodban is beválthatsz vagy átadhatsz másoknak.\"\n    },\n    loading_error: {\n      could_not_load: \"A betöltés a szerverről sikertelen\",\n      connection_failure: \"Kapcsolat megszakadt.\",\n      connection_failure_desc: \"Úgy tűnik, nincs internetkapcsolatod! Ellenőrizd az internetkapcsolatot, majd frissítsd az oldalt.\",\n      login_required: \"Bejelentkezés szükséges\",\n      login_required_desc: \"Az oldal eléréséhez be kell jelentkezni.\",\n      unauthorized: \"Be kell jelentkezned. Engedélyezted a sütiket?\",\n      forbidden: \"Tiltott\",\n      forbidden_desc: \"Sajnos itt nem terem számodra babér! Ellenőrizd, hogy a megfelelő fiókba vagy-e bejelentkezve, vagy válassz az alábbi linkek közül, hogy visszatérj a programozáshoz.\",\n      not_found: \"Nem található.\",\n      not_found_desc: \"Hát, itt sincs semmi. Válassz az alábbi linkek közül, hogy visszatérj a programozáshoz.\",\n      not_allowed: \"Nem engedélyezett metódus.\",\n      timeout: \"Szerveroldali időtúllépés\",\n      conflict: \"Konfliktus a forrásokban.\",\n      bad_input: \"Hibás bemenet.\",\n      server_error: \"Szerver hiba.\",\n      unknown: \"Ismeretlen hiba.\",\n      error: \"HIBA\",\n      general_desc: \"Hiba történt, valószínűleg a mi készülékünkben. Kis idő múlva frissítsd az oldalt vagy válassz az alábbi linkek közül, hogy visszatérj a programozáshoz.\"\n    },\n    resources: {\n      level: \"Szint\",\n      patch: \"Patch\",\n      patches: \"Patchek\",\n      system: \"Rendszer\",\n      systems: \"Rendszerek\",\n      component: \"Komponens\",\n      components: \"Komponensek\",\n      hero: \"Hős (hero)\",\n      campaigns: \"Kampányok\"\n    },\n    concepts: {\n      \"arguments\": \"Paraméterek\",\n      arithmetic: \"Aritmetika\",\n      arrays: \"Tömbök\",\n      basic_syntax: \"Alap Szintaxis\",\n      bootstrap: \"Bootstrap\",\n      break_statements: \"Feltételes elágazás\",\n      classes: \"Osztályok\",\n      continue_statements: \"Elágazás folytatása\",\n      for_loops: \"For ciklus\",\n      functions: \"Függvények\",\n      graphics: \"Grafika\",\n      if_statements: \"Feltételes elágazás\",\n      jquery: \"jQuery\",\n      math_operations: \"Matematikai műveletek\",\n      object_literals: \"Objektumliterálok\",\n      parameters: \"Paraméterek\",\n      recursion: \"Rekurzió\",\n      strings: \"Szövegek\",\n      variables: \"Változók\",\n      vectors: \"Vektorok\",\n      advanced_strings: \"Haladó stringek\",\n      algorithms: \"Algoritmusok\",\n      boolean_logic: \"Boolean logika\",\n      basic_html: \"HTML-alapok\",\n      basic_css: \"CSS-alapok\",\n      basic_web_scripting: \"Webscripting alapok\",\n      intermediate_html: \"HTML középhaladóknak\",\n      intermediate_css: \"CSS középhaladóknak\",\n      intermediate_web_scripting: \"Webscripting középhaladóknak\",\n      advanced_html: \"HTML haladóknak\",\n      advanced_css: \"CSS haladóknak\",\n      advanced_web_scripting: \"Webscripting haladóknak\",\n      input_handling: \"Inputkezelés\",\n      while_loops: \"While ciklus\"\n    },\n    delta: {\n      added: \"Hozzáadott\",\n      modified: \"Módosított\",\n      not_modified: \"Nem Módosított\",\n      deleted: \"Törölt\",\n      moved_index: \"Index eltávolítva\",\n      text_diff: \"Szöveg Különbség\",\n      merge_conflict_with: \"Merge konfliktus\",\n      no_changes: \"Nincs Változás\"\n    },\n    legal: {\n      page_title: \"Jogi információk\",\n      opensource_description_prefix: \"Látogass el a \",\n      github_url: \"GitHub repónkba\",\n      opensource_description_center: \"és szolgáld ki magad! A CodeCombat több tucat nyílt forráskódú projektre épül, és mindegyiket nagyon szeretjük! Nézd meg \",\n      archmage_wiki_url: \"a főmágusunk wikioldalát,\",\n      opensource_description_suffix: \"ahol megtalálod a játékban használt softwerek listáját.\",\n      practices_title: \"Legjobb gyakorlatok\",\n      practices_description: \"Ezek a mi ígéreteink a játékosok felé, kevésbé jogszerűen megfogalmazva.\",\n      privacy_title: \"Adatvédelem\",\n      privacy_description: \"A személyes adatokat nem értékesítjük harmadik fél számára.\",\n      security_title: \"Biztonság\",\n      security_description: \"Minden megteszünk a személyes adatok védelme érdekében. Nyílt forráskódú projektként a webhelyünk szabadon elérhető mindenki számára, hogy értékelje vagy továbbfejlessze a rendszereink biztonságát.\",\n      email_title: \"E-mail\",\n      email_description_prefix: \"Nem fogunk elárasztani levelekkel. Az\",\n      email_settings_url: \"e-mail beállításokon keresztül\",\n      email_description_suffix: \"vagy az e-mailben kapott linkek segítségével bármikor megváltoztathatod a beállításaidat és egyszerűen leiratkozhatsz.\",\n      cost_title: \"Ár\",\n      cost_description: \"A CodeCombat valamennyi alappályája ingyenes, {{price}} USD/hó előfizetés keretében azonban további szintek és pályák, illetve {{gems}} bónusz drágakövek érhetők el. Egy kattintással visszavonhatoó, és 100%-os pénzvisszatérítési garanciát vállalunk.\",\n      copyrights_title: \"Copyright és licencek\",\n      contributor_title: \"Támogatói licencszerződés\",\n      contributor_description_prefix: \"Mind a webhelyünk, mind a GitHub tárhelyünk fejlesztésében való közreműkődés a\",\n      cla_url: \"támogatói licencszerződés (CLA) hatálya alá esik,\",\n      contributor_description_suffix: \"amelynek elfogadása előzetesen kötelező.\",\n      code_title: \"Kód - MIT\",\n      mit_license_url: \"MIT licenc hatálya alá esik.\",\n      code_description_suffix: \"Ez kiterjed minden kódra a CodeCombat által fenntartott rendszerekben és komponensekben, amelyek a pályák létrehozását szolgálják.\",\n      art_title: \"Design/zene - Kreatív tartalmak \",\n      art_description_prefix: \"Minden közös tartalom a\",\n      cc_license_url: \"Creative Commons Attribution 4.0 nemzetközi licenc hatálya alá esik.\",\n      art_description_suffix: \"Közös tartalomnak számít minden, a CodeCombat által elérhetővé tett tartalom, amely a pályák létrehozását szolgálja. Ez magában foglalja a következőket:\",\n      art_music: \"Zene\",\n      art_sound: \"Hang\",\n      art_artwork: \"Illusztráció\",\n      art_sprites: \"Számítógépes grafika\",\n      art_other: \"Bármely más nem kódjellegű kreatív tartalom, amely a pályák létrehozása során készült.\",\n      art_access: \"Jelenleg nem létezik olyan egységes és egyszerű módszer, amely lehetővé teszi ezeknek az eszközöknek az elérését. Általában a webhelyen megadott URL-eken keresztül elérhetők. Egyéb esetben fordulj hozzánk segítségért vagy segíts abban, hogy ezek az eszközök könnyebben elérhetővé váljanak.\",\n      art_paragraph_1: \"A forrás felhasználása esetén kérjük, hogy tüntesd föl a codecombat.com címét a forrás közelében vagy az adott felülettől függően más megfelelő helyen. Például:\",\n      use_list_1: \"Ha mozgóképben vagy másik játékban használod, akkor tüntesd föl a codecombat.com-ot a felhasznált források listájában.\",\n      use_list_2: \"Ha egy webhelyen használod föl, akkor helyezz el egy hivatkozást a felhasználás közelében, például egy kép alatt vagy a felhasznált forrásokat listázó oldalon, ahol a többi, esetlegesen felhasznált tartalmat is feltünteted. Olyan hivatkozások esetében, amelyekben egyértelműen szerepel a CodeCombat, például a játékról szóló blogbejegyzésben, nem szükséges további hivatkozás feltüntetése.\",\n      art_paragraph_2: \"Ha a felhasznált tartalom létrehozója nem a CodeCombat, hanem a codecombat.com valamely felhasználója, akkor az adott felhasználóra mutató hivatkozást kell feltüntetni, illetve az erre vonatkozó előírásokat követni, amennyiben az adott forrásban ilyen elérhető.\",\n      rights_title: \"Minden jog fenntartva\",\n      rights_desc: \"A pályákhoz kapcsolódó minden jog fenntartva. Ez magában foglalja a következőket:\",\n      rights_scripts: \"Kódok\",\n      rights_unit: \"Egységek beállításai\",\n      rights_writings: \"Egyéb írott tartalmak\",\n      rights_media: \"Médiatartalmak (zene, hangeffektek), illetve valamennyi, kifejezetten az adott pályához készített egyéb kreatív tartalom, amely nem általános felhasználásra szánt.\",\n      rights_clarification: \"Pontosabban minden, a Pályaszerkesztőben elérhető tartalom, amely új pályák létrehozását szolgálja, az a Creative Commons nemzetközi licenc hatálya alá esik. Ezzel szemben a Pályaszerkesztő segítségével létrehozott vagy új pályák létrehozása közben feltöltött tartalmak a licenc hatályán kívül esnek.\",\n      nutshell_title: \"Összefoglaló\",\n      nutshell_description: \"A Pályaszerkesztőben közzétett valamennyi tartalom szabadon felhasználható a pályák szerkesztéséhez és létrehozásához. Fenntartjuk azonban a jogot a (codecombat.com keretein belül létrehozott) pályák közreadásának korlátozására, hogy szükség esetén fizetőssé tegyük.\",\n      canonical: \"Ennek a dokumentumnak az angol eredetije a mérvadó és hitelesnek elismert változata. Az eredetihez képest a más nyelvekre fordított változatokban esetlegesen meglévő bármilyen változás esetén az angol eredetit kell alapul venni.\",\n      third_party_title: \"Harmadik fél által nyújtott szolgáltatások\",\n      third_party_description: \"A CodeCombat az alábbiak között a következő harmadik fél által nyújtott szolgáltatásokat használja:\"\n    },\n    ladder_prizes: {\n      title: \"Bajnoksági díjak\",\n      blurb_1: \"Ezeket a bajnoksági díjakat az alábbi módon ítéljük oda:\",\n      blurb_2: \"a torna szabályai\",\n      blurb_3: \"a legjobb játékosok számára, legyen az ember vagy ogre.\",\n      blurb_4: \"Két csapat dupla esélyek!\",\n      blurb_5: \"(Két első, két második stb. helyezettet díjazunk)\",\n      rank: \"Rang\",\n      prizes: \"Díjak\",\n      total_value: \"Összérték\",\n      in_cash: \"készpénzben\",\n      custom_wizard: \"Egyedi CodeCombat Varázsló\",\n      custom_avatar: \"Egyedi CodeCombat avatar\",\n      heap: \"a létrehozástól számított hat hónapig\",\n      credits: \"kreditek\",\n      one_month_coupon: \"kupon: Railst vagy HTML-t választhatsz\",\n      one_month_discount: \"30% kedvezmény: Railst vagy HTML-t választhatsz\",\n      license: \"licenc\",\n      oreilly: \"szabadon választott e-könyv\"\n    },\n    calendar: {\n      year: \"Év\",\n      day: \"Nap\",\n      month: \"Hónap\",\n      january: \"Január\",\n      february: \"Február\",\n      march: \"Március\",\n      april: \"Április\",\n      may: \"Május\",\n      june: \"Június\",\n      july: \"Július\",\n      august: \"Augusztus\",\n      september: \"Szeptember\",\n      october: \"Október\",\n      november: \"November\",\n      december: \"December\"\n    },\n    server_error: {\n      email_taken: \"Ezzel az e-mail címmel már regisztráltak.\",\n      username_taken: \"A felhasználó név már foglalt.\"\n    },\n    esper: {\n      line_no: \"Sorszám $1:\",\n      uncaught: \"Nem kezelt $1\",\n      reference_error: \"Referencia hiba (ReferenceError): \",\n      argument_error: \"Paraméter hiba (ArgumentError): \",\n      type_error: \"Típus hiba (TypeError): \",\n      syntax_error: \"Szintaxis hiba (SyntaxError): \",\n      error: \"Hiba (Error): \",\n      x_not_a_function: \"$1 nem függvény\",\n      x_not_defined: \"$1 nem definiált\",\n      spelling_issues: \"Nézz körül, elgépeltél valamit: esetleg `$1` -re gondoltál, `$2` helyett?\",\n      capitalization_issues: \"Nézz körül kis-nagybetű hiba miatt: `$1` helyett `$2` -re lenne szükség.\",\n      py_empty_block: \"$1 üres. Tegyél 4 szóközt az utasítások elé $2 utasítás alatt.\",\n      there_is_a_problem: \"Valamilyen hiba van a programodban.\",\n      missing_a_quotation_mark: \"Hiányzó idézőjel. \",\n      put_each_command_on: \"Helyezz minden utasítást külön sorba\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1057\n");

/***/ })

});