/*! hash:345dfe6c0e434e9c7378, chunkhash:4adf39661e28b44d3140, name:locale/pt-PT, filebase:pt-PT.bundle.js, query:, file:javascripts/chunks/locale/pt-PT.bundle.js */
webpackJsonp([32],{

/***/ 1076:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"Português (Portugal)\",\n  englishDescription: \"Portuguese (Portugal)\",\n  translation: {\n    new_home: {\n      slogan: \"A forma mais cativante de aprender código real.\",\n      classroom_edition: \"Edição de Turma:\",\n      learn_to_code: \"Aprender a programar:\",\n      play_now: \"Jogar Agora\",\n      im_a_teacher: \"Sou um Professor\",\n      im_a_student: \"Sou um Estudante\",\n      learn_more: \"Saber mais\",\n      classroom_in_a_box: \"Uma turma num pacote para ensinar ciências da computação.\",\n      codecombat_is: \"O CodeCombat é uma plataforma <strong>para estudantes</strong> para aprender ciências da computação enquanto se joga um jogo real.\",\n      our_courses: \"Os nossos cursos foram especificamente testados para <strong>terem sucesso na sala de aula</strong>, até para professores com pouca ou nenhuma experiência anterior de programação.\",\n      watch_how: \"Vê como o CodeCombat está a transformar o modo como as pessoas aprendem ciências da computação.\",\n      top_screenshots_hint: \"Os estudantes escrevem código e veem as alterações deles atualizarem em tempo real\",\n      designed_with: \"Desenhado a pensar nos professores\",\n      real_code: \"Código real e escrito\",\n      from_the_first_level: \"desde o primeiro nível\",\n      getting_students: \"Apresentar código escrito aos estudantes o mais rapidamete possível é crítico para aprenderem a sintaxe e a estrutura adequadas da programação.\",\n      educator_resources: \"Recursos para professores\",\n      course_guides: \"e guias dos cursos\",\n      teaching_computer_science: \"Ensinar ciências da computação não requer um curso caro, porque nós fornecemos ferramentas para ajudar todo o tipo de professores.\",\n      accessible_to: \"Acessível a\",\n      everyone: \"todos\",\n      democratizing: \"Democratizar o processo de aprender a programar está na base da nossa filosofia. Todos devem poder aprender a programar.\",\n      forgot_learning: \"Acho que eles se esqueceram que estavam a aprender alguma coisa.\",\n      wanted_to_do: \"Programar é algo que sempre quis fazer e nunca pensei que poderia aprender isso na escola.\",\n      builds_concepts_up: \"Gosto da forma como o CodeCombat desenvolve os conceitos. É muito fácil compreendê-los e é divertido descobri-los.\",\n      why_games: \"Porque é que aprender através de jogos é importante?\",\n      games_reward: \"Os jogos recompensam o esforço produtivo.\",\n      encourage: \"Jogar é algo que encoraja a interação, a descoberta e a tentativa erro. Um bom jogo desafia o jogador a dominar habilidades com o tempo, que é o mesmo processo fundamental que os estudantes atravessam quando aprendem.\",\n      excel: \"Os jogos são excelentes a recompensar o\",\n      struggle: \"esforço produtivo\",\n      kind_of_struggle: \"o tipo de esforço que resulta numa aprendizagem que é cativante e\",\n      motivating: \"motivadora\",\n      not_tedious: \"não entediante.\",\n      gaming_is_good: \"Estudos sugerem que jogar é bom para o cérebro das crianças. (é verdade!)\",\n      real_game: \"Um jogo a sério, jogado com código a sério.\",\n      request_demo: \"Pedir uma Demonstração\",\n      setup_a_class: \"Configurar uma Turma\",\n      have_an_account: \"Tens uma conta?\",\n      logged_in_as: \"Atualmente tens sessão iniciada como\",\n      ffa: \"Grátis para todos os estudantes\",\n      coming_soon: \"Mais, brevemente!\",\n      courses_available_in: \"Os cursos estão disponíveis em JavaScript e Python. Os cursos de Desenvolvimento Web utilizam HTML, CSS e jQuery.\",\n      run_class: \"Tudo o que precisas para teres uma turma de ciências da computação na tua escola hoje, sem serem necessárias bases de CC.\",\n      goto_classes: \"Ir para As Minhas Turmas\",\n      view_profile: \"Ver o Meu Perfil\",\n      view_progress: \"Ver Progresso\",\n      go_to_courses: \"Ir para Os Meus Cursos\",\n      want_coco: \"Queres o CodeCombat na tua escola?\"\n    },\n    nav: {\n      map: \"Mapa\",\n      play: \"Níveis\",\n      community: \"Comunidade\",\n      courses: \"Cursos\",\n      blog: \"Blog\",\n      forum: \"Fórum\",\n      account: \"Conta\",\n      my_account: \"A Minha Conta\",\n      profile: \"Perfil\",\n      home: \"Início\",\n      contribute: \"Contribuir\",\n      legal: \"Legal\",\n      privacy: \"Aviso de Privacidade\",\n      about: \"Sobre\",\n      contact: \"Contactar\",\n      twitter_follow: \"Seguir\",\n      my_classrooms: \"As Minhas Turmas\",\n      my_courses: \"Os Meus Cursos\",\n      careers: \"Carreiras\",\n      facebook: \"Facebook\",\n      twitter: \"Twitter\",\n      create_a_class: \"Criar uma Turma\",\n      other: \"Outros\",\n      learn_to_code: \"Aprende a Programar!\",\n      toggle_nav: \"Alternar navegação\",\n      schools: \"Escolas\",\n      get_involved: \"Envolve-te\",\n      open_source: \"Open source (GitHub)\",\n      support: \"Suporte\",\n      faqs: \"FAQs\",\n      copyright_prefix: \"Direitos\",\n      copyright_suffix: \"Todos os Direitos Reservados.\",\n      help_pref: \"Precisas de ajuda? Envia um e-mail para\",\n      help_suff: \"e nós entraremos em contacto!\",\n      resource_hub: \"Centro de Recursos\",\n      parent: \"Educadores\"\n    },\n    modal: {\n      close: \"Fechar\",\n      okay: \"Ok\"\n    },\n    not_found: {\n      page_not_found: \"Página não encontrada\"\n    },\n    diplomat_suggestion: {\n      title: \"Ajuda a traduzir o CodeCombat!\",\n      sub_heading: \"Precisamos das tuas habilidades linguísticas.\",\n      pitch_body: \"Desenvolvemos o CodeCombat em Inglês, mas já temos jogadores de todo o mundo. Muitos deles querem jogar em Português, mas não falam Inglês, por isso, se sabes falar ambas, por favor considera registar-te como Diplomata para ajudares a traduzir o sítio do CodeCombat e todos os níveis para Português.\",\n      missing_translations: \"Até conseguirmos traduzir tudo para Português, irás ver em Inglês o que não estiver disponível em Português.\",\n      learn_more: \"Sabe mais sobre seres um Diplomata\",\n      subscribe_as_diplomat: \"Subscreve-te como Diplomata\"\n    },\n    play: {\n      anon_signup_title_1: \"O CodeCombat tem uma\",\n      anon_signup_title_2: \"Versão para Turmas!\",\n      anon_signup_enter_code: \"Introduz um Código de Truma:\",\n      anon_signup_ask_teacher: \"Não tens um? Pede ao teu professor!\",\n      anon_signup_create_class: \"Queres criar uma turma?\",\n      anon_signup_setup_class: \"Configura um turma, adiciona estudantes e monitoriza o progresso!\",\n      anon_signup_create_teacher: \"Criar uma conta de professor gratuita\",\n      play_as: \"Jogar Como\",\n      compete: \"Competir!\",\n      spectate: \"Assistir\",\n      players: \"jogadores\",\n      hours_played: \"horas jogadas\",\n      items: \"Itens\",\n      unlock: \"Desbloquear\",\n      confirm: \"Confirmar\",\n      owned: \"Obtido\",\n      locked: \"Bloqueado\",\n      available: \"Disponível\",\n      skills_granted: \"Habilidades Garantidas\",\n      heroes: \"Heróis\",\n      achievements: \"Conquistas\",\n      settings: \"Definições\",\n      poll: \"Votações\",\n      next: \"Próximo\",\n      change_hero: \"Alterar Herói\",\n      change_hero_or_language: \"Alterar Herói ou Linguagem\",\n      buy_gems: \"Comprar Gemas\",\n      subscribers_only: \"Apenas para Subscritores!\",\n      subscribe_unlock: \"Subscreve-te para Desbloqueares!\",\n      subscriber_heroes: \"Subscreve-te hoje para desbloqueares de imediato a Amara, a Hushbaum, e o Hattori!\",\n      subscriber_gems: \"Subscreve-te hoje para adquirires este herói com gemas!\",\n      anonymous: \"Jogador Anónimo\",\n      level_difficulty: \"Dificuldade: \",\n      awaiting_levels_adventurer_prefix: \"Lançamos novos níveis todas as semanas.\",\n      awaiting_levels_adventurer: \"Regista-te como Aventureiro\",\n      awaiting_levels_adventurer_suffix: \"para seres o primeiro a jogar níveis novos.\",\n      adjust_volume: \"Ajustar volume\",\n      campaign_multiplayer: \"Arenas Multijogador\",\n      campaign_multiplayer_description: \"... nas quais programas contra outros jogadores.\",\n      back_to_classroom: \"Voltar à Turma\",\n      teacher_button: \"Para Professores\"\n    },\n    code: {\n      \"if\": \"se\",\n      \"else\": \"senão\",\n      elif: \"senão se\",\n      \"while\": \"enquanto\",\n      loop: \"repetir\",\n      \"for\": \"para\",\n      \"break\": \"parar\",\n      \"continue\": \"continuar\",\n      pass: \"passar\",\n      \"return\": \"devolver\",\n      then: \"então\",\n      \"do\": \"fazer\",\n      end: \"fim\",\n      \"function\": \"função\",\n      def: \"definir\",\n      \"var\": \"variável\",\n      self: \"próprio\",\n      hero: \"herói\",\n      \"this\": \"isto\",\n      or: \"ou\",\n      \"||\": \"ou\",\n      and: \"e\",\n      \"&&\": \"e\",\n      not: \"não\",\n      \"!\": \"não\",\n      \"=\": \"atribuir\",\n      \"==\": \"é igual a\",\n      \"===\": \"é estritamente igual a\",\n      \"!=\": \"não é igual a\",\n      \"!==\": \"não é estritamente igual a\",\n      \">\": \"é maior do que\",\n      \">=\": \"é maior do que ou igual a\",\n      \"<\": \"é menor do que\",\n      \"<=\": \"é menor do que ou igual a\",\n      \"*\": \"multiplicado por\",\n      \"/\": \"dividido por\",\n      \"+\": \"mais\",\n      \"-\": \"menos\",\n      \"+=\": \"adicionar e atribuir\",\n      \"-=\": \"subtrair e atribuir\",\n      True: \"Verdadeiro\",\n      \"true\": \"verdadeiro\",\n      False: \"Falso\",\n      \"false\": \"falso\",\n      undefined: \"não definido\",\n      \"null\": \"nulo\",\n      nil: \"nada\",\n      None: \"Nenhum\"\n    },\n    share_progress_modal: {\n      blurb: \"Estás a fazer grandes progressos! Conta ao teu educador o quanto aprendeste com o CodeCombat.\",\n      email_invalid: \"Endereço de e-mail inválido.\",\n      form_blurb: \"Introduz o e-mail do teu educador abaixo e nós vamos mostrar-lhe!\",\n      form_label: \"Endereço de E-mail\",\n      placeholder: \"endereço de e-mail\",\n      title: \"Excelente Trabalho, Aprendiz\"\n    },\n    login: {\n      sign_up: \"Criar Conta\",\n      email_or_username: \"E-mail ou nome de utilizador\",\n      log_in: \"Iniciar Sessão\",\n      logging_in: \"A Iniciar Sessão\",\n      log_out: \"Sair\",\n      forgot_password: \"Esqueceste a tua palavra-passe?\",\n      finishing: \"A Terminar\",\n      sign_in_with_facebook: \"Iniciar sessão com o FB\",\n      sign_in_with_gplus: \"Iniciar sessão com o Google\",\n      signup_switch: \"Queres criar uma conta?\"\n    },\n    signup: {\n      create_student_header: \"Criar Conta de Estudante\",\n      create_teacher_header: \"Criar Conta de Professor\",\n      create_individual_header: \"Criar Conta Individual\",\n      email_announcements: \"Receber anúncios sobre níveis e funcionalidades novos do CodeCombat!\",\n      sign_in_to_continue: \"Inicia sessão ou cria uma conta para continuares\",\n      creating: \"A Criar Conta...\",\n      sign_up: \"Registar\",\n      log_in: \"iniciar sessão com palavra-passe\",\n      required: \"Precisas de iniciar sessão antes de prosseguires.\",\n      login_switch: \"Já tens uma conta?\",\n      optional: \"opcional\",\n      hey_students: \"Estudantes, introduzam o código de turma do vosso professor.\",\n      birthday: \"Aniversário\",\n      checking: \"A verificar...\",\n      account_exists: \"Este e-mail já está a ser usado:\",\n      sign_in: \"Iniciar sessão\",\n      email_good: \"O e-mail parece bom!\",\n      name_taken: \"Nome de utilizador já escolhido! Que tal {{suggestedName}}?\",\n      name_available: \"Nome de utilizador disponível!\",\n      name_is_email: \"O nome de utilizador não pode ser um e-mail\",\n      choose_type: \"Escolhe o teu tipo de conta:\",\n      teacher_type_1: \"Ensina programção usando o CodeCombat!\",\n      teacher_type_2: \"Configura a tua turma\",\n      teacher_type_3: \"Acede aos Guias dos Cursos\",\n      teacher_type_4: \"Vê o progresso dos estudantes\",\n      signup_as_teacher: \"Registar como Professor\",\n      student_type_1: \"Aprende a programar enquanto jogas um jogo cativante!\",\n      student_type_2: \"Joga com a tua turma\",\n      student_type_3: \"Compete em arenas\",\n      student_type_4: \"Escolhe o teu herói!\",\n      student_type_5: \"Prepara o teu Código de Turma!\",\n      signup_as_student: \"Registar como Estudante\",\n      individuals_or_parents: \"Individuais e Educadores\",\n      individual_type: \"Para jogadores a aprender a programar fora de uma turma. Os educadores devem registar-se aqui.\",\n      signup_as_individual: \"Registar como Individual\",\n      enter_class_code: \"Introduz o teu Código de Turma\",\n      enter_birthdate: \"Introduz a tua data de nascimento:\",\n      parent_use_birthdate: \"Educadores, usem a vossa data de nascimento.\",\n      ask_teacher_1: \"Pergunta ao teu professor pelo teu Código de Turma.\",\n      ask_teacher_2: \"Não fazes parte de uma turma? Cria uma \",\n      ask_teacher_3: \"Conta Individual\",\n      ask_teacher_4: \" então.\",\n      about_to_join: \"Estás prestes a entrar em:\",\n      enter_parent_email: \"Introduz o e-mail do teu educador:\",\n      account_created: \"Conta Criada!\",\n      confirm_student_blurb: \"Aponta a tua informação para que não a esqueças. O teu professor também te pode ajudar a reiniciar a tua palavra-passe a qualquer altura.\",\n      confirm_individual_blurb: \"Aponta a tua informação de início de sessão caso precises dela mais tarde. Verifica o teu e-mail para que possas recuperar a tua conta se alguma vez esqueceres a tua palavra-passe - verifica a tua caixa de entrada!\",\n      write_this_down: \"Aponta isto:\",\n      start_playing: \"Começar a Jogar!\",\n      select_your_starting_hero: \"Escolhe o Teu Herói Inicial:\",\n      you_can_always_change_your_hero_later: \"Podes sempre alterar o teu herói mais tarde.\"\n    },\n    recover: {\n      recover_account_title: \"Recuperar Conta\",\n      send_password: \"Enviar Palavra-passe de Recuperação\",\n      recovery_sent: \"E-mail de recuperação enviado.\"\n    },\n    items: {\n      primary: \"Primários\",\n      secondary: \"Secundários\",\n      armor: \"Armadura\",\n      accessories: \"Acessórios\",\n      misc: \"Vários\",\n      books: \"Livros\"\n    },\n    common: {\n      back: \"Voltar\",\n      coming_soon: \"Brevemente!\",\n      \"continue\": \"Continuar\",\n      next: \"Próximo\",\n      default_code: \"Código Original\",\n      loading: \"A Carregar...\",\n      overview: \"Visão Geral\",\n      processing: \"A processar...\",\n      solution: \"Solução\",\n      table_of_contents: \"Tabela de Conteúdos\",\n      intro: \"Introdução\",\n      saving: \"A Guardar...\",\n      sending: \"A Enviar...\",\n      send: \"Enviar\",\n      sent: \"Enviado\",\n      cancel: \"Cancelar\",\n      save: \"Guardar\",\n      publish: \"Publicar\",\n      create: \"Criar\",\n      fork: \"Bifurcar\",\n      play: \"Jogar\",\n      retry: \"Tentar Novamente\",\n      actions: \"Ações\",\n      info: \"Informações\",\n      help: \"Ajuda\",\n      watch: \"Vigiar\",\n      unwatch: \"Desvigiar\",\n      submit_patch: \"Submeter Atualização\",\n      submit_changes: \"Submeter Alterações\",\n      save_changes: \"Guardar Alterações\",\n      required_field: \"necessário\"\n    },\n    general: {\n      and: \"e\",\n      name: \"Nome\",\n      date: \"Data\",\n      body: \"Corpo\",\n      version: \"Versão\",\n      pending: \"Pendentes\",\n      accepted: \"Aceites\",\n      rejected: \"Rejeitadas\",\n      withdrawn: \"Canceladas\",\n      accept: \"Aceitar\",\n      accept_and_save: \"Aceitar&Guardar\",\n      reject: \"Rejeitar\",\n      withdraw: \"Cancelar\",\n      submitter: \"Submissor\",\n      submitted: \"Submeteu\",\n      commit_msg: \"Mensagem da Submissão\",\n      version_history: \"Histórico de Versões\",\n      version_history_for: \"Histórico de Versões para: \",\n      select_changes: \"Seleciona duas das alterações abaixo para veres a diferença.\",\n      undo_prefix: \"Desfazer\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"Refazer\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"Jogar pré-visualização do nível atual\",\n      result: \"Resultado\",\n      results: \"Resultados\",\n      description: \"Descrição\",\n      or: \"ou\",\n      subject: \"Assunto\",\n      email: \"E-mail\",\n      password: \"Palavra-passe\",\n      confirm_password: \"Confirmar Palavra-passe\",\n      message: \"Mensagem\",\n      code: \"Código\",\n      ladder: \"Classificação\",\n      when: \"Quando\",\n      opponent: \"Adversário\",\n      rank: \"Classificação\",\n      score: \"Pontuação\",\n      win: \"Vitória\",\n      loss: \"Derrota\",\n      tie: \"Empate\",\n      easy: \"Fácil\",\n      medium: \"Médio\",\n      hard: \"Difícil\",\n      player: \"Jogador\",\n      player_level: \"Nível\",\n      warrior: \"Guerreiro\",\n      ranger: \"Arqueiro\",\n      wizard: \"Feiticeiro\",\n      first_name: \"Nome\",\n      last_name: \"Apelido\",\n      last_initial: \"Última Inicial\",\n      username: \"Nome de utilizador\",\n      contact_us: \"Contacta-nos\",\n      close_window: \"Fechar Janela\",\n      learn_more: \"Saber Mais\",\n      more: \"Mais\",\n      fewer: \"Menos\",\n      \"with\": \"com\"\n    },\n    units: {\n      second: \"segundo\",\n      seconds: \"segundos\",\n      sec: \"seg\",\n      minute: \"minuto\",\n      minutes: \"minutos\",\n      hour: \"hora\",\n      hours: \"horas\",\n      day: \"dia\",\n      days: \"dias\",\n      week: \"semana\",\n      weeks: \"semanas\",\n      month: \"mês\",\n      months: \"meses\",\n      year: \"ano\",\n      years: \"anos\"\n    },\n    play_level: {\n      back_to_map: \"Voltar ao Mapa\",\n      directions: \"Direções\",\n      edit_level: \"Editar Nível\",\n      keep_learning: \"Continuar a Aprender\",\n      explore_codecombat: \"Explorar o CodeCombat\",\n      finished_hoc: \"Terminei a minha Hora do Código\",\n      get_certificate: \"Obtém o teu certificado!\",\n      level_complete: \"Nível Completo\",\n      completed_level: \"Nível Completo:\",\n      course: \"Curso:\",\n      done: \"Concluir\",\n      next_level: \"Próximo Nível\",\n      combo_concepts_used: \"__complete__/__total__ Conceitos Usados\",\n      start_challenge: \"Começar Desafio\",\n      next_game: \"Próximo jogo\",\n      languages: \"Linguagens\",\n      programming_language: \"Linguagem de programação\",\n      show_menu: \"Mostrar o menu do jogo\",\n      home: \"Início\",\n      level: \"Nível\",\n      skip: \"Saltar\",\n      game_menu: \"Menu do Jogo\",\n      restart: \"Reiniciar\",\n      goals: \"Objetivos\",\n      goal: \"Objetivo\",\n      running: \"A Executar...\",\n      success: \"Sucesso!\",\n      incomplete: \"Incompletos\",\n      timed_out: \"Ficaste sem tempo\",\n      failing: \"A falhar\",\n      reload: \"Recarregar\",\n      reload_title: \"Recarregar o Código Todo?\",\n      reload_really: \"Tens a certeza que queres recarregar este nível de volta ao início?\",\n      reload_confirm: \"Recarregar Tudo\",\n      test_level: \"Testar Nível\",\n      victory: \"Vitória\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" Concluído\",\n      victory_sign_up: \"Criar Conta para Guardar Progresso\",\n      victory_sign_up_poke: \"Queres guardar o teu código? Cria uma conta grátis!\",\n      victory_rate_the_level: \"Quão divertido foi este nível?\",\n      victory_return_to_ladder: \"Voltar à Classificação\",\n      victory_saving_progress: \"A Guardar Progresso\",\n      victory_go_home: \"Ir para o Início\",\n      victory_review: \"Conta-nos mais!\",\n      victory_review_placeholder: \"Como foi o nível?\",\n      victory_hour_of_code_done: \"Terminaste?\",\n      victory_hour_of_code_done_yes: \"Sim, terminei a minha Hora do Código™!\",\n      victory_experience_gained: \"XP Ganho\",\n      victory_gems_gained: \"Gemas Ganhas\",\n      victory_new_item: \"Novo Item\",\n      victory_new_hero: \"Novo Herói\",\n      victory_become_a_viking: \"Torna-te um Viking\",\n      victory_no_progress_for_teachers: \"O progresso não é guardado para professores. Mas podes adicionar à tua turma uma conta de estudante para ti.\",\n      tome_cast_button_run: \"Executar\",\n      tome_cast_button_running: \"A Executar\",\n      tome_cast_button_ran: \"Executado\",\n      tome_submit_button: \"Submeter\",\n      tome_reload_method: \"Recarregar o código original para recomeçar o nível\",\n      tome_available_spells: \"Feitiços Disponíveis\",\n      tome_your_skills: \"As Tuas Habilidades\",\n      hints: \"Dicas\",\n      hints_title: \"Dica {{number}}\",\n      code_saved: \"Código Guardado\",\n      skip_tutorial: \"Saltar (esc)\",\n      keyboard_shortcuts: \"Atalhos de Teclado\",\n      loading_start: \"Iniciar Nível\",\n      problem_alert_title: \"Corrige o Teu Código\",\n      time_current: \"Agora:\",\n      time_total: \"Máximo:\",\n      time_goto: \"Ir para:\",\n      non_user_code_problem_title: \"Impossível Carregar o Nível\",\n      infinite_loop_title: \"'Loop' Infinito Detetado\",\n      infinite_loop_description: \"O código inicial para construir o mundo nunca parou de ser executado. Provavelmente é muito lento ou contém um 'loop' infinito. Ou talvez haja um erro. Podes tentar executar este código novamente ou reiniciá-lo para o estado predefinido. Se isso não resultar, avisa-nos, por favor.\",\n      check_dev_console: \"Também podes abrir a consola para programadores para veres o que possa estar a correr mal.\",\n      check_dev_console_link: \"(instruções)\",\n      infinite_loop_try_again: \"Tentar Novamente\",\n      infinite_loop_reset_level: \"Reiniciar Nível\",\n      infinite_loop_comment_out: \"Comentar o Meu Código\",\n      tip_toggle_play: \"Alterna entre Jogar e Pausar com Ctrl+P.\",\n      tip_scrub_shortcut: \"Usa Ctrl+[ para rebobinar e Ctrl+] para avançar.\",\n      tip_guide_exists: \"Clica no guia, dentro do menu do jogo (no topo da página), para informações úteis.\",\n      tip_open_source: \"O CodeCombat faz parte da comunidade open source!\",\n      tip_tell_friends: \"Estás a gostar do CodeCombat? Fala de nós aos teus amigos!\",\n      tip_beta_launch: \"O CodeCombat lançou o seu beta em outubro de 2013.\",\n      tip_think_solution: \"Pensa na solução, não no problema.\",\n      tip_theory_practice: \"Teoricamente, não há diferença entre a teoria e a prática. Mas na prática, há. - Yogi Berra\",\n      tip_error_free: \"Há duas formas de escrever programas sem erros; apenas a terceira funciona. - Alan Perlis\",\n      tip_debugging_program: \"Se depurar é o processo de remover erros, então programar deve ser o processo de os introduzir. - Edsger W. Dijkstra\",\n      tip_forums: \"Vai aos fóruns e diz-nos o que pensas!\",\n      tip_baby_coders: \"No futuro, até os bebés serão Arcomagos.\",\n      tip_morale_improves: \"O carregamento vai continuar até que a moral melhore.\",\n      tip_all_species: \"Acreditamos em oportunidades iguais para todas as espécies, em relação a aprenderem a programar.\",\n      tip_reticulating: \"A reticular espinhas.\",\n      tip_harry: \"És um Feiticeiro, \",\n      tip_great_responsibility: \"Com uma grande habilidade de programação vem uma grande responsabilidade de depuração.\",\n      tip_munchkin: \"Se não comeres os teus vegetais, um ogre virá atrás de ti enquanto estiveres a dormir.\",\n      tip_binary: \"Há apenas 10 tipos de pessoas no mundo: aquelas que percebem binário e aquelas que não.\",\n      tip_commitment_yoda: \"Um programador deve ter o compromisso mais profundo, a mente mais séria. ~ Yoda\",\n      tip_no_try: \"Fazer. Ou não fazer. Não há nenhum tentar. - Yoda\",\n      tip_patience: \"Paciência tu deves ter, jovem Padawan. - Yoda\",\n      tip_documented_bug: \"Um erro documentado não é um erro; é uma funcionalidade.\",\n      tip_impossible: \"Parece sempre impossível até ser feito. - Nelson Mandela\",\n      tip_talk_is_cheap: \"Falar é fácil. Mostra-me o código. - Linus Torvalds\",\n      tip_first_language: \"A coisa mais desastrosa que podes aprender é a tua primeira linguagem de programação. - Alan Kay\",\n      tip_hardware_problem: \"P: Quantos programadores são necessários para mudar uma lâmpada?  R: Nenhum, é um problema de 'hardware'.\",\n      tip_hofstadters_law: \"Lei de Hofstadter: Tudo demora sempre mais do que pensas, mesmo quando tens em conta a Lei de Hofstadter.\",\n      tip_premature_optimization: \"Uma otimização permatura é a raíz de todo o mal. - Donald Knuth\",\n      tip_brute_force: \"Quando em dúvida, usa a força bruta. - Ken Thompson\",\n      tip_extrapolation: \"Há apenas dois tipos de pessoas: aquelas que conseguem tirar uma conclusão a partir de dados reduzidos...\",\n      tip_superpower: \"A programação é a coisa mais próxima de um superpoder que temos.\",\n      tip_control_destiny: \"Em open source a sério, tens o direito de controlares o teu próprio destino. - Linus Torvalds\",\n      tip_no_code: \"Nenhum código é mais rápido que código não existente.\",\n      tip_code_never_lies: \"O código nunca mente, mas os comentários às vezes sim. — Ron Jeffries\",\n      tip_reusable_software: \"Antes de um software poder ser reutilizável, primeiro tem de ser utilizável.\",\n      tip_optimization_operator: \"Todas as linguagens têm um operador de otimização. Na maior parte delas esse operador é ‘//’.\",\n      tip_lines_of_code: \"Medir o progresso em programação pelo número de linhas de código é como medir o progresso da construção de um avião pelo peso. — Bill Gates\",\n      tip_source_code: \"Quero mudar o mundo, mas não há maneira de me darem o código-fonte.\",\n      tip_javascript_java: \"Java é para JavaScript o mesmo que Carro (Car) para Tapete (Carpet). - Chris Heilmann\",\n      tip_move_forward: \"Faças o que fizeres, segue em frente. - Martin Luther King Jr\",\n      tip_google: \"Tens um problema que não consegues resolver? Vai ao Google!\",\n      tip_adding_evil: \"A acrescentar uma pitada de mal.\",\n      tip_hate_computers: \"É o problema das pessoas que acham que odeiam coputadores. O que elas odeiam mesmo são maus programadores. - Larry Niven\",\n      tip_open_source_contribute: \"Podes ajudar a melhorar o CodeCombat!\",\n      tip_recurse: \"Iterar é humano, recursar é divino. - L. Peter Deutsch\",\n      tip_free_your_mind: \"Tens de libertar tudo, Neo. Medo, dúvida e descrença. Liberta a tua mente. - Morpheus\",\n      tip_strong_opponents: \"Até o mais forte dos adversários tem uma fraqueza. - Itachi Uchiha\",\n      tip_paper_and_pen: \"Antes de começares a programar, podes sempre planear com uma folha de papel e uma caneta.\",\n      tip_solve_then_write: \"Primeiro, resolve o problema. Depois, escreve o código. - John Johnson\",\n      tip_compiler_ignores_comments: \"Às vezes acho que o compilador ignora os meus comentários.\",\n      tip_understand_recursion: \"A única forma de entender recursão é entender recursão.\",\n      project_complete: \"Projeto Completado!\",\n      ready_to_share: \"Pronto para publicares o teu projeto?\",\n      view_gallery: \"Ver Galeria\",\n      project_published_noty: \"O teu nível foi publicado!\",\n      keep_editing: \"Continuar a Editar\"\n    },\n    apis: {\n      methods: \"Métodos\",\n      events: \"Eventos\",\n      properties: \"Propriedades\",\n      html: \"HTML\",\n      math: \"Matemática\",\n      object: \"Objeto\",\n      \"function\": \"Função\",\n      vector: \"Vetor\",\n      date: \"Data\",\n      jquery: \"jQuery\",\n      json: \"JSON\",\n      number: \"Número\",\n      webjavascript: \"JavaScript\"\n    },\n    play_game_dev_level: {\n      created_by: \"Criado por {{name}}\",\n      created_during_hoc: \"Criado durante a Hora do Código\",\n      restart: \"Recomeçar Nível\",\n      play: \"Jogar Nível\",\n      play_more_codecombat: \"Jogar Mais CodeCombat\",\n      default_student_instructions: \"Clica para controlares o teu herói e ganhares o teu jogo!\",\n      goal_survive: \"Sobrevive.\",\n      goal_survive_time: \"Sobrevive por __seconds__ segundos.\",\n      goal_defeat: \"Derrota todos os inimigos.\",\n      goal_defeat_amount: \"Derrota __amount__ inimigos.\"\n    },\n    game_menu: {\n      inventory_tab: \"Inventário\",\n      save_load_tab: \"Guardar/Carregar\",\n      options_tab: \"Opções\",\n      guide_tab: \"Guia\",\n      guide_video_tutorial: \"Tutorial em Vídeo\",\n      guide_tips: \"Dicas\",\n      multiplayer_tab: \"Multijogador\",\n      auth_tab: \"Regista-te\",\n      inventory_caption: \"Equipa o teu herói\",\n      choose_hero_caption: \"Escolhe o herói, a linguagem\",\n      options_caption: \"Configura as definições\",\n      guide_caption: \"Documentos e dicas\",\n      multiplayer_caption: \"Joga com amigos!\",\n      auth_caption: \"Guarda o teu progresso.\"\n    },\n    leaderboard: {\n      view_other_solutions: \"Ver Tabelas de Classificação\",\n      scores: \"Pontuações\",\n      top_players: \"Melhores Jogadores por\",\n      day: \"Hoje\",\n      week: \"Esta Semana\",\n      all: \"Sempre\",\n      latest: \"Mais Recentes\",\n      time: \"Tempo de Vitória\",\n      damage_taken: \"Dano Recebido\",\n      damage_dealt: \"Dano Infligido\",\n      difficulty: \"Dificuldade\",\n      gold_collected: \"Ouro Recolhido\",\n      defeated: \"Inimigos Derrotados\",\n      code_length: \"Linhas de Código\",\n      score_display: \"__scoreType__: __score__\"\n    },\n    inventory: {\n      equipped_item: \"Equipado\",\n      required_purchase_title: \"Necessário\",\n      available_item: \"Disponível\",\n      restricted_title: \"Restrito\",\n      should_equip: \"(clica duas vezes para equipares)\",\n      equipped: \"(equipado)\",\n      locked: \"(bloqueado)\",\n      restricted: \"(restrito neste nível)\",\n      equip: \"Equipar\",\n      unequip: \"Desequipar\",\n      warrior_only: \"Apenas Guerreiros\",\n      ranger_only: \"Apenas Arqueiros\",\n      wizard_only: \"Apenas Feiticeiros\"\n    },\n    buy_gems: {\n      few_gems: \"Algumas gemas\",\n      pile_gems: \"Pilha de gemas\",\n      chest_gems: \"Arca de gemas\",\n      purchasing: \"A Adquirir...\",\n      declined: \"O teu cartão foi recusado.\",\n      retrying: \"Erro do servidor, a tentar novamente.\",\n      prompt_title: \"Sem Gemas Suficientes\",\n      prompt_body: \"Queres obter mais?\",\n      prompt_button: \"Entra na Loja\",\n      recovered: \"A compra de gemas anterior foi recuperada. Por favor atualiza a página.\",\n      price: \"x{{gems}} / mês\",\n      buy_premium: \"Comprar 'Premium'\",\n      purchase: \"Adquirir\",\n      purchased: \"Adquirido\"\n    },\n    subscribe_for_gems: {\n      prompt_title: \"Gemas Insuficientes!\"\n    },\n    earn_gems: {\n      prompt_title: \"Gemas Insuficientes\",\n      prompt_body: \"Continua a jogar para receberes mais!\"\n    },\n    subscribe: {\n      subscribe_modal_title: \"CodeCombat 'Premium'\",\n      comparison_blurb: \"Torna-te um Programador Mestre - subscreve-te ao <b>'Premium'</b> hoje!\",\n      must_be_logged: \"Primeiro tens de ter sessão iniciada. Por favor, cria uma conta ou inicia sessão a partir do menu acima.\",\n      subscribe_title: \"Subscrever\",\n      unsubscribe: \"Cancelar Subscrição\",\n      confirm_unsubscribe: \"Confirmar Cancelamento da Subscrição\",\n      never_mind: \"Não Importa, Gostamos de Ti à Mesma\",\n      thank_you_months_prefix: \"Obrigado por nos teres apoiado neste(s) último(s)\",\n      thank_you_months_suffix: \"mês(meses).\",\n      thank_you: \"Obrigado por apoiares o CodeCombat.\",\n      sorry_to_see_you_go: \"Lamentamos ver-te partir! Por favor, diz-nos o que podíamos ter feito melhor.\",\n      unsubscribe_feedback_placeholder: \"Oh, o que fomos fazer?\",\n      stripe_description: \"Subscrição Mensal\",\n      buy_now: \"Comprar Agora\",\n      subscription_required_to_play: \"Precisas de uma subscrição para jogares este nível.\",\n      unlock_help_videos: \"Subscreve-te para desbloqueares todos os tutoriais em vídeo.\",\n      personal_sub: \"Subscrição Pessoal\",\n      loading_info: \"A carregar as informações da subscrição...\",\n      managed_by: \"Gerida por\",\n      will_be_cancelled: \"Será cancelada em\",\n      currently_free: \"Atualmente tens uma subscrição gratuita\",\n      currently_free_until: \"Atualmente tens uma subscrição até\",\n      free_subscription: \"Subscrição gratuita\",\n      was_free_until: \"Tinhas uma subscrição gratuita até\",\n      managed_subs: \"Subscrições Geridas\",\n      subscribing: \"A Subscrever...\",\n      current_recipients: \"Beneficiários Atuais\",\n      unsubscribing: \"A Cancelar a Subscrição\",\n      subscribe_prepaid: \"Clica em Subscrever para usares um código pré-pago\",\n      using_prepaid: \"A usar um código pré-pago para a subscrição mensal\",\n      feature_level_access: \"Acede a 300+ níveis disponíveis\",\n      feature_heroes: \"Desbloqueia heróis e animais exclusivos\",\n      feature_learn: \"Aprende a criar jogos e websites\",\n      month_price: \"$__price__\",\n      first_month_price: \"Apenas $__price__ pelo teu primeiro mês!\",\n      lifetime: \"Acesso Vitalício\",\n      lifetime_price: \"$__price__\",\n      year_subscription: \"Subscrição Anual\",\n      year_price: \"$__price__/ano\",\n      support_part1: \"Precisas de ajuda com o pagamento ou preferes PayPal? Envia um e-mail para\",\n      support_part2: \"support@codecombat.com\"\n    },\n    choose_hero: {\n      choose_hero: \"Escolhe o Teu Herói\",\n      programming_language: \"Linguagem de Programação\",\n      programming_language_description: \"Que linguagem de programação queres usar?\",\n      \"default\": \"Predefinida\",\n      experimental: \"Experimental\",\n      python_blurb: \"Simples mas poderoso; ótimo para iniciantes e peritos.\",\n      javascript_blurb: \"A linguagem da web. (Não é o mesmo que Java.)\",\n      coffeescript_blurb: \"Javascript com sintaxe mais agradável.\",\n      lua_blurb: \"Linguagem para scripts de jogos.\",\n      java_blurb: \"(Apenas para Subscritores) Android e empresas.\",\n      status: \"Estado\",\n      weapons: \"Armas\",\n      weapons_warrior: \"Espadas - Curto Alcance, Sem Magia\",\n      weapons_ranger: \"Arcos, Armas - Longo Alcance, Sem Magia\",\n      weapons_wizard: \"Varinhas, Bastões - Longo Alcance, Magia\",\n      attack: \"Ataque\",\n      health: \"Vida\",\n      speed: \"Velocidade\",\n      regeneration: \"Regeneração\",\n      range: \"Alcance\",\n      blocks: \"Bloqueia\",\n      backstab: \"Colateral\",\n      skills: \"Habilidades\",\n      attack_1: \"Dá\",\n      attack_2: \"do dano da arma do\",\n      attack_3: \"apresentado.\",\n      health_1: \"Ganha\",\n      health_2: \"da vida da armadura do\",\n      health_3: \"apresentado.\",\n      speed_1: \"Move a\",\n      speed_2: \"metros por segundo.\",\n      available_for_purchase: \"Disponível para Aquisição\",\n      level_to_unlock: \"Nível para desbloquear:\",\n      restricted_to_certain_heroes: \"Apenas certos heróis podem jogar este nível.\"\n    },\n    skill_docs: {\n      \"function\": \"função\",\n      method: \"método\",\n      snippet: \"fragmento\",\n      number: \"número\",\n      array: \"'array'\",\n      object: \"objeto\",\n      string: \"'string'\",\n      writable: \"editável\",\n      read_only: \"apenas leitura\",\n      action: \"Ação -\",\n      spell: \"Feitiço -\",\n      action_name: \"nome\",\n      action_cooldown: \"Demora\",\n      action_specific_cooldown: \"Tempo de Recarga\",\n      action_damage: \"Dano\",\n      action_range: \"Alcance\",\n      action_radius: \"Raio\",\n      action_duration: \"Duração\",\n      example: \"Exemplo\",\n      ex: \"ex\",\n      current_value: \"Valor Atual\",\n      default_value: \"Valor Predefinido\",\n      parameters: \"Parâmetros\",\n      required_parameters: \"Parâmetros Necessários\",\n      optional_parameters: \"Parâmetros Opcionais\",\n      returns: \"Devolve\",\n      granted_by: \"Garantido por\"\n    },\n    save_load: {\n      granularity_saved_games: \"Guardados\",\n      granularity_change_history: \"Histórico\"\n    },\n    options: {\n      general_options: \"Opções Gerais\",\n      volume_label: \"Volume\",\n      music_label: \"Música\",\n      music_description: \"Ativar ou desativar a música de fundo.\",\n      editor_config_title: \"Configurar Editor\",\n      editor_config_livecompletion_label: \"Auto-completação em Tempo Real\",\n      editor_config_livecompletion_description: \"Mostrar sugestões de auto-completação aquando da escrita.\",\n      editor_config_invisibles_label: \"Mostrar Invisíveis\",\n      editor_config_invisibles_description: \"Mostrar invisíveis tais como espaços e tabulações.\",\n      editor_config_indentguides_label: \"Mostrar Guias de Indentação\",\n      editor_config_indentguides_description: \"Mostrar linhas verticais para se ver melhor a indentação.\",\n      editor_config_behaviors_label: \"Comportamentos Inteligentes\",\n      editor_config_behaviors_description: \"Auto-completar parênteses, chavetas e aspas.\"\n    },\n    about: {\n      learn_more: \"Saber Mais\",\n      main_title: \"Se queres aprender a programar, precisas de escrever (muito) código.\",\n      main_description: \"No CodeCombat, o nosso trabalho é certificarmo-nos de que estás a fazer isso com um sorriso na cara.\",\n      mission_link: \"Missão\",\n      team_link: \"Equipa\",\n      story_link: \"História\",\n      press_link: \"Imprensa\",\n      mission_title: \"A nossa missão: tornar a programação acessível a todos os estudantes da Terra.\",\n      mission_description_1: \"<strong>A programação é mágica</strong>. É a capacidade de criar coisas a partir de imaginação pura. Começamos o CodeCombat para dar aos utilizadores a sensação de terem poderes mágicos nas pontas dos dedos ao usarem <strong>código escrito</strong>.\",\n      team_title: \"Conhece a equipa do CodeCombat\",\n      nick_title: \"Co-fundador, CEO\",\n      matt_title: \"Co-fundador, CTO\",\n      cat_title: \"Designer de Jogos\",\n      scott_title: \"Co-fundador, Engenheiro de Software\",\n      maka_title: \"Defensor dos Clientes\",\n      robin_title: \"Gestora de Produto Sénior\",\n      nolan_title: \"Gestor de Vendas\",\n      david_title: \"Líder de Marketing\",\n      titles_csm: \"Gerente de Sucesso do Cliente\",\n      titles_territory_manager: \"Gestora de Território\",\n      retrostyle_title: \"Ilustração\",\n      retrostyle_blurb: \"'RetroStyle Games'\",\n      bryukh_blurb: \"Constrói puzzles\",\n      community_title: \"...e a nossa comunidade open source\",\n      community_subtitle: \"Mais de 500 contribuidores ajudaram a construir o CodeCombat, com mais a se juntarem todas as semanas!\",\n      community_description_3: \"O CodeCombat é um\",\n      community_description_link_2: \"projeto comunitário\",\n      community_description_link: \"página de contribuição\",\n      community_description_2: \"para mais informações.\",\n      number_contributors: \"Mais de 450 contribuidores deram o seu apoio e tempo a este projeto.\",\n      story_title: \"A nossa história até agora\",\n      story_subtitle: \"Desde 2013, o CodeCombat cresceu de um mero conjunto de esboços para um jogo palpável e próspero.\",\n      story_statistic_1a: \"5,000,000+\",\n      story_statistic_1b: \"jogadores no total\",\n      story_statistic_1c: \"começaram a jornada de programação deles pelo CodeCombat\",\n      story_statistic_2a: \"Fomos traduzidos para mais de 50 idiomas — os nossos jogadores saudam a partir de\",\n      story_statistic_2b: \"190+ países\",\n      story_statistic_3a: \"Juntos, eles escreveram\",\n      story_statistic_3b: \"mil milhões de linhas de código (e continua a contar)\",\n      story_statistic_3c: \"em muitas linguagens de programação diferentes\",\n      jobs_benefits: \"Benefícios de Empregado\",\n      jobs_benefit_4: \"Férias ilimitadas\",\n      jobs_custom_title: \"Cria o Teu Próprio\",\n      contact_title: \"Imprensa e Contactos\",\n      contact_subtitle: \"Precisas de mais informação? Entra em contacto connosco através de\",\n      about_codecombat: \"Sobre o CodeCombat\",\n      logo: \"Logótipo\",\n      previous: \"Anterior\"\n    },\n    teachers: {\n      licenses_needed: \"Licenças necessárias\"\n    },\n    special_offer: {\n      special_offer: \"Oferta Especial\"\n    },\n    teachers_quote: {\n      phone_number: \"Número de telemóvel\",\n      phone_number_help: \"Qual é o melhor número para entrarmos em contacto contigo?\",\n      primary_role_label: \"O Teu Cargo Principal\",\n      role_default: \"Selecionar Cargo\",\n      tech_coordinator: \"Coordenador de Tecnologia\",\n      principal: \"Diretor\",\n      superintendent: \"Superintendente\",\n      parent: \"Educador\",\n      district_label: \"Distrito\",\n      district_name: \"Nome do Distrito\",\n      district_na: \"Escreve N/A se não se aplicar\",\n      organization_label: \"Escola\",\n      school_name: \"Nome da Escola\",\n      city: \"Cidade\",\n      state: \"Estado\",\n      country: \"País\",\n      num_students_help: \"Quantos estudantes vão usar o CodeCombat?\",\n      num_students_default: \"Selecionar Intervalo\",\n      education_level_label: \"Nível de Educação dos Estudantes\",\n      education_level_help: \"Escolhe todos os que se aplicarem.\",\n      please_explain: \"(por favor, explica)\",\n      referrer: \"Como ouviste falar de nós?\",\n      referrer_help: \"Por exemplo: através de outro professor, de uma conferência, dos teus estudantes, do Code.org, etc.\",\n      referrer_default: \"Seleciona Um\",\n      referrer_hoc: \"Code.org/Hora do Código\",\n      referrer_teacher: \"Um professor\",\n      referrer_admin: \"Um administrador\",\n      referrer_student: \"Um estudante\",\n      referrer_web: \"Google\",\n      referrer_other: \"Outro\",\n      thanks_header: \"Pedido Recebido!\",\n      back_to_classes: \"Voltar às Turmas\",\n      connect_with: \"Conectar com:\",\n      create_account: \"Criar uma Conta de Professor\",\n      create_account_subtitle: \"Obtém acesso a ferramentas reservadas a professores para usares o CodeCombat na sala de aula. <strong>Cria uma turma</strong>, adiciona os teus estudantes e <strong>monitoriza o progresso deles</strong>!\"\n    },\n    versions: {\n      save_version_title: \"Guardar Nova Versão\",\n      new_major_version: \"Nova Versão Principal\",\n      submitting_patch: \"A Submeter Atualização...\",\n      cla_prefix: \"Para guardares as alterações, precisas de concordar com o nosso\",\n      cla_url: \"CLA\",\n      cla_suffix: \".\",\n      cla_agree: \"EU CONCORDO\",\n      owner_approve: \"Um administrador terá de aprová-la antes de as tuas alterações ficarem visíveis.\"\n    },\n    contact: {\n      contact_us: \"Contacta o CodeCombat\",\n      welcome: \"É bom ter notícias tuas! Usa este formulário para nos enviares um e-mail. \",\n      forum_prefix: \"Para algo público, por favor usa o \",\n      forum_page: \"nosso fórum\",\n      forum_suffix: \" como alternativa.\",\n      faq_prefix: \"Há também uma\",\n      faq: \"FAQ\",\n      subscribe_prefix: \"Se precisas de ajuda a perceber um nível, por favor\",\n      subscribe: \"compra uma subscrição do CodeCombat\",\n      subscribe_suffix: \"e nós ficaremos felizes por ajudar-te com o teu código.\",\n      subscriber_support: \"Como és um subscritor do CodeCombat, os teus e-mails terão prioridade no nosso suporte.\",\n      screenshot_included: \"Captura de ecrã incluída.\",\n      where_reply: \"Para onde devemos enviar a resposta?\",\n      send: \"Enviar Feedback\"\n    },\n    account_settings: {\n      title: \"Definições da Conta\",\n      not_logged_in: \"Inicia sessão ou cria uma conta para alterares as tuas definições.\",\n      me_tab: \"Eu\",\n      picture_tab: \"Fotografia\",\n      delete_account_tab: \"Elimina a Tua Conta\",\n      wrong_email: \"E-mail ou Nome de Utilizador Errado\",\n      wrong_password: \"Palavra-passe Errada\",\n      delete_this_account: \"Elimina esta conta permanentemente\",\n      reset_progress_tab: \"Reiniciar Todo o Progresso\",\n      reset_your_progress: \"Limpar todo o teu progresso e começar de novo\",\n      god_mode: \"Modo Deus\",\n      emails_tab: \"E-mails\",\n      admin: \"Administrador\",\n      manage_subscription: \"Clica aqui para gerires a tua subscrição.\",\n      new_password: \"Nova Palavra-passe\",\n      new_password_verify: \"Verificar\",\n      type_in_email: \"Escreve o teu e-mail ou nome de utilizador para confirmares a eliminação da conta.\",\n      type_in_email_progress: \"Escreve o teu e-mail para confirmares a eliminação do teu progresso.\",\n      type_in_password: \"Escreve também a tua palavra-passe.\",\n      email_subscriptions: \"Subscrições de E-mail\",\n      email_subscriptions_none: \"Sem Subscições de E-mail.\",\n      email_announcements: \"Anúncios\",\n      email_announcements_description: \"Recebe e-mails sobre as últimas novidades e desenvolvimentos no CodeCombat.\",\n      email_notifications: \"Notificações\",\n      email_notifications_summary: \"Controla, de uma forma personalizada e automática, os e-mails de notificações relacionados com a tua atividade no CodeCombat.\",\n      email_any_notes: \"Quaisquer Notificações\",\n      email_any_notes_description: \"Desativa para parares de receber todos os e-mails de notificação de atividade.\",\n      email_news: \"Notícias\",\n      email_recruit_notes: \"Oportunidades de Emprego\",\n      email_recruit_notes_description: \"Se jogas muito bem, podemos contactar-te para te arranjar um (melhor) emprego.\",\n      contributor_emails: \"E-mail Para Contribuintes\",\n      contribute_prefix: \"Estamos à procura de pessoas para se juntarem a nós! Visita a \",\n      contribute_page: \"página de contribuição\",\n      contribute_suffix: \" para mais informações.\",\n      email_toggle: \"Alternar Todos\",\n      error_saving: \"Erro ao Guardar\",\n      saved: \"Alterações Guardadas\",\n      password_mismatch: \"As palavras-passe não coincidem.\",\n      password_repeat: \"Por favor repete a tua palavra-passe.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"Atalhos de Teclado\",\n      space: \"Espaço\",\n      enter: \"Enter\",\n      press_enter: \"pressiona enter\",\n      escape: \"Esc\",\n      shift: \"Shift\",\n      run_code: \"Executar código atual.\",\n      run_real_time: \"Executar em tempo real.\",\n      continue_script: \"Saltar o script atual.\",\n      skip_scripts: \"Saltar todos os scripts saltáveis.\",\n      toggle_playback: \"Alternar entre Jogar e Pausar.\",\n      scrub_playback: \"Andar para a frente e para trás no tempo.\",\n      single_scrub_playback: \"Andar para a frente e para trás no tempo um único frame.\",\n      scrub_execution: \"Analisar a execução do feitiço atual.\",\n      toggle_debug: \"Ativar/desativar a janela de depuração.\",\n      toggle_grid: \"Ativar/desativar a sobreposição da grelha.\",\n      toggle_pathfinding: \"Ativar/desativar a sobreposição do encontrador de caminho.\",\n      beautify: \"Embelezar o código ao estandardizar a formatação.\",\n      maximize_editor: \"Maximizar/minimizar o editor de código.\"\n    },\n    community: {\n      main_title: \"Comunidade do CodeCombat\",\n      introduction: \"Confere abaixo as formas de te envolveres e escolhe a que te parece mais divertida. Estamos ansiosos por trabalhar contigo!\",\n      level_editor_prefix: \"Usa o\",\n      level_editor_suffix: \"do CodeCombat para criares e editares níveis. Os utilizadores já criaram níveis para aulas, amigos, maratonas hacker, estudantes e familiares. Se criar um nível novo parece intimidante, podes começar por bifurcar um dos nossos!\",\n      thang_editor_prefix: \"Chamamos 'thangs' às unidades do jogo. Usa o\",\n      thang_editor_suffix: \"para modificares a arte do CodeCombat. Faz as unidades lançarem projéteis, altera a direção de uma animação, altera os pontos de vida de uma unidade ou anexa as tuas próprias unidades.\",\n      article_editor_prefix: \"Vês um erro em alguns dos nossos documentos? Queres escrever algumas instruções para as tuas próprias criações? Confere o\",\n      article_editor_suffix: \"e ajuda os jogadores do CodeCombat a obter o máximo do tempo de jogo deles.\",\n      find_us: \"Encontra-nos nestes sítios\",\n      social_github: \"Confere todo o nosso código no GitHub\",\n      social_blog: \"Lê o blog do CodeCombat no Sett\",\n      social_discource: \"Junta-te à discussão no nosso fórum Discourse\",\n      social_facebook: \"Gosta do CodeCombat no Facebook\",\n      social_twitter: \"Segue o CodeCombat no Twitter\",\n      social_gplus: \"Junta-te ao CodeCombat no Google+\",\n      social_slack: \"Fala connosco no canal público do CodeCombat no Slack\",\n      contribute_to_the_project: \"Contribui para o projeto\"\n    },\n    clans: {\n      clan: \"Clã\",\n      clans: \"Clãs\",\n      new_name: \"Nome do novo clã\",\n      new_description: \"Descrição do novo clã\",\n      make_private: \"Tornar o clã privado\",\n      subs_only: \"apenas para subscritores\",\n      create_clan: \"Criar um Novo Clã\",\n      private_preview: \"Pré-visualização\",\n      private_clans: \"Clãs Privados\",\n      public_clans: \"Clãs Públicos\",\n      my_clans: \"Os Meus Clãs\",\n      clan_name: \"Nome do Clã\",\n      name: \"Nome\",\n      chieftain: \"Líder\",\n      edit_clan_name: \"Editar Nome do Clã\",\n      edit_clan_description: \"Editar Descrição do Clã\",\n      edit_name: \"editar nome\",\n      edit_description: \"editar descrição\",\n      \"private\": \"(privado)\",\n      summary: \"Resumo\",\n      average_level: \"Nível em Média\",\n      average_achievements: \"Conquistas em Média\",\n      delete_clan: \"Eliminar o Clã\",\n      leave_clan: \"Abandonar o Clã\",\n      join_clan: \"Entrar no Clã\",\n      invite_1: \"Convidar:\",\n      invite_2: \"*Convida jogadores para este Clã enviando-lhes esta ligação.\",\n      members: \"Membros\",\n      progress: \"Progresso\",\n      not_started_1: \"não começado\",\n      started_1: \"começado\",\n      complete_1: \"completo\",\n      exp_levels: \"Expandir os níveis\",\n      rem_hero: \"Remover Herói\",\n      status: \"Estado\",\n      complete_2: \"Completo\",\n      started_2: \"Começado\",\n      not_started_2: \"Não Começado\",\n      view_solution: \"Clica para veres a solução.\",\n      view_attempt: \"Clica para veres a tentativa.\",\n      latest_achievement: \"Última Conquista\",\n      playtime: \"Tempo de jogo\",\n      last_played: \"Última vez jogado\",\n      leagues_explanation: \"Joga numa liga contra outros membros do clã nestas instâncias de arenas multijogador.\",\n      track_concepts1: \"Acompanhe os conceitos\",\n      track_concepts2a: \"aprendidos por cada estudante\",\n      track_concepts2b: \"aprendidos por cada membro\",\n      track_concepts3a: \"Acompanhe os níveis completados por cada estudante\",\n      track_concepts3b: \"Acompanhe os níveis completados por cada membro\",\n      track_concepts4a: \"Veja, dos seus estudantes, as\",\n      track_concepts4b: \"Veja, dos seus membros, as\",\n      track_concepts5: \"soluções\",\n      track_concepts6a: \"Ordene os estudantes por nome ou progresso\",\n      track_concepts6b: \"Ordene os membros por nome ou progresso\",\n      track_concepts7: \"É necessário um convite\",\n      track_concepts8: \"para entrar\",\n      private_require_sub: \"É necessária uma subscrição para criar ou entrar num clã privado.\"\n    },\n    courses: {\n      create_new_class: \"Criar Turma Nova\",\n      solutions_require_licenses: \"As soluções dos níveis estão disponíveis para professores que tenham licenças.\",\n      unnamed_class: \"Turma Sem Nome\",\n      edit_settings1: \"Editar Definições da Turma\",\n      add_students: \"Adicionar Estudantes\",\n      stats: \"Estatísticas\",\n      total_students: \"Estudantes no total:\",\n      average_time: \"Média do tempo de jogo do nível:\",\n      total_time: \"Tempo de jogo total:\",\n      average_levels: \"Média de níveis completos:\",\n      total_levels: \"Total de níveis completos:\",\n      students: \"Estudantes\",\n      concepts: \"Conceitos\",\n      play_time: \"Tempo de jogo:\",\n      completed: \"Completos:\",\n      enter_emails: \"Separa cada endereço de e-mail com uma quebra de linha ou vírgulas\",\n      send_invites: \"Convidar Estudantes\",\n      number_programming_students: \"Número de Estudantes\",\n      number_total_students: \"Total de Estudantes na Escola/Distrito\",\n      enroll: \"Inscrever\",\n      enroll_paid: \"Inscrever Estudantes em Cursos Pagos\",\n      get_enrollments: \"Obter Mais Licenças\",\n      change_language: \"Alterar Linguagem do Curso\",\n      keep_using: \"Continuar a Usar\",\n      switch_to: \"Mudar Para\",\n      greetings: \"Saudações!\",\n      back_classrooms: \"Voltar às minhas turmas\",\n      back_classroom: \"Voltar à turma\",\n      back_courses: \"Voltar aos meus cursos\",\n      edit_details: \"Editar detalhes da turma\",\n      purchase_enrollments: \"Adquirir Licenças de Estudante\",\n      remove_student: \"remover estudante\",\n      student: \"Estudante\",\n      teacher: \"Professor\",\n      arena: \"Arena\",\n      available_levels: \"Níveis Disponíveis\",\n      started: \"começado\",\n      complete: \"completado\",\n      practice: \"prática\",\n      required: \"obrigatório\",\n      welcome_to_courses: \"Aventureiros, sejam bem-vindos aos Cursos!\",\n      ready_to_play: \"Pronto para jogar?\",\n      start_new_game: \"Começar Novo Jogo\",\n      play_now_learn_header: \"Joga agora para aprenderes\",\n      welcome_to_page: \"O Meu Painel de Estudante\",\n      my_classes: \"Turmas Atuais\",\n      class_added: \"Turma adicionada com sucesso!\",\n      view_project_gallery: \"ver os projetos dos meus colegas\",\n      join_class: \"Entrar Numa Turma\",\n      join_class_2: \"Entrar na turma\",\n      ask_teacher_for_code: \"Pergunta ao teu professor se tens um código de turma do CodeCombat! Se tiveres, introdu-lo abaixo:\",\n      enter_c_code: \"<Introduzir Código de Turma>\",\n      join: \"Entrar\",\n      joining: \"A entrar na turma\",\n      course_complete: \"Curso Completo\",\n      play_arena: \"Jogar na Arena\",\n      view_project: \"Ver Projeto\",\n      start: \"Começar\",\n      last_level: \"Último nível jogado\",\n      not_you: \"Não és tu?\",\n      continue_playing: \"Continuar a Jogar\",\n      option1_header: \"Convidar Estudantes por E-mail\",\n      remove_student1: \"Remover Estudante\",\n      are_you_sure: \"Tens a certeza de que queres remover este estudante desta turma?\",\n      keep_student: \"Manter Estudante\",\n      removing_user: \"A remover utilizador\",\n      subtitle: \"Revê visões gerais de cursos e níveis\",\n      select_language: \"Selecionar linguagem\",\n      select_level: \"Selecionar nível\",\n      play_level: \"Jogar Nível\",\n      concepts_covered: \"Conceitos Abordados\",\n      view_guide_online: \"Visões Gerais e Soluções do Nível\",\n      grants_lifetime_access: \"Garante acesso a todos os Cursos.\",\n      enrollment_credits_available: \"Licenças Disponíveis:\",\n      language_select: \"Seleciona uma linguagem\",\n      language_cannot_change: \"A linguagem não pode ser alterada depois de estudantes entrarem numa turma.\",\n      avg_student_exp_label: \"Experiência Média de Programação dos Estudantes\",\n      avg_student_exp_desc: \"Isto vai-nos ajudar a perceber qual o melhor andamento para os cursos.\",\n      avg_student_exp_select: \"Seleciona a melhor opção\",\n      avg_student_exp_none: \"Nenhuma Experiência - pouca ou nenhuma experiência\",\n      avg_student_exp_beginner: \"Iniciante - alguma exposição ou baseada em blocos\",\n      avg_student_exp_intermediate: \"Intermédia - alguma experiência com código escrito\",\n      avg_student_exp_advanced: \"Avançada - muita experiência com código escrito\",\n      avg_student_exp_varied: \"Vários Níveis de Experiência\",\n      student_age_range_label: \"Intervalo de Idades dos Estudantes\",\n      student_age_range_younger: \"Menos de 6\",\n      student_age_range_older: \"Mais de 18\",\n      student_age_range_to: \"até\",\n      create_class: \"Criar Turma\",\n      class_name: \"Nome da Turma\",\n      account_restricted: \"É necessária uma conta de estudante para acederes a esta página.\",\n      update_account_title: \"A tua conta precisa de atenção!\",\n      update_account_am_teacher: \"Sou um professor\",\n      update_account_am_student: \"Sou um estudante\",\n      select_your_hero: \"Seleciona o Teu Herói\",\n      select_your_hero_description: \"Podes sempre alterar o teu herói ao acederes à tua página de Cursos e clicares em \\\"Alterar Herói\\\"\",\n      select_this_hero: \"Selecionar este herói\",\n      current_hero: \"Herói Atual:\",\n      current_hero_female: \"Heroína Atual:\",\n      course_membership_required_to_play: \"Precisas de te juntar a um curso para jogares este nível.\",\n      status: \"Estado:\",\n      challenges: \"Desafios\",\n      level_name: \"Nome do Nível:\",\n      start_challenge: \"Começar Desafio\",\n      concepts_used: \"Conceitos Usados:\"\n    },\n    project_gallery: {\n      no_projects_published: \"Sê o primeiro a publicar um projeto neste curso!\",\n      view_project: \"Ver Projeto\",\n      edit_project: \"Editar Projeto\"\n    },\n    teacher: {\n      back_to_top: \"Voltar ao Topo\",\n      code: \"Código de __name__\",\n      complete_solution: \"Solução Completa\",\n      partial_solution: \"Solução Parcial\",\n      removing_course: \"A remover o curso\",\n      student_code: \"Código de Estudante de __name__\",\n      teacher_dashboard: \"Painel do Professor\",\n      my_classes: \"As Minhas Turmas\",\n      courses: \"Guias dos Cursos\",\n      enrollments: \"Licenças de Estudantes\",\n      resources: \"Recursos\",\n      help: \"Ajuda\",\n      language: \"Linguagem\",\n      edit_class_settings: \"editar definições da turma\",\n      access_restricted: \"Atualização de Conta Necessária\",\n      teacher_account_required: \"É necessária uma conta de professor para acederes a este conteúdo.\",\n      create_teacher_account: \"Criar Conta de Professor\",\n      what_is_a_teacher_account: \"O que é uma Conta de Professor?\",\n      current_classes: \"Turmas Atuais\",\n      archived_classes: \"Turmas Arquivadas\",\n      archived_classes_blurb: \"As turmas podem ser arquivadas para referência futura. Desarquiva uma turma para a veres novamente na lista das Turmas Atuais.\",\n      view_class: \"ver turma\",\n      archive_class: \"arquivar turma\",\n      unarchive_class: \"desarquivar turma\",\n      unarchive_this_class: \"Desarquivar esta turma\",\n      no_students_yet: \"Esta turma ainda não tem estudantes.\",\n      no_students_yet_view_class: \"Ver turma para adicionar estudantes.\",\n      try_refreshing: \"(Podes precisar de atualizar a página)\",\n      create_new_class: \"Criar uma Turma Nova\",\n      class_overview: \"Visão Geral da Turma\",\n      avg_playtime: \"Tempo de jogo médio por nível\",\n      total_playtime: \"Tempo de jogo total\",\n      avg_completed: \"Média de níveis completos\",\n      total_completed: \"Totalidade dos níveis completos\",\n      created: \"Criada\",\n      concepts_covered: \"Conceitos abordados\",\n      earliest_incomplete: \"Nível mais básico incompleto\",\n      latest_complete: \"Último nível completo\",\n      enroll_student: \"Inscrever estudante\",\n      apply_license: \"Aplicar Licença\",\n      revoke_license: \"Revogar Licença\",\n      revoke_licenses: \"Revogar Todas as Licenças\",\n      course_progress: \"Progresso dos Cursos\",\n      not_applicable: \"N/A\",\n      edit: \"editar\",\n      edit_2: \"Editar\",\n      remove: \"remover\",\n      latest_completed: \"Último completo:\",\n      sort_by: \"Ordenar por\",\n      progress: \"Progresso\",\n      concepts_used: \"Conceitos usados pelo Estudante:\",\n      completed: \"Completaram\",\n      practice: \"Prática\",\n      started: \"Começaram\",\n      no_progress: \"Nenhum progresso\",\n      select_course: \"Seleciona o curso para ser visto\",\n      progress_color_key: \"Esquema de cores do progresso:\",\n      level_in_progress: \"Nível em Progresso\",\n      level_not_started: \"Nível Não Começado\",\n      project_or_arena: \"Projeto ou Arena\",\n      copy_class_code: \"Copiar Código de Turma\",\n      class_code_blurb: \"Os estudantes podem entrar na tua turma ao usarem este Código de Turma. Não é necessário nenhum endereço de e-mail aquando da criação de uma conta de Estudante com este Código de Turma.\",\n      copy_class_url: \"Copiar URL da Turma\",\n      class_join_url_blurb: \"Também podes publicar este URL único da turma numa página web partilhada.\",\n      add_students_manually: \"Convidar Estudantes por E-mail\",\n      bulk_assign: \"Selecionar curso\",\n      assigned_msg_2: \"{{numberEnrolled}} licenças foram aplicadas.\",\n      assign_course: \"Atribuir Curso\",\n      removed_course_msg: \"{{numberRemoved}} estudantes foram removidos de {{courseName}}.\",\n      remove_course: \"Remover Curso\",\n      not_assigned_modal_title: \"Os cursos não foram atribuídos\",\n      enroll_selected_students: \"Inscrever os Estudantes Selecionados\",\n      no_students_selected: \"Nenhum estudante foi selecionado.\",\n      apply_licenses_to_the_following_students: \"Aplicar Licenças aos Seguintes Estudantes\",\n      all_students: \"Todos os Estudantes\",\n      apply_licenses: \"Aplicar Licenças\",\n      not_enough_enrollments: \"Não há licenças suficientes disponíveis.\",\n      enrollments_blurb: \"É necessário que os estudantes tenham uma licença para acederem a qualquer conteúdo depois do primeiro curso.\",\n      how_to_apply_licenses: \"Como Aplicar Licenças\",\n      export_student_progress: \"Exportar Progresso dos Estudantes (CSV)\",\n      email_sent: \"E-mail enviado\",\n      send_recovery_email: \"Enviar e-mail de recuperação\",\n      enter_new_password_below: \"Introduz a nova palavra-passe abaixo:\",\n      change_password: \"Alterar Palavra-passe\",\n      changed: \"Alterada\",\n      available_credits: \"Licenças Disponíveis\",\n      pending_credits: \"Licenças Pendentes\",\n      license_remaining: \"licença restante\",\n      licenses_remaining: \"licenças restantes\",\n      one_license_used: \"1 de __totalLicenses__ licenças foi usada\",\n      num_licenses_used: \"__numLicensesUsed__ de __totalLicenses__ licenças foram usadas\",\n      get_enrollments_blurb: \" Vamos ajudar-te a construir uma solução que satisfaça as necessidades da tua turma, escola ou distrito.\",\n      request_sent: \"Pedido Enviado!\",\n      license_status: \"Estado das Licenças\",\n      status_not_enrolled: \"Não Inscrito\",\n      select_all: \"Selecionar Todos\",\n      project: \"Projeto\",\n      view_project: \"Ver Projeto\",\n      unpublished: \"(não publicado)\",\n      resource_hub: \"Centro de Recursos\",\n      coming_soon: \"Guias adicionais em breve!\",\n      student_overview: \"Visão Geral\",\n      student_details: \"Detalhes do Estudante\",\n      student_name: \"Nome do Estudante\",\n      no_name: \"Nenhum nome fornecido.\",\n      no_username: \"Nenhum nome de utilizador fornecido.\",\n      no_email: \"O estudante não tem nenhum endereço de e-mail definido.\",\n      student_profile: \"Perfil do Estudante\",\n      playtime_detail: \"Detalhe do Tempo de Jogo\",\n      student_completed: \"Completo pelo Estudante\",\n      student_in_progress: \"Em progresso pelo Estudante\",\n      class_average: \"Média da Turma\",\n      playtime_axis: \"Tempo de Jogo em Segundos\",\n      levels_axis: \"Níveis em\",\n      student_state: \"Como se está\",\n      student_state_2: \"a sair?\",\n      revoking: \"A revogar...\",\n      more_info: \"Mais Informação\",\n      teacher_quest_add_students: \"Adicionar Estudantes\",\n      level_label: \"Nível:\",\n      time_played_label: \"Tempo Jogado:\",\n      print_guide: \"Imprimir este guia\",\n      concept: \"Conceito\"\n    },\n    share_licenses: {\n      share_licenses: \"Partilhar Licenças\",\n      shared_by: \"Partilhadas Por:\",\n      add_teacher_button: \"Adicionar Professor\",\n      you: \"(tu)\",\n      one_license_used: \"(1 licença usada)\",\n      licenses_used: \"(__licensesUsed__ licenças usadas)\",\n      more_info: \"Mais informação\"\n    },\n    sharing: {\n      game: \"Jogo\",\n      webpage: \"Página Web\",\n      share_game: \"Partilhar Este Jogo\",\n      share_web: \"Partilhar Esta Página Web\",\n      victory_share_prefix: \"Partilha esta ligação para convidares os teus amigos e a tua família para\",\n      victory_share_prefix_short: \"Convida pessoas para\",\n      victory_share_game: \"jogarem o teu nível de jogo\",\n      victory_share_web: \"verem a tua página web\",\n      victory_share_suffix: \".\",\n      victory_course_share_prefix: \"Esta ligação vai permitir que os teus amigos e a tua família\",\n      victory_course_share_game: \"joguem o jogo\",\n      victory_course_share_web: \"vejam a página web\",\n      victory_course_share_suffix: \"que acabaste de criar.\",\n      copy_url: \"Copiar URL\",\n      share_with_teacher_email: \"Envia para o teu professor\"\n    },\n    game_dev: {\n      creator: \"Criador\"\n    },\n    web_dev: {\n      image_gallery_title: \"Galeria de Imagens\",\n      select_an_image: \"Seleciona uma imagem que queiras usar\",\n      scroll_down_for_more_images: \"(Arrasta para baixo para mais imagens)\",\n      copy_the_url: \"Copiar o URL abaixo\",\n      copy_the_url_description: \"Útil se quiseres substituir uma imagem existente.\",\n      copy_the_img_tag: \"Copiar a etiqueta <img>\",\n      copy_the_img_tag_description: \"Útil se quiseres inserir uma imagem nova.\",\n      copy_url: \"Copiar URL\",\n      copy_img: \"Copiar <img>\",\n      how_to_copy_paste: \"Como Copiar/Colar\",\n      copy: \"Copiar\",\n      paste: \"Colar\",\n      back_to_editing: \"Voltar à Edição\"\n    },\n    classes: {\n      archmage_title: \"Arcomago\",\n      archmage_title_description: \"(Programador)\",\n      archmage_summary: \"Se és um programador interessado em programar jogos educacionais, torna-te um Arcomago para nos ajudares a construir o CodeCombat!\",\n      artisan_title: \"Artesão\",\n      artisan_title_description: \"(Construtor de Níveis)\",\n      artisan_summary: \"Constrói e partilha níveis para tu e os teus amigos jogarem. Torna-te um Artesão para aprenderes a arte de ensinar outros a programar.\",\n      adventurer_title: \"Aventureiro\",\n      adventurer_title_description: \"(Testador de Níveis)\",\n      adventurer_summary: \"Recebe os nossos novos níveis (até o conteúdo para subscritores) de graça, uma semana antes, e ajuda-nos a descobrir erros antes do lançamento para o público.\",\n      scribe_title: \"Escrivão\",\n      scribe_title_description: \"(Editor de Artigos)\",\n      scribe_summary: \"Bom código precisa de uma boa documentação. Escreve, edita e melhora os documentos lidos por milhões de jogadores pelo mundo.\",\n      diplomat_title: \"Diplomata\",\n      diplomat_title_description: \"(Tradutor)\",\n      diplomat_summary: \"O CodeCombat está traduzido em 45+ idiomas graças aos nossos Diplomatas. Ajuda-nos e contribui com traduções.\",\n      ambassador_title: \"Embaixador\",\n      ambassador_title_description: \"(Suporte)\",\n      ambassador_summary: \"Amansa os nossos utilizadores do fórum e direciona aqueles que têm questões. Os nossos Embaixadores representam o CodeCombat perante o mundo.\",\n      teacher_title: \"Professor\"\n    },\n    editor: {\n      main_title: \"Editores do CodeCombat\",\n      article_title: \"Editor de Artigos\",\n      thang_title: \"Editor de Thangs\",\n      level_title: \"Editor de Níveis\",\n      course_title: \"Editor de Cursos\",\n      achievement_title: \"Editor de Conquistas\",\n      poll_title: \"Editor de Votações\",\n      back: \"Voltar\",\n      revert: \"Reverter\",\n      revert_models: \"Reverter Modelos\",\n      pick_a_terrain: \"Escolhe Um Terreno\",\n      dungeon: \"Masmorra\",\n      indoor: \"Interior\",\n      desert: \"Deserto\",\n      grassy: \"Relvado\",\n      mountain: \"Montanha\",\n      glacier: \"Glaciar\",\n      small: \"Pequeno\",\n      large: \"Grande\",\n      fork_title: \"Bifurcar Nova Versão\",\n      fork_creating: \"A Criar Bifurcação...\",\n      generate_terrain: \"Gerar Terreno\",\n      more: \"Mais\",\n      wiki: \"Wiki\",\n      live_chat: \"Chat ao Vivo\",\n      thang_main: \"Principal\",\n      thang_spritesheets: \"Spritesheets\",\n      thang_colors: \"Cores\",\n      level_some_options: \"Algumas Opções?\",\n      level_tab_thangs: \"Thangs\",\n      level_tab_scripts: \"Scripts\",\n      level_tab_components: \"Componentes\",\n      level_tab_systems: \"Sistemas\",\n      level_tab_docs: \"Documentação\",\n      level_tab_thangs_title: \"Thangs Atuais\",\n      level_tab_thangs_all: \"Todos\",\n      level_tab_thangs_conditions: \"Condições Iniciais\",\n      level_tab_thangs_add: \"Adicionar Thangs\",\n      level_tab_thangs_search: \"Pesquisar thangs\",\n      add_components: \"Adicionar Componentes\",\n      component_configs: \"Configurações dos Componentes\",\n      config_thang: \"Clica duas vezes para configurares uma thang\",\n      \"delete\": \"Eliminar\",\n      duplicate: \"Duplicar\",\n      stop_duplicate: \"Parar de Duplicar\",\n      rotate: \"Rodar\",\n      level_component_tab_title: \"Componentes Atuais\",\n      level_component_btn_new: \"Criar Novo Componente\",\n      level_systems_tab_title: \"Sistemas Atuais\",\n      level_systems_btn_new: \"Cria Novo Sistema\",\n      level_systems_btn_add: \"Adicionar Sistema\",\n      level_components_title: \"Voltar para Todas as Thangs\",\n      level_components_type: \"Tipo\",\n      level_component_edit_title: \"Editar Componente\",\n      level_component_config_schema: \"Configurar Esquema\",\n      level_system_edit_title: \"Editar Sistema\",\n      create_system_title: \"Criar Novo Sistema\",\n      new_component_title: \"Criar Novo Componente\",\n      new_component_field_system: \"Sistema\",\n      new_article_title: \"Criar um Novo Artigo\",\n      new_thang_title: \"Criar um Novo Tipo de Thang\",\n      new_level_title: \"Criar um Novo Nível\",\n      new_article_title_login: \"Inicia Sessão para Criares um Novo Artigo\",\n      new_thang_title_login: \"Inicia Sessão para Criares um Novo Tipo de Thang\",\n      new_level_title_login: \"Inicia Sessão para Criares um Novo Nível\",\n      new_achievement_title: \"Criar uma Nova Conquista\",\n      new_achievement_title_login: \"Inicia Sessão para Criares uma Nova Conquista\",\n      new_poll_title: \"Criar uma Nova Votação\",\n      new_poll_title_login: \"Iniciar Sessão para Criar uma Nova Votação\",\n      article_search_title: \"Procurar Artigos Aqui\",\n      thang_search_title: \"Procurar Thangs Aqui\",\n      level_search_title: \"Procurar Níveis Aqui\",\n      achievement_search_title: \"Procurar Conquistas\",\n      poll_search_title: \"Procurar Votações\",\n      read_only_warning2: \"Nota: não podes guardar nenhuma edição feita aqui, porque não tens sessão iniciada.\",\n      no_achievements: \"Ainda não foram adicionadas conquistas a este nível.\",\n      achievement_query_misc: \"Conquista-chave de uma lista de variados\",\n      achievement_query_goals: \"Conquista-chave dos objetivos do nível\",\n      level_completion: \"Completação do Nível\",\n      pop_i18n: \"Propagar I18N\",\n      tasks: \"Tarefas\",\n      clear_storage: \"Limpa as tuas alterações locais\",\n      add_system_title: \"Adicionar Sistemas ao Nível\",\n      done_adding: \"Adição Concluída\"\n    },\n    article: {\n      edit_btn_preview: \"Pré-visualizar\",\n      edit_article_title: \"Editar Artigo\"\n    },\n    polls: {\n      priority: \"Prioridade\"\n    },\n    contribute: {\n      page_title: \"Contribuir\",\n      intro_blurb: \"O CodeCombat faz parte da comunidade open source! Centenas de jogadores dedicados ajudaram-nos a transformar o jogo naquilo que ele é hoje. Junta-te a nós e escreve o próximo capítulo da aventura do CodeCombat para ensinar o mundo a programar!\",\n      alert_account_message_intro: \"Hey, tu!\",\n      alert_account_message: \"Para te subscreveres para receber e-mails de classes, necessitarás de iniciar sessão.\",\n      archmage_introduction: \"Uma das melhores partes da construção de jogos é que eles sintetizam muitas coisas diferentes. Gráficos, som, rede em tempo real, redes sociais, e, claro, muitos dos aspectos mais comuns da programação, desde a gestão de bases de dados de baixo nível, e administração do servidor até à construção do design e da interface do utilizador. Há muito a fazer, e se és um programador experiente com um verdadeiro desejo de mergulhar nas entranhas do CodeCombat, esta classe pode ser para ti. Gostaríamos muito de ter a tua ajuda para construir o melhor jogo de programação de sempre.\",\n      class_attributes: \"Atributos da Classe\",\n      archmage_attribute_1_pref: \"Conhecimento em \",\n      archmage_attribute_1_suf: \", ou vontade de aprender. A maioria do nosso código está nesta linguagem. Se és um fã de Ruby ou Python, vais sentir-te em casa. É igual ao JavaScript, mas com uma sintaxe melhor.\",\n      archmage_attribute_2: \"Alguma experiência em programação e iniciativa pessoal. Nós ajudamos-te a orientares-te, mas não podemos gastar muito tempo a treinar-te.\",\n      how_to_join: \"Como Me Junto\",\n      join_desc_1: \"Qualquer um pode ajudar! Só tens de conferir o nosso \",\n      join_desc_2: \"para começares, e assinalar a caixa abaixo para te declarares um bravo Arcomago e receberes as últimas notícias por e-mail. Queres falar sobre o que fazer ou como te envolveres mais profundamente no projeto? \",\n      join_desc_3: \" ou encontra-nos na nossa \",\n      join_desc_4: \"e começamos a partir daí!\",\n      join_url_email: \"Contacta-nos\",\n      join_url_slack: \"canal público no Slack\",\n      archmage_subscribe_desc: \"Receber e-mails relativos a novas oportunidades de programação e anúncios.\",\n      artisan_introduction_pref: \"Temos de construir mais níveis! As pessoas estão a pedir mais conteúdo, e nós mesmos só podemos construir estes tantos. Neste momento, a tua estação de trabalho é o nível um; o nosso editor de nível é pouco utilizável, até mesmo pelos seus criadores, por isso fica atento. Se tens visões de campanhas que abranjam 'for-loops' para o\",\n      artisan_introduction_suf: \", então esta classe pode ser para ti.\",\n      artisan_join_desc: \"Usa o Editor de Níveis por esta ordem, pegar ou largar:\",\n      artisan_join_step1: \"Lê a documentação.\",\n      artisan_join_step2: \"Cria um nível novo e explora níveis existentes.\",\n      artisan_join_step3: \"Encontra-nos na nossa sala Slack pública se necessitares de ajuda.\",\n      artisan_join_step4: \"Coloca os teus níveis no fórum para receberes feedback.\",\n      artisan_subscribe_desc: \"Receber e-mails relativos a novidades do editor de níveis e anúncios.\",\n      adventurer_subscribe_desc: \"Receber e-mails quando houver novos níveis para testar.\",\n      scribe_attribute_1: \"Habilidade com palavras é basicamente o que precisas. Não apenas gramática e ortografia, mas seres capaz de explicar ideias complicadas a outros.\",\n      contact_us_url: \"Contacta-nos\",\n      scribe_join_description: \"fala-nos um bocado de ti, da tua experiência com a programação e do tipo de coisas sobre as quais gostarias de escrever. Começamos a partir daí!\",\n      scribe_subscribe_desc: \"Receber e-mails sobre anúncios relativos à escrita de artigos.\",\n      diplomat_introduction_pref: \"Portanto, se há uma coisa que aprendemos com o nosso \",\n      diplomat_launch_url: \"lançamento em Outubro\",\n      diplomat_introduction_suf: \"é que há um interesse considerável no CodeCombat noutros países! Estamos a construir um exército de tradutores dispostos a transformar um conjunto de palavras num outro conjuto de palavras, para conseguir que o CodeCombat fique o mais acessível quanto posível em todo o mundo. Se gostas de dar espreitadelas a conteúdos futuros e disponibilizar os níveis para os teus colegas nacionais o mais depressa possível, então esta classe talvez seja para ti.\",\n      diplomat_attribute_1: \"Fluência em Inglês e no idioma para o qual gostarias de traduzir. Quando são tentadas passar ideias complicadas, é importante uma excelente compreensão das duas!\",\n      diplomat_i18n_page_prefix: \"Podes começar a traduzir os nossos níveis se fores à nossa\",\n      diplomat_i18n_page: \"página de traduções\",\n      diplomat_i18n_page_suffix: \", ou a nossa interface e website no GitHub.\",\n      diplomat_join_pref_github: \"Encontra o ficheiro 'locale' do teu idioma \",\n      diplomat_github_url: \"no GitHub\",\n      diplomat_join_suf_github: \", edita-o online e submete um 'pull request'. Assinala ainda a caixa abaixo para ficares atualizado em relação a novos desenvolvimentos da internacionalização!\",\n      diplomat_subscribe_desc: \"Receber e-mails sobre desenvolvimentos da i18n e níveis para traduzir.\",\n      ambassador_join_note_strong: \"Nota\",\n      ambassador_join_note_desc: \"Uma das nossas maiores prioridades é construir níveis multijogador onde os jogadores com dificuldade para passar níveis possam invocar feiticeiros mais experientes para os ajudarem. Esta será uma ótima forma de os embaixadores fazerem o que sabem. Vamos manter-te atualizado!\",\n      ambassador_subscribe_desc: \"Receber e-mails relativos a novidades do suporte e desenvolvimentos do modo multijogador.\",\n      teacher_subscribe_desc: \"Receber e-mails sobre atualizações e anúncios para professores.\",\n      changes_auto_save: \"As alterações são guardadas automaticamente quando clicas nas caixas.\",\n      diligent_scribes: \"Os Nossos Dedicados Escrivões:\",\n      powerful_archmages: \"Os Nossos Poderosos Arcomagos:\",\n      creative_artisans: \"Os Nossos Creativos Artesãos:\",\n      brave_adventurers: \"Os Nossos Bravos Aventureiros:\",\n      translating_diplomats: \"Os Nossos Tradutores Diplomatas:\",\n      helpful_ambassadors: \"Os Nossos Prestáveis Embaixadores:\"\n    },\n    ladder: {\n      my_matches: \"Os Meus Jogos\",\n      simulate: \"Simular\",\n      simulation_explanation: \"Ao simulares jogos podes ter o teu jogo classificado mais rapidamente!\",\n      simulation_explanation_leagues: \"Principalmente, vais ajudar a simular jogos para jogadores aliados nos teus clâs e cursos.\",\n      simulate_games: \"Simular Jogos!\",\n      games_simulated_by: \"Jogos simulados por ti:\",\n      games_simulated_for: \"Jogos simulados para ti:\",\n      games_in_queue: \"Jogos na fila de espera atualmente:\",\n      games_simulated: \"Jogos simulados\",\n      games_played: \"Jogos jogados\",\n      ratio: \"Rácio\",\n      leaderboard: \"Tabela de Classificação\",\n      battle_as: \"Lutar como \",\n      summary_your: \"As Tuas \",\n      summary_matches: \"Partidas - \",\n      summary_wins: \" Vitórias, \",\n      summary_losses: \" Derrotas\",\n      rank_no_code: \"Sem Código Novo para Classificar\",\n      rank_my_game: \"Classificar o Meu Jogo!\",\n      rank_submitting: \"A submeter...\",\n      rank_submitted: \"Submetido para Classificação\",\n      rank_failed: \"A Classificação Falhou\",\n      rank_being_ranked: \"Jogo a ser Classificado\",\n      rank_last_submitted: \"submetido \",\n      help_simulate: \"Ajudar a simular jogos?\",\n      code_being_simulated: \"O teu novo código está a ser simulado por outros jogadores, para ser classificado. Isto será atualizado quando surgirem novas partidas.\",\n      no_ranked_matches_pre: \"Sem jogos classificados pela equipa \",\n      no_ranked_matches_post: \"! Joga contra alguns adversários e volta aqui para veres o teu jogo classificado.\",\n      choose_opponent: \"Escolhe um Adversário\",\n      select_your_language: \"Seleciona a tua linguagem!\",\n      tutorial_play: \"Jogar Tutorial\",\n      tutorial_recommended: \"Recomendado se nunca jogaste antes\",\n      tutorial_skip: \"Saltar Tutorial\",\n      tutorial_not_sure: \"Não tens a certeza do que se passa?\",\n      tutorial_play_first: \"Joga o Tutorial primeiro.\",\n      simple_ai: \"CPU Simples\",\n      warmup: \"Aquecimento\",\n      friends_playing: \"Amigos a Jogar\",\n      log_in_for_friends: \"Inicia sessão para jogares com os teus amigos!\",\n      social_connect_blurb: \"Conecta-te e joga contra os teus amigos!\",\n      invite_friends_to_battle: \"Convida os teus amigos para se juntarem a ti em batalha!\",\n      fight: \"Lutar!\",\n      watch_victory: \"Vê a tua vitória\",\n      defeat_the: \"Derrota o\",\n      watch_battle: \"Ver a batalha\",\n      tournament_started: \", começou\",\n      tournament_ends: \"O Torneio acaba\",\n      tournament_ended: \"O Torneio acabou\",\n      tournament_rules: \"Regras do Torneio\",\n      tournament_blurb: \"Escreve código, recolhe ouro, constrói exércitos, esmaga inimigos, ganha prémios e melhora a tua carreira no nosso torneio $40,000 Greed! Confere os detalhes\",\n      tournament_blurb_criss_cross: \"Ganha ofertas, constrói caminhos, supera os adversários, apanha gemas e melhore a tua carreira no nosso torneio Criss-Cross! Confere os detalhes\",\n      tournament_blurb_zero_sum: \"Liberta a tua criatividade de programação tanto na recolha de ouro como em táticas de combate nesta batalha-espelhada na montanha, entre o feiticeiro vermelho e o feiticeiro azul. O torneio começou na Sexta-feira, 27 de Março, e decorrerá até às 00:00 de Terça-feira, 7 de Abril. Compete por diversão e glória! Confere os detalhes\",\n      tournament_blurb_ace_of_coders: \"Luta no glaciar congelado nesta partida espelhada do estilo domínio! O torneio começou Quarta-feira, 16 de Setembro, e decorrerá até Quarta-feira, 14 de Outubro às 23:00. Confere os detalhes\",\n      tournament_blurb_blog: \"no nosso blog\",\n      rules: \"Regras\",\n      winners: \"Vencedores\",\n      league: \"Liga\",\n      red_ai: \"CPU Vermelho\",\n      blue_ai: \"CPU Azul\",\n      wins: \"Vence\",\n      humans: \"Vermelho\",\n      ogres: \"Azul\"\n    },\n    user: {\n      stats: \"Estatísticas\",\n      singleplayer_title: \"Níveis Um Jogador\",\n      multiplayer_title: \"Níveis Multijogador\",\n      achievements_title: \"Conquistas\",\n      last_played: \"Última Vez Jogado\",\n      status: \"Estado\",\n      status_completed: \"Completo\",\n      status_unfinished: \"Inacabado\",\n      no_singleplayer: \"Sem jogos Um Jogador jogados.\",\n      no_multiplayer: \"Sem jogos Multijogador jogados.\",\n      no_achievements: \"Sem Conquistas ganhas.\",\n      favorite_prefix: \"A linguagem favorita é \",\n      favorite_postfix: \".\",\n      not_member_of_clans: \"Ainda não é membro de nenhum clã.\"\n    },\n    achievements: {\n      last_earned: \"Último Ganho\",\n      amount_achieved: \"Quantidade\",\n      achievement: \"Conquista\",\n      current_xp_prefix: \"\",\n      current_xp_postfix: \" no total\",\n      new_xp_prefix: \"\",\n      new_xp_postfix: \" ganho\",\n      left_xp_prefix: \"\",\n      left_xp_infix: \" até ao nível \",\n      left_xp_postfix: \"\"\n    },\n    account: {\n      payments: \"Pagamentos\",\n      prepaid_codes: \"Códigos Pré-pagos\",\n      purchased: \"Adquirido\",\n      subscription: \"Subscrição\",\n      invoices: \"Donativos\",\n      service_apple: \"Apple\",\n      service_web: \"Web\",\n      paid_on: \"Pago Em\",\n      service: \"Serviço\",\n      price: \"Preço\",\n      gems: \"Gemas\",\n      active: \"Activa\",\n      subscribed: \"Subscrito(a)\",\n      unsubscribed: \"Não Subscrito(a)\",\n      active_until: \"Ativa Até\",\n      cost: \"Custo\",\n      next_payment: \"Próximo Pagamento\",\n      card: \"Cartão\",\n      status_unsubscribed_active: \"Não estás subscrito e não te vamos cobrar, mas a tua conta ainda está ativa, por agora.\",\n      status_unsubscribed: \"Ganha acesso a novos níveis, heróis, itens e gemas de bónus com uma subscrição do CodeCombat!\",\n      not_yet_verified: \"Ainda não foi verificado.\",\n      resend_email: \"Reenviar e-mail\",\n      email_sent: \"E-mail enviado! Verifica a tua caixa de entrada.\",\n      verifying_email: \"A verificar o teu endereço de e-mail...\",\n      successfully_verified: \"Verificaste o teu endereço de e-mail com sucesso!\",\n      verify_error: \"Algo correu mal aquando da verificação do teu e-mail :(\"\n    },\n    account_invoices: {\n      amount: \"Quantidade em dólares americanos\",\n      declined: \"O teu cartão foi recusado\",\n      invalid_amount: \"Por favor introduz uma quantidade de dólares americanos.\",\n      not_logged_in: \"Inicia sessão ou cria uma conta para acederes aos donativos.\",\n      pay: \"Pagar Donativo\",\n      purchasing: \"A adquirir...\",\n      retrying: \"Erro do servidor, a tentar novamente.\",\n      success: \"Pago com sucesso. Obrigado!\"\n    },\n    account_prepaid: {\n      purchase_code: \"Comprar um Código de Subscrição\",\n      users: \"Utilizadores\",\n      months: \"Meses\",\n      purchase_total: \"Total\",\n      purchase_button: \"Submeter Compra\",\n      your_codes: \"Os Teus Códigos\",\n      redeem_codes: \"Resgata um Código de Subscrição\",\n      prepaid_code: \"Código Pré-pago\",\n      lookup_code: \"Procurar código pré-pago\",\n      apply_account: \"Aplicar à tua conta\",\n      copy_link: \"Podes copiar a ligação do código e enviá-la a alguém.\",\n      quantity: \"Quantidade\",\n      redeemed: \"Resgatado\",\n      no_codes: \"Nenhum código ainda!\",\n      you_can1: \"Podes\",\n      you_can2: \"adquirir um código pré-pago\",\n      you_can3: \"que pode ser aplicado à tua conta ou dado a outros.\"\n    },\n    loading_error: {\n      could_not_load: \"Erro a carregar do servidor. Experimenta atualizar a página.\",\n      connection_failure: \"A Ligação Falhou\",\n      connection_failure_desc: \"Não parece que estejas ligado à internet! Verifica a tua ligação de rede e depois recarrega esta página.\",\n      login_required: \"Sessão Iniciada Obrigatória\",\n      login_required_desc: \"Precisas de ter sessão iniciada para acederes a esta página.\",\n      unauthorized: \"Precisas de ter sessão iniciada. Tens os cookies desativados?\",\n      forbidden: \"Proibido\",\n      forbidden_desc: \"Oh não, não há nada aqui que te possamos mostrar! Certifica-te de que tens sessão iniciada na conta correta ou visita uma das ligações abaixo para voltares para a programação!\",\n      not_found: \"Não Encontrado\",\n      not_found_desc: \"Hm, não há nada aqui. Visita uma das ligações seguintes para voltares para a programação!\",\n      not_allowed: \"Método não permitido.\",\n      timeout: \"O Servidor Expirou\",\n      conflict: \"Conflito de recursos.\",\n      bad_input: \"Má entrada.\",\n      server_error: \"Erro do servidor.\",\n      unknown: \"Erro Desconhecido\",\n      error: \"ERRO\",\n      general_desc: \"Algo correu mal, e, provavelmente, a culpa é nossa. Tenta esperar um pouco e depois recarregar a página, ou visita uma das ligações seguintes para voltares para a programação!\"\n    },\n    resources: {\n      level: \"Nível\",\n      patch: \"Atualização\",\n      patches: \"Atualizações\",\n      system: \"Sistema\",\n      systems: \"Sistemas\",\n      component: \"Componente\",\n      components: \"Componentes\",\n      hero: \"Herói\",\n      campaigns: \"Campanhas\"\n    },\n    concepts: {\n      \"arguments\": \"Argumentos\",\n      arithmetic: \"Aritmética\",\n      arrays: \"'Arrays'\",\n      basic_syntax: \"Sintaxe Básica\",\n      binary: \"Binário\",\n      break_statements: \"Declarações 'Break'\",\n      classes: \"Classes\",\n      continue_statements: \"Declarações 'Continue'\",\n      events: \"Eventos\",\n      for_loops: \"'For Loops'\",\n      functions: \"Funções\",\n      functions_parameters: \"Parâmetros\",\n      functions_multiple_parameters: \"Multiplos Parâmetros\",\n      graphics: \"Gráficos\",\n      if_statements: \"Declarações 'If'\",\n      jquery: \"jQuery\",\n      math_geometry: \"Geometria\",\n      math_operations: \"Operações Matemáticas\",\n      math_trigonometry: \"Trigonometria\",\n      object_literals: \"'Object Literals'\",\n      parameters: \"Parâmetros\",\n      programs: \"Programas\",\n      properties: \"Propriedades\",\n      recursion: \"Recursão\",\n      strings: \"'Strings'\",\n      trees: \"Estruturas de Dados - Árvores\",\n      variables: \"Variáveis\",\n      vectors: \"Vetores\",\n      xy_coordinates: \"Pares de Coordenadas\",\n      advanced_strings: \"'Strings' Avançadas\",\n      algorithms: \"Algoritmos\",\n      boolean_logic: \"Lógica Booleana\",\n      basic_html: \"HTML Básico\",\n      basic_css: \"CSS Básico\",\n      intermediate_html: \"HTML Intermédio\",\n      intermediate_css: \"CSS Intermédio\",\n      advanced_html: \"HTML Avançado\",\n      advanced_css: \"CSS Avançado\",\n      input_handling: \"Manuseamento de 'Input'\",\n      while_loops: \"'Loops While'\",\n      construct_mazes: \"Construir labirintos\",\n      basic_javascript: \"JavaScript Básico\"\n    },\n    anonymous_teacher: {\n      enter_student_name: \"O teu nome:\",\n      enter_teacher_email: \"O e-mail do teu professor:\",\n      teacher_email_placeholder: \"teacher.email@example.com\",\n      student_name_placeholder: \"escreve o teu nome aqui\",\n      teachers_section: \"Professores:\",\n      students_section: \"Estudantes:\"\n    },\n    delta: {\n      added: \"Adicionado\",\n      modified: \"Modificado\",\n      not_modified: \"Não Modificado\",\n      deleted: \"Eliminado\",\n      moved_index: \"Índice Movido\",\n      text_diff: \"Diferença de Texto\",\n      merge_conflict_with: \"FUNDIR CONFLITO COM\",\n      no_changes: \"Sem Alterações\"\n    },\n    legal: {\n      page_title: \"Legal\",\n      opensource_introduction: \"O CodeCombat faz parte da comunidade open source.\",\n      opensource_description_prefix: \"Confere \",\n      github_url: \"o nosso GitHub\",\n      opensource_description_center: \"e ajuda se quiseres! O CodeCombat é construído tendo por base dezenas de projetos open source, os quais nós amamos. Vê \",\n      archmage_wiki_url: \"a nossa wiki dos Arcomagos\",\n      opensource_description_suffix: \"para uma lista do software que faz com que este jogo seja possível.\",\n      practices_title: \"Melhores Práticas Respeitosas\",\n      practices_description: \"Estas são as nossas promessas para contigo, o jogador, com um pouco menos de politiquices.\",\n      privacy_title: \"Privacidade\",\n      privacy_description: \"Nós não vamos vender nenhuma das tuas informações pessoais.\",\n      security_title: \"Segurança\",\n      security_description: \"Nós lutamos para manter as tuas informações pessoais seguras. Sendo um projeto open source, o nosso sítio tem o código disponível, pelo que qualquer pessoa pode rever e melhorar os nossos sistemas de segurança.\",\n      email_title: \"E-mail\",\n      email_description_prefix: \"Nós não te inundaremos com spam. Através das\",\n      email_settings_url: \"tuas definições de e-mail\",\n      email_description_suffix: \"ou através de ligações presentes nos e-mails que enviamos, podes mudar as tuas preferências e parar a tua subscrição facilmente, em qualquer momento.\",\n      cost_title: \"Custo\",\n      cost_description: \"O CodeCombat é gratuito para os níveis fundamentais, com uma subscrição de ${{price}} USD/mês para acederes a ramos de níveis extra e {{gems}} gemas de bónus por mês. Podes cancelar com um clique, e oferecemos uma garantia de 100% de devolução do dinheiro.\",\n      copyrights_title: \"Direitos Autorais e Licensas\",\n      contributor_title: \"Contrato de Licença do Contribuinte (CLA)\",\n      contributor_description_prefix: \"Todas as contribuições, tanto no sítio como no nosso repositório GitHub, estão sujeitas ao nosso\",\n      cla_url: \"CLA\",\n      contributor_description_suffix: \"com o qual deves concordar antes de contribuir.\",\n      mit_license_url: \"Licença do MIT\",\n      code_description_suffix: \"Isto inclui todo o código dentro dos Sistemas e dos Componentes, o qual é disponibilizado pelo CodeCombat para a criação de níveis.\",\n      art_title: \"Arte/Música - Creative Commons \",\n      art_description_prefix: \"Todos os conteúdos comuns estão disponíveis à luz da\",\n      cc_license_url: \"Licença 'Creative Commons Attribution 4.0 International'\",\n      art_description_suffix: \"Conteúdo comum é, geralmente, qualquer coisa disponibilizada pelo CodeCombat com o propósito de criar Níveis. Isto inclui:\",\n      art_music: \"Música\",\n      art_sound: \"Som\",\n      art_artwork: \"Arte\",\n      art_sprites: \"Sprites\",\n      art_other: \"Quaisquer e todos os trabalhos criativos não-código que são disponibilizados aquando da criação de Níveis.\",\n      use_list_1: \"Se usado num filme ou noutro jogo, inclui 'codecombat.com' nos créditos.\",\n      rights_title: \"Direitos Reservados\",\n      rights_desc: \"Todos os direitos estão reservados aos próprios Níveis. Isto inclui\",\n      rights_scripts: \"Scripts\",\n      rights_unit: \"Configurações das unidades\",\n      rights_writings: \"Textos\",\n      rights_media: \"Mídia (sons, música) e quaisquer outros conteúdos criativos feitos especificamente para esse Nível e que não foram disponibilizados para a criação de Níveis.\",\n      nutshell_title: \"Resumidamente\",\n      nutshell_description: \"Qualquer um dos recursos que fornecemos no Editor de Níveis são de uso livre para criares Níveis. Mas reservamos o direito de distribuição restrita dos próprios Níveis (que são criados em codecombat.com) pelo que podemos cobrar por eles no futuro, se for isso que acabar por acontecer.\",\n      canonical: \"A versão Inglesa deste documento é a versão definitiva e soberana. Se houver discrepâncias entre traduções, o documento Inglês prevalece.\",\n      third_party_title: \"Serviços de Terceiros\",\n      third_party_description: \"O CodeCombat usa os seguintes serviços de terceiros (entre outros):\",\n      cookies_message: \"O CodeCombat usa alguns cookies essenciais e não-essenciais.\",\n      cookies_deny: \"Recusar cookies não-essenciais\"\n    },\n    ladder_prizes: {\n      title: \"Prémios do Torneio\",\n      blurb_1: \"Estes prémios serão entregues de acordo com\",\n      blurb_2: \"as regras do torneio\",\n      blurb_3: \"aos melhores jogadores humanos e ogres.\",\n      blurb_4: \"Duas equipas significam o dobro dos prémios!\",\n      blurb_5: \"(Haverá dois vencedores em primeiro lugar, dois em segundo, etc.)\",\n      rank: \"Classificação\",\n      prizes: \"Prémios\",\n      total_value: \"Valor Total\",\n      in_cash: \"em dinheiro\",\n      custom_wizard: \"Um Feiticeiro do CodeCombat Personalizado\",\n      custom_avatar: \"Um Avatar do CodeCombat Personalizado\",\n      heap: \"para seis meses de acesso \\\"Startup\\\"\",\n      credits: \"créditos\",\n      one_month_coupon: \"cupão: escolhe Rails ou HTML\",\n      one_month_discount: \"desconto de 30%: escolhe Rails ou HTML\",\n      license: \"licença\",\n      oreilly: \"ebook à tua escolha\"\n    },\n    calendar: {\n      year: \"Ano\",\n      day: \"Dia\",\n      month: \"Mês\",\n      january: \"janeiro\",\n      february: \"fevereiro\",\n      march: \"março\",\n      april: \"abril\",\n      may: \"maio\",\n      june: \"junho\",\n      july: \"julho\",\n      august: \"agosto\",\n      september: \"setembro\",\n      october: \"outubro\",\n      november: \"novembro\",\n      december: \"dezembro\"\n    },\n    server_error: {\n      email_taken: \"E-mail já escolhido\",\n      username_taken: \"Nome de utilizador já escolhido\"\n    },\n    esper: {\n      line_no: \"Linha $1: \",\n      error: \"Erro: \",\n      x_not_a_function: \"$1 não é uma função\",\n      x_not_defined: \"$1 não está definido\",\n      unexpected_token2: \"Símbolo inesperado\",\n      unexpected_number: \"Número inesperado\",\n      try_herofindnearestenemy: \"Experimenta `$1`\",\n      there_is_no_function: \"Não há nenhuma função `$1`, mas `$2` tem um método `$3`.\",\n      hero_has_no_method: \"`$1` não tem nenhum método `$2`.\",\n      there_is_a_problem: \"Há um problema com o teu código.\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbG9jYWxlL3B0LVBULmNvZmZlZT8yZjU5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCO0VBQUEsbUJBQW1CLHNCQUFuQjtFQUEyQyxvQkFBb0IsdUJBQS9EO0VBQXdGLGFBRXZHO0lBQUEsVUE4RUU7TUFBQSxRQUFRLGlEQUFSO01BUUEsbUJBQW1CLGtCQVJuQjtNQVNBLGVBQWUsdUJBVGY7TUFVQSxVQUFVLGFBVlY7TUFZQSxjQUFjLGtCQVpkO01BYUEsY0FBYyxrQkFiZDtNQWNBLFlBQVksWUFkWjtNQWVBLG9CQUFvQiwyREFmcEI7TUFnQkEsZUFBZSxvSUFoQmY7TUFpQkEsYUFBYSxxTEFqQmI7TUFrQkEsV0FBVyxpR0FsQlg7TUFtQkEsc0JBQXNCLG9GQW5CdEI7TUFvQkEsZUFBZSxvQ0FwQmY7TUFxQkEsV0FBVyx1QkFyQlg7TUFzQkEsc0JBQXNCLHdCQXRCdEI7TUF1QkEsa0JBQWtCLGlKQXZCbEI7TUF3QkEsb0JBQW9CLDJCQXhCcEI7TUF5QkEsZUFBZSxvQkF6QmY7TUEwQkEsMkJBQTJCLG9JQTFCM0I7TUEyQkEsZUFBZSxhQTNCZjtNQTRCQSxVQUFVLE9BNUJWO01BNkJBLGVBQWUsMEhBN0JmO01BOEJBLGlCQUFpQixrRUE5QmpCO01BK0JBLGNBQWMsNEZBL0JkO01BZ0NBLG9CQUFvQixvSEFoQ3BCO01BaUNBLFdBQVcsc0RBakNYO01Ba0NBLGNBQWMsMkNBbENkO01BbUNBLFdBQVcsMk5BbkNYO01Bb0NBLE9BQU8seUNBcENQO01BcUNBLFVBQVUsbUJBckNWO01Bc0NBLGtCQUFrQixtRUF0Q2xCO01BdUNBLFlBQVksWUF2Q1o7TUF3Q0EsYUFBYSxpQkF4Q2I7TUF5Q0EsZ0JBQWdCLDJFQXpDaEI7TUErQ0EsV0FBVyw2Q0EvQ1g7TUFzREEsY0FBYyx3QkF0RGQ7TUF3REEsZUFBZSxzQkF4RGY7TUF5REEsaUJBQWlCLGlCQXpEakI7TUEwREEsY0FBYyxzQ0ExRGQ7TUE0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QVhYO01BWUEsU0FBUyxTQVpUO01BYUEsVUFBVSxVQWJWO01BY0EsVUFBVSxVQWRWO0tBdGtGRjtJQTZsRkEsY0FDRTtNQUFBLGFBQWEscUJBQWI7TUFDQSxnQkFBZ0IsaUNBRGhCO0tBOWxGRjtJQWltRkEsT0FDRTtNQUFBLFNBQVMsWUFBVDtNQU1BLE9BQU8sUUFOUDtNQU9BLGtCQUFrQixxQkFQbEI7TUFRQSxlQUFlLHNCQVJmO01BcUNBLG1CQUFtQixvQkFyQ25CO01Bc0NBLG1CQUFtQixtQkF0Q25CO01BK0RBLDBCQUEwQixrQkEvRDFCO01BZ0VBLHNCQUFzQiwwREFoRXRCO01Bb0VBLG9CQUFvQixrQ0FwRXBCO01BcUVBLG9CQUFvQixrQ0FyRXBCO0tBbG1GRjtHQUZlIiwiZmlsZSI6IjEwNzYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IG5hdGl2ZURlc2NyaXB0aW9uOiBcIlBvcnR1Z3XDqnMgKFBvcnR1Z2FsKVwiLCBlbmdsaXNoRGVzY3JpcHRpb246IFwiUG9ydHVndWVzZSAoUG9ydHVnYWwpXCIsIHRyYW5zbGF0aW9uOlxuXG4gIG5ld19ob21lOlxuIyAgICB0aXRsZTogXCJDb2RlQ29tYmF0IC0gQ29kaW5nIGdhbWVzIHRvIGxlYXJuIFB5dGhvbiBhbmQgSmF2YVNjcmlwdFwiXG4jICAgIG1ldGFfZGVzY3JpcHRpb246IFwiTGVhcm4gdHlwZWQgY29kZSB0aHJvdWdoIGEgcHJvZ3JhbW1pbmcgZ2FtZS4gTGVhcm4gUHl0aG9uLCBKYXZhU2NyaXB0LCBhbmQgSFRNTCBhcyB5b3Ugc29sdmUgcHV6emxlcyBhbmQgbGVhcm4gdG8gbWFrZSB5b3VyIG93biBjb2RpbmcgZ2FtZXMgYW5kIHdlYnNpdGVzLlwiXG4jICAgIGJ1aWx0X2Zvcl90ZWFjaGVyc190aXRsZTogXCJBIENvZGluZyBHYW1lIEJ1aWx0IHdpdGggVGVhY2hlcnMgaW4gTWluZFwiXG4jICAgIGJ1aWx0X2Zvcl90ZWFjaGVyc19ibHVyYjogXCJUZWFjaGluZyBraWRzIHRvIGNvZGUgY2FuIG9mdGVuIGZlZWwgb3ZlcndoZWxtaW5nLiBDb2RlQ29tYmF0IGhlbHBzIGFsbCBlZHVjYXRvcnMgdGVhY2ggc3R1ZGVudHMgaG93IHRvIGNvZGUgaW4gZWl0aGVyIEphdmFTY3JpcHQgb3IgUHl0aG9uLCB0d28gb2YgdGhlIG1vc3QgcG9wdWxhciBwcm9ncmFtbWluZyBsYW5ndWFnZXMuIFdpdGggYSBjb21wcmVoZW5zaXZlIGN1cnJpY3VsdW0gdGhhdCBpbmNsdWRlcyBzaXggY29tcHV0ZXIgc2NpZW5jZSB1bml0cyBhbmQgcmVpbmZvcmNlcyBsZWFybmluZyB0aHJvdWdoIHByb2plY3QtYmFzZWQgZ2FtZSBkZXZlbG9wbWVudCBhbmQgd2ViIGRldmVsb3BtZW50IHVuaXRzLCBraWRzIHdpbGwgcHJvZ3Jlc3Mgb24gYSBqb3VybmV5IGZyb20gYmFzaWMgc3ludGF4IHRvIHJlY3Vyc2lvbiFcIlxuIyAgICBidWlsdF9mb3JfdGVhY2hlcnNfc3VidGl0bGUxOiBcIkNvbXB1dGVyIFNjaWVuY2VcIlxuIyAgICBidWlsdF9mb3JfdGVhY2hlcnNfc3ViYmx1cmIxOiBcIlN0YXJ0aW5nIHdpdGggb3VyIGZyZWUgSW50cm9kdWN0aW9uIHRvIENvbXB1dGVyIFNjaWVuY2UgY291cnNlLCBzdHVkZW50cyBtYXN0ZXIgY29yZSBjb2RpbmcgY29uY2VwdHMgc3VjaCBhcyB3aGlsZS9mb3IgbG9vcHMsIGZ1bmN0aW9ucywgYW5kIGFsZ29yaXRobXMuXCJcbiMgICAgYnVpbHRfZm9yX3RlYWNoZXJzX3N1YnRpdGxlMjogXCJHYW1lIERldmVsb3BtZW50XCJcbiMgICAgYnVpbHRfZm9yX3RlYWNoZXJzX3N1YmJsdXJiMjogXCJMZWFybmVycyBjb25zdHJ1Y3QgbWF6ZXMgYW5kIHVzZSBiYXNpYyBpbnB1dCBoYW5kbGluZyB0byBjb2RlIHRoZWlyIG93biBnYW1lcyB0aGF0IGNhbiBiZSBzaGFyZWQgd2l0aCBmcmllbmRzIGFuZCBmYW1pbHkuXCJcbiMgICAgYnVpbHRfZm9yX3RlYWNoZXJzX3N1YnRpdGxlMzogXCJXZWIgRGV2ZWxvcG1lbnRcIlxuIyAgICBidWlsdF9mb3JfdGVhY2hlcnNfc3ViYmx1cmIzOiBcIlVzaW5nIEhUTUwsIENTUywgYW5kIGpRdWVyeSwgbGVhcm5lcnMgZmxleCB0aGVpciBjcmVhdGl2ZSBtdXNjbGVzIHRvIHByb2dyYW0gdGhlaXIgb3duIHdlYnBhZ2VzIHdpdGggYSBjdXN0b20gVVJMIHRvIHNoYXJlIHdpdGggdGhlaXIgY2xhc3NtYXRlcy5cIlxuIyAgICBjZW50dXJ5X3NraWxsc190aXRsZTogXCIyMXN0IENlbnR1cnkgU2tpbGxzXCJcbiMgICAgY2VudHVyeV9za2lsbHNfYmx1cmIxOiBcIlN0dWRlbnRzIERvbid0IEp1c3QgTGV2ZWwgVXAgVGhlaXIgSGVybywgVGhleSBMZXZlbCBVcCBUaGVtc2VsdmVzXCJcbiMgICAgY2VudHVyeV9za2lsbHNfcXVvdGUxOiBcIllvdSBtZXNzIHVw4oCmc28gdGhlbiB5b3UgdGhpbmsgYWJvdXQgYWxsIG9mIHRoZSBwb3NzaWJsZSB3YXlzIHRvIGZpeCBpdCwgYW5kIHRoZW4gdHJ5IGFnYWluLiBJIHdvdWxkbid0IGJlIGFibGUgdG8gZ2V0IGhlcmUgd2l0aG91dCB0cnlpbmcgaGFyZC5cIlxuIyAgICBjZW50dXJ5X3NraWxsc19zdWJ0aXRsZTE6IFwiQ3JpdGljYWwgVGhpbmtpbmdcIlxuIyAgICBjZW50dXJ5X3NraWxsc19zdWJibHVyYjE6IFwiV2l0aCBjb2RpbmcgcHV6emxlcyB0aGF0IGFyZSBuYXR1cmFsbHkgc2NhZmZvbGRlZCBpbnRvIGluY3JlYXNpbmdseSBjaGFsbGVuZ2luZyBsZXZlbHMsIENvZGVDb21iYXQncyBwcm9ncmFtbWluZyBnYW1lIGVuc3VyZXMga2lkcyBhcmUgYWx3YXlzIHByYWN0aWNpbmcgY3JpdGljYWwgdGhpbmtpbmcuXCJcbiMgICAgY2VudHVyeV9za2lsbHNfcXVvdGUyOiBcIkV2ZXJ5b25lIGVsc2Ugd2FzIG1ha2luZyBtYXplcywgc28gSSB0aG91Z2h0LCDigJhjYXB0dXJlIHRoZSBmbGFn4oCZIGFuZCB0aGF04oCZcyB3aGF0IEkgZGlkLlwiXG4jICAgIGNlbnR1cnlfc2tpbGxzX3N1YnRpdGxlMjogXCJDcmVhdGl2aXR5XCJcbiMgICAgY2VudHVyeV9za2lsbHNfc3ViYmx1cmIyOiBcIkNvZGVDb21iYXQgZW5jb3VyYWdlcyBzdHVkZW50cyB0byBzaG93Y2FzZSB0aGVpciBjcmVhdGl2aXR5IGJ5IGJ1aWxkaW5nIGFuZCBzaGFyaW5nIHRoZWlyIG93biBnYW1lcyBhbmQgd2VicGFnZXMuXCJcbiMgICAgY2VudHVyeV9za2lsbHNfcXVvdGUzOiBcIklmIEkgZ290IHN0dWNrIG9uIGEgbGV2ZWwuIEkgd291bGQgd29yayB3aXRoIHBlb3BsZSBhcm91bmQgbWUgdW50aWwgd2Ugd2VyZSBhbGwgYWJsZSB0byBmaWd1cmUgaXQgb3V0LlwiXG4jICAgIGNlbnR1cnlfc2tpbGxzX3N1YnRpdGxlMzogXCJDb2xsYWJvcmF0aW9uXCJcbiMgICAgY2VudHVyeV9za2lsbHNfc3ViYmx1cmIzOiBcIlRocm91Z2hvdXQgdGhlIGdhbWUsIHRoZXJlIGFyZSBvcHBvcnR1bml0aWVzIGZvciBzdHVkZW50cyB0byBjb2xsYWJvcmF0ZSB3aGVuIHRoZXkgZ2V0IHN0dWNrIGFuZCB0byB3b3JrIHRvZ2V0aGVyIHVzaW5nIG91ciBwYWlyIHByb2dyYW1taW5nIGd1aWRlLlwiXG4jICAgIGNlbnR1cnlfc2tpbGxzX3F1b3RlNDogXCJJ4oCZdmUgYWx3YXlzIGhhZCBhc3BpcmF0aW9ucyBvZiBkZXNpZ25pbmcgdmlkZW8gZ2FtZXMgYW5kIGxlYXJuaW5nIGhvdyB0byBjb2RlIC4uLiB0aGlzIGlzIGdpdmluZyBtZSBhIGdyZWF0IHN0YXJ0aW5nIHBvaW50LlwiXG4jICAgIGNlbnR1cnlfc2tpbGxzX3N1YnRpdGxlNDogXCJDb21tdW5pY2F0aW9uXCJcbiMgICAgY2VudHVyeV9za2lsbHNfc3ViYmx1cmI0OiBcIkNvZGluZyByZXF1aXJlcyBraWRzIHRvIHByYWN0aWNlIG5ldyBmb3JtcyBvZiBjb21tdW5pY2F0aW9uLCBpbmNsdWRpbmcgY29tbXVuaWNhdGluZyB3aXRoIHRoZSBjb21wdXRlciBpdHNlbGYgYW5kIGNvbnZleWluZyB0aGVpciBpZGVhcyB1c2luZyB0aGUgbW9zdCBlZmZpY2llbnQgY29kZS5cIlxuIyAgICBjbGFzc3Jvb21faW5fYm94X3RpdGxlOiBcIldlIFN0cml2ZSBUbzpcIlxuIyAgICBjbGFzc3Jvb21faW5fYm94X2JsdXJiMTogXCJFbmdhZ2UgZXZlcnkgc3R1ZGVudCBzbyB0aGF0IHRoZXkgYmVsaWV2ZSBjb2RpbmcgaXMgZm9yIHRoZW0uXCJcbiMgICAgY2xhc3Nyb29tX2luX2JveF9ibHVyYjI6IFwiRW1wb3dlciBhbnkgZWR1Y2F0b3IgdG8gZmVlbCBjb25maWRlbnQgd2hlbiB0ZWFjaGluZyBjb2RpbmcuXCJcbiMgICAgY2xhc3Nyb29tX2luX2JveF9ibHVyYjM6IFwiSW5zcGlyZSBhbGwgc2Nob29sIGxlYWRlcnMgdG8gY3JlYXRlIGEgd29ybGQtY2xhc3MgY29tcHV0ZXIgc2NpZW5jZSBwcm9ncmFtLlwiXG4jICAgIGNyZWF0aXZpdHlfcmlnb3JfdGl0bGU6IFwiV2hlcmUgQ3JlYXRpdml0eSBNZWV0cyBSaWdvclwiXG4jICAgIGNyZWF0aXZpdHlfcmlnb3Jfc3VidGl0bGUxOiBcIk1ha2UgY29kaW5nIGZ1biBhbmQgdGVhY2ggcmVhbC13b3JsZCBza2lsbHNcIlxuIyAgICBjcmVhdGl2aXR5X3JpZ29yX2JsdXJiMTogXCJTdHVkZW50cyB0eXBlIHJlYWwgUHl0aG9uIGFuZCBKYXZhU2NyaXB0IHdoaWxlIHBsYXlpbmcgZ2FtZXMgdGhhdCBlbmNvdXJhZ2UgdHJpYWwtYW5kLWVycm9yLCBjcml0aWNhbCB0aGlua2luZywgYW5kIGNyZWF0aXZpdHkuIFN0dWRlbnRzIHRoZW4gYXBwbHkgdGhlIGNvZGluZyBza2lsbHMgdGhleeKAmXZlIGxlYXJuZWQgYnkgZGV2ZWxvcGluZyB0aGVpciBvd24gZ2FtZXMgYW5kIHdlYnNpdGVzIGluIHByb2plY3QtYmFzZWQgY291cnNlcy5cIlxuIyAgICBjcmVhdGl2aXR5X3JpZ29yX3N1YnRpdGxlMjogXCJSZWFjaCBzdHVkZW50cyBhdCB0aGVpciBsZXZlbFwiXG4jICAgIGNyZWF0aXZpdHlfcmlnb3JfYmx1cmIyOiBcIkV2ZXJ5IENvZGVDb21iYXQgbGV2ZWwgaXMgc2NhZmZvbGRlZCBiYXNlZCBvbiBtaWxsaW9ucyBvZiBkYXRhIHBvaW50cyBhbmQgb3B0aW1pemVkIHRvIGFkYXB0IHRvIGVhY2ggbGVhcm5lci4gUHJhY3RpY2UgbGV2ZWxzIGFuZCBoaW50cyBoZWxwIHN0dWRlbnRzIHdoZW4gdGhleSBnZXQgc3R1Y2ssIGFuZCBjaGFsbGVuZ2UgbGV2ZWxzIGFzc2VzcyBzdHVkZW50cycgbGVhcm5pbmcgdGhyb3VnaG91dCB0aGUgZ2FtZS5cIlxuIyAgICBjcmVhdGl2aXR5X3JpZ29yX3N1YnRpdGxlMzogXCJCdWlsdCBmb3IgYWxsIHRlYWNoZXJzLCByZWdhcmRsZXNzIG9mIGV4cGVyaWVuY2VcIlxuIyAgICBjcmVhdGl2aXR5X3JpZ29yX2JsdXJiMzogXCJDb2RlQ29tYmF04oCZcyBzZWxmLXBhY2VkLCBzdGFuZGFyZHMtYWxpZ25lZCBjdXJyaWN1bHVtIG1ha2VzIHRlYWNoaW5nIGNvbXB1dGVyIHNjaWVuY2UgcG9zc2libGUgZm9yIGV2ZXJ5b25lLiBDb2RlQ29tYmF0IGVxdWlwcyB0ZWFjaGVycyB3aXRoIHRoZSB0cmFpbmluZywgaW5zdHJ1Y3Rpb25hbCByZXNvdXJjZXMsIGFuZCBkZWRpY2F0ZWQgc3VwcG9ydCB0byBmZWVsIGNvbmZpZGVudCBhbmQgc3VjY2Vzc2Z1bCBpbiB0aGUgY2xhc3Nyb29tLlwiXG4jICAgIGZlYXR1cmVkX3BhcnRuZXJzX3RpdGxlMTogXCJGZWF0dXJlZCBJblwiXG4jICAgIGZlYXR1cmVkX3BhcnRuZXJzX3RpdGxlMjogXCJBd2FyZHMgJiBQYXJ0bmVyc1wiXG4jICAgIGZlYXR1cmVkX3BhcnRuZXJzX2JsdXJiMTogXCJDb2xsZWdlQm9hcmQgRW5kb3JzZWQgUHJvdmlkZXJcIlxuIyAgICBmZWF0dXJlZF9wYXJ0bmVyc19ibHVyYjI6IFwiQmVzdCBDcmVhdGl2aXR5IFRvb2wgZm9yIFN0dWRlbnRzXCJcbiMgICAgZmVhdHVyZWRfcGFydG5lcnNfYmx1cmIzOiBcIlRvcCBQaWNrIGZvciBMZWFybmluZ1wiXG4jICAgIGZlYXR1cmVkX3BhcnRuZXJzX2JsdXJiNDogXCJDb2RlLm9yZyBPZmZpY2lhbCBQYXJ0bmVyXCJcbiMgICAgZmVhdHVyZWRfcGFydG5lcnNfYmx1cmI1OiBcIkNTZm9yQWxsIE9mZmljaWFsIE1lbWJlclwiXG4jICAgIGZlYXR1cmVkX3BhcnRuZXJzX2JsdXJiNjogXCJIb3VyIG9mIENvZGUgQWN0aXZpdHkgUGFydG5lclwiXG4jICAgIGZvcl9sZWFkZXJzX3RpdGxlOiBcIkZvciBTY2hvb2wgTGVhZGVyc1wiXG4jICAgIGZvcl9sZWFkZXJzX2JsdXJiOiBcIkEgQ29tcHJlaGVuc2l2ZSwgU3RhbmRhcmRzLUFsaWduZWQgQ29tcHV0ZXIgU2NpZW5jZSBQcm9ncmFtXCJcbiMgICAgZm9yX2xlYWRlcnNfc3VidGl0bGUxOiBcIkVhc3kgSW1wbGVtZW50YXRpb25cIlxuIyAgICBmb3JfbGVhZGVyc19zdWJibHVyYjE6IFwiQSB3ZWItYmFzZWQgcHJvZ3JhbSB0aGF0IHJlcXVpcmVzIG5vIElUIHN1cHBvcnQuIEdldCBzdGFydGVkIGluIHVuZGVyIDUgbWludXRlcyB1c2luZyBHb29nbGUgb3IgQ2xldmVyIFNpbmdsZSBTaWduLU9uIChTU08pLlwiXG4jICAgIGZvcl9sZWFkZXJzX3N1YnRpdGxlMjogXCJGdWxsIENvZGluZyBDdXJyaWN1bHVtXCJcbiMgICAgZm9yX2xlYWRlcnNfc3ViYmx1cmIyOiBcIkEgc3RhbmRhcmRzLWFsaWduZWQgY3VycmljdWx1bSB3aXRoIGluc3RydWN0aW9uYWwgcmVzb3VyY2VzIGFuZCBwcm9mZXNzaW9uYWwgZGV2ZWxvcG1lbnQgdG8gZW5hYmxlIGFueSB0ZWFjaGVyIHRvIHRlYWNoIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiMgICAgZm9yX2xlYWRlcnNfc3VidGl0bGUzOiBcIkZsZXhpYmxlIFVzZSBDYXNlc1wiXG4jICAgIGZvcl9sZWFkZXJzX3N1YmJsdXJiMzogXCJXaGV0aGVyIHlvdSB3YW50IHRvIGJ1aWxkIGEgTWlkZGxlIFNjaG9vbCBjb2RpbmcgZWxlY3RpdmUsIGEgQ1RFIHBhdGh3YXksIG9yIGFuIEFQIENvbXB1dGVyIFNjaWVuY2UgUHJpbmNpcGxlcyBjbGFzcywgQ29kZUNvbWJhdCBpcyB0YWlsb3JlZCB0byBzdWl0IHlvdXIgbmVlZHMuXCJcbiMgICAgZm9yX2xlYWRlcnNfc3VidGl0bGU0OiBcIlJlYWwtV29ybGQgU2tpbGxzXCJcbiMgICAgZm9yX2xlYWRlcnNfc3ViYmx1cmI0OiBcIlN0dWRlbnRzIGJ1aWxkIGdyaXQgYW5kIGRldmVsb3AgYSBncm93dGggbWluZHNldCB0aHJvdWdoIGNvZGluZyBjaGFsbGVuZ2VzIHRoYXQgcHJlcGFyZSB0aGVtIGZvciB0aGUgNTAwSysgb3BlbiBjb21wdXRpbmcgam9icy5cIlxuIyAgICBmb3JfdGVhY2hlcnNfdGl0bGU6IFwiRm9yIFRlYWNoZXJzXCJcbiMgICAgZm9yX3RlYWNoZXJzX2JsdXJiOiBcIlRvb2xzIHRvIFVubG9jayBTdHVkZW50IFBvdGVudGlhbFwiXG4jICAgIGZvcl90ZWFjaGVyc19zdWJ0aXRsZTE6IFwiUHJvamVjdC1CYXNlZCBMZWFybmluZ1wiXG4jICAgIGZvcl90ZWFjaGVyc19zdWJibHVyYjE6IFwiUHJvbW90ZSBjcmVhdGl2aXR5LCBwcm9ibGVtLXNvbHZpbmcsIGFuZCBjb25maWRlbmNlIGluIHByb2plY3QtYmFzZWQgY291cnNlcyB3aGVyZSBzdHVkZW50cyBkZXZlbG9wIHRoZWlyIG93biBnYW1lcyBhbmQgd2VicGFnZXMuXCJcbiMgICAgZm9yX3RlYWNoZXJzX3N1YnRpdGxlMjogXCJUZWFjaGVyIERhc2hib2FyZFwiXG4jICAgIGZvcl90ZWFjaGVyc19zdWJibHVyYjI6IFwiVmlldyBkYXRhIG9uIHN0dWRlbnQgcHJvZ3Jlc3MsIGRpc2NvdmVyIGN1cnJpY3VsdW0gcmVzb3VyY2VzLCBhbmQgYWNjZXNzIHJlYWwtdGltZSBzdXBwb3J0IHRvIGVtcG93ZXIgc3R1ZGVudCBsZWFybmluZy5cIlxuIyAgICBmb3JfdGVhY2hlcnNfc3VidGl0bGUzOiBcIkJ1aWx0LWluIEFzc2Vzc21lbnRzXCJcbiMgICAgZm9yX3RlYWNoZXJzX3N1YmJsdXJiMzogXCJQZXJzb25hbGl6ZSBpbnN0cnVjdGlvbiBhbmQgZW5zdXJlIHN0dWRlbnRzIHVuZGVyc3RhbmQgY29yZSBjb25jZXB0cyB3aXRoIGZvcm1hdGl2ZSBhbmQgc3VtbWF0aXZlIGFzc2Vzc21lbnRzLlwiXG4jICAgIGZvcl90ZWFjaGVyc19zdWJ0aXRsZTQ6IFwiQXV0b21hdGljIERpZmZlcmVudGlhdGlvblwiXG4jICAgIGZvcl90ZWFjaGVyc19zdWJibHVyYjQ6IFwiRW5nYWdlIGFsbCBsZWFybmVycyBpbiBhIGRpdmVyc2UgY2xhc3Nyb29tIHdpdGggcHJhY3RpY2UgbGV2ZWxzIHRoYXQgYWRhcHQgdG8gZWFjaCBzdHVkZW50J3MgbGVhcm5pbmcgbmVlZHMuXCJcbiMgICAgZ2FtZV9iYXNlZF9ibHVyYjogXCJDb2RlQ29tYmF0IGlzIGEgZ2FtZS1iYXNlZCBjb21wdXRlciBzY2llbmNlIHByb2dyYW0gd2hlcmUgc3R1ZGVudHMgdHlwZSByZWFsIGNvZGUgYW5kIHNlZSB0aGVpciBjaGFyYWN0ZXJzIHJlYWN0IGluIHJlYWwgdGltZS5cIlxuIyAgICBnZXRfc3RhcnRlZDogXCJHZXQgc3RhcnRlZFwiXG4jICAgIGdsb2JhbF90aXRsZTogXCJKb2luIE91ciBHbG9iYWwgQ29tbXVuaXR5IG9mIExlYXJuZXJzIGFuZCBFZHVjYXRvcnNcIlxuIyAgICBnbG9iYWxfc3VidGl0bGUxOiBcIkxlYXJuZXJzXCJcbiMgICAgZ2xvYmFsX3N1YnRpdGxlMjogXCJMaW5lcyBvZiBDb2RlXCJcbiMgICAgZ2xvYmFsX3N1YnRpdGxlMzogXCJUZWFjaGVyc1wiXG4jICAgIGdsb2JhbF9zdWJ0aXRsZTQ6IFwiQ291bnRyaWVzXCJcbiMgICAgZ29fdG9fbXlfY2xhc3NlczogXCJHbyB0byBteSBjbGFzc2VzXCJcbiMgICAgZ29fdG9fbXlfY291cnNlczogXCJHbyB0byBteSBjb3Vyc2VzXCJcbiMgICAgcXVvdGVzX3F1b3RlMTogXCJOYW1lIGFueSBwcm9ncmFtIG9ubGluZSwgSeKAmXZlIHRyaWVkIGl0LiBOb25lIG9mIHRoZW0gbWF0Y2ggdXAgdG8gQ29kZUNvbWJhdC4gQW55IHRlYWNoZXIgd2hvIHdhbnRzIHRoZWlyIHN0dWRlbnRzIHRvIGxlYXJuIGhvdyB0byBjb2RlLi4uIHN0YXJ0IGhlcmUhXCJcbiMgICAgcXVvdGVzX3F1b3RlMjogXCIgSSB3YXMgc3VycHJpc2VkIGFib3V0IGhvdyBlYXN5IGFuZCBpbnR1aXRpdmUgQ29kZUNvbWJhdCBtYWtlcyBsZWFybmluZyBjb21wdXRlciBzY2llbmNlLiBUaGUgc2NvcmVzIG9uIHRoZSBBUCBleGFtIHdlcmUgbXVjaCBoaWdoZXIgdGhhbiBJIGV4cGVjdGVkIGFuZCBJIGJlbGlldmUgQ29kZUNvbWJhdCBpcyB0aGUgcmVhc29uIHdoeSB0aGlzIHdhcyB0aGUgY2FzZS5cIlxuIyAgICBxdW90ZXNfcXVvdGUzOiBcIkNvZGVDb21iYXQgaGFzIGJlZW4gdGhlIG1vc3QgYmVuZWZpY2lhbCBmb3IgdGVhY2hpbmcgbXkgc3R1ZGVudHMgcmVhbC1saWZlIGNvZGluZyBjYXBhYmlsaXRpZXMuIE15IGh1c2JhbmQgaXMgYSBzb2Z0d2FyZSBlbmdpbmVlciBhbmQgaGUgaGFzIHRlc3RlZCBvdXQgYWxsIG9mIG15IHByb2dyYW1zLiBIZSBwdXQgdGhpcyBhcyBoaXMgdG9wIGNob2ljZS5cIlxuIyAgICBxdW90ZXNfcXVvdGU0OiBcIlRoZSBmZWVkYmFjayDigKYgaGFzIGJlZW4gc28gcG9zaXRpdmUgdGhhdCB3ZSBhcmUgc3RydWN0dXJpbmcgYSBjb21wdXRlciBzY2llbmNlIGNsYXNzIGFyb3VuZCBDb2RlQ29tYmF0LiBUaGUgcHJvZ3JhbSByZWFsbHkgZW5nYWdlcyB0aGUgc3R1ZGVudHMgd2l0aCBhIGdhbWluZyBzdHlsZSBwbGF0Zm9ybSB0aGF0IGlzIGVudGVydGFpbmluZyBhbmQgaW5zdHJ1Y3Rpb25hbCBhdCB0aGUgc2FtZSB0aW1lLiBLZWVwIHVwIHRoZSBnb29kIHdvcmssIENvZGVDb21iYXQhXCJcbiMgICAgc2VlX2V4YW1wbGU6IFwiU2VlIGV4YW1wbGVcIlxuICAgIHNsb2dhbjogXCJBIGZvcm1hIG1haXMgY2F0aXZhbnRlIGRlIGFwcmVuZGVyIGPDs2RpZ28gcmVhbC5cIiAjIHtjaGFuZ2V9XG4jICAgIHRlYWNoX2NzMV9mcmVlOiBcIlRlYWNoIENTMSBGcmVlXCJcbiMgICAgdGVhY2hlcnNfbG92ZV9jb2RlY29tYmF0X3RpdGxlOiBcIlRlYWNoZXJzIExvdmUgQ29kZUNvbWJhdFwiXG4jICAgIHRlYWNoZXJzX2xvdmVfY29kZWNvbWJhdF9ibHVyYjE6IFwiUmVwb3J0IHRoYXQgdGhlaXIgc3R1ZGVudHMgZW5qb3kgdXNpbmcgQ29kZUNvbWJhdCB0byBsZWFybiBob3cgdG8gY29kZVwiXG4jICAgIHRlYWNoZXJzX2xvdmVfY29kZWNvbWJhdF9ibHVyYjI6IFwiV291bGQgcmVjb21tZW5kIENvZGVDb21iYXQgdG8gb3RoZXIgY29tcHV0ZXIgc2NpZW5jZSB0ZWFjaGVyc1wiXG4jICAgIHRlYWNoZXJzX2xvdmVfY29kZWNvbWJhdF9ibHVyYjM6IFwiU2F5IHRoYXQgQ29kZUNvbWJhdCBoZWxwcyB0aGVtIHN1cHBvcnQgc3R1ZGVudHPigJkgcHJvYmxlbSBzb2x2aW5nIGFiaWxpdGllc1wiXG4jICAgIHRlYWNoZXJzX2xvdmVfY29kZWNvbWJhdF9zdWJibHVyYjogXCJJbiBwYXJ0bmVyc2hpcCB3aXRoIE1jUkVMIEludGVybmF0aW9uYWwsIGEgbGVhZGVyIGluIHJlc2VhcmNoLWJhc2VkIGd1aWRhbmNlIGFuZCBldmFsdWF0aW9ucyBvZiBlZHVjYXRpb25hbCB0ZWNobm9sb2d5LlwiXG4jICAgIHRyeV90aGVfZ2FtZTogXCJUcnkgdGhlIGdhbWVcIlxuICAgIGNsYXNzcm9vbV9lZGl0aW9uOiBcIkVkacOnw6NvIGRlIFR1cm1hOlwiXG4gICAgbGVhcm5fdG9fY29kZTogXCJBcHJlbmRlciBhIHByb2dyYW1hcjpcIlxuICAgIHBsYXlfbm93OiBcIkpvZ2FyIEFnb3JhXCJcbiMgICAgaW1fYW5fZWR1Y2F0b3I6IFwiSSdtIGFuIEVkdWNhdG9yXCJcbiAgICBpbV9hX3RlYWNoZXI6IFwiU291IHVtIFByb2Zlc3NvclwiXG4gICAgaW1fYV9zdHVkZW50OiBcIlNvdSB1bSBFc3R1ZGFudGVcIlxuICAgIGxlYXJuX21vcmU6IFwiU2FiZXIgbWFpc1wiXG4gICAgY2xhc3Nyb29tX2luX2FfYm94OiBcIlVtYSB0dXJtYSBudW0gcGFjb3RlIHBhcmEgZW5zaW5hciBjacOqbmNpYXMgZGEgY29tcHV0YcOnw6NvLlwiXG4gICAgY29kZWNvbWJhdF9pczogXCJPIENvZGVDb21iYXQgw6kgdW1hIHBsYXRhZm9ybWEgPHN0cm9uZz5wYXJhIGVzdHVkYW50ZXM8L3N0cm9uZz4gcGFyYSBhcHJlbmRlciBjacOqbmNpYXMgZGEgY29tcHV0YcOnw6NvIGVucXVhbnRvIHNlIGpvZ2EgdW0gam9nbyByZWFsLlwiXG4gICAgb3VyX2NvdXJzZXM6IFwiT3Mgbm9zc29zIGN1cnNvcyBmb3JhbSBlc3BlY2lmaWNhbWVudGUgdGVzdGFkb3MgcGFyYSA8c3Ryb25nPnRlcmVtIHN1Y2Vzc28gbmEgc2FsYSBkZSBhdWxhPC9zdHJvbmc+LCBhdMOpIHBhcmEgcHJvZmVzc29yZXMgY29tIHBvdWNhIG91IG5lbmh1bWEgZXhwZXJpw6puY2lhIGFudGVyaW9yIGRlIHByb2dyYW1hw6fDo28uXCJcbiAgICB3YXRjaF9ob3c6IFwiVsOqIGNvbW8gbyBDb2RlQ29tYmF0IGVzdMOhIGEgdHJhbnNmb3JtYXIgbyBtb2RvIGNvbW8gYXMgcGVzc29hcyBhcHJlbmRlbSBjacOqbmNpYXMgZGEgY29tcHV0YcOnw6NvLlwiXG4gICAgdG9wX3NjcmVlbnNob3RzX2hpbnQ6IFwiT3MgZXN0dWRhbnRlcyBlc2NyZXZlbSBjw7NkaWdvIGUgdmVlbSBhcyBhbHRlcmHDp8O1ZXMgZGVsZXMgYXR1YWxpemFyZW0gZW0gdGVtcG8gcmVhbFwiXG4gICAgZGVzaWduZWRfd2l0aDogXCJEZXNlbmhhZG8gYSBwZW5zYXIgbm9zIHByb2Zlc3NvcmVzXCJcbiAgICByZWFsX2NvZGU6IFwiQ8OzZGlnbyByZWFsIGUgZXNjcml0b1wiXG4gICAgZnJvbV90aGVfZmlyc3RfbGV2ZWw6IFwiZGVzZGUgbyBwcmltZWlybyBuw612ZWxcIlxuICAgIGdldHRpbmdfc3R1ZGVudHM6IFwiQXByZXNlbnRhciBjw7NkaWdvIGVzY3JpdG8gYW9zIGVzdHVkYW50ZXMgbyBtYWlzIHJhcGlkYW1ldGUgcG9zc8OtdmVsIMOpIGNyw610aWNvIHBhcmEgYXByZW5kZXJlbSBhIHNpbnRheGUgZSBhIGVzdHJ1dHVyYSBhZGVxdWFkYXMgZGEgcHJvZ3JhbWHDp8Ojby5cIlxuICAgIGVkdWNhdG9yX3Jlc291cmNlczogXCJSZWN1cnNvcyBwYXJhIHByb2Zlc3NvcmVzXCJcbiAgICBjb3Vyc2VfZ3VpZGVzOiBcImUgZ3VpYXMgZG9zIGN1cnNvc1wiXG4gICAgdGVhY2hpbmdfY29tcHV0ZXJfc2NpZW5jZTogXCJFbnNpbmFyIGNpw6puY2lhcyBkYSBjb21wdXRhw6fDo28gbsOjbyByZXF1ZXIgdW0gY3Vyc28gY2FybywgcG9ycXVlIG7Ds3MgZm9ybmVjZW1vcyBmZXJyYW1lbnRhcyBwYXJhIGFqdWRhciB0b2RvIG8gdGlwbyBkZSBwcm9mZXNzb3Jlcy5cIlxuICAgIGFjY2Vzc2libGVfdG86IFwiQWNlc3PDrXZlbCBhXCJcbiAgICBldmVyeW9uZTogXCJ0b2Rvc1wiXG4gICAgZGVtb2NyYXRpemluZzogXCJEZW1vY3JhdGl6YXIgbyBwcm9jZXNzbyBkZSBhcHJlbmRlciBhIHByb2dyYW1hciBlc3TDoSBuYSBiYXNlIGRhIG5vc3NhIGZpbG9zb2ZpYS4gVG9kb3MgZGV2ZW0gcG9kZXIgYXByZW5kZXIgYSBwcm9ncmFtYXIuXCJcbiAgICBmb3Jnb3RfbGVhcm5pbmc6IFwiQWNobyBxdWUgZWxlcyBzZSBlc3F1ZWNlcmFtIHF1ZSBlc3RhdmFtIGEgYXByZW5kZXIgYWxndW1hIGNvaXNhLlwiXG4gICAgd2FudGVkX3RvX2RvOiBcIlByb2dyYW1hciDDqSBhbGdvIHF1ZSBzZW1wcmUgcXVpcyBmYXplciBlIG51bmNhIHBlbnNlaSBxdWUgcG9kZXJpYSBhcHJlbmRlciBpc3NvIG5hIGVzY29sYS5cIlxuICAgIGJ1aWxkc19jb25jZXB0c191cDogXCJHb3N0byBkYSBmb3JtYSBjb21vIG8gQ29kZUNvbWJhdCBkZXNlbnZvbHZlIG9zIGNvbmNlaXRvcy4gw4kgbXVpdG8gZsOhY2lsIGNvbXByZWVuZMOqLWxvcyBlIMOpIGRpdmVydGlkbyBkZXNjb2JyaS1sb3MuXCJcbiAgICB3aHlfZ2FtZXM6IFwiUG9ycXVlIMOpIHF1ZSBhcHJlbmRlciBhdHJhdsOpcyBkZSBqb2dvcyDDqSBpbXBvcnRhbnRlP1wiXG4gICAgZ2FtZXNfcmV3YXJkOiBcIk9zIGpvZ29zIHJlY29tcGVuc2FtIG8gZXNmb3LDp28gcHJvZHV0aXZvLlwiXG4gICAgZW5jb3VyYWdlOiBcIkpvZ2FyIMOpIGFsZ28gcXVlIGVuY29yYWphIGEgaW50ZXJhw6fDo28sIGEgZGVzY29iZXJ0YSBlIGEgdGVudGF0aXZhIGVycm8uIFVtIGJvbSBqb2dvIGRlc2FmaWEgbyBqb2dhZG9yIGEgZG9taW5hciBoYWJpbGlkYWRlcyBjb20gbyB0ZW1wbywgcXVlIMOpIG8gbWVzbW8gcHJvY2Vzc28gZnVuZGFtZW50YWwgcXVlIG9zIGVzdHVkYW50ZXMgYXRyYXZlc3NhbSBxdWFuZG8gYXByZW5kZW0uXCJcbiAgICBleGNlbDogXCJPcyBqb2dvcyBzw6NvIGV4Y2VsZW50ZXMgYSByZWNvbXBlbnNhciBvXCJcbiAgICBzdHJ1Z2dsZTogXCJlc2ZvcsOnbyBwcm9kdXRpdm9cIlxuICAgIGtpbmRfb2Zfc3RydWdnbGU6IFwibyB0aXBvIGRlIGVzZm9yw6dvIHF1ZSByZXN1bHRhIG51bWEgYXByZW5kaXphZ2VtIHF1ZSDDqSBjYXRpdmFudGUgZVwiXG4gICAgbW90aXZhdGluZzogXCJtb3RpdmFkb3JhXCJcbiAgICBub3RfdGVkaW91czogXCJuw6NvIGVudGVkaWFudGUuXCJcbiAgICBnYW1pbmdfaXNfZ29vZDogXCJFc3R1ZG9zIHN1Z2VyZW0gcXVlIGpvZ2FyIMOpIGJvbSBwYXJhIG8gY8OpcmVicm8gZGFzIGNyaWFuw6dhcy4gKMOpIHZlcmRhZGUhKVwiXG4jICAgIGdhbWVfYmFzZWQ6IFwiV2hlbiBnYW1lLWJhc2VkIGxlYXJuaW5nIHN5c3RlbXMgYXJlXCJcbiMgICAgY29tcGFyZWQ6IFwiY29tcGFyZWRcIlxuIyAgICBjb252ZW50aW9uYWw6IFwiYWdhaW5zdCBjb252ZW50aW9uYWwgYXNzZXNzbWVudCBtZXRob2RzLCB0aGUgZGlmZmVyZW5jZSBpcyBjbGVhcjogZ2FtZXMgYXJlIGJldHRlciBhdCBoZWxwaW5nIHN0dWRlbnRzIHJldGFpbiBrbm93bGVkZ2UsIGNvbmNlbnRyYXRlIGFuZFwiXG4jICAgIHBlcmZvcm1fYXRfaGlnaGVyX2xldmVsOiBcInBlcmZvcm0gYXQgYSBoaWdoZXIgbGV2ZWwgb2YgYWNoaWV2ZW1lbnRcIlxuIyAgICBmZWVkYmFjazogXCJHYW1lcyBhbHNvIHByb3ZpZGUgcmVhbC10aW1lIGZlZWRiYWNrIHRoYXQgYWxsb3dzIHN0dWRlbnRzIHRvIGFkanVzdCB0aGVpciBzb2x1dGlvbiBwYXRoIGFuZCB1bmRlcnN0YW5kIGNvbmNlcHRzIG1vcmUgaG9saXN0aWNhbGx5LCBpbnN0ZWFkIG9mIGJlaW5nIGxpbWl0ZWQgdG8ganVzdCDigJxjb3JyZWN04oCdIG9yIOKAnGluY29ycmVjdOKAnSBhbnN3ZXJzLlwiXG4gICAgcmVhbF9nYW1lOiBcIlVtIGpvZ28gYSBzw6lyaW8sIGpvZ2FkbyBjb20gY8OzZGlnbyBhIHPDqXJpby5cIlxuIyAgICBncmVhdF9nYW1lOiBcIkEgZ3JlYXQgZ2FtZSBpcyBtb3JlIHRoYW4ganVzdCBiYWRnZXMgYW5kIGFjaGlldmVtZW50cyAtIGl04oCZcyBhYm91dCBhIHBsYXllcuKAmXMgam91cm5leSwgd2VsbC1kZXNpZ25lZCBwdXp6bGVzLCBhbmQgdGhlIGFiaWxpdHkgdG8gdGFja2xlIGNoYWxsZW5nZXMgd2l0aCBhZ2VuY3kgYW5kIGNvbmZpZGVuY2UuXCJcbiMgICAgYWdlbmN5OiBcIkNvZGVDb21iYXQgaXMgYSBnYW1lIHRoYXQgZ2l2ZXMgcGxheWVycyB0aGF0IGFnZW5jeSBhbmQgY29uZmlkZW5jZSB3aXRoIG91ciByb2J1c3QgdHlwZWQgY29kZSBlbmdpbmUsIHdoaWNoIGhlbHBzIGJlZ2lubmVyIGFuZCBhZHZhbmNlZCBzdHVkZW50cyBhbGlrZSB3cml0ZSBwcm9wZXIsIHZhbGlkIGNvZGUuXCJcbiMgICAgcmVxdWVzdF9kZW1vX3RpdGxlOiBcIkdldCB5b3VyIHN0dWRlbnRzIHN0YXJ0ZWQgdG9kYXkhXCJcbiMgICAgcmVxdWVzdF9kZW1vX3N1YnRpdGxlOiBcIlJlcXVlc3QgYSBkZW1vIGFuZCBnZXQgeW91ciBzdHVkZW50cyBzdGFydGVkIGluIGxlc3MgdGhhbiBhbiBob3VyLlwiXG4jICAgIGdldF9zdGFydGVkX3RpdGxlOiBcIlNldCB1cCB5b3VyIGNsYXNzIHRvZGF5XCJcbiMgICAgZ2V0X3N0YXJ0ZWRfc3VidGl0bGU6IFwiU2V0IHVwIGEgY2xhc3MsIGFkZCB5b3VyIHN0dWRlbnRzLCBhbmQgbW9uaXRvciB0aGVpciBwcm9ncmVzcyBhcyB0aGV5IGxlYXJuIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiAgICByZXF1ZXN0X2RlbW86IFwiUGVkaXIgdW1hIERlbW9uc3RyYcOnw6NvXCJcbiMgICAgcmVxdWVzdF9xdW90ZTogXCJSZXF1ZXN0IGEgUXVvdGVcIlxuICAgIHNldHVwX2FfY2xhc3M6IFwiQ29uZmlndXJhciB1bWEgVHVybWFcIlxuICAgIGhhdmVfYW5fYWNjb3VudDogXCJUZW5zIHVtYSBjb250YT9cIlxuICAgIGxvZ2dlZF9pbl9hczogXCJBdHVhbG1lbnRlIHRlbnMgc2Vzc8OjbyBpbmljaWFkYSBjb21vXCJcbiMgICAgY29tcHV0ZXJfc2NpZW5jZTogXCJPdXIgc2VsZi1wYWNlZCBjb3Vyc2VzIGNvdmVyIGJhc2ljIHN5bnRheCB0byBhZHZhbmNlZCBjb25jZXB0c1wiXG4gICAgZmZhOiBcIkdyw6F0aXMgcGFyYSB0b2RvcyBvcyBlc3R1ZGFudGVzXCJcbiAgICBjb21pbmdfc29vbjogXCJNYWlzLCBicmV2ZW1lbnRlIVwiXG4gICAgY291cnNlc19hdmFpbGFibGVfaW46IFwiT3MgY3Vyc29zIGVzdMOjbyBkaXNwb27DrXZlaXMgZW0gSmF2YVNjcmlwdCBlIFB5dGhvbi4gT3MgY3Vyc29zIGRlIERlc2Vudm9sdmltZW50byBXZWIgdXRpbGl6YW0gSFRNTCwgQ1NTIGUgalF1ZXJ5LlwiXG4jICAgIGJvYXN0OiBcIkJvYXN0cyByaWRkbGVzIHRoYXQgYXJlIGNvbXBsZXggZW5vdWdoIHRvIGZhc2NpbmF0ZSBnYW1lcnMgYW5kIGNvZGVycyBhbGlrZS5cIlxuIyAgICB3aW5uaW5nOiBcIkEgd2lubmluZyBjb21iaW5hdGlvbiBvZiBSUEcgZ2FtZXBsYXkgYW5kIHByb2dyYW1taW5nIGhvbWV3b3JrIHRoYXQgcHVsbHMgb2ZmIG1ha2luZyBraWQtZnJpZW5kbHkgZWR1Y2F0aW9uIGxlZ2l0aW1hdGVseSBlbmpveWFibGUuXCJcbiAgICBydW5fY2xhc3M6IFwiVHVkbyBvIHF1ZSBwcmVjaXNhcyBwYXJhIHRlcmVzIHVtYSB0dXJtYSBkZSBjacOqbmNpYXMgZGEgY29tcHV0YcOnw6NvIG5hIHR1YSBlc2NvbGEgaG9qZSwgc2VtIHNlcmVtIG5lY2Vzc8OhcmlhcyBiYXNlcyBkZSBDQy5cIlxuICAgIGdvdG9fY2xhc3NlczogXCJJciBwYXJhIEFzIE1pbmhhcyBUdXJtYXNcIlxuICAgIHZpZXdfcHJvZmlsZTogXCJWZXIgbyBNZXUgUGVyZmlsXCJcbiAgICB2aWV3X3Byb2dyZXNzOiBcIlZlciBQcm9ncmVzc29cIlxuICAgIGdvX3RvX2NvdXJzZXM6IFwiSXIgcGFyYSBPcyBNZXVzIEN1cnNvc1wiXG4gICAgd2FudF9jb2NvOiBcIlF1ZXJlcyBvIENvZGVDb21iYXQgbmEgdHVhIGVzY29sYT9cIlxuIyAgICBlZHVjYXRvcjogXCJFZHVjYXRvclwiXG4jICAgIHN0dWRlbnQ6IFwiU3R1ZGVudFwiXG5cbiAgbmF2OlxuIyAgICBlZHVjYXRvcnM6IFwiRWR1Y2F0b3JzXCJcbiMgICAgZm9sbG93X3VzOiBcIkZvbGxvdyBVc1wiXG4jICAgIGdlbmVyYWw6IFwiR2VuZXJhbFwiXG4gICAgbWFwOiBcIk1hcGFcIlxuICAgIHBsYXk6IFwiTsOtdmVpc1wiICMgVGhlIHRvcCBuYXYgYmFyIGVudHJ5IHdoZXJlIHBsYXllcnMgY2hvb3NlIHdoaWNoIGxldmVscyB0byBwbGF5XG4gICAgY29tbXVuaXR5OiBcIkNvbXVuaWRhZGVcIlxuICAgIGNvdXJzZXM6IFwiQ3Vyc29zXCJcbiAgICBibG9nOiBcIkJsb2dcIlxuICAgIGZvcnVtOiBcIkbDs3J1bVwiXG4gICAgYWNjb3VudDogXCJDb250YVwiXG4gICAgbXlfYWNjb3VudDogXCJBIE1pbmhhIENvbnRhXCJcbiAgICBwcm9maWxlOiBcIlBlcmZpbFwiXG4gICAgaG9tZTogXCJJbsOtY2lvXCJcbiAgICBjb250cmlidXRlOiBcIkNvbnRyaWJ1aXJcIlxuICAgIGxlZ2FsOiBcIkxlZ2FsXCJcbiAgICBwcml2YWN5OiBcIkF2aXNvIGRlIFByaXZhY2lkYWRlXCJcbiAgICBhYm91dDogXCJTb2JyZVwiXG4gICAgY29udGFjdDogXCJDb250YWN0YXJcIlxuICAgIHR3aXR0ZXJfZm9sbG93OiBcIlNlZ3VpclwiXG4gICAgbXlfY2xhc3Nyb29tczogXCJBcyBNaW5oYXMgVHVybWFzXCJcbiAgICBteV9jb3Vyc2VzOiBcIk9zIE1ldXMgQ3Vyc29zXCJcbiMgICAgbXlfdGVhY2hlcnM6IFwiTXkgVGVhY2hlcnNcIlxuICAgIGNhcmVlcnM6IFwiQ2FycmVpcmFzXCJcbiAgICBmYWNlYm9vazogXCJGYWNlYm9va1wiXG4gICAgdHdpdHRlcjogXCJUd2l0dGVyXCJcbiAgICBjcmVhdGVfYV9jbGFzczogXCJDcmlhciB1bWEgVHVybWFcIlxuICAgIG90aGVyOiBcIk91dHJvc1wiXG4gICAgbGVhcm5fdG9fY29kZTogXCJBcHJlbmRlIGEgUHJvZ3JhbWFyIVwiXG4gICAgdG9nZ2xlX25hdjogXCJBbHRlcm5hciBuYXZlZ2HDp8Ojb1wiXG4gICAgc2Nob29sczogXCJFc2NvbGFzXCJcbiAgICBnZXRfaW52b2x2ZWQ6IFwiRW52b2x2ZS10ZVwiXG4gICAgb3Blbl9zb3VyY2U6IFwiT3BlbiBzb3VyY2UgKEdpdEh1YilcIlxuICAgIHN1cHBvcnQ6IFwiU3Vwb3J0ZVwiXG4gICAgZmFxczogXCJGQVFzXCJcbiAgICBjb3B5cmlnaHRfcHJlZml4OiBcIkRpcmVpdG9zXCJcbiAgICBjb3B5cmlnaHRfc3VmZml4OiBcIlRvZG9zIG9zIERpcmVpdG9zIFJlc2VydmFkb3MuXCJcbiAgICBoZWxwX3ByZWY6IFwiUHJlY2lzYXMgZGUgYWp1ZGE/IEVudmlhIHVtIGUtbWFpbCBwYXJhXCJcbiAgICBoZWxwX3N1ZmY6IFwiZSBuw7NzIGVudHJhcmVtb3MgZW0gY29udGFjdG8hXCJcbiAgICByZXNvdXJjZV9odWI6IFwiQ2VudHJvIGRlIFJlY3Vyc29zXCJcbiMgICAgYXBjc3A6IFwiQVAgQ1MgUHJpbmNpcGxlc1wiXG4gICAgcGFyZW50OiBcIkVkdWNhZG9yZXNcIlxuXG4gIG1vZGFsOlxuICAgIGNsb3NlOiBcIkZlY2hhclwiXG4gICAgb2theTogXCJPa1wiXG5cbiAgbm90X2ZvdW5kOlxuICAgIHBhZ2Vfbm90X2ZvdW5kOiBcIlDDoWdpbmEgbsOjbyBlbmNvbnRyYWRhXCJcblxuICBkaXBsb21hdF9zdWdnZXN0aW9uOlxuICAgIHRpdGxlOiBcIkFqdWRhIGEgdHJhZHV6aXIgbyBDb2RlQ29tYmF0IVwiICMgVGhpcyBzaG93cyB1cCB3aGVuIGEgcGxheWVyIHN3aXRjaGVzIHRvIGEgbm9uLUVuZ2xpc2ggbGFuZ3VhZ2UgdXNpbmcgdGhlIGxhbmd1YWdlIHNlbGVjdG9yLlxuICAgIHN1Yl9oZWFkaW5nOiBcIlByZWNpc2Ftb3MgZGFzIHR1YXMgaGFiaWxpZGFkZXMgbGluZ3XDrXN0aWNhcy5cIlxuICAgIHBpdGNoX2JvZHk6IFwiRGVzZW52b2x2ZW1vcyBvIENvZGVDb21iYXQgZW0gSW5nbMOqcywgbWFzIGrDoSB0ZW1vcyBqb2dhZG9yZXMgZGUgdG9kbyBvIG11bmRvLiBNdWl0b3MgZGVsZXMgcXVlcmVtIGpvZ2FyIGVtIFBvcnR1Z3XDqnMsIG1hcyBuw6NvIGZhbGFtIEluZ2zDqnMsIHBvciBpc3NvLCBzZSBzYWJlcyBmYWxhciBhbWJhcywgcG9yIGZhdm9yIGNvbnNpZGVyYSByZWdpc3Rhci10ZSBjb21vIERpcGxvbWF0YSBwYXJhIGFqdWRhcmVzIGEgdHJhZHV6aXIgbyBzw610aW8gZG8gQ29kZUNvbWJhdCBlIHRvZG9zIG9zIG7DrXZlaXMgcGFyYSBQb3J0dWd1w6pzLlwiXG4gICAgbWlzc2luZ190cmFuc2xhdGlvbnM6IFwiQXTDqSBjb25zZWd1aXJtb3MgdHJhZHV6aXIgdHVkbyBwYXJhIFBvcnR1Z3XDqnMsIGlyw6FzIHZlciBlbSBJbmdsw6pzIG8gcXVlIG7Do28gZXN0aXZlciBkaXNwb27DrXZlbCBlbSBQb3J0dWd1w6pzLlwiXG4gICAgbGVhcm5fbW9yZTogXCJTYWJlIG1haXMgc29icmUgc2VyZXMgdW0gRGlwbG9tYXRhXCJcbiAgICBzdWJzY3JpYmVfYXNfZGlwbG9tYXQ6IFwiU3Vic2NyZXZlLXRlIGNvbW8gRGlwbG9tYXRhXCJcblxuICBwbGF5OlxuIyAgICB0aXRsZTogXCJQbGF5IENvZGVDb21iYXQgTGV2ZWxzIC0gTGVhcm4gUHl0aG9uLCBKYXZhU2NyaXB0LCBhbmQgSFRNTFwiXG4jICAgIG1ldGFfZGVzY3JpcHRpb246IFwiTGVhcm4gcHJvZ3JhbW1pbmcgd2l0aCBhIGNvZGluZyBnYW1lIGZvciBiZWdpbm5lcnMuIExlYXJuIFB5dGhvbiBvciBKYXZhU2NyaXB0IGFzIHlvdSBzb2x2ZSBtYXplcywgbWFrZSB5b3VyIG93biBnYW1lcywgYW5kIGxldmVsIHVwLiBDaGFsbGVuZ2UgeW91ciBmcmllbmRzIGluIG11bHRpcGxheWVyIGFyZW5hIGxldmVscyFcIlxuIyAgICBsZXZlbF90aXRsZTogXCJfX2xldmVsX18gLSBMZWFybiB0byBDb2RlIGluIFB5dGhvbiwgSmF2YVNjcmlwdCwgSFRNTFwiXG4jICAgIHZpZGVvX3RpdGxlOiBcIl9fdmlkZW9fXyB8IFZpZGVvIExldmVsXCJcbiMgICAgZ2FtZV9kZXZlbG9wbWVudF90aXRsZTogXCJfX2xldmVsX18gfCBHYW1lIERldmVsb3BtZW50XCJcbiMgICAgd2ViX2RldmVsb3BtZW50X3RpdGxlOiBcIl9fbGV2ZWxfXyB8IFdlYiBEZXZlbG9wbWVudFwiXG4gICAgYW5vbl9zaWdudXBfdGl0bGVfMTogXCJPIENvZGVDb21iYXQgdGVtIHVtYVwiXG4gICAgYW5vbl9zaWdudXBfdGl0bGVfMjogXCJWZXJzw6NvIHBhcmEgVHVybWFzIVwiXG4gICAgYW5vbl9zaWdudXBfZW50ZXJfY29kZTogXCJJbnRyb2R1eiB1bSBDw7NkaWdvIGRlIFRydW1hOlwiXG4gICAgYW5vbl9zaWdudXBfYXNrX3RlYWNoZXI6IFwiTsOjbyB0ZW5zIHVtPyBQZWRlIGFvIHRldSBwcm9mZXNzb3IhXCJcbiAgICBhbm9uX3NpZ251cF9jcmVhdGVfY2xhc3M6IFwiUXVlcmVzIGNyaWFyIHVtYSB0dXJtYT9cIlxuICAgIGFub25fc2lnbnVwX3NldHVwX2NsYXNzOiBcIkNvbmZpZ3VyYSB1bSB0dXJtYSwgYWRpY2lvbmEgZXN0dWRhbnRlcyBlIG1vbml0b3JpemEgbyBwcm9ncmVzc28hXCJcbiAgICBhbm9uX3NpZ251cF9jcmVhdGVfdGVhY2hlcjogXCJDcmlhciB1bWEgY29udGEgZGUgcHJvZmVzc29yIGdyYXR1aXRhXCJcbiAgICBwbGF5X2FzOiBcIkpvZ2FyIENvbW9cIiAjIExhZGRlciBwYWdlXG4jICAgIGdldF9jb3Vyc2VfZm9yX2NsYXNzOiBcIkFzc2lnbiBHYW1lIERldmVsb3BtZW50IGFuZCBtb3JlIHRvIHlvdXIgY2xhc3NlcyFcIlxuIyAgICByZXF1ZXN0X2xpY2Vuc2VzOiBcIkNvbnRhY3Qgb3VyIHNjaG9vbCBzcGVjaWFsaXN0cyBmb3IgZGV0YWlscy5cIlxuICAgIGNvbXBldGU6IFwiQ29tcGV0aXIhXCIgIyBDb3Vyc2UgZGV0YWlscyBwYWdlXG4gICAgc3BlY3RhdGU6IFwiQXNzaXN0aXJcIiAjIExhZGRlciBwYWdlXG4gICAgcGxheWVyczogXCJqb2dhZG9yZXNcIiAjIEhvdmVyIG92ZXIgYSBsZXZlbCBvbiAvcGxheVxuICAgIGhvdXJzX3BsYXllZDogXCJob3JhcyBqb2dhZGFzXCIgIyBIb3ZlciBvdmVyIGEgbGV2ZWwgb24gL3BsYXlcbiAgICBpdGVtczogXCJJdGVuc1wiICMgVG9vbHRpcCBvbiBpdGVtIHNob3AgYnV0dG9uIGZyb20gL3BsYXlcbiAgICB1bmxvY2s6IFwiRGVzYmxvcXVlYXJcIiAjIEZvciBwdXJjaGFzaW5nIGl0ZW1zIGFuZCBoZXJvZXNcbiAgICBjb25maXJtOiBcIkNvbmZpcm1hclwiXG4gICAgb3duZWQ6IFwiT2J0aWRvXCIgIyBGb3IgaXRlbXMgeW91IG93blxuICAgIGxvY2tlZDogXCJCbG9xdWVhZG9cIlxuICAgIGF2YWlsYWJsZTogXCJEaXNwb27DrXZlbFwiXG4gICAgc2tpbGxzX2dyYW50ZWQ6IFwiSGFiaWxpZGFkZXMgR2FyYW50aWRhc1wiICMgUHJvcGVydHkgZG9jdW1lbnRhdGlvbiBkZXRhaWxzXG4gICAgaGVyb2VzOiBcIkhlcsOzaXNcIiAjIFRvb2x0aXAgb24gaGVybyBzaG9wIGJ1dHRvbiBmcm9tIC9wbGF5XG4gICAgYWNoaWV2ZW1lbnRzOiBcIkNvbnF1aXN0YXNcIiAjIFRvb2x0aXAgb24gYWNoaWV2ZW1lbnQgbGlzdCBidXR0b24gZnJvbSAvcGxheVxuICAgIHNldHRpbmdzOiBcIkRlZmluacOnw7Vlc1wiICMgVG9vbHRpcCBvbiBzZXR0aW5ncyBidXR0b24gZnJvbSAvcGxheVxuICAgIHBvbGw6IFwiVm90YcOnw7Vlc1wiICMgVG9vbHRpcCBvbiBwb2xsIGJ1dHRvbiBmcm9tIC9wbGF5XG4gICAgbmV4dDogXCJQcsOzeGltb1wiICMgR28gZnJvbSBjaG9vc2UgaGVybyB0byBjaG9vc2UgaW52ZW50b3J5IGJlZm9yZSBwbGF5aW5nIGEgbGV2ZWxcbiAgICBjaGFuZ2VfaGVybzogXCJBbHRlcmFyIEhlcsOzaVwiICMgR28gYmFjayBmcm9tIGNob29zZSBpbnZlbnRvcnkgdG8gY2hvb3NlIGhlcm9cbiAgICBjaGFuZ2VfaGVyb19vcl9sYW5ndWFnZTogXCJBbHRlcmFyIEhlcsOzaSBvdSBMaW5ndWFnZW1cIlxuICAgIGJ1eV9nZW1zOiBcIkNvbXByYXIgR2VtYXNcIlxuICAgIHN1YnNjcmliZXJzX29ubHk6IFwiQXBlbmFzIHBhcmEgU3Vic2NyaXRvcmVzIVwiXG4gICAgc3Vic2NyaWJlX3VubG9jazogXCJTdWJzY3JldmUtdGUgcGFyYSBEZXNibG9xdWVhcmVzIVwiXG4gICAgc3Vic2NyaWJlcl9oZXJvZXM6IFwiU3Vic2NyZXZlLXRlIGhvamUgcGFyYSBkZXNibG9xdWVhcmVzIGRlIGltZWRpYXRvIGEgQW1hcmEsIGEgSHVzaGJhdW0sIGUgbyBIYXR0b3JpIVwiXG4gICAgc3Vic2NyaWJlcl9nZW1zOiBcIlN1YnNjcmV2ZS10ZSBob2plIHBhcmEgYWRxdWlyaXJlcyBlc3RlIGhlcsOzaSBjb20gZ2VtYXMhXCJcbiAgICBhbm9ueW1vdXM6IFwiSm9nYWRvciBBbsOzbmltb1wiXG4gICAgbGV2ZWxfZGlmZmljdWx0eTogXCJEaWZpY3VsZGFkZTogXCJcbiAgICBhd2FpdGluZ19sZXZlbHNfYWR2ZW50dXJlcl9wcmVmaXg6IFwiTGFuw6dhbW9zIG5vdm9zIG7DrXZlaXMgdG9kYXMgYXMgc2VtYW5hcy5cIlxuICAgIGF3YWl0aW5nX2xldmVsc19hZHZlbnR1cmVyOiBcIlJlZ2lzdGEtdGUgY29tbyBBdmVudHVyZWlyb1wiXG4gICAgYXdhaXRpbmdfbGV2ZWxzX2FkdmVudHVyZXJfc3VmZml4OiBcInBhcmEgc2VyZXMgbyBwcmltZWlybyBhIGpvZ2FyIG7DrXZlaXMgbm92b3MuXCJcbiAgICBhZGp1c3Rfdm9sdW1lOiBcIkFqdXN0YXIgdm9sdW1lXCJcbiAgICBjYW1wYWlnbl9tdWx0aXBsYXllcjogXCJBcmVuYXMgTXVsdGlqb2dhZG9yXCJcbiAgICBjYW1wYWlnbl9tdWx0aXBsYXllcl9kZXNjcmlwdGlvbjogXCIuLi4gbmFzIHF1YWlzIHByb2dyYW1hcyBjb250cmEgb3V0cm9zIGpvZ2Fkb3Jlcy5cIlxuIyAgICBicmFpbl9wb3BfZG9uZTogXCJZb3XigJl2ZSBkZWZlYXRlZCB0aGUgT2dyZXMgd2l0aCBjb2RlISBZb3Ugd2luIVwiXG4jICAgIGJyYWluX3BvcF9jaGFsbGVuZ2U6IFwiQ2hhbGxlbmdlIHlvdXJzZWxmIHRvIHBsYXkgYWdhaW4gdXNpbmcgYSBkaWZmZXJlbnQgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UhXCJcbiMgICAgcmVwbGF5OiBcIlJlcGxheVwiXG4gICAgYmFja190b19jbGFzc3Jvb206IFwiVm9sdGFyIMOgIFR1cm1hXCJcbiAgICB0ZWFjaGVyX2J1dHRvbjogXCJQYXJhIFByb2Zlc3NvcmVzXCJcbiMgICAgZ2V0X21vcmVfY29kZWNvbWJhdDogXCJHZXQgTW9yZSBDb2RlQ29tYmF0XCJcblxuICBjb2RlOlxuICAgIGlmOiBcInNlXCIgIyBLZXl3b3Jkcy0tdGhlc2UgdHJhbnNsYXRpb25zIHNob3cgdXAgb24gaG92ZXIsIHNvIHBsZWFzZSB0cmFuc2xhdGUgdGhlbSBhbGwsIGV2ZW4gaWYgaXQncyBraW5kIG9mIGxvbmcuIChJbiB0aGUgY29kZSBlZGl0b3IsIHRoZXkgd2lsbCBzdGlsbCBiZSBpbiBFbmdsaXNoLilcbiAgICBlbHNlOiBcInNlbsOjb1wiXG4gICAgZWxpZjogXCJzZW7Do28gc2VcIlxuICAgIHdoaWxlOiBcImVucXVhbnRvXCJcbiAgICBsb29wOiBcInJlcGV0aXJcIlxuICAgIGZvcjogXCJwYXJhXCJcbiAgICBicmVhazogXCJwYXJhclwiXG4gICAgY29udGludWU6IFwiY29udGludWFyXCJcbiAgICBwYXNzOiBcInBhc3NhclwiXG4gICAgcmV0dXJuOiBcImRldm9sdmVyXCJcbiAgICB0aGVuOiBcImVudMOjb1wiXG4gICAgZG86IFwiZmF6ZXJcIlxuICAgIGVuZDogXCJmaW1cIlxuICAgIGZ1bmN0aW9uOiBcImZ1bsOnw6NvXCJcbiAgICBkZWY6IFwiZGVmaW5pclwiXG4gICAgdmFyOiBcInZhcmnDoXZlbFwiXG4gICAgc2VsZjogXCJwcsOzcHJpb1wiXG4gICAgaGVybzogXCJoZXLDs2lcIlxuICAgIHRoaXM6IFwiaXN0b1wiXG4gICAgb3I6IFwib3VcIlxuICAgIFwifHxcIjogXCJvdVwiXG4gICAgYW5kOiBcImVcIlxuICAgIFwiJiZcIjogXCJlXCJcbiAgICBub3Q6IFwibsOjb1wiXG4gICAgXCIhXCI6IFwibsOjb1wiXG4gICAgXCI9XCI6IFwiYXRyaWJ1aXJcIlxuICAgIFwiPT1cIjogXCLDqSBpZ3VhbCBhXCJcbiAgICBcIj09PVwiOiBcIsOpIGVzdHJpdGFtZW50ZSBpZ3VhbCBhXCJcbiAgICBcIiE9XCI6IFwibsOjbyDDqSBpZ3VhbCBhXCJcbiAgICBcIiE9PVwiOiBcIm7Do28gw6kgZXN0cml0YW1lbnRlIGlndWFsIGFcIlxuICAgIFwiPlwiOiBcIsOpIG1haW9yIGRvIHF1ZVwiXG4gICAgXCI+PVwiOiBcIsOpIG1haW9yIGRvIHF1ZSBvdSBpZ3VhbCBhXCJcbiAgICBcIjxcIjogXCLDqSBtZW5vciBkbyBxdWVcIlxuICAgIFwiPD1cIjogXCLDqSBtZW5vciBkbyBxdWUgb3UgaWd1YWwgYVwiXG4gICAgXCIqXCI6IFwibXVsdGlwbGljYWRvIHBvclwiXG4gICAgXCIvXCI6IFwiZGl2aWRpZG8gcG9yXCJcbiAgICBcIitcIjogXCJtYWlzXCJcbiAgICBcIi1cIjogXCJtZW5vc1wiXG4gICAgXCIrPVwiOiBcImFkaWNpb25hciBlIGF0cmlidWlyXCJcbiAgICBcIi09XCI6IFwic3VidHJhaXIgZSBhdHJpYnVpclwiXG4gICAgVHJ1ZTogXCJWZXJkYWRlaXJvXCJcbiAgICB0cnVlOiBcInZlcmRhZGVpcm9cIlxuICAgIEZhbHNlOiBcIkZhbHNvXCJcbiAgICBmYWxzZTogXCJmYWxzb1wiXG4gICAgdW5kZWZpbmVkOiBcIm7Do28gZGVmaW5pZG9cIlxuICAgIG51bGw6IFwibnVsb1wiXG4gICAgbmlsOiBcIm5hZGFcIlxuICAgIE5vbmU6IFwiTmVuaHVtXCJcblxuICBzaGFyZV9wcm9ncmVzc19tb2RhbDpcbiAgICBibHVyYjogXCJFc3TDoXMgYSBmYXplciBncmFuZGVzIHByb2dyZXNzb3MhIENvbnRhIGFvIHRldSBlZHVjYWRvciBvIHF1YW50byBhcHJlbmRlc3RlIGNvbSBvIENvZGVDb21iYXQuXCJcbiAgICBlbWFpbF9pbnZhbGlkOiBcIkVuZGVyZcOnbyBkZSBlLW1haWwgaW52w6FsaWRvLlwiXG4gICAgZm9ybV9ibHVyYjogXCJJbnRyb2R1eiBvIGUtbWFpbCBkbyB0ZXUgZWR1Y2Fkb3IgYWJhaXhvIGUgbsOzcyB2YW1vcyBtb3N0cmFyLWxoZSFcIlxuICAgIGZvcm1fbGFiZWw6IFwiRW5kZXJlw6dvIGRlIEUtbWFpbFwiXG4gICAgcGxhY2Vob2xkZXI6IFwiZW5kZXJlw6dvIGRlIGUtbWFpbFwiXG4gICAgdGl0bGU6IFwiRXhjZWxlbnRlIFRyYWJhbGhvLCBBcHJlbmRpelwiXG5cbiAgbG9naW46XG4gICAgc2lnbl91cDogXCJDcmlhciBDb250YVwiXG4gICAgZW1haWxfb3JfdXNlcm5hbWU6IFwiRS1tYWlsIG91IG5vbWUgZGUgdXRpbGl6YWRvclwiXG4gICAgbG9nX2luOiBcIkluaWNpYXIgU2Vzc8Ojb1wiXG4gICAgbG9nZ2luZ19pbjogXCJBIEluaWNpYXIgU2Vzc8Ojb1wiXG4gICAgbG9nX291dDogXCJTYWlyXCJcbiAgICBmb3Jnb3RfcGFzc3dvcmQ6IFwiRXNxdWVjZXN0ZSBhIHR1YSBwYWxhdnJhLXBhc3NlP1wiXG4gICAgZmluaXNoaW5nOiBcIkEgVGVybWluYXJcIlxuICAgIHNpZ25faW5fd2l0aF9mYWNlYm9vazogXCJJbmljaWFyIHNlc3PDo28gY29tIG8gRkJcIlxuICAgIHNpZ25faW5fd2l0aF9ncGx1czogXCJJbmljaWFyIHNlc3PDo28gY29tIG8gR29vZ2xlXCJcbiAgICBzaWdudXBfc3dpdGNoOiBcIlF1ZXJlcyBjcmlhciB1bWEgY29udGE/XCJcblxuICBzaWdudXA6XG4jICAgIGNvbXBsZXRlX3N1YnNjcmlwdGlvbjogXCJDb21wbGV0ZSBTdWJzY3JpcHRpb25cIlxuICAgIGNyZWF0ZV9zdHVkZW50X2hlYWRlcjogXCJDcmlhciBDb250YSBkZSBFc3R1ZGFudGVcIlxuICAgIGNyZWF0ZV90ZWFjaGVyX2hlYWRlcjogXCJDcmlhciBDb250YSBkZSBQcm9mZXNzb3JcIlxuICAgIGNyZWF0ZV9pbmRpdmlkdWFsX2hlYWRlcjogXCJDcmlhciBDb250YSBJbmRpdmlkdWFsXCJcbiAgICBlbWFpbF9hbm5vdW5jZW1lbnRzOiBcIlJlY2ViZXIgYW7Dum5jaW9zIHNvYnJlIG7DrXZlaXMgZSBmdW5jaW9uYWxpZGFkZXMgbm92b3MgZG8gQ29kZUNvbWJhdCFcIlxuICAgIHNpZ25faW5fdG9fY29udGludWU6IFwiSW5pY2lhIHNlc3PDo28gb3UgY3JpYSB1bWEgY29udGEgcGFyYSBjb250aW51YXJlc1wiXG4jICAgIHRlYWNoZXJfZW1haWxfYW5ub3VuY2VtZW50czogXCJLZWVwIG1lIHVwZGF0ZWQgb24gbmV3IHRlYWNoZXIgcmVzb3VyY2VzLCBjdXJyaWN1bHVtLCBhbmQgY291cnNlcyFcIlxuICAgIGNyZWF0aW5nOiBcIkEgQ3JpYXIgQ29udGEuLi5cIlxuICAgIHNpZ25fdXA6IFwiUmVnaXN0YXJcIlxuICAgIGxvZ19pbjogXCJpbmljaWFyIHNlc3PDo28gY29tIHBhbGF2cmEtcGFzc2VcIlxuIyAgICBsb2dpbjogXCJMb2dpblwiXG4gICAgcmVxdWlyZWQ6IFwiUHJlY2lzYXMgZGUgaW5pY2lhciBzZXNzw6NvIGFudGVzIGRlIHByb3NzZWd1aXJlcy5cIlxuICAgIGxvZ2luX3N3aXRjaDogXCJKw6EgdGVucyB1bWEgY29udGE/XCJcbiAgICBvcHRpb25hbDogXCJvcGNpb25hbFwiXG4jICAgIGNvbm5lY3RlZF9ncGx1c19oZWFkZXI6IFwiWW91J3ZlIHN1Y2Nlc3NmdWxseSBjb25uZWN0ZWQgd2l0aCBHb29nbGUrIVwiXG4jICAgIGNvbm5lY3RlZF9ncGx1c19wOiBcIkZpbmlzaCBzaWduaW5nIHVwIHNvIHlvdSBjYW4gbG9nIGluIHdpdGggeW91ciBHb29nbGUrIGFjY291bnQuXCJcbiMgICAgY29ubmVjdGVkX2ZhY2Vib29rX2hlYWRlcjogXCJZb3UndmUgc3VjY2Vzc2Z1bGx5IGNvbm5lY3RlZCB3aXRoIEZhY2Vib29rIVwiXG4jICAgIGNvbm5lY3RlZF9mYWNlYm9va19wOiBcIkZpbmlzaCBzaWduaW5nIHVwIHNvIHlvdSBjYW4gbG9nIGluIHdpdGggeW91ciBGYWNlYm9vayBhY2NvdW50LlwiXG4gICAgaGV5X3N0dWRlbnRzOiBcIkVzdHVkYW50ZXMsIGludHJvZHV6YW0gbyBjw7NkaWdvIGRlIHR1cm1hIGRvIHZvc3NvIHByb2Zlc3Nvci5cIlxuICAgIGJpcnRoZGF5OiBcIkFuaXZlcnPDoXJpb1wiXG4jICAgIHBhcmVudF9lbWFpbF9ibHVyYjogXCJXZSBrbm93IHlvdSBjYW4ndCB3YWl0IHRvIGxlYXJuIHByb2dyYW1taW5nICZtZGFzaDsgd2UncmUgZXhjaXRlZCB0b28hIFlvdXIgcGFyZW50cyB3aWxsIHJlY2VpdmUgYW4gZW1haWwgd2l0aCBmdXJ0aGVyIGluc3RydWN0aW9ucyBvbiBob3cgdG8gY3JlYXRlIGFuIGFjY291bnQgZm9yIHlvdS4gRW1haWwge3tlbWFpbF9saW5rfX0gaWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucy5cIlxuIyAgICBjbGFzc3Jvb21fbm90X2ZvdW5kOiBcIk5vIGNsYXNzZXMgZXhpc3Qgd2l0aCB0aGlzIENsYXNzIENvZGUuIENoZWNrIHlvdXIgc3BlbGxpbmcgb3IgYXNrIHlvdXIgdGVhY2hlciBmb3IgaGVscC5cIlxuICAgIGNoZWNraW5nOiBcIkEgdmVyaWZpY2FyLi4uXCJcbiAgICBhY2NvdW50X2V4aXN0czogXCJFc3RlIGUtbWFpbCBqw6EgZXN0w6EgYSBzZXIgdXNhZG86XCJcbiAgICBzaWduX2luOiBcIkluaWNpYXIgc2Vzc8Ojb1wiXG4gICAgZW1haWxfZ29vZDogXCJPIGUtbWFpbCBwYXJlY2UgYm9tIVwiXG4gICAgbmFtZV90YWtlbjogXCJOb21lIGRlIHV0aWxpemFkb3IgasOhIGVzY29saGlkbyEgUXVlIHRhbCB7e3N1Z2dlc3RlZE5hbWV9fT9cIlxuICAgIG5hbWVfYXZhaWxhYmxlOiBcIk5vbWUgZGUgdXRpbGl6YWRvciBkaXNwb27DrXZlbCFcIlxuICAgIG5hbWVfaXNfZW1haWw6IFwiTyBub21lIGRlIHV0aWxpemFkb3IgbsOjbyBwb2RlIHNlciB1bSBlLW1haWxcIlxuICAgIGNob29zZV90eXBlOiBcIkVzY29saGUgbyB0ZXUgdGlwbyBkZSBjb250YTpcIlxuICAgIHRlYWNoZXJfdHlwZV8xOiBcIkVuc2luYSBwcm9ncmFtw6fDo28gdXNhbmRvIG8gQ29kZUNvbWJhdCFcIlxuICAgIHRlYWNoZXJfdHlwZV8yOiBcIkNvbmZpZ3VyYSBhIHR1YSB0dXJtYVwiXG4gICAgdGVhY2hlcl90eXBlXzM6IFwiQWNlZGUgYW9zIEd1aWFzIGRvcyBDdXJzb3NcIlxuICAgIHRlYWNoZXJfdHlwZV80OiBcIlbDqiBvIHByb2dyZXNzbyBkb3MgZXN0dWRhbnRlc1wiXG4gICAgc2lnbnVwX2FzX3RlYWNoZXI6IFwiUmVnaXN0YXIgY29tbyBQcm9mZXNzb3JcIlxuICAgIHN0dWRlbnRfdHlwZV8xOiBcIkFwcmVuZGUgYSBwcm9ncmFtYXIgZW5xdWFudG8gam9nYXMgdW0gam9nbyBjYXRpdmFudGUhXCJcbiAgICBzdHVkZW50X3R5cGVfMjogXCJKb2dhIGNvbSBhIHR1YSB0dXJtYVwiXG4gICAgc3R1ZGVudF90eXBlXzM6IFwiQ29tcGV0ZSBlbSBhcmVuYXNcIlxuICAgIHN0dWRlbnRfdHlwZV80OiBcIkVzY29saGUgbyB0ZXUgaGVyw7NpIVwiXG4gICAgc3R1ZGVudF90eXBlXzU6IFwiUHJlcGFyYSBvIHRldSBDw7NkaWdvIGRlIFR1cm1hIVwiXG4gICAgc2lnbnVwX2FzX3N0dWRlbnQ6IFwiUmVnaXN0YXIgY29tbyBFc3R1ZGFudGVcIlxuICAgIGluZGl2aWR1YWxzX29yX3BhcmVudHM6IFwiSW5kaXZpZHVhaXMgZSBFZHVjYWRvcmVzXCJcbiAgICBpbmRpdmlkdWFsX3R5cGU6IFwiUGFyYSBqb2dhZG9yZXMgYSBhcHJlbmRlciBhIHByb2dyYW1hciBmb3JhIGRlIHVtYSB0dXJtYS4gT3MgZWR1Y2Fkb3JlcyBkZXZlbSByZWdpc3Rhci1zZSBhcXVpLlwiXG4gICAgc2lnbnVwX2FzX2luZGl2aWR1YWw6IFwiUmVnaXN0YXIgY29tbyBJbmRpdmlkdWFsXCJcbiAgICBlbnRlcl9jbGFzc19jb2RlOiBcIkludHJvZHV6IG8gdGV1IEPDs2RpZ28gZGUgVHVybWFcIlxuICAgIGVudGVyX2JpcnRoZGF0ZTogXCJJbnRyb2R1eiBhIHR1YSBkYXRhIGRlIG5hc2NpbWVudG86XCJcbiAgICBwYXJlbnRfdXNlX2JpcnRoZGF0ZTogXCJFZHVjYWRvcmVzLCB1c2VtIGEgdm9zc2EgZGF0YSBkZSBuYXNjaW1lbnRvLlwiXG4gICAgYXNrX3RlYWNoZXJfMTogXCJQZXJndW50YSBhbyB0ZXUgcHJvZmVzc29yIHBlbG8gdGV1IEPDs2RpZ28gZGUgVHVybWEuXCJcbiAgICBhc2tfdGVhY2hlcl8yOiBcIk7Do28gZmF6ZXMgcGFydGUgZGUgdW1hIHR1cm1hPyBDcmlhIHVtYSBcIlxuICAgIGFza190ZWFjaGVyXzM6IFwiQ29udGEgSW5kaXZpZHVhbFwiXG4gICAgYXNrX3RlYWNoZXJfNDogXCIgZW50w6NvLlwiXG4gICAgYWJvdXRfdG9fam9pbjogXCJFc3TDoXMgcHJlc3RlcyBhIGVudHJhciBlbTpcIlxuICAgIGVudGVyX3BhcmVudF9lbWFpbDogXCJJbnRyb2R1eiBvIGUtbWFpbCBkbyB0ZXUgZWR1Y2Fkb3I6XCJcbiMgICAgcGFyZW50X2VtYWlsX2Vycm9yOiBcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdoZW4gdHJ5aW5nIHRvIHNlbmQgdGhlIGVtYWlsLiBDaGVjayB0aGUgZW1haWwgYWRkcmVzcyBhbmQgdHJ5IGFnYWluLlwiXG4jICAgIHBhcmVudF9lbWFpbF9zZW50OiBcIldl4oCZdmUgc2VudCBhbiBlbWFpbCB3aXRoIGZ1cnRoZXIgaW5zdHJ1Y3Rpb25zIG9uIGhvdyB0byBjcmVhdGUgYW4gYWNjb3VudC4gQXNrIHlvdXIgcGFyZW50IHRvIGNoZWNrIHRoZWlyIGluYm94LlwiXG4gICAgYWNjb3VudF9jcmVhdGVkOiBcIkNvbnRhIENyaWFkYSFcIlxuICAgIGNvbmZpcm1fc3R1ZGVudF9ibHVyYjogXCJBcG9udGEgYSB0dWEgaW5mb3JtYcOnw6NvIHBhcmEgcXVlIG7Do28gYSBlc3F1ZcOnYXMuIE8gdGV1IHByb2Zlc3NvciB0YW1iw6ltIHRlIHBvZGUgYWp1ZGFyIGEgcmVpbmljaWFyIGEgdHVhIHBhbGF2cmEtcGFzc2UgYSBxdWFscXVlciBhbHR1cmEuXCJcbiAgICBjb25maXJtX2luZGl2aWR1YWxfYmx1cmI6IFwiQXBvbnRhIGEgdHVhIGluZm9ybWHDp8OjbyBkZSBpbsOtY2lvIGRlIHNlc3PDo28gY2FzbyBwcmVjaXNlcyBkZWxhIG1haXMgdGFyZGUuIFZlcmlmaWNhIG8gdGV1IGUtbWFpbCBwYXJhIHF1ZSBwb3NzYXMgcmVjdXBlcmFyIGEgdHVhIGNvbnRhIHNlIGFsZ3VtYSB2ZXogZXNxdWVjZXJlcyBhIHR1YSBwYWxhdnJhLXBhc3NlIC0gdmVyaWZpY2EgYSB0dWEgY2FpeGEgZGUgZW50cmFkYSFcIlxuICAgIHdyaXRlX3RoaXNfZG93bjogXCJBcG9udGEgaXN0bzpcIlxuICAgIHN0YXJ0X3BsYXlpbmc6IFwiQ29tZcOnYXIgYSBKb2dhciFcIlxuIyAgICBzc29fY29ubmVjdGVkOiBcIlN1Y2Nlc3NmdWxseSBjb25uZWN0ZWQgd2l0aDpcIlxuICAgIHNlbGVjdF95b3VyX3N0YXJ0aW5nX2hlcm86IFwiRXNjb2xoZSBvIFRldSBIZXLDs2kgSW5pY2lhbDpcIlxuICAgIHlvdV9jYW5fYWx3YXlzX2NoYW5nZV95b3VyX2hlcm9fbGF0ZXI6IFwiUG9kZXMgc2VtcHJlIGFsdGVyYXIgbyB0ZXUgaGVyw7NpIG1haXMgdGFyZGUuXCJcbiMgICAgZmluaXNoOiBcIkZpbmlzaFwiXG4jICAgIHRlYWNoZXJfcmVhZHlfdG9fY3JlYXRlX2NsYXNzOiBcIllvdSdyZSByZWFkeSB0byBjcmVhdGUgeW91ciBmaXJzdCBjbGFzcyFcIlxuIyAgICB0ZWFjaGVyX3N0dWRlbnRzX2Nhbl9zdGFydF9ub3c6IFwiWW91ciBzdHVkZW50cyB3aWxsIGJlIGFibGUgdG8gc3RhcnQgcGxheWluZyB0aGUgZmlyc3QgY291cnNlLCBJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZSwgaW1tZWRpYXRlbHkuXCJcbiMgICAgdGVhY2hlcl9saXN0X2NyZWF0ZV9jbGFzczogXCJPbiB0aGUgbmV4dCBzY3JlZW4geW91IHdpbGwgYmUgYWJsZSB0byBjcmVhdGUgYSBuZXcgY2xhc3MuXCJcbiMgICAgdGVhY2hlcl9saXN0X2FkZF9zdHVkZW50czogXCJBZGQgc3R1ZGVudHMgdG8gdGhlIGNsYXNzIGJ5IGNsaWNraW5nIHRoZSBWaWV3IENsYXNzIGxpbmssIHRoZW4gc2VuZGluZyB5b3VyIHN0dWRlbnRzIHRoZSBDbGFzcyBDb2RlIG9yIFVSTC4gWW91IGNhbiBhbHNvIGludml0ZSB0aGVtIHZpYSBlbWFpbCBpZiB0aGV5IGhhdmUgZW1haWwgYWRkcmVzc2VzLlwiXG4jICAgIHRlYWNoZXJfbGlzdF9yZXNvdXJjZV9odWJfMTogXCJDaGVjayBvdXQgdGhlXCJcbiMgICAgdGVhY2hlcl9saXN0X3Jlc291cmNlX2h1Yl8yOiBcIkNvdXJzZSBHdWlkZXNcIlxuIyAgICB0ZWFjaGVyX2xpc3RfcmVzb3VyY2VfaHViXzM6IFwiZm9yIHNvbHV0aW9ucyB0byBldmVyeSBsZXZlbCwgYW5kIHRoZVwiXG4jICAgIHRlYWNoZXJfbGlzdF9yZXNvdXJjZV9odWJfNDogXCJSZXNvdXJjZSBIdWJcIlxuIyAgICB0ZWFjaGVyX2xpc3RfcmVzb3VyY2VfaHViXzU6IFwiZm9yIGN1cnJpY3VsdW0gZ3VpZGVzLCBhY3Rpdml0aWVzLCBhbmQgbW9yZSFcIlxuIyAgICB0ZWFjaGVyX2FkZGl0aW9uYWxfcXVlc3Rpb25zOiBcIlRoYXTigJlzIGl0ISBJZiB5b3UgbmVlZCBhZGRpdGlvbmFsIGhlbHAgb3IgaGF2ZSBxdWVzdGlvbnMsIHJlYWNoIG91dCB0byBfX3N1cHBvcnRFbWFpbF9fLlwiXG4jICAgIGRvbnRfdXNlX291cl9lbWFpbF9zaWxseTogXCJEb24ndCBwdXQgb3VyIGVtYWlsIGhlcmUhIFB1dCB5b3VyIHBhcmVudCdzIGVtYWlsLlwiXG4jICAgIHdhbnRfY29kZWNvbWJhdF9pbl9zY2hvb2w6IFwiV2FudCB0byBwbGF5IENvZGVDb21iYXQgYWxsIHRoZSB0aW1lP1wiXG4jICAgIGV1X2NvbmZpcm1hdGlvbjogXCJJIGFncmVlIHRvIGFsbG93IENvZGVDb21iYXQgdG8gc3RvcmUgbXkgZGF0YSBvbiBVUyBzZXJ2ZXJzLlwiXG4jICAgIGV1X2NvbmZpcm1hdGlvbl9wbGFjZV9vZl9wcm9jZXNzaW5nOiBcIkxlYXJuIG1vcmUgYWJvdXQgdGhlIHBvc3NpYmxlIHJpc2tzXCJcbiMgICAgZXVfY29uZmlybWF0aW9uX3N0dWRlbnQ6IFwiSWYgeW91IGFyZSBub3Qgc3VyZSwgYXNrIHlvdXIgdGVhY2hlci5cIlxuIyAgICBldV9jb25maXJtYXRpb25faW5kaXZpZHVhbDogXCJJZiB5b3UgZG8gbm90IHdhbnQgdXMgdG8gc3RvcmUgeW91ciBkYXRhIG9uIFVTIHNlcnZlcnMsIHlvdSBjYW4gYWx3YXlzIGtlZXAgcGxheWluZyBhbm9ueW1vdXNseSB3aXRob3V0IHNhdmluZyB5b3VyIGNvZGUuXCJcblxuICByZWNvdmVyOlxuICAgIHJlY292ZXJfYWNjb3VudF90aXRsZTogXCJSZWN1cGVyYXIgQ29udGFcIlxuICAgIHNlbmRfcGFzc3dvcmQ6IFwiRW52aWFyIFBhbGF2cmEtcGFzc2UgZGUgUmVjdXBlcmHDp8Ojb1wiXG4gICAgcmVjb3Zlcnlfc2VudDogXCJFLW1haWwgZGUgcmVjdXBlcmHDp8OjbyBlbnZpYWRvLlwiXG5cbiAgaXRlbXM6XG4gICAgcHJpbWFyeTogXCJQcmltw6FyaW9zXCJcbiAgICBzZWNvbmRhcnk6IFwiU2VjdW5kw6FyaW9zXCJcbiAgICBhcm1vcjogXCJBcm1hZHVyYVwiXG4gICAgYWNjZXNzb3JpZXM6IFwiQWNlc3PDs3Jpb3NcIlxuICAgIG1pc2M6IFwiVsOhcmlvc1wiXG4gICAgYm9va3M6IFwiTGl2cm9zXCJcblxuICBjb21tb246XG4jICAgIGRlZmF1bHRfdGl0bGU6IFwiQ29kZUNvbWJhdCAtIENvZGluZyBnYW1lcyB0byBsZWFybiBQeXRob24gYW5kIEphdmFTY3JpcHRcIlxuIyAgICBkZWZhdWx0X21ldGFfZGVzY3JpcHRpb246IFwiTGVhcm4gdHlwZWQgY29kZSB0aHJvdWdoIGEgcHJvZ3JhbW1pbmcgZ2FtZS4gTGVhcm4gUHl0aG9uLCBKYXZhU2NyaXB0LCBhbmQgSFRNTCBhcyB5b3Ugc29sdmUgcHV6emxlcyBhbmQgbGVhcm4gdG8gbWFrZSB5b3VyIG93biBjb2RpbmcgZ2FtZXMgYW5kIHdlYnNpdGVzLlwiXG4gICAgYmFjazogXCJWb2x0YXJcIiAjIFdoZW4gdXNlZCBhcyBhbiBhY3Rpb24gdmVyYiwgbGlrZSBcIk5hdmlnYXRlIGJhY2t3YXJkXCJcbiAgICBjb21pbmdfc29vbjogXCJCcmV2ZW1lbnRlIVwiXG4gICAgY29udGludWU6IFwiQ29udGludWFyXCIgIyBXaGVuIHVzZWQgYXMgYW4gYWN0aW9uIHZlcmIsIGxpa2UgXCJDb250aW51ZSBmb3J3YXJkXCJcbiAgICBuZXh0OiBcIlByw7N4aW1vXCJcbiAgICBkZWZhdWx0X2NvZGU6IFwiQ8OzZGlnbyBPcmlnaW5hbFwiXG4gICAgbG9hZGluZzogXCJBIENhcnJlZ2FyLi4uXCJcbiAgICBvdmVydmlldzogXCJWaXPDo28gR2VyYWxcIlxuICAgIHByb2Nlc3Npbmc6IFwiQSBwcm9jZXNzYXIuLi5cIlxuICAgIHNvbHV0aW9uOiBcIlNvbHXDp8Ojb1wiXG4gICAgdGFibGVfb2ZfY29udGVudHM6IFwiVGFiZWxhIGRlIENvbnRlw7pkb3NcIlxuICAgIGludHJvOiBcIkludHJvZHXDp8Ojb1wiXG4gICAgc2F2aW5nOiBcIkEgR3VhcmRhci4uLlwiXG4gICAgc2VuZGluZzogXCJBIEVudmlhci4uLlwiXG4gICAgc2VuZDogXCJFbnZpYXJcIlxuICAgIHNlbnQ6IFwiRW52aWFkb1wiXG4gICAgY2FuY2VsOiBcIkNhbmNlbGFyXCJcbiAgICBzYXZlOiBcIkd1YXJkYXJcIlxuICAgIHB1Ymxpc2g6IFwiUHVibGljYXJcIlxuICAgIGNyZWF0ZTogXCJDcmlhclwiXG4gICAgZm9yazogXCJCaWZ1cmNhclwiXG4gICAgcGxheTogXCJKb2dhclwiICMgV2hlbiB1c2VkIGFzIGFuIGFjdGlvbiB2ZXJiLCBsaWtlIFwiUGxheSBuZXh0IGxldmVsXCJcbiAgICByZXRyeTogXCJUZW50YXIgTm92YW1lbnRlXCJcbiAgICBhY3Rpb25zOiBcIkHDp8O1ZXNcIlxuICAgIGluZm86IFwiSW5mb3JtYcOnw7Vlc1wiXG4gICAgaGVscDogXCJBanVkYVwiXG4gICAgd2F0Y2g6IFwiVmlnaWFyXCJcbiAgICB1bndhdGNoOiBcIkRlc3ZpZ2lhclwiXG4gICAgc3VibWl0X3BhdGNoOiBcIlN1Ym1ldGVyIEF0dWFsaXphw6fDo29cIlxuICAgIHN1Ym1pdF9jaGFuZ2VzOiBcIlN1Ym1ldGVyIEFsdGVyYcOnw7Vlc1wiXG4gICAgc2F2ZV9jaGFuZ2VzOiBcIkd1YXJkYXIgQWx0ZXJhw6fDtWVzXCJcbiAgICByZXF1aXJlZF9maWVsZDogXCJuZWNlc3PDoXJpb1wiXG5cbiAgZ2VuZXJhbDpcbiAgICBhbmQ6IFwiZVwiXG4gICAgbmFtZTogXCJOb21lXCJcbiAgICBkYXRlOiBcIkRhdGFcIlxuICAgIGJvZHk6IFwiQ29ycG9cIlxuICAgIHZlcnNpb246IFwiVmVyc8Ojb1wiXG4gICAgcGVuZGluZzogXCJQZW5kZW50ZXNcIlxuICAgIGFjY2VwdGVkOiBcIkFjZWl0ZXNcIlxuICAgIHJlamVjdGVkOiBcIlJlamVpdGFkYXNcIlxuICAgIHdpdGhkcmF3bjogXCJDYW5jZWxhZGFzXCJcbiAgICBhY2NlcHQ6IFwiQWNlaXRhclwiXG4gICAgYWNjZXB0X2FuZF9zYXZlOiBcIkFjZWl0YXImR3VhcmRhclwiXG4gICAgcmVqZWN0OiBcIlJlamVpdGFyXCJcbiAgICB3aXRoZHJhdzogXCJDYW5jZWxhclwiXG4gICAgc3VibWl0dGVyOiBcIlN1Ym1pc3NvclwiXG4gICAgc3VibWl0dGVkOiBcIlN1Ym1ldGV1XCJcbiAgICBjb21taXRfbXNnOiBcIk1lbnNhZ2VtIGRhIFN1Ym1pc3PDo29cIlxuICAgIHZlcnNpb25faGlzdG9yeTogXCJIaXN0w7NyaWNvIGRlIFZlcnPDtWVzXCJcbiAgICB2ZXJzaW9uX2hpc3RvcnlfZm9yOiBcIkhpc3TDs3JpY28gZGUgVmVyc8O1ZXMgcGFyYTogXCJcbiAgICBzZWxlY3RfY2hhbmdlczogXCJTZWxlY2lvbmEgZHVhcyBkYXMgYWx0ZXJhw6fDtWVzIGFiYWl4byBwYXJhIHZlcmVzIGEgZGlmZXJlbsOnYS5cIlxuICAgIHVuZG9fcHJlZml4OiBcIkRlc2ZhemVyXCJcbiAgICB1bmRvX3Nob3J0Y3V0OiBcIihDdHJsK1opXCJcbiAgICByZWRvX3ByZWZpeDogXCJSZWZhemVyXCJcbiAgICByZWRvX3Nob3J0Y3V0OiBcIihDdHJsK1NoaWZ0K1opXCJcbiAgICBwbGF5X3ByZXZpZXc6IFwiSm9nYXIgcHLDqS12aXN1YWxpemHDp8OjbyBkbyBuw612ZWwgYXR1YWxcIlxuICAgIHJlc3VsdDogXCJSZXN1bHRhZG9cIlxuICAgIHJlc3VsdHM6IFwiUmVzdWx0YWRvc1wiXG4gICAgZGVzY3JpcHRpb246IFwiRGVzY3Jpw6fDo29cIlxuICAgIG9yOiBcIm91XCJcbiAgICBzdWJqZWN0OiBcIkFzc3VudG9cIlxuICAgIGVtYWlsOiBcIkUtbWFpbFwiXG4gICAgcGFzc3dvcmQ6IFwiUGFsYXZyYS1wYXNzZVwiXG4gICAgY29uZmlybV9wYXNzd29yZDogXCJDb25maXJtYXIgUGFsYXZyYS1wYXNzZVwiXG4gICAgbWVzc2FnZTogXCJNZW5zYWdlbVwiXG4gICAgY29kZTogXCJDw7NkaWdvXCJcbiAgICBsYWRkZXI6IFwiQ2xhc3NpZmljYcOnw6NvXCJcbiAgICB3aGVuOiBcIlF1YW5kb1wiXG4gICAgb3Bwb25lbnQ6IFwiQWR2ZXJzw6FyaW9cIlxuICAgIHJhbms6IFwiQ2xhc3NpZmljYcOnw6NvXCJcbiAgICBzY29yZTogXCJQb250dWHDp8Ojb1wiXG4gICAgd2luOiBcIlZpdMOzcmlhXCJcbiAgICBsb3NzOiBcIkRlcnJvdGFcIlxuICAgIHRpZTogXCJFbXBhdGVcIlxuICAgIGVhc3k6IFwiRsOhY2lsXCJcbiAgICBtZWRpdW06IFwiTcOpZGlvXCJcbiAgICBoYXJkOiBcIkRpZsOtY2lsXCJcbiAgICBwbGF5ZXI6IFwiSm9nYWRvclwiXG4gICAgcGxheWVyX2xldmVsOiBcIk7DrXZlbFwiICMgTGlrZSBwbGF5ZXIgbGV2ZWwgNSwgbm90IGxpa2UgbGV2ZWw6IER1bmdlb25zIG9mIEtpdGhnYXJkXG4gICAgd2FycmlvcjogXCJHdWVycmVpcm9cIlxuICAgIHJhbmdlcjogXCJBcnF1ZWlyb1wiXG4gICAgd2l6YXJkOiBcIkZlaXRpY2Vpcm9cIlxuICAgIGZpcnN0X25hbWU6IFwiTm9tZVwiXG4gICAgbGFzdF9uYW1lOiBcIkFwZWxpZG9cIlxuICAgIGxhc3RfaW5pdGlhbDogXCLDmmx0aW1hIEluaWNpYWxcIlxuICAgIHVzZXJuYW1lOiBcIk5vbWUgZGUgdXRpbGl6YWRvclwiXG4gICAgY29udGFjdF91czogXCJDb250YWN0YS1ub3NcIlxuICAgIGNsb3NlX3dpbmRvdzogXCJGZWNoYXIgSmFuZWxhXCJcbiAgICBsZWFybl9tb3JlOiBcIlNhYmVyIE1haXNcIlxuICAgIG1vcmU6IFwiTWFpc1wiXG4gICAgZmV3ZXI6IFwiTWVub3NcIlxuICAgIHdpdGg6IFwiY29tXCJcblxuICB1bml0czpcbiAgICBzZWNvbmQ6IFwic2VndW5kb1wiXG4gICAgc2Vjb25kczogXCJzZWd1bmRvc1wiXG4gICAgc2VjOiBcInNlZ1wiXG4gICAgbWludXRlOiBcIm1pbnV0b1wiXG4gICAgbWludXRlczogXCJtaW51dG9zXCJcbiAgICBob3VyOiBcImhvcmFcIlxuICAgIGhvdXJzOiBcImhvcmFzXCJcbiAgICBkYXk6IFwiZGlhXCJcbiAgICBkYXlzOiBcImRpYXNcIlxuICAgIHdlZWs6IFwic2VtYW5hXCJcbiAgICB3ZWVrczogXCJzZW1hbmFzXCJcbiAgICBtb250aDogXCJtw6pzXCJcbiAgICBtb250aHM6IFwibWVzZXNcIlxuICAgIHllYXI6IFwiYW5vXCJcbiAgICB5ZWFyczogXCJhbm9zXCJcblxuICBwbGF5X2xldmVsOlxuICAgIGJhY2tfdG9fbWFwOiBcIlZvbHRhciBhbyBNYXBhXCJcbiAgICBkaXJlY3Rpb25zOiBcIkRpcmXDp8O1ZXNcIlxuICAgIGVkaXRfbGV2ZWw6IFwiRWRpdGFyIE7DrXZlbFwiXG4gICAga2VlcF9sZWFybmluZzogXCJDb250aW51YXIgYSBBcHJlbmRlclwiXG4gICAgZXhwbG9yZV9jb2RlY29tYmF0OiBcIkV4cGxvcmFyIG8gQ29kZUNvbWJhdFwiXG4gICAgZmluaXNoZWRfaG9jOiBcIlRlcm1pbmVpIGEgbWluaGEgSG9yYSBkbyBDw7NkaWdvXCJcbiAgICBnZXRfY2VydGlmaWNhdGU6IFwiT2J0w6ltIG8gdGV1IGNlcnRpZmljYWRvIVwiXG4gICAgbGV2ZWxfY29tcGxldGU6IFwiTsOtdmVsIENvbXBsZXRvXCJcbiAgICBjb21wbGV0ZWRfbGV2ZWw6IFwiTsOtdmVsIENvbXBsZXRvOlwiXG4gICAgY291cnNlOiBcIkN1cnNvOlwiXG4gICAgZG9uZTogXCJDb25jbHVpclwiXG4gICAgbmV4dF9sZXZlbDogXCJQcsOzeGltbyBOw612ZWxcIlxuIyAgICBjb21ib19jaGFsbGVuZ2U6IFwiQ29tYm8gQ2hhbGxlbmdlXCJcbiMgICAgY29uY2VwdF9jaGFsbGVuZ2U6IFwiQ29uY2VwdCBDaGFsbGVuZ2VcIlxuIyAgICBjaGFsbGVuZ2VfdW5sb2NrZWQ6IFwiQ2hhbGxlbmdlIFVubG9ja2VkXCJcbiMgICAgY29tYm9fY2hhbGxlbmdlX3VubG9ja2VkOiBcIkNvbWJvIENoYWxsZW5nZSBVbmxvY2tlZFwiXG4jICAgIGNvbmNlcHRfY2hhbGxlbmdlX3VubG9ja2VkOiBcIkNvbmNlcHQgQ2hhbGxlbmdlIFVubG9ja2VkXCJcbiMgICAgY29uY2VwdF9jaGFsbGVuZ2VfY29tcGxldGU6IFwiQ29uY2VwdCBDaGFsbGVuZ2UgQ29tcGxldGUhXCJcbiMgICAgY29tYm9fY2hhbGxlbmdlX2NvbXBsZXRlOiBcIkNvbWJvIENoYWxsZW5nZSBDb21wbGV0ZSFcIlxuIyAgICBjb21ib19jaGFsbGVuZ2VfY29tcGxldGVfYm9keTogXCJHcmVhdCBqb2IsIGl0IGxvb2tzIGxpa2UgeW91J3JlIHdlbGwgb24geW91ciB3YXkgdG8gdW5kZXJzdGFuZGluZyBfX2NvbmNlcHRfXyFcIlxuIyAgICByZXBsYXlfbGV2ZWw6IFwiUmVwbGF5IExldmVsXCJcbiAgICBjb21ib19jb25jZXB0c191c2VkOiBcIl9fY29tcGxldGVfXy9fX3RvdGFsX18gQ29uY2VpdG9zIFVzYWRvc1wiXG4jICAgIGNvbWJvX2FsbF9jb25jZXB0c191c2VkOiBcIllvdSB1c2VkIGFsbCBjb25jZXB0cyBwb3NzaWJsZSB0byBzb2x2ZSB0aGUgY2hhbGxlbmdlLiBHcmVhdCBqb2IhXCJcbiMgICAgY29tYm9fbm90X2FsbF9jb25jZXB0c191c2VkOiBcIllvdSB1c2VkIF9fY29tcGxldGVfXyBvdXQgb2YgdGhlIF9fdG90YWxfXyBjb25jZXB0cyBwb3NzaWJsZSB0byBzb2x2ZSB0aGUgY2hhbGxlbmdlLiBUcnkgdG8gZ2V0IGFsbCBfX3RvdGFsX18gY29uY2VwdHMgbmV4dCB0aW1lIVwiXG4gICAgc3RhcnRfY2hhbGxlbmdlOiBcIkNvbWXDp2FyIERlc2FmaW9cIlxuICAgIG5leHRfZ2FtZTogXCJQcsOzeGltbyBqb2dvXCJcbiAgICBsYW5ndWFnZXM6IFwiTGluZ3VhZ2Vuc1wiXG4gICAgcHJvZ3JhbW1pbmdfbGFuZ3VhZ2U6IFwiTGluZ3VhZ2VtIGRlIHByb2dyYW1hw6fDo29cIlxuICAgIHNob3dfbWVudTogXCJNb3N0cmFyIG8gbWVudSBkbyBqb2dvXCJcbiAgICBob21lOiBcIkluw61jaW9cIiAjIE5vdCB1c2VkIGFueSBtb3JlLCB3aWxsIGJlIHJlbW92ZWQgc29vbi5cbiAgICBsZXZlbDogXCJOw612ZWxcIiAjIExpa2UgXCJMZXZlbDogRHVuZ2VvbnMgb2YgS2l0aGdhcmRcIlxuICAgIHNraXA6IFwiU2FsdGFyXCJcbiAgICBnYW1lX21lbnU6IFwiTWVudSBkbyBKb2dvXCJcbiAgICByZXN0YXJ0OiBcIlJlaW5pY2lhclwiXG4gICAgZ29hbHM6IFwiT2JqZXRpdm9zXCJcbiAgICBnb2FsOiBcIk9iamV0aXZvXCJcbiMgICAgY2hhbGxlbmdlX2xldmVsX2dvYWxzOiBcIkNoYWxsZW5nZSBMZXZlbCBHb2Fsc1wiXG4jICAgIGNoYWxsZW5nZV9sZXZlbF9nb2FsOiBcIkNoYWxsZW5nZSBMZXZlbCBHb2FsXCJcbiMgICAgY29uY2VwdF9jaGFsbGVuZ2VfZ29hbHM6IFwiQ29uY2VwdCBDaGFsbGVuZ2UgR29hbHNcIlxuIyAgICBjb21ib19jaGFsbGVuZ2VfZ29hbHM6IFwiQ2hhbGxlbmdlIExldmVsIEdvYWxzXCJcbiMgICAgY29uY2VwdF9jaGFsbGVuZ2VfZ29hbDogXCJDb25jZXB0IENoYWxsZW5nZSBHb2FsXCJcbiMgICAgY29tYm9fY2hhbGxlbmdlX2dvYWw6IFwiQ2hhbGxlbmdlIExldmVsIEdvYWxcIlxuICAgIHJ1bm5pbmc6IFwiQSBFeGVjdXRhci4uLlwiXG4gICAgc3VjY2VzczogXCJTdWNlc3NvIVwiXG4gICAgaW5jb21wbGV0ZTogXCJJbmNvbXBsZXRvc1wiXG4gICAgdGltZWRfb3V0OiBcIkZpY2FzdGUgc2VtIHRlbXBvXCJcbiAgICBmYWlsaW5nOiBcIkEgZmFsaGFyXCJcbiAgICByZWxvYWQ6IFwiUmVjYXJyZWdhclwiXG4gICAgcmVsb2FkX3RpdGxlOiBcIlJlY2FycmVnYXIgbyBDw7NkaWdvIFRvZG8/XCJcbiAgICByZWxvYWRfcmVhbGx5OiBcIlRlbnMgYSBjZXJ0ZXphIHF1ZSBxdWVyZXMgcmVjYXJyZWdhciBlc3RlIG7DrXZlbCBkZSB2b2x0YSBhbyBpbsOtY2lvP1wiXG4gICAgcmVsb2FkX2NvbmZpcm06IFwiUmVjYXJyZWdhciBUdWRvXCJcbiAgICB0ZXN0X2xldmVsOiBcIlRlc3RhciBOw612ZWxcIlxuICAgIHZpY3Rvcnk6IFwiVml0w7NyaWFcIlxuICAgIHZpY3RvcnlfdGl0bGVfcHJlZml4OiBcIlwiXG4gICAgdmljdG9yeV90aXRsZV9zdWZmaXg6IFwiIENvbmNsdcOtZG9cIlxuICAgIHZpY3Rvcnlfc2lnbl91cDogXCJDcmlhciBDb250YSBwYXJhIEd1YXJkYXIgUHJvZ3Jlc3NvXCJcbiAgICB2aWN0b3J5X3NpZ25fdXBfcG9rZTogXCJRdWVyZXMgZ3VhcmRhciBvIHRldSBjw7NkaWdvPyBDcmlhIHVtYSBjb250YSBncsOhdGlzIVwiXG4gICAgdmljdG9yeV9yYXRlX3RoZV9sZXZlbDogXCJRdcOjbyBkaXZlcnRpZG8gZm9pIGVzdGUgbsOtdmVsP1wiXG4gICAgdmljdG9yeV9yZXR1cm5fdG9fbGFkZGVyOiBcIlZvbHRhciDDoCBDbGFzc2lmaWNhw6fDo29cIlxuICAgIHZpY3Rvcnlfc2F2aW5nX3Byb2dyZXNzOiBcIkEgR3VhcmRhciBQcm9ncmVzc29cIlxuICAgIHZpY3RvcnlfZ29faG9tZTogXCJJciBwYXJhIG8gSW7DrWNpb1wiXG4gICAgdmljdG9yeV9yZXZpZXc6IFwiQ29udGEtbm9zIG1haXMhXCJcbiAgICB2aWN0b3J5X3Jldmlld19wbGFjZWhvbGRlcjogXCJDb21vIGZvaSBvIG7DrXZlbD9cIlxuICAgIHZpY3RvcnlfaG91cl9vZl9jb2RlX2RvbmU6IFwiVGVybWluYXN0ZT9cIlxuICAgIHZpY3RvcnlfaG91cl9vZl9jb2RlX2RvbmVfeWVzOiBcIlNpbSwgdGVybWluZWkgYSBtaW5oYSBIb3JhIGRvIEPDs2RpZ2/ihKIhXCJcbiAgICB2aWN0b3J5X2V4cGVyaWVuY2VfZ2FpbmVkOiBcIlhQIEdhbmhvXCJcbiAgICB2aWN0b3J5X2dlbXNfZ2FpbmVkOiBcIkdlbWFzIEdhbmhhc1wiXG4gICAgdmljdG9yeV9uZXdfaXRlbTogXCJOb3ZvIEl0ZW1cIlxuICAgIHZpY3RvcnlfbmV3X2hlcm86IFwiTm92byBIZXLDs2lcIlxuIyAgICB2aWN0b3J5X3Zpa2luZ19jb2RlX3NjaG9vbDogXCJIb2x5IHNtb2tlcywgdGhhdCB3YXMgYSBoYXJkIGxldmVsIHlvdSBqdXN0IGJlYXQhIElmIHlvdSBhcmVuJ3QgYWxyZWFkeSBhIHNvZnR3YXJlIGRldmVsb3BlciwgeW91IHNob3VsZCBiZS4gWW91IGp1c3QgZ290IGZhc3QtdHJhY2tlZCBmb3IgYWNjZXB0YW5jZSB3aXRoIFZpa2luZyBDb2RlIFNjaG9vbCwgd2hlcmUgeW91IGNhbiB0YWtlIHlvdXIgc2tpbGxzIHRvIHRoZSBuZXh0IGxldmVsIGFuZCBiZWNvbWUgYSBwcm9mZXNzaW9uYWwgd2ViIGRldmVsb3BlciBpbiAxNCB3ZWVrcy5cIlxuICAgIHZpY3RvcnlfYmVjb21lX2FfdmlraW5nOiBcIlRvcm5hLXRlIHVtIFZpa2luZ1wiXG4gICAgdmljdG9yeV9ub19wcm9ncmVzc19mb3JfdGVhY2hlcnM6IFwiTyBwcm9ncmVzc28gbsOjbyDDqSBndWFyZGFkbyBwYXJhIHByb2Zlc3NvcmVzLiBNYXMgcG9kZXMgYWRpY2lvbmFyIMOgIHR1YSB0dXJtYSB1bWEgY29udGEgZGUgZXN0dWRhbnRlIHBhcmEgdGkuXCJcbiAgICB0b21lX2Nhc3RfYnV0dG9uX3J1bjogXCJFeGVjdXRhclwiXG4gICAgdG9tZV9jYXN0X2J1dHRvbl9ydW5uaW5nOiBcIkEgRXhlY3V0YXJcIlxuICAgIHRvbWVfY2FzdF9idXR0b25fcmFuOiBcIkV4ZWN1dGFkb1wiXG4gICAgdG9tZV9zdWJtaXRfYnV0dG9uOiBcIlN1Ym1ldGVyXCJcbiAgICB0b21lX3JlbG9hZF9tZXRob2Q6IFwiUmVjYXJyZWdhciBvIGPDs2RpZ28gb3JpZ2luYWwgcGFyYSByZWNvbWXDp2FyIG8gbsOtdmVsXCJcbiAgICB0b21lX2F2YWlsYWJsZV9zcGVsbHM6IFwiRmVpdGnDp29zIERpc3BvbsOtdmVpc1wiXG4gICAgdG9tZV95b3VyX3NraWxsczogXCJBcyBUdWFzIEhhYmlsaWRhZGVzXCJcbiAgICBoaW50czogXCJEaWNhc1wiXG4jICAgIHZpZGVvczogXCJWaWRlb3NcIlxuICAgIGhpbnRzX3RpdGxlOiBcIkRpY2Ege3tudW1iZXJ9fVwiXG4gICAgY29kZV9zYXZlZDogXCJDw7NkaWdvIEd1YXJkYWRvXCJcbiAgICBza2lwX3R1dG9yaWFsOiBcIlNhbHRhciAoZXNjKVwiXG4gICAga2V5Ym9hcmRfc2hvcnRjdXRzOiBcIkF0YWxob3MgZGUgVGVjbGFkb1wiXG4gICAgbG9hZGluZ19zdGFydDogXCJJbmljaWFyIE7DrXZlbFwiXG4jICAgIGxvYWRpbmdfc3RhcnRfY29tYm86IFwiU3RhcnQgQ29tYm8gQ2hhbGxlbmdlXCJcbiMgICAgbG9hZGluZ19zdGFydF9jb25jZXB0OiBcIlN0YXJ0IENvbmNlcHQgQ2hhbGxlbmdlXCJcbiAgICBwcm9ibGVtX2FsZXJ0X3RpdGxlOiBcIkNvcnJpZ2UgbyBUZXUgQ8OzZGlnb1wiXG4gICAgdGltZV9jdXJyZW50OiBcIkFnb3JhOlwiXG4gICAgdGltZV90b3RhbDogXCJNw6F4aW1vOlwiXG4gICAgdGltZV9nb3RvOiBcIklyIHBhcmE6XCJcbiAgICBub25fdXNlcl9jb2RlX3Byb2JsZW1fdGl0bGU6IFwiSW1wb3Nzw612ZWwgQ2FycmVnYXIgbyBOw612ZWxcIlxuICAgIGluZmluaXRlX2xvb3BfdGl0bGU6IFwiJ0xvb3AnIEluZmluaXRvIERldGV0YWRvXCJcbiAgICBpbmZpbml0ZV9sb29wX2Rlc2NyaXB0aW9uOiBcIk8gY8OzZGlnbyBpbmljaWFsIHBhcmEgY29uc3RydWlyIG8gbXVuZG8gbnVuY2EgcGFyb3UgZGUgc2VyIGV4ZWN1dGFkby4gUHJvdmF2ZWxtZW50ZSDDqSBtdWl0byBsZW50byBvdSBjb250w6ltIHVtICdsb29wJyBpbmZpbml0by4gT3UgdGFsdmV6IGhhamEgdW0gZXJyby4gUG9kZXMgdGVudGFyIGV4ZWN1dGFyIGVzdGUgY8OzZGlnbyBub3ZhbWVudGUgb3UgcmVpbmljacOhLWxvIHBhcmEgbyBlc3RhZG8gcHJlZGVmaW5pZG8uIFNlIGlzc28gbsOjbyByZXN1bHRhciwgYXZpc2Etbm9zLCBwb3IgZmF2b3IuXCJcbiAgICBjaGVja19kZXZfY29uc29sZTogXCJUYW1iw6ltIHBvZGVzIGFicmlyIGEgY29uc29sYSBwYXJhIHByb2dyYW1hZG9yZXMgcGFyYSB2ZXJlcyBvIHF1ZSBwb3NzYSBlc3RhciBhIGNvcnJlciBtYWwuXCJcbiAgICBjaGVja19kZXZfY29uc29sZV9saW5rOiBcIihpbnN0cnXDp8O1ZXMpXCJcbiAgICBpbmZpbml0ZV9sb29wX3RyeV9hZ2FpbjogXCJUZW50YXIgTm92YW1lbnRlXCJcbiAgICBpbmZpbml0ZV9sb29wX3Jlc2V0X2xldmVsOiBcIlJlaW5pY2lhciBOw612ZWxcIlxuICAgIGluZmluaXRlX2xvb3BfY29tbWVudF9vdXQ6IFwiQ29tZW50YXIgbyBNZXUgQ8OzZGlnb1wiXG4gICAgdGlwX3RvZ2dsZV9wbGF5OiBcIkFsdGVybmEgZW50cmUgSm9nYXIgZSBQYXVzYXIgY29tIEN0cmwrUC5cIlxuICAgIHRpcF9zY3J1Yl9zaG9ydGN1dDogXCJVc2EgQ3RybCtbIHBhcmEgcmVib2JpbmFyIGUgQ3RybCtdIHBhcmEgYXZhbsOnYXIuXCJcbiAgICB0aXBfZ3VpZGVfZXhpc3RzOiBcIkNsaWNhIG5vIGd1aWEsIGRlbnRybyBkbyBtZW51IGRvIGpvZ28gKG5vIHRvcG8gZGEgcMOhZ2luYSksIHBhcmEgaW5mb3JtYcOnw7VlcyDDunRlaXMuXCJcbiAgICB0aXBfb3Blbl9zb3VyY2U6IFwiTyBDb2RlQ29tYmF0IGZheiBwYXJ0ZSBkYSBjb211bmlkYWRlIG9wZW4gc291cmNlIVwiXG4gICAgdGlwX3RlbGxfZnJpZW5kczogXCJFc3TDoXMgYSBnb3N0YXIgZG8gQ29kZUNvbWJhdD8gRmFsYSBkZSBuw7NzIGFvcyB0ZXVzIGFtaWdvcyFcIlxuICAgIHRpcF9iZXRhX2xhdW5jaDogXCJPIENvZGVDb21iYXQgbGFuw6dvdSBvIHNldSBiZXRhIGVtIG91dHVicm8gZGUgMjAxMy5cIlxuICAgIHRpcF90aGlua19zb2x1dGlvbjogXCJQZW5zYSBuYSBzb2x1w6fDo28sIG7Do28gbm8gcHJvYmxlbWEuXCJcbiAgICB0aXBfdGhlb3J5X3ByYWN0aWNlOiBcIlRlb3JpY2FtZW50ZSwgbsOjbyBow6EgZGlmZXJlbsOnYSBlbnRyZSBhIHRlb3JpYSBlIGEgcHLDoXRpY2EuIE1hcyBuYSBwcsOhdGljYSwgaMOhLiAtIFlvZ2kgQmVycmFcIlxuICAgIHRpcF9lcnJvcl9mcmVlOiBcIkjDoSBkdWFzIGZvcm1hcyBkZSBlc2NyZXZlciBwcm9ncmFtYXMgc2VtIGVycm9zOyBhcGVuYXMgYSB0ZXJjZWlyYSBmdW5jaW9uYS4gLSBBbGFuIFBlcmxpc1wiXG4gICAgdGlwX2RlYnVnZ2luZ19wcm9ncmFtOiBcIlNlIGRlcHVyYXIgw6kgbyBwcm9jZXNzbyBkZSByZW1vdmVyIGVycm9zLCBlbnTDo28gcHJvZ3JhbWFyIGRldmUgc2VyIG8gcHJvY2Vzc28gZGUgb3MgaW50cm9kdXppci4gLSBFZHNnZXIgVy4gRGlqa3N0cmFcIlxuICAgIHRpcF9mb3J1bXM6IFwiVmFpIGFvcyBmw7NydW5zIGUgZGl6LW5vcyBvIHF1ZSBwZW5zYXMhXCJcbiAgICB0aXBfYmFieV9jb2RlcnM6IFwiTm8gZnV0dXJvLCBhdMOpIG9zIGJlYsOpcyBzZXLDo28gQXJjb21hZ29zLlwiXG4gICAgdGlwX21vcmFsZV9pbXByb3ZlczogXCJPIGNhcnJlZ2FtZW50byB2YWkgY29udGludWFyIGF0w6kgcXVlIGEgbW9yYWwgbWVsaG9yZS5cIlxuICAgIHRpcF9hbGxfc3BlY2llczogXCJBY3JlZGl0YW1vcyBlbSBvcG9ydHVuaWRhZGVzIGlndWFpcyBwYXJhIHRvZGFzIGFzIGVzcMOpY2llcywgZW0gcmVsYcOnw6NvIGEgYXByZW5kZXJlbSBhIHByb2dyYW1hci5cIlxuICAgIHRpcF9yZXRpY3VsYXRpbmc6IFwiQSByZXRpY3VsYXIgZXNwaW5oYXMuXCJcbiAgICB0aXBfaGFycnk6IFwiw4lzIHVtIEZlaXRpY2Vpcm8sIFwiXG4gICAgdGlwX2dyZWF0X3Jlc3BvbnNpYmlsaXR5OiBcIkNvbSB1bWEgZ3JhbmRlIGhhYmlsaWRhZGUgZGUgcHJvZ3JhbWHDp8OjbyB2ZW0gdW1hIGdyYW5kZSByZXNwb25zYWJpbGlkYWRlIGRlIGRlcHVyYcOnw6NvLlwiXG4gICAgdGlwX211bmNoa2luOiBcIlNlIG7Do28gY29tZXJlcyBvcyB0ZXVzIHZlZ2V0YWlzLCB1bSBvZ3JlIHZpcsOhIGF0csOhcyBkZSB0aSBlbnF1YW50byBlc3RpdmVyZXMgYSBkb3JtaXIuXCJcbiAgICB0aXBfYmluYXJ5OiBcIkjDoSBhcGVuYXMgMTAgdGlwb3MgZGUgcGVzc29hcyBubyBtdW5kbzogYXF1ZWxhcyBxdWUgcGVyY2ViZW0gYmluw6FyaW8gZSBhcXVlbGFzIHF1ZSBuw6NvLlwiXG4gICAgdGlwX2NvbW1pdG1lbnRfeW9kYTogXCJVbSBwcm9ncmFtYWRvciBkZXZlIHRlciBvIGNvbXByb21pc3NvIG1haXMgcHJvZnVuZG8sIGEgbWVudGUgbWFpcyBzw6lyaWEuIH4gWW9kYVwiXG4gICAgdGlwX25vX3RyeTogXCJGYXplci4gT3UgbsOjbyBmYXplci4gTsOjbyBow6EgbmVuaHVtIHRlbnRhci4gLSBZb2RhXCJcbiAgICB0aXBfcGF0aWVuY2U6IFwiUGFjacOqbmNpYSB0dSBkZXZlcyB0ZXIsIGpvdmVtIFBhZGF3YW4uIC0gWW9kYVwiXG4gICAgdGlwX2RvY3VtZW50ZWRfYnVnOiBcIlVtIGVycm8gZG9jdW1lbnRhZG8gbsOjbyDDqSB1bSBlcnJvOyDDqSB1bWEgZnVuY2lvbmFsaWRhZGUuXCJcbiAgICB0aXBfaW1wb3NzaWJsZTogXCJQYXJlY2Ugc2VtcHJlIGltcG9zc8OtdmVsIGF0w6kgc2VyIGZlaXRvLiAtIE5lbHNvbiBNYW5kZWxhXCJcbiAgICB0aXBfdGFsa19pc19jaGVhcDogXCJGYWxhciDDqSBmw6FjaWwuIE1vc3RyYS1tZSBvIGPDs2RpZ28uIC0gTGludXMgVG9ydmFsZHNcIlxuICAgIHRpcF9maXJzdF9sYW5ndWFnZTogXCJBIGNvaXNhIG1haXMgZGVzYXN0cm9zYSBxdWUgcG9kZXMgYXByZW5kZXIgw6kgYSB0dWEgcHJpbWVpcmEgbGluZ3VhZ2VtIGRlIHByb2dyYW1hw6fDo28uIC0gQWxhbiBLYXlcIlxuICAgIHRpcF9oYXJkd2FyZV9wcm9ibGVtOiBcIlA6IFF1YW50b3MgcHJvZ3JhbWFkb3JlcyBzw6NvIG5lY2Vzc8OhcmlvcyBwYXJhIG11ZGFyIHVtYSBsw6JtcGFkYT8gIFI6IE5lbmh1bSwgw6kgdW0gcHJvYmxlbWEgZGUgJ2hhcmR3YXJlJy5cIlxuICAgIHRpcF9ob2ZzdGFkdGVyc19sYXc6IFwiTGVpIGRlIEhvZnN0YWR0ZXI6IFR1ZG8gZGVtb3JhIHNlbXByZSBtYWlzIGRvIHF1ZSBwZW5zYXMsIG1lc21vIHF1YW5kbyB0ZW5zIGVtIGNvbnRhIGEgTGVpIGRlIEhvZnN0YWR0ZXIuXCJcbiAgICB0aXBfcHJlbWF0dXJlX29wdGltaXphdGlvbjogXCJVbWEgb3RpbWl6YcOnw6NvIHBlcm1hdHVyYSDDqSBhIHJhw616IGRlIHRvZG8gbyBtYWwuIC0gRG9uYWxkIEtudXRoXCJcbiAgICB0aXBfYnJ1dGVfZm9yY2U6IFwiUXVhbmRvIGVtIGTDunZpZGEsIHVzYSBhIGZvcsOnYSBicnV0YS4gLSBLZW4gVGhvbXBzb25cIlxuICAgIHRpcF9leHRyYXBvbGF0aW9uOiBcIkjDoSBhcGVuYXMgZG9pcyB0aXBvcyBkZSBwZXNzb2FzOiBhcXVlbGFzIHF1ZSBjb25zZWd1ZW0gdGlyYXIgdW1hIGNvbmNsdXPDo28gYSBwYXJ0aXIgZGUgZGFkb3MgcmVkdXppZG9zLi4uXCJcbiAgICB0aXBfc3VwZXJwb3dlcjogXCJBIHByb2dyYW1hw6fDo28gw6kgYSBjb2lzYSBtYWlzIHByw7N4aW1hIGRlIHVtIHN1cGVycG9kZXIgcXVlIHRlbW9zLlwiXG4gICAgdGlwX2NvbnRyb2xfZGVzdGlueTogXCJFbSBvcGVuIHNvdXJjZSBhIHPDqXJpbywgdGVucyBvIGRpcmVpdG8gZGUgY29udHJvbGFyZXMgbyB0ZXUgcHLDs3ByaW8gZGVzdGluby4gLSBMaW51cyBUb3J2YWxkc1wiXG4gICAgdGlwX25vX2NvZGU6IFwiTmVuaHVtIGPDs2RpZ28gw6kgbWFpcyByw6FwaWRvIHF1ZSBjw7NkaWdvIG7Do28gZXhpc3RlbnRlLlwiXG4gICAgdGlwX2NvZGVfbmV2ZXJfbGllczogXCJPIGPDs2RpZ28gbnVuY2EgbWVudGUsIG1hcyBvcyBjb21lbnTDoXJpb3Mgw6BzIHZlemVzIHNpbS4g4oCUIFJvbiBKZWZmcmllc1wiXG4gICAgdGlwX3JldXNhYmxlX3NvZnR3YXJlOiBcIkFudGVzIGRlIHVtIHNvZnR3YXJlIHBvZGVyIHNlciByZXV0aWxpesOhdmVsLCBwcmltZWlybyB0ZW0gZGUgc2VyIHV0aWxpesOhdmVsLlwiXG4gICAgdGlwX29wdGltaXphdGlvbl9vcGVyYXRvcjogXCJUb2RhcyBhcyBsaW5ndWFnZW5zIHTDqm0gdW0gb3BlcmFkb3IgZGUgb3RpbWl6YcOnw6NvLiBOYSBtYWlvciBwYXJ0ZSBkZWxhcyBlc3NlIG9wZXJhZG9yIMOpIOKAmC8v4oCZLlwiXG4gICAgdGlwX2xpbmVzX29mX2NvZGU6IFwiTWVkaXIgbyBwcm9ncmVzc28gZW0gcHJvZ3JhbWHDp8OjbyBwZWxvIG7Dum1lcm8gZGUgbGluaGFzIGRlIGPDs2RpZ28gw6kgY29tbyBtZWRpciBvIHByb2dyZXNzbyBkYSBjb25zdHJ1w6fDo28gZGUgdW0gYXZpw6NvIHBlbG8gcGVzby4g4oCUIEJpbGwgR2F0ZXNcIlxuICAgIHRpcF9zb3VyY2VfY29kZTogXCJRdWVybyBtdWRhciBvIG11bmRvLCBtYXMgbsOjbyBow6EgbWFuZWlyYSBkZSBtZSBkYXJlbSBvIGPDs2RpZ28tZm9udGUuXCJcbiAgICB0aXBfamF2YXNjcmlwdF9qYXZhOiBcIkphdmEgw6kgcGFyYSBKYXZhU2NyaXB0IG8gbWVzbW8gcXVlIENhcnJvIChDYXIpIHBhcmEgVGFwZXRlIChDYXJwZXQpLiAtIENocmlzIEhlaWxtYW5uXCJcbiAgICB0aXBfbW92ZV9mb3J3YXJkOiBcIkZhw6dhcyBvIHF1ZSBmaXplcmVzLCBzZWd1ZSBlbSBmcmVudGUuIC0gTWFydGluIEx1dGhlciBLaW5nIEpyXCJcbiAgICB0aXBfZ29vZ2xlOiBcIlRlbnMgdW0gcHJvYmxlbWEgcXVlIG7Do28gY29uc2VndWVzIHJlc29sdmVyPyBWYWkgYW8gR29vZ2xlIVwiXG4gICAgdGlwX2FkZGluZ19ldmlsOiBcIkEgYWNyZXNjZW50YXIgdW1hIHBpdGFkYSBkZSBtYWwuXCJcbiAgICB0aXBfaGF0ZV9jb21wdXRlcnM6IFwiw4kgbyBwcm9ibGVtYSBkYXMgcGVzc29hcyBxdWUgYWNoYW0gcXVlIG9kZWlhbSBjb3B1dGFkb3Jlcy4gTyBxdWUgZWxhcyBvZGVpYW0gbWVzbW8gc8OjbyBtYXVzIHByb2dyYW1hZG9yZXMuIC0gTGFycnkgTml2ZW5cIlxuICAgIHRpcF9vcGVuX3NvdXJjZV9jb250cmlidXRlOiBcIlBvZGVzIGFqdWRhciBhIG1lbGhvcmFyIG8gQ29kZUNvbWJhdCFcIlxuICAgIHRpcF9yZWN1cnNlOiBcIkl0ZXJhciDDqSBodW1hbm8sIHJlY3Vyc2FyIMOpIGRpdmluby4gLSBMLiBQZXRlciBEZXV0c2NoXCJcbiAgICB0aXBfZnJlZV95b3VyX21pbmQ6IFwiVGVucyBkZSBsaWJlcnRhciB0dWRvLCBOZW8uIE1lZG8sIGTDunZpZGEgZSBkZXNjcmVuw6dhLiBMaWJlcnRhIGEgdHVhIG1lbnRlLiAtIE1vcnBoZXVzXCJcbiAgICB0aXBfc3Ryb25nX29wcG9uZW50czogXCJBdMOpIG8gbWFpcyBmb3J0ZSBkb3MgYWR2ZXJzw6FyaW9zIHRlbSB1bWEgZnJhcXVlemEuIC0gSXRhY2hpIFVjaGloYVwiXG4gICAgdGlwX3BhcGVyX2FuZF9wZW46IFwiQW50ZXMgZGUgY29tZcOnYXJlcyBhIHByb2dyYW1hciwgcG9kZXMgc2VtcHJlIHBsYW5lYXIgY29tIHVtYSBmb2xoYSBkZSBwYXBlbCBlIHVtYSBjYW5ldGEuXCJcbiAgICB0aXBfc29sdmVfdGhlbl93cml0ZTogXCJQcmltZWlybywgcmVzb2x2ZSBvIHByb2JsZW1hLiBEZXBvaXMsIGVzY3JldmUgbyBjw7NkaWdvLiAtIEpvaG4gSm9obnNvblwiXG4gICAgdGlwX2NvbXBpbGVyX2lnbm9yZXNfY29tbWVudHM6IFwiw4BzIHZlemVzIGFjaG8gcXVlIG8gY29tcGlsYWRvciBpZ25vcmEgb3MgbWV1cyBjb21lbnTDoXJpb3MuXCJcbiAgICB0aXBfdW5kZXJzdGFuZF9yZWN1cnNpb246IFwiQSDDum5pY2EgZm9ybWEgZGUgZW50ZW5kZXIgcmVjdXJzw6NvIMOpIGVudGVuZGVyIHJlY3Vyc8Ojby5cIlxuIyAgICB0aXBfbGlmZV9hbmRfcG9seW1vcnBoaXNtOiBcIk9wZW4gU291cmNlIGlzIGxpa2UgYSB0b3RhbGx5IHBvbHltb3JwaGljIGhldGVyb2dlbmVvdXMgc3RydWN0dXJlOiBBbGwgdHlwZXMgYXJlIHdlbGNvbWUuXCJcbiMgICAgdGlwX21pc3Rha2VzX3Byb29mX29mX3RyeWluZzogXCJNaXN0YWtlcyBpbiB5b3VyIGNvZGUgYXJlIGp1c3QgcHJvb2YgdGhhdCB5b3UgYXJlIHRyeWluZy5cIlxuIyAgICB0aXBfYWRkaW5nX29yZ3JlczogXCJSb3VuZGluZyB1cCBvZ3Jlcy5cIlxuIyAgICB0aXBfc2hhcnBlbmluZ19zd29yZHM6IFwiU2hhcnBlbmluZyB0aGUgc3dvcmRzLlwiXG4jICAgIHRpcF9yYXRhdG91aWxsZTogXCJZb3UgbXVzdCBub3QgbGV0IGFueW9uZSBkZWZpbmUgeW91ciBsaW1pdHMgYmVjYXVzZSBvZiB3aGVyZSB5b3UgY29tZSBmcm9tLiBZb3VyIG9ubHkgbGltaXQgaXMgeW91ciBzb3VsLiAtIEd1c3RlYXUsIFJhdGF0b3VpbGxlXCJcbiMgICAgdGlwX25lbW86IFwiV2hlbiBsaWZlIGdldHMgeW91IGRvd24sIHdhbnQgdG8ga25vdyB3aGF0IHlvdSd2ZSBnb3R0YSBkbz8gSnVzdCBrZWVwIHN3aW1taW5nLCBqdXN0IGtlZXAgc3dpbW1pbmcuIC0gRG9yeSwgRmluZGluZyBOZW1vXCJcbiMgICAgdGlwX2ludGVybmV0X3dlYXRoZXI6IFwiSnVzdCBtb3ZlIHRvIHRoZSBpbnRlcm5ldCwgaXQncyBncmVhdCBoZXJlLiBXZSBnZXQgdG8gbGl2ZSBpbnNpZGUgd2hlcmUgdGhlIHdlYXRoZXIgaXMgYWx3YXlzIGF3ZXNvbWUuIC0gSm9obiBHcmVlblwiXG4jICAgIHRpcF9uZXJkczogXCJOZXJkcyBhcmUgYWxsb3dlZCB0byBsb3ZlIHN0dWZmLCBsaWtlIGp1bXAtdXAtYW5kLWRvd24taW4tdGhlLWNoYWlyLWNhbid0LWNvbnRyb2wteW91cnNlbGYgbG92ZSBpdC4gLSBKb2huIEdyZWVuXCJcbiMgICAgdGlwX3NlbGZfdGF1Z2h0OiBcIkkgdGF1Z2h0IG15c2VsZiA5MCUgb2Ygd2hhdCBJJ3ZlIGxlYXJuZWQuIEFuZCB0aGF0J3Mgbm9ybWFsISAtIEhhbmsgR3JlZW5cIlxuIyAgICB0aXBfbHVuYV9sb3ZlZ29vZDogXCJEb24ndCB3b3JyeSwgeW91J3JlIGp1c3QgYXMgc2FuZSBhcyBJIGFtLiAtIEx1bmEgTG92ZWdvb2RcIlxuIyAgICB0aXBfZ29vZF9pZGVhOiBcIlRoZSBiZXN0IHdheSB0byBoYXZlIGEgZ29vZCBpZGVhIGlzIHRvIGhhdmUgYSBsb3Qgb2YgaWRlYXMuIC0gTGludXMgUGF1bGluZ1wiXG4jICAgIHRpcF9wcm9ncmFtbWluZ19ub3RfYWJvdXRfY29tcHV0ZXJzOiBcIkNvbXB1dGVyIFNjaWVuY2UgaXMgbm8gbW9yZSBhYm91dCBjb21wdXRlcnMgdGhhbiBhc3Ryb25vbXkgaXMgYWJvdXQgdGVsZXNjb3Blcy4gLSBFZHNnZXIgRGlqa3N0cmFcIlxuIyAgICB0aXBfbXVsYW46IFwiQmVsaWV2ZSB5b3UgY2FuLCB0aGVuIHlvdSB3aWxsLiAtIE11bGFuXCJcbiAgICBwcm9qZWN0X2NvbXBsZXRlOiBcIlByb2pldG8gQ29tcGxldGFkbyFcIlxuIyAgICBzaGFyZV90aGlzX3Byb2plY3Q6IFwiU2hhcmUgdGhpcyBwcm9qZWN0IHdpdGggZnJpZW5kcyBvciBmYW1pbHk6XCJcbiAgICByZWFkeV90b19zaGFyZTogXCJQcm9udG8gcGFyYSBwdWJsaWNhcmVzIG8gdGV1IHByb2pldG8/XCJcbiMgICAgY2xpY2tfcHVibGlzaDogXCJDbGljayBcXFwiUHVibGlzaFxcXCIgdG8gbWFrZSBpdCBhcHBlYXIgaW4gdGhlIGNsYXNzIGdhbGxlcnksIHRoZW4gY2hlY2sgb3V0IHdoYXQgeW91ciBjbGFzc21hdGVzIGJ1aWx0ISBZb3UgY2FuIGNvbWUgYmFjayBhbmQgY29udGludWUgdG8gd29yayBvbiB0aGlzIHByb2plY3QuIEFueSBmdXJ0aGVyIGNoYW5nZXMgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHNhdmVkIGFuZCBzaGFyZWQgd2l0aCB5b3VyIGNsYXNzbWF0ZXMuXCJcbiMgICAgYWxyZWFkeV9wdWJsaXNoZWRfcHJlZml4OiBcIllvdXIgY2hhbmdlcyBoYXZlIGJlZW4gcHVibGlzaGVkIHRvIHRoZSBjbGFzcyBnYWxsZXJ5LlwiXG4jICAgIGFscmVhZHlfcHVibGlzaGVkX3N1ZmZpeDogXCJLZWVwIGV4cGVyaW1lbnRpbmcgYW5kIG1ha2luZyB0aGlzIHByb2plY3QgZXZlbiBiZXR0ZXIsIG9yIHNlZSB3aGF0IHRoZSByZXN0IG9mIHlvdXIgY2xhc3MgaGFzIGJ1aWx0ISBZb3VyIGNoYW5nZXMgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHNhdmVkIGFuZCBzaGFyZWQgd2l0aCB5b3VyIGNsYXNzbWF0ZXMuXCJcbiAgICB2aWV3X2dhbGxlcnk6IFwiVmVyIEdhbGVyaWFcIlxuICAgIHByb2plY3RfcHVibGlzaGVkX25vdHk6IFwiTyB0ZXUgbsOtdmVsIGZvaSBwdWJsaWNhZG8hXCJcbiAgICBrZWVwX2VkaXRpbmc6IFwiQ29udGludWFyIGEgRWRpdGFyXCJcbiMgICAgbGVhcm5fbmV3X2NvbmNlcHRzOiBcIkxlYXJuIG5ldyBjb25jZXB0c1wiXG4jICAgIHdhdGNoX2FfdmlkZW86IFwiV2F0Y2ggYSB2aWRlbyBvbiBfX2NvbmNlcHRfbmFtZV9fXCJcbiMgICAgY29uY2VwdF91bmxvY2tlZDogXCJDb25jZXB0IFVubG9ja2VkXCJcbiMgICAgdXNlX2F0X2xlYXN0X29uZV9jb25jZXB0OiBcIlVzZSBhdCBsZWFzdCBvbmUgY29uY2VwdDogXCJcblxuICBhcGlzOlxuICAgIG1ldGhvZHM6IFwiTcOpdG9kb3NcIlxuICAgIGV2ZW50czogXCJFdmVudG9zXCJcbiMgICAgaGFuZGxlcnM6IFwiSGFuZGxlcnNcIlxuICAgIHByb3BlcnRpZXM6IFwiUHJvcHJpZWRhZGVzXCJcbiMgICAgc25pcHBldHM6IFwiU25pcHBldHNcIlxuIyAgICBzcGF3bmFibGU6IFwiU3Bhd25hYmxlXCJcbiAgICBodG1sOiBcIkhUTUxcIlxuICAgIG1hdGg6IFwiTWF0ZW3DoXRpY2FcIlxuIyAgICBhcnJheTogXCJBcnJheVwiXG4gICAgb2JqZWN0OiBcIk9iamV0b1wiXG4jICAgIHN0cmluZzogXCJTdHJpbmdcIlxuICAgIGZ1bmN0aW9uOiBcIkZ1bsOnw6NvXCJcbiAgICB2ZWN0b3I6IFwiVmV0b3JcIlxuICAgIGRhdGU6IFwiRGF0YVwiXG4gICAganF1ZXJ5OiBcImpRdWVyeVwiXG4gICAganNvbjogXCJKU09OXCJcbiAgICBudW1iZXI6IFwiTsO6bWVyb1wiXG4gICAgd2ViamF2YXNjcmlwdDogXCJKYXZhU2NyaXB0XCJcblxuIyAgYW1hem9uX2hvYzpcbiMgICAgdGl0bGU6IFwiS2VlcCBMZWFybmluZyB3aXRoIEFtYXpvbiFcIlxuIyAgICBjb25ncmF0czogXCJDb25ncmF0dWxhdGlvbnMgb24gY29ucXVlcmluZyB0aGF0IGNoYWxsZW5naW5nIEhvdXIgb2YgQ29kZSFcIlxuIyAgICBlZHVjYXRlXzE6IFwiTm93LCBrZWVwIGxlYXJuaW5nIGFib3V0IGNvZGluZyBhbmQgY2xvdWQgY29tcHV0aW5nIHdpdGggQVdTIEVkdWNhdGUsIGFuIGV4Y2l0aW5nLCBmcmVlIHByb2dyYW0gZnJvbSBBbWF6b24gZm9yIGJvdGggc3R1ZGVudHMgYW5kIHRlYWNoZXJzLiBXaXRoIEFXUyBFZHVjYXRlLCB5b3UgY2FuIGVhcm4gY29vbCBiYWRnZXMgYXMgeW91IGxlYXJuIGFib3V0IHRoZSBiYXNpY3Mgb2YgdGhlIGNsb3VkIGFuZCBjdXR0aW5nLWVkZ2UgdGVjaG5vbG9naWVzIHN1Y2ggYXMgZ2FtaW5nLCB2aXJ0dWFsIHJlYWxpdHksIGFuZCBBbGV4YS5cIlxuIyAgICBlZHVjYXRlXzI6IFwiTGVhcm4gbW9yZSBhbmQgc2lnbiB1cCBoZXJlXCJcbiMgICAgZnV0dXJlX2VuZ18xOiBcIllvdSBjYW4gYWxzbyB0cnkgdG8gYnVpbGQgeW91ciBvd24gc2Nob29sIGZhY3RzIHNraWxsIGZvciBBbGV4YVwiXG4jICAgIGZ1dHVyZV9lbmdfMjogXCJoZXJlXCJcbiMgICAgZnV0dXJlX2VuZ18zOiBcIihkZXZpY2UgaXMgbm90IHJlcXVpcmVkKS4gVGhpcyBBbGV4YSBhY3Rpdml0eSBpcyBicm91Z2h0IHRvIHlvdSBieSB0aGVcIlxuIyAgICBmdXR1cmVfZW5nXzQ6IFwiQW1hem9uIEZ1dHVyZSBFbmdpbmVlclwiXG4jICAgIGZ1dHVyZV9lbmdfNTogXCJwcm9ncmFtIHdoaWNoIGNyZWF0ZXMgbGVhcm5pbmcgYW5kIHdvcmsgb3Bwb3J0dW5pdGllcyBmb3IgYWxsIEstMTIgc3R1ZGVudHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgd2hvIHdpc2ggdG8gcHVyc3VlIGNvbXB1dGVyIHNjaWVuY2UuXCJcblxuICBwbGF5X2dhbWVfZGV2X2xldmVsOlxuICAgIGNyZWF0ZWRfYnk6IFwiQ3JpYWRvIHBvciB7e25hbWV9fVwiXG4gICAgY3JlYXRlZF9kdXJpbmdfaG9jOiBcIkNyaWFkbyBkdXJhbnRlIGEgSG9yYSBkbyBDw7NkaWdvXCJcbiAgICByZXN0YXJ0OiBcIlJlY29tZcOnYXIgTsOtdmVsXCJcbiAgICBwbGF5OiBcIkpvZ2FyIE7DrXZlbFwiXG4gICAgcGxheV9tb3JlX2NvZGVjb21iYXQ6IFwiSm9nYXIgTWFpcyBDb2RlQ29tYmF0XCJcbiAgICBkZWZhdWx0X3N0dWRlbnRfaW5zdHJ1Y3Rpb25zOiBcIkNsaWNhIHBhcmEgY29udHJvbGFyZXMgbyB0ZXUgaGVyw7NpIGUgZ2FuaGFyZXMgbyB0ZXUgam9nbyFcIlxuICAgIGdvYWxfc3Vydml2ZTogXCJTb2JyZXZpdmUuXCJcbiAgICBnb2FsX3N1cnZpdmVfdGltZTogXCJTb2JyZXZpdmUgcG9yIF9fc2Vjb25kc19fIHNlZ3VuZG9zLlwiXG4gICAgZ29hbF9kZWZlYXQ6IFwiRGVycm90YSB0b2RvcyBvcyBpbmltaWdvcy5cIlxuICAgIGdvYWxfZGVmZWF0X2Ftb3VudDogXCJEZXJyb3RhIF9fYW1vdW50X18gaW5pbWlnb3MuXCJcbiMgICAgZ29hbF9tb3ZlOiBcIk1vdmUgdG8gYWxsIHRoZSByZWQgWCBtYXJrcy5cIlxuIyAgICBnb2FsX2NvbGxlY3Q6IFwiQ29sbGVjdCBhbGwgdGhlIGl0ZW1zLlwiXG4jICAgIGdvYWxfY29sbGVjdF9hbW91bnQ6IFwiQ29sbGVjdCBfX2Ftb3VudF9fIGl0ZW1zLlwiXG5cbiAgZ2FtZV9tZW51OlxuICAgIGludmVudG9yeV90YWI6IFwiSW52ZW50w6FyaW9cIlxuICAgIHNhdmVfbG9hZF90YWI6IFwiR3VhcmRhci9DYXJyZWdhclwiXG4gICAgb3B0aW9uc190YWI6IFwiT3DDp8O1ZXNcIlxuICAgIGd1aWRlX3RhYjogXCJHdWlhXCJcbiAgICBndWlkZV92aWRlb190dXRvcmlhbDogXCJUdXRvcmlhbCBlbSBWw61kZW9cIlxuICAgIGd1aWRlX3RpcHM6IFwiRGljYXNcIlxuICAgIG11bHRpcGxheWVyX3RhYjogXCJNdWx0aWpvZ2Fkb3JcIlxuICAgIGF1dGhfdGFiOiBcIlJlZ2lzdGEtdGVcIlxuICAgIGludmVudG9yeV9jYXB0aW9uOiBcIkVxdWlwYSBvIHRldSBoZXLDs2lcIlxuICAgIGNob29zZV9oZXJvX2NhcHRpb246IFwiRXNjb2xoZSBvIGhlcsOzaSwgYSBsaW5ndWFnZW1cIlxuICAgIG9wdGlvbnNfY2FwdGlvbjogXCJDb25maWd1cmEgYXMgZGVmaW5pw6fDtWVzXCJcbiAgICBndWlkZV9jYXB0aW9uOiBcIkRvY3VtZW50b3MgZSBkaWNhc1wiXG4gICAgbXVsdGlwbGF5ZXJfY2FwdGlvbjogXCJKb2dhIGNvbSBhbWlnb3MhXCJcbiAgICBhdXRoX2NhcHRpb246IFwiR3VhcmRhIG8gdGV1IHByb2dyZXNzby5cIlxuXG4gIGxlYWRlcmJvYXJkOlxuICAgIHZpZXdfb3RoZXJfc29sdXRpb25zOiBcIlZlciBUYWJlbGFzIGRlIENsYXNzaWZpY2HDp8Ojb1wiXG4gICAgc2NvcmVzOiBcIlBvbnR1YcOnw7Vlc1wiXG4gICAgdG9wX3BsYXllcnM6IFwiTWVsaG9yZXMgSm9nYWRvcmVzIHBvclwiXG4gICAgZGF5OiBcIkhvamVcIlxuICAgIHdlZWs6IFwiRXN0YSBTZW1hbmFcIlxuICAgIGFsbDogXCJTZW1wcmVcIlxuICAgIGxhdGVzdDogXCJNYWlzIFJlY2VudGVzXCJcbiAgICB0aW1lOiBcIlRlbXBvIGRlIFZpdMOzcmlhXCJcbiAgICBkYW1hZ2VfdGFrZW46IFwiRGFubyBSZWNlYmlkb1wiXG4gICAgZGFtYWdlX2RlYWx0OiBcIkRhbm8gSW5mbGlnaWRvXCJcbiAgICBkaWZmaWN1bHR5OiBcIkRpZmljdWxkYWRlXCJcbiAgICBnb2xkX2NvbGxlY3RlZDogXCJPdXJvIFJlY29saGlkb1wiXG4jICAgIHN1cnZpdmFsX3RpbWU6IFwiU3Vydml2ZWRcIlxuICAgIGRlZmVhdGVkOiBcIkluaW1pZ29zIERlcnJvdGFkb3NcIlxuICAgIGNvZGVfbGVuZ3RoOiBcIkxpbmhhcyBkZSBDw7NkaWdvXCJcbiAgICBzY29yZV9kaXNwbGF5OiBcIl9fc2NvcmVUeXBlX186IF9fc2NvcmVfX1wiXG5cbiAgaW52ZW50b3J5OlxuICAgIGVxdWlwcGVkX2l0ZW06IFwiRXF1aXBhZG9cIlxuICAgIHJlcXVpcmVkX3B1cmNoYXNlX3RpdGxlOiBcIk5lY2Vzc8OhcmlvXCJcbiAgICBhdmFpbGFibGVfaXRlbTogXCJEaXNwb27DrXZlbFwiXG4gICAgcmVzdHJpY3RlZF90aXRsZTogXCJSZXN0cml0b1wiXG4gICAgc2hvdWxkX2VxdWlwOiBcIihjbGljYSBkdWFzIHZlemVzIHBhcmEgZXF1aXBhcmVzKVwiXG4gICAgZXF1aXBwZWQ6IFwiKGVxdWlwYWRvKVwiXG4gICAgbG9ja2VkOiBcIihibG9xdWVhZG8pXCJcbiAgICByZXN0cmljdGVkOiBcIihyZXN0cml0byBuZXN0ZSBuw612ZWwpXCJcbiAgICBlcXVpcDogXCJFcXVpcGFyXCJcbiAgICB1bmVxdWlwOiBcIkRlc2VxdWlwYXJcIlxuICAgIHdhcnJpb3Jfb25seTogXCJBcGVuYXMgR3VlcnJlaXJvc1wiXG4gICAgcmFuZ2VyX29ubHk6IFwiQXBlbmFzIEFycXVlaXJvc1wiXG4gICAgd2l6YXJkX29ubHk6IFwiQXBlbmFzIEZlaXRpY2Vpcm9zXCJcblxuICBidXlfZ2VtczpcbiAgICBmZXdfZ2VtczogXCJBbGd1bWFzIGdlbWFzXCJcbiAgICBwaWxlX2dlbXM6IFwiUGlsaGEgZGUgZ2VtYXNcIlxuICAgIGNoZXN0X2dlbXM6IFwiQXJjYSBkZSBnZW1hc1wiXG4gICAgcHVyY2hhc2luZzogXCJBIEFkcXVpcmlyLi4uXCJcbiAgICBkZWNsaW5lZDogXCJPIHRldSBjYXJ0w6NvIGZvaSByZWN1c2Fkby5cIlxuICAgIHJldHJ5aW5nOiBcIkVycm8gZG8gc2Vydmlkb3IsIGEgdGVudGFyIG5vdmFtZW50ZS5cIlxuICAgIHByb21wdF90aXRsZTogXCJTZW0gR2VtYXMgU3VmaWNpZW50ZXNcIlxuICAgIHByb21wdF9ib2R5OiBcIlF1ZXJlcyBvYnRlciBtYWlzP1wiXG4gICAgcHJvbXB0X2J1dHRvbjogXCJFbnRyYSBuYSBMb2phXCJcbiAgICByZWNvdmVyZWQ6IFwiQSBjb21wcmEgZGUgZ2VtYXMgYW50ZXJpb3IgZm9pIHJlY3VwZXJhZGEuIFBvciBmYXZvciBhdHVhbGl6YSBhIHDDoWdpbmEuXCJcbiAgICBwcmljZTogXCJ4e3tnZW1zfX0gLyBtw6pzXCJcbiAgICBidXlfcHJlbWl1bTogXCJDb21wcmFyICdQcmVtaXVtJ1wiXG4gICAgcHVyY2hhc2U6IFwiQWRxdWlyaXJcIlxuICAgIHB1cmNoYXNlZDogXCJBZHF1aXJpZG9cIlxuXG4gIHN1YnNjcmliZV9mb3JfZ2VtczpcbiAgICBwcm9tcHRfdGl0bGU6IFwiR2VtYXMgSW5zdWZpY2llbnRlcyFcIlxuIyAgICBwcm9tcHRfYm9keTogXCJTdWJzY3JpYmUgdG8gUHJlbWl1bSB0byBnZXQgZ2VtcyBhbmQgYWNjZXNzIHRvIGV2ZW4gbW9yZSBsZXZlbHMhXCJcblxuICBlYXJuX2dlbXM6XG4gICAgcHJvbXB0X3RpdGxlOiBcIkdlbWFzIEluc3VmaWNpZW50ZXNcIlxuICAgIHByb21wdF9ib2R5OiBcIkNvbnRpbnVhIGEgam9nYXIgcGFyYSByZWNlYmVyZXMgbWFpcyFcIlxuXG4gIHN1YnNjcmliZTpcbiMgICAgYmVzdF9kZWFsOiBcIkJlc3QgRGVhbCFcIlxuIyAgICBjb25maXJtYXRpb246IFwiQ29uZ3JhdHVsYXRpb25zISBZb3Ugbm93IGhhdmUgYSBDb2RlQ29tYmF0IFByZW1pdW0gU3Vic2NyaXB0aW9uIVwiXG4jICAgIHByZW1pdW1fYWxyZWFkeV9zdWJzY3JpYmVkOiBcIllvdSdyZSBhbHJlYWR5IHN1YnNjcmliZWQgdG8gUHJlbWl1bSFcIlxuICAgIHN1YnNjcmliZV9tb2RhbF90aXRsZTogXCJDb2RlQ29tYmF0ICdQcmVtaXVtJ1wiXG4gICAgY29tcGFyaXNvbl9ibHVyYjogXCJUb3JuYS10ZSB1bSBQcm9ncmFtYWRvciBNZXN0cmUgLSBzdWJzY3JldmUtdGUgYW8gPGI+J1ByZW1pdW0nPC9iPiBob2plIVwiXG4gICAgbXVzdF9iZV9sb2dnZWQ6IFwiUHJpbWVpcm8gdGVucyBkZSB0ZXIgc2Vzc8OjbyBpbmljaWFkYS4gUG9yIGZhdm9yLCBjcmlhIHVtYSBjb250YSBvdSBpbmljaWEgc2Vzc8OjbyBhIHBhcnRpciBkbyBtZW51IGFjaW1hLlwiXG4gICAgc3Vic2NyaWJlX3RpdGxlOiBcIlN1YnNjcmV2ZXJcIiAjIEFjdHVhbGx5IHVzZWQgaW4gc3Vic2NyaWJlIGJ1dHRvbnMsIHRvb1xuICAgIHVuc3Vic2NyaWJlOiBcIkNhbmNlbGFyIFN1YnNjcmnDp8Ojb1wiXG4gICAgY29uZmlybV91bnN1YnNjcmliZTogXCJDb25maXJtYXIgQ2FuY2VsYW1lbnRvIGRhIFN1YnNjcmnDp8Ojb1wiXG4gICAgbmV2ZXJfbWluZDogXCJOw6NvIEltcG9ydGEsIEdvc3RhbW9zIGRlIFRpIMOgIE1lc21hXCJcbiAgICB0aGFua195b3VfbW9udGhzX3ByZWZpeDogXCJPYnJpZ2FkbyBwb3Igbm9zIHRlcmVzIGFwb2lhZG8gbmVzdGUocykgw7psdGltbyhzKVwiXG4gICAgdGhhbmtfeW91X21vbnRoc19zdWZmaXg6IFwibcOqcyhtZXNlcykuXCJcbiAgICB0aGFua195b3U6IFwiT2JyaWdhZG8gcG9yIGFwb2lhcmVzIG8gQ29kZUNvbWJhdC5cIlxuICAgIHNvcnJ5X3RvX3NlZV95b3VfZ286IFwiTGFtZW50YW1vcyB2ZXItdGUgcGFydGlyISBQb3IgZmF2b3IsIGRpei1ub3MgbyBxdWUgcG9kw61hbW9zIHRlciBmZWl0byBtZWxob3IuXCJcbiAgICB1bnN1YnNjcmliZV9mZWVkYmFja19wbGFjZWhvbGRlcjogXCJPaCwgbyBxdWUgZm9tb3MgZmF6ZXI/XCJcbiAgICBzdHJpcGVfZGVzY3JpcHRpb246IFwiU3Vic2NyacOnw6NvIE1lbnNhbFwiXG4gICAgYnV5X25vdzogXCJDb21wcmFyIEFnb3JhXCJcbiAgICBzdWJzY3JpcHRpb25fcmVxdWlyZWRfdG9fcGxheTogXCJQcmVjaXNhcyBkZSB1bWEgc3Vic2NyacOnw6NvIHBhcmEgam9nYXJlcyBlc3RlIG7DrXZlbC5cIlxuICAgIHVubG9ja19oZWxwX3ZpZGVvczogXCJTdWJzY3JldmUtdGUgcGFyYSBkZXNibG9xdWVhcmVzIHRvZG9zIG9zIHR1dG9yaWFpcyBlbSB2w61kZW8uXCJcbiAgICBwZXJzb25hbF9zdWI6IFwiU3Vic2NyacOnw6NvIFBlc3NvYWxcIiAjIEFjY291bnRzIFN1YnNjcmlwdGlvbiBWaWV3IGJlbG93XG4gICAgbG9hZGluZ19pbmZvOiBcIkEgY2FycmVnYXIgYXMgaW5mb3JtYcOnw7VlcyBkYSBzdWJzY3Jpw6fDo28uLi5cIlxuICAgIG1hbmFnZWRfYnk6IFwiR2VyaWRhIHBvclwiXG4gICAgd2lsbF9iZV9jYW5jZWxsZWQ6IFwiU2Vyw6EgY2FuY2VsYWRhIGVtXCJcbiAgICBjdXJyZW50bHlfZnJlZTogXCJBdHVhbG1lbnRlIHRlbnMgdW1hIHN1YnNjcmnDp8OjbyBncmF0dWl0YVwiXG4gICAgY3VycmVudGx5X2ZyZWVfdW50aWw6IFwiQXR1YWxtZW50ZSB0ZW5zIHVtYSBzdWJzY3Jpw6fDo28gYXTDqVwiXG4gICAgZnJlZV9zdWJzY3JpcHRpb246IFwiU3Vic2NyacOnw6NvIGdyYXR1aXRhXCJcbiAgICB3YXNfZnJlZV91bnRpbDogXCJUaW5oYXMgdW1hIHN1YnNjcmnDp8OjbyBncmF0dWl0YSBhdMOpXCJcbiAgICBtYW5hZ2VkX3N1YnM6IFwiU3Vic2NyacOnw7VlcyBHZXJpZGFzXCJcbiAgICBzdWJzY3JpYmluZzogXCJBIFN1YnNjcmV2ZXIuLi5cIlxuICAgIGN1cnJlbnRfcmVjaXBpZW50czogXCJCZW5lZmljacOhcmlvcyBBdHVhaXNcIlxuICAgIHVuc3Vic2NyaWJpbmc6IFwiQSBDYW5jZWxhciBhIFN1YnNjcmnDp8Ojb1wiXG4gICAgc3Vic2NyaWJlX3ByZXBhaWQ6IFwiQ2xpY2EgZW0gU3Vic2NyZXZlciBwYXJhIHVzYXJlcyB1bSBjw7NkaWdvIHByw6ktcGFnb1wiXG4gICAgdXNpbmdfcHJlcGFpZDogXCJBIHVzYXIgdW0gY8OzZGlnbyBwcsOpLXBhZ28gcGFyYSBhIHN1YnNjcmnDp8OjbyBtZW5zYWxcIlxuICAgIGZlYXR1cmVfbGV2ZWxfYWNjZXNzOiBcIkFjZWRlIGEgMzAwKyBuw612ZWlzIGRpc3BvbsOtdmVpc1wiXG4gICAgZmVhdHVyZV9oZXJvZXM6IFwiRGVzYmxvcXVlaWEgaGVyw7NpcyBlIGFuaW1haXMgZXhjbHVzaXZvc1wiXG4gICAgZmVhdHVyZV9sZWFybjogXCJBcHJlbmRlIGEgY3JpYXIgam9nb3MgZSB3ZWJzaXRlc1wiXG4gICAgbW9udGhfcHJpY2U6IFwiJF9fcHJpY2VfX1wiXG4gICAgZmlyc3RfbW9udGhfcHJpY2U6IFwiQXBlbmFzICRfX3ByaWNlX18gcGVsbyB0ZXUgcHJpbWVpcm8gbcOqcyFcIlxuICAgIGxpZmV0aW1lOiBcIkFjZXNzbyBWaXRhbMOtY2lvXCJcbiAgICBsaWZldGltZV9wcmljZTogXCIkX19wcmljZV9fXCJcbiAgICB5ZWFyX3N1YnNjcmlwdGlvbjogXCJTdWJzY3Jpw6fDo28gQW51YWxcIlxuICAgIHllYXJfcHJpY2U6IFwiJF9fcHJpY2VfXy9hbm9cIlxuICAgIHN1cHBvcnRfcGFydDE6IFwiUHJlY2lzYXMgZGUgYWp1ZGEgY29tIG8gcGFnYW1lbnRvIG91IHByZWZlcmVzIFBheVBhbD8gRW52aWEgdW0gZS1tYWlsIHBhcmFcIlxuICAgIHN1cHBvcnRfcGFydDI6IFwic3VwcG9ydEBjb2RlY29tYmF0LmNvbVwiXG5cbiMgIGFubm91bmNlbWVudDpcbiMgICAgbm93X2F2YWlsYWJsZTogXCJOb3cgYXZhaWxhYmxlIGZvciBzdWJzY3JpYmVycyFcIlxuIyAgICBzdWJzY3JpYmVyOiBcInN1YnNjcmliZXJcIlxuIyAgICBjdWRkbHlfY29tcGFuaW9uczogXCJDdWRkbHkgQ29tcGFuaW9ucyFcIiAjIFBldCBBbm5vdW5jZW1lbnQgTW9kYWxcbiMgICAga2luZGxpbmdfbmFtZTogXCJLaW5kbGluZyBFbGVtZW50YWxcIlxuIyAgICBraW5kbGluZ19kZXNjcmlwdGlvbjogXCJLaW5kbGluZyBFbGVtZW50YWxzIGp1c3Qgd2FudCB0byBrZWVwIHlvdSB3YXJtIGF0IG5pZ2h0LiBBbmQgZHVyaW5nIHRoZSBkYXkuIEFsbCB0aGUgdGltZSwgcmVhbGx5LlwiXG4jICAgIGdyaWZmaW5fbmFtZTogXCJCYWJ5IEdyaWZmaW5cIlxuIyAgICBncmlmZmluX2Rlc2NyaXB0aW9uOiBcIkdyaWZmaW5zIGFyZSBoYWxmIGVhZ2xlLCBoYWxmIGxpb24sIGFsbCBhZG9yYWJsZS5cIlxuIyAgICByYXZlbl9uYW1lOiBcIlJhdmVuXCJcbiMgICAgcmF2ZW5fZGVzY3JpcHRpb246IFwiUmF2ZW5zIGFyZSBleGNlbGxlbnQgYXQgZ2F0aGVyaW5nIHNoaW55IGJvdHRsZXMgZnVsbCBvZiBoZWFsdGggZm9yIHlvdS5cIlxuIyAgICBtaW1pY19uYW1lOiBcIk1pbWljXCJcbiMgICAgbWltaWNfZGVzY3JpcHRpb246IFwiTWltaWNzIGNhbiBwaWNrIHVwIGNvaW5zIGZvciB5b3UuIE1vdmUgdGhlbSBvbiB0b3Agb2YgY29pbnMgdG8gaW5jcmVhc2UgeW91ciBnb2xkIHN1cHBseS5cIlxuIyAgICBjb3VnYXJfbmFtZTogXCJDb3VnYXJcIlxuIyAgICBjb3VnYXJfZGVzY3JpcHRpb246IFwiQ291Z2FycyBsaWtlIHRvIGVhcm4gYSBQaEQgYnkgUHVycmluZyBIYXBwaWx5IERhaWx5LlwiXG4jICAgIGZveF9uYW1lOiBcIkJsdWUgRm94XCJcbiMgICAgZm94X2Rlc2NyaXB0aW9uOiBcIkJsdWUgZm94ZXMgYXJlIHZlcnkgY2xldmVyIGFuZCBsb3ZlIGRpZ2dpbmcgaW4gdGhlIGRpcnQgYW5kIHNub3chXCJcbiMgICAgcHVnaWNvcm5fbmFtZTogXCJQdWdpY29yblwiXG4jICAgIHB1Z2ljb3JuX2Rlc2NyaXB0aW9uOiBcIlB1Z2ljb3JucyBhcmUgc29tZSBvZiB0aGUgcmFyZXN0IGNyZWF0dXJlcyBhbmQgY2FuIGNhc3Qgc3BlbGxzIVwiXG4jICAgIHdvbGZfbmFtZTogXCJXb2xmIFB1cFwiXG4jICAgIHdvbGZfZGVzY3JpcHRpb246IFwiV29sZiBwdXBzIGV4Y2VsIGluIGh1bnRpbmcsIGdhdGhlcmluZywgYW5kIHBsYXlpbmcgYSBtZWFuIGdhbWUgb2YgaGlkZS1hbmQtc2VlayFcIlxuIyAgICBiYWxsX25hbWU6IFwiUmVkIFNxdWVha3kgQmFsbFwiXG4jICAgIGJhbGxfZGVzY3JpcHRpb246IFwiYmFsbC5zcXVlYWsoKVwiXG4jICAgIGNvbGxlY3RfcGV0czogXCJDb2xsZWN0IHBldHMgZm9yIHlvdXIgaGVyb2VzIVwiXG4jICAgIGVhY2hfcGV0OiBcIkVhY2ggcGV0IGhhcyBhIHVuaXF1ZSBoZWxwZXIgYWJpbGl0eSFcIlxuIyAgICB1cGdyYWRlX3RvX3ByZW1pdW06IFwiQmVjb21lIGEge3tzdWJzY3JpYmVyfX0gdG8gZXF1aXAgcGV0cy5cIlxuIyAgICBwbGF5X3NlY29uZF9raXRobWF6ZTogXCJQbGF5IHt7dGhlX3NlY29uZF9raXRobWF6ZX19IHRvIHVubG9jayB0aGUgV29sZiBQdXAhXCJcbiMgICAgdGhlX3NlY29uZF9raXRobWF6ZTogXCJUaGUgU2Vjb25kIEtpdGhtYXplXCJcbiMgICAga2VlcF9wbGF5aW5nOiBcIktlZXAgcGxheWluZyB0byBkaXNjb3ZlciB0aGUgZmlyc3QgcGV0IVwiXG4jICAgIGNvbWluZ19zb29uOiBcIkNvbWluZyBzb29uXCJcbiMgICAgcml0aWM6IFwiUml0aWMgdGhlIENvbGRcIiAjIFJpdGljIEFubm91bmNlbWVudCBNb2RhbFxuIyAgICByaXRpY19kZXNjcmlwdGlvbjogXCJSaXRpYyB0aGUgQ29sZC4gVHJhcHBlZCBpbiBLZWx2aW50YXBoIEdsYWNpZXIgZm9yIGNvdW50bGVzcyBhZ2VzLCBmaW5hbGx5IGZyZWUgYW5kIHJlYWR5IHRvIHRlbmQgdG8gdGhlIG9ncmVzIHRoYXQgaW1wcmlzb25lZCBoaW0uXCJcbiMgICAgaWNlX2Jsb2NrOiBcIkEgYmxvY2sgb2YgaWNlXCJcbiMgICAgaWNlX2Rlc2NyaXB0aW9uOiBcIlRoZXJlIGFwcGVhcnMgdG8gYmUgc29tZXRoaW5nIHRyYXBwZWQgaW5zaWRlLi4uXCJcbiMgICAgYmxpbmtfbmFtZTogXCJCbGlua1wiXG4jICAgIGJsaW5rX2Rlc2NyaXB0aW9uOiBcIlJpdGljIGRpc2FwcGVhcnMgYW5kIHJlYXBwZWFycyBpbiBhIGJsaW5rIG9mIGFuIGV5ZSwgbGVhdmluZyBub3RoaW5nIGJ1dCBhIHNoYWRvdy5cIlxuIyAgICBzaGFkb3dTdGVwX25hbWU6IFwiU2hhZG93c3RlcFwiXG4jICAgIHNoYWRvd1N0ZXBfZGVzY3JpcHRpb246IFwiQSBtYXN0ZXIgYXNzYXNzaW4ga25vd3MgaG93IHRvIHdhbGsgYmV0d2VlbiB0aGUgc2hhZG93cy5cIlxuIyAgICB0b3JuYWRvX25hbWU6IFwiVG9ybmFkb1wiXG4jICAgIHRvcm5hZG9fZGVzY3JpcHRpb246IFwiSXQgaXMgZ29vZCB0byBoYXZlIGEgcmVzZXQgYnV0dG9uIHdoZW4gb25lJ3MgY292ZXIgaXMgYmxvd24uXCJcbiMgICAgd2FsbE9mRGFya25lc3NfbmFtZTogXCJXYWxsIG9mIERhcmtuZXNzXCJcbiMgICAgd2FsbE9mRGFya25lc3NfZGVzY3JpcHRpb246IFwiSGlkZSBiZWhpbmQgYSB3YWxsIG9mIHNoYWRvd3MgdG8gcHJldmVudCB0aGUgZ2F6ZSBvZiBwcnlpbmcgZXllcy5cIlxuXG4jICBwcmVtaXVtX2ZlYXR1cmVzOlxuIyAgICBnZXRfcHJlbWl1bTogXCJHZXQ8YnI+Q29kZUNvbWJhdDxicj5QcmVtaXVtXCIgIyBGaXQgaW50byB0aGUgYmFubmVyIG9uIHRoZSAvZmVhdHVyZXMgcGFnZVxuIyAgICBtYXN0ZXJfY29kZXI6IFwiQmVjb21lIGEgTWFzdGVyIENvZGVyIGJ5IHN1YnNjcmliaW5nIHRvZGF5IVwiXG4jICAgIHBheXBhbF9yZWRpcmVjdDogXCJZb3Ugd2lsbCBiZSByZWRpcmVjdGVkIHRvIFBheVBhbCB0byBjb21wbGV0ZSB0aGUgc3Vic2NyaXB0aW9uIHByb2Nlc3MuXCJcbiMgICAgc3Vic2NyaWJlX25vdzogXCJTdWJzY3JpYmUgTm93XCJcbiMgICAgaGVyb19ibHVyYl8xOiBcIkdldCBhY2Nlc3MgdG8gX19wcmVtaXVtSGVyb2VzQ291bnRfXyBzdXBlci1jaGFyZ2VkIHN1YnNjcmliZXItb25seSBoZXJvZXMhIEhhcm5lc3MgdGhlIHVuc3RvcHBhYmxlIHBvd2VyIG9mIE9rYXIgU3RvbXBmb290LCB0aGUgZGVhZGx5IHByZWNpc2lvbiBvZiBOYXJpYSBvZiB0aGUgTGVhZiwgb3Igc3VtbW9uIFxcXCJhZG9yYWJsZVxcXCIgc2tlbGV0b25zIHdpdGggTmFsZmFyIENyeXB0b3IuXCJcbiMgICAgaGVyb19ibHVyYl8yOiBcIlByZW1pdW0gV2FycmlvcnMgdW5sb2NrIHN0dW5uaW5nIG1hcnRpYWwgc2tpbGxzIGxpa2UgV2FyY3J5LCBTdG9tcCwgYW5kIEh1cmwgRW5lbXkuIE9yLCBwbGF5IGFzIGEgUmFuZ2VyLCB1c2luZyBzdGVhbHRoIGFuZCBib3dzLCB0aHJvd2luZyBrbml2ZXMsIHRyYXBzISBUcnkgeW91ciBza2lsbCBhcyBhIHRydWUgY29kaW5nIFdpemFyZCwgYW5kIHVubGVhc2ggYSBwb3dlcmZ1bCBhcnJheSBvZiBQcmltb3JkaWFsLCBOZWNyb21hbnRpYyBvciBFbGVtZW50YWwgbWFnaWMhXCJcbiMgICAgaGVyb19jYXB0aW9uOiBcIkV4Y2l0aW5nIG5ldyBoZXJvZXMhXCJcbiMgICAgcGV0X2JsdXJiXzE6IFwiUGV0cyBhcmVuJ3QganVzdCBhZG9yYWJsZSBjb21wYW5pb25zLCB0aGV5IGFsc28gcHJvdmlkZSB1bmlxdWUgZnVuY3Rpb25hbGl0eSBhbmQgbWV0aG9kcy4gVGhlIEJhYnkgR3JpZmZpbiBjYW4gY2FycnkgdW5pdHMgdGhyb3VnaCB0aGUgYWlyLCB0aGUgV29sZiBQdXAgcGxheXMgY2F0Y2ggd2l0aCBlbmVteSBhcnJvd3MsIHRoZSBDb3VnYXIgaXMgZm9uZCBvZiBjaGFzaW5nIG9ncmVzIGFyb3VuZCwgYW5kIHRoZSBNaW1pYyBhdHRyYWN0cyBjb2lucyBsaWtlIGEgbWFnbmV0IVwiXG4jICAgIHBldF9ibHVyYl8yOiBcIkNvbGxlY3QgYWxsIHRoZSBwZXRzIHRvIGRpc2NvdmVyIHRoZWlyIHVuaXF1ZSBhYmlsaXRpZXMhXCJcbiMgICAgcGV0X2NhcHRpb246IFwiQWRvcHQgcGV0cyB0byBhY2NvbXBhbnkgeW91ciBoZXJvIVwiXG4jICAgIGdhbWVfZGV2X2JsdXJiOiBcIkxlYXJuIGdhbWUgc2NyaXB0aW5nIGFuZCBidWlsZCBuZXcgbGV2ZWxzIHRvIHNoYXJlIHdpdGggeW91ciBmcmllbmRzISBQbGFjZSB0aGUgaXRlbXMgeW91IHdhbnQsIHdyaXRlIGNvZGUgZm9yIHVuaXQgbG9naWMgYW5kIGJlaGF2aW9yLCBhbmQgc2VlIGlmIHlvdXIgZnJpZW5kcyBjYW4gYmVhdCB0aGUgbGV2ZWwhXCJcbiMgICAgZ2FtZV9kZXZfY2FwdGlvbjogXCJEZXNpZ24geW91ciBvd24gZ2FtZXMgdG8gY2hhbGxlbmdlIHlvdXIgZnJpZW5kcyFcIlxuIyAgICBldmVyeXRoaW5nX2luX3ByZW1pdW06IFwiRXZlcnl0aGluZyB5b3UgZ2V0IGluIENvZGVDb21iYXQgUHJlbWl1bTpcIlxuIyAgICBsaXN0X2dlbXM6IFwiUmVjZWl2ZSBib251cyBnZW1zIHRvIGJ1eSBnZWFyLCBwZXRzLCBhbmQgaGVyb2VzXCJcbiMgICAgbGlzdF9sZXZlbHM6IFwiR2FpbiBhY2Nlc3MgdG8gX19wcmVtaXVtTGV2ZWxzQ291bnRfXyBtb3JlIGxldmVsc1wiXG4jICAgIGxpc3RfaGVyb2VzOiBcIlVubG9jayBleGNsdXNpdmUgaGVyb2VzLCBpbmNsdWRlIFJhbmdlciBhbmQgV2l6YXJkIGNsYXNzZXNcIlxuIyAgICBsaXN0X2dhbWVfZGV2OiBcIk1ha2UgYW5kIHNoYXJlIGdhbWVzIHdpdGggZnJpZW5kc1wiXG4jICAgIGxpc3Rfd2ViX2RldjogXCJCdWlsZCB3ZWJzaXRlcyBhbmQgaW50ZXJhY3RpdmUgYXBwc1wiXG4jICAgIGxpc3RfaXRlbXM6IFwiRXF1aXAgUHJlbWl1bS1vbmx5IGl0ZW1zIGxpa2UgcGV0c1wiXG4jICAgIGxpc3Rfc3VwcG9ydDogXCJHZXQgUHJlbWl1bSBzdXBwb3J0IHRvIGhlbHAgeW91IGRlYnVnIHRyaWNreSBjb2RlXCJcbiMgICAgbGlzdF9jbGFuczogXCJDcmVhdGUgcHJpdmF0ZSBjbGFucyB0byBpbnZpdGUgeW91ciBmcmllbmRzIGFuZCBjb21wZXRlIG9uIGEgZ3JvdXAgbGVhZGVyYm9hcmRcIlxuXG4gIGNob29zZV9oZXJvOlxuICAgIGNob29zZV9oZXJvOiBcIkVzY29saGUgbyBUZXUgSGVyw7NpXCJcbiAgICBwcm9ncmFtbWluZ19sYW5ndWFnZTogXCJMaW5ndWFnZW0gZGUgUHJvZ3JhbWHDp8Ojb1wiXG4gICAgcHJvZ3JhbW1pbmdfbGFuZ3VhZ2VfZGVzY3JpcHRpb246IFwiUXVlIGxpbmd1YWdlbSBkZSBwcm9ncmFtYcOnw6NvIHF1ZXJlcyB1c2FyP1wiXG4gICAgZGVmYXVsdDogXCJQcmVkZWZpbmlkYVwiXG4gICAgZXhwZXJpbWVudGFsOiBcIkV4cGVyaW1lbnRhbFwiXG4gICAgcHl0aG9uX2JsdXJiOiBcIlNpbXBsZXMgbWFzIHBvZGVyb3NvOyDDs3RpbW8gcGFyYSBpbmljaWFudGVzIGUgcGVyaXRvcy5cIlxuICAgIGphdmFzY3JpcHRfYmx1cmI6IFwiQSBsaW5ndWFnZW0gZGEgd2ViLiAoTsOjbyDDqSBvIG1lc21vIHF1ZSBKYXZhLilcIlxuICAgIGNvZmZlZXNjcmlwdF9ibHVyYjogXCJKYXZhc2NyaXB0IGNvbSBzaW50YXhlIG1haXMgYWdyYWTDoXZlbC5cIlxuICAgIGx1YV9ibHVyYjogXCJMaW5ndWFnZW0gcGFyYSBzY3JpcHRzIGRlIGpvZ29zLlwiXG4gICAgamF2YV9ibHVyYjogXCIoQXBlbmFzIHBhcmEgU3Vic2NyaXRvcmVzKSBBbmRyb2lkIGUgZW1wcmVzYXMuXCJcbiAgICBzdGF0dXM6IFwiRXN0YWRvXCJcbiAgICB3ZWFwb25zOiBcIkFybWFzXCJcbiAgICB3ZWFwb25zX3dhcnJpb3I6IFwiRXNwYWRhcyAtIEN1cnRvIEFsY2FuY2UsIFNlbSBNYWdpYVwiXG4gICAgd2VhcG9uc19yYW5nZXI6IFwiQXJjb3MsIEFybWFzIC0gTG9uZ28gQWxjYW5jZSwgU2VtIE1hZ2lhXCJcbiAgICB3ZWFwb25zX3dpemFyZDogXCJWYXJpbmhhcywgQmFzdMO1ZXMgLSBMb25nbyBBbGNhbmNlLCBNYWdpYVwiXG4gICAgYXR0YWNrOiBcIkF0YXF1ZVwiICMgQ2FuIGFsc28gdHJhbnNsYXRlIGFzIFwiQXR0YWNrXCJcbiAgICBoZWFsdGg6IFwiVmlkYVwiXG4gICAgc3BlZWQ6IFwiVmVsb2NpZGFkZVwiXG4gICAgcmVnZW5lcmF0aW9uOiBcIlJlZ2VuZXJhw6fDo29cIlxuICAgIHJhbmdlOiBcIkFsY2FuY2VcIiAjIEFzIGluIFwiYXR0YWNrIG9yIHZpc3VhbCByYW5nZVwiXG4gICAgYmxvY2tzOiBcIkJsb3F1ZWlhXCIgIyBBcyBpbiBcInRoaXMgc2hpZWxkIGJsb2NrcyB0aGlzIG11Y2ggZGFtYWdlXCJcbiAgICBiYWNrc3RhYjogXCJDb2xhdGVyYWxcIiAjIEFzIGluIFwidGhpcyBkYWdnZXIgZG9lcyB0aGlzIG11Y2ggYmFja3N0YWIgZGFtYWdlXCJcbiAgICBza2lsbHM6IFwiSGFiaWxpZGFkZXNcIlxuICAgIGF0dGFja18xOiBcIkTDoVwiXG4gICAgYXR0YWNrXzI6IFwiZG8gZGFubyBkYSBhcm1hIGRvXCJcbiAgICBhdHRhY2tfMzogXCJhcHJlc2VudGFkby5cIlxuICAgIGhlYWx0aF8xOiBcIkdhbmhhXCJcbiAgICBoZWFsdGhfMjogXCJkYSB2aWRhIGRhIGFybWFkdXJhIGRvXCJcbiAgICBoZWFsdGhfMzogXCJhcHJlc2VudGFkby5cIlxuICAgIHNwZWVkXzE6IFwiTW92ZSBhXCJcbiAgICBzcGVlZF8yOiBcIm1ldHJvcyBwb3Igc2VndW5kby5cIlxuICAgIGF2YWlsYWJsZV9mb3JfcHVyY2hhc2U6IFwiRGlzcG9uw612ZWwgcGFyYSBBcXVpc2nDp8Ojb1wiICMgU2hvd3MgdXAgd2hlbiB5b3UgaGF2ZSB1bmxvY2tlZCwgYnV0IG5vdCBwdXJjaGFzZWQsIGEgaGVybyBpbiB0aGUgaGVybyBzdG9yZVxuICAgIGxldmVsX3RvX3VubG9jazogXCJOw612ZWwgcGFyYSBkZXNibG9xdWVhcjpcIiAjIExhYmVsIGZvciB3aGljaCBsZXZlbCB5b3UgaGF2ZSB0byBiZWF0IHRvIHVubG9jayBhIHBhcnRpY3VsYXIgaGVybyAoY2xpY2sgYSBsb2NrZWQgaGVybyBpbiB0aGUgc3RvcmUgdG8gc2VlKVxuICAgIHJlc3RyaWN0ZWRfdG9fY2VydGFpbl9oZXJvZXM6IFwiQXBlbmFzIGNlcnRvcyBoZXLDs2lzIHBvZGVtIGpvZ2FyIGVzdGUgbsOtdmVsLlwiXG5cbiAgc2tpbGxfZG9jczpcbiAgICBmdW5jdGlvbjogXCJmdW7Dp8Ojb1wiICMgc2tpbGwgdHlwZXNcbiAgICBtZXRob2Q6IFwibcOpdG9kb1wiXG4gICAgc25pcHBldDogXCJmcmFnbWVudG9cIlxuICAgIG51bWJlcjogXCJuw7ptZXJvXCJcbiAgICBhcnJheTogXCInYXJyYXknXCJcbiAgICBvYmplY3Q6IFwib2JqZXRvXCJcbiAgICBzdHJpbmc6IFwiJ3N0cmluZydcIlxuICAgIHdyaXRhYmxlOiBcImVkaXTDoXZlbFwiICMgSG92ZXIgb3ZlciBcImF0dGFja1wiIGluIFlvdXIgU2tpbGxzIHdoaWxlIHBsYXlpbmcgYSBsZXZlbCB0byBzZWUgbW9zdCBvZiB0aGlzXG4gICAgcmVhZF9vbmx5OiBcImFwZW5hcyBsZWl0dXJhXCJcbiAgICBhY3Rpb246IFwiQcOnw6NvIC1cIlxuICAgIHNwZWxsOiBcIkZlaXRpw6dvIC1cIlxuICAgIGFjdGlvbl9uYW1lOiBcIm5vbWVcIlxuICAgIGFjdGlvbl9jb29sZG93bjogXCJEZW1vcmFcIlxuICAgIGFjdGlvbl9zcGVjaWZpY19jb29sZG93bjogXCJUZW1wbyBkZSBSZWNhcmdhXCJcbiAgICBhY3Rpb25fZGFtYWdlOiBcIkRhbm9cIlxuICAgIGFjdGlvbl9yYW5nZTogXCJBbGNhbmNlXCJcbiAgICBhY3Rpb25fcmFkaXVzOiBcIlJhaW9cIlxuICAgIGFjdGlvbl9kdXJhdGlvbjogXCJEdXJhw6fDo29cIlxuICAgIGV4YW1wbGU6IFwiRXhlbXBsb1wiXG4gICAgZXg6IFwiZXhcIiAjIEFiYnJldmlhdGlvbiBvZiBcImV4YW1wbGVcIlxuICAgIGN1cnJlbnRfdmFsdWU6IFwiVmFsb3IgQXR1YWxcIlxuICAgIGRlZmF1bHRfdmFsdWU6IFwiVmFsb3IgUHJlZGVmaW5pZG9cIlxuICAgIHBhcmFtZXRlcnM6IFwiUGFyw6JtZXRyb3NcIlxuICAgIHJlcXVpcmVkX3BhcmFtZXRlcnM6IFwiUGFyw6JtZXRyb3MgTmVjZXNzw6FyaW9zXCJcbiAgICBvcHRpb25hbF9wYXJhbWV0ZXJzOiBcIlBhcsOibWV0cm9zIE9wY2lvbmFpc1wiXG4gICAgcmV0dXJuczogXCJEZXZvbHZlXCJcbiAgICBncmFudGVkX2J5OiBcIkdhcmFudGlkbyBwb3JcIlxuXG4gIHNhdmVfbG9hZDpcbiAgICBncmFudWxhcml0eV9zYXZlZF9nYW1lczogXCJHdWFyZGFkb3NcIlxuICAgIGdyYW51bGFyaXR5X2NoYW5nZV9oaXN0b3J5OiBcIkhpc3TDs3JpY29cIlxuXG4gIG9wdGlvbnM6XG4gICAgZ2VuZXJhbF9vcHRpb25zOiBcIk9ww6fDtWVzIEdlcmFpc1wiICMgQ2hlY2sgb3V0IHRoZSBPcHRpb25zIHRhYiBpbiB0aGUgR2FtZSBNZW51IHdoaWxlIHBsYXlpbmcgYSBsZXZlbFxuICAgIHZvbHVtZV9sYWJlbDogXCJWb2x1bWVcIlxuICAgIG11c2ljX2xhYmVsOiBcIk3DunNpY2FcIlxuICAgIG11c2ljX2Rlc2NyaXB0aW9uOiBcIkF0aXZhciBvdSBkZXNhdGl2YXIgYSBtw7pzaWNhIGRlIGZ1bmRvLlwiXG4gICAgZWRpdG9yX2NvbmZpZ190aXRsZTogXCJDb25maWd1cmFyIEVkaXRvclwiXG4gICAgZWRpdG9yX2NvbmZpZ19saXZlY29tcGxldGlvbl9sYWJlbDogXCJBdXRvLWNvbXBsZXRhw6fDo28gZW0gVGVtcG8gUmVhbFwiXG4gICAgZWRpdG9yX2NvbmZpZ19saXZlY29tcGxldGlvbl9kZXNjcmlwdGlvbjogXCJNb3N0cmFyIHN1Z2VzdMO1ZXMgZGUgYXV0by1jb21wbGV0YcOnw6NvIGFxdWFuZG8gZGEgZXNjcml0YS5cIlxuICAgIGVkaXRvcl9jb25maWdfaW52aXNpYmxlc19sYWJlbDogXCJNb3N0cmFyIEludmlzw612ZWlzXCJcbiAgICBlZGl0b3JfY29uZmlnX2ludmlzaWJsZXNfZGVzY3JpcHRpb246IFwiTW9zdHJhciBpbnZpc8OtdmVpcyB0YWlzIGNvbW8gZXNwYcOnb3MgZSB0YWJ1bGHDp8O1ZXMuXCJcbiAgICBlZGl0b3JfY29uZmlnX2luZGVudGd1aWRlc19sYWJlbDogXCJNb3N0cmFyIEd1aWFzIGRlIEluZGVudGHDp8Ojb1wiXG4gICAgZWRpdG9yX2NvbmZpZ19pbmRlbnRndWlkZXNfZGVzY3JpcHRpb246IFwiTW9zdHJhciBsaW5oYXMgdmVydGljYWlzIHBhcmEgc2UgdmVyIG1lbGhvciBhIGluZGVudGHDp8Ojby5cIlxuICAgIGVkaXRvcl9jb25maWdfYmVoYXZpb3JzX2xhYmVsOiBcIkNvbXBvcnRhbWVudG9zIEludGVsaWdlbnRlc1wiXG4gICAgZWRpdG9yX2NvbmZpZ19iZWhhdmlvcnNfZGVzY3JpcHRpb246IFwiQXV0by1jb21wbGV0YXIgcGFyw6pudGVzZXMsIGNoYXZldGFzIGUgYXNwYXMuXCJcblxuICBhYm91dDpcbiMgICAgdGl0bGU6IFwiQWJvdXQgQ29kZUNvbWJhdCAtIEVuZ2FnaW5nIFN0dWRlbnRzLCBFbXBvd2VyaW5nIFRlYWNoZXJzLCBJbnNwaXJpbmcgQ3JlYXRpb25cIlxuIyAgICBtZXRhX2Rlc2NyaXB0aW9uOiBcIk91ciBtaXNzaW9uIGlzIHRvIGxldmVsIGNvbXB1dGVyIHNjaWVuY2UgdGhyb3VnaCBnYW1lLWJhc2VkIGxlYXJuaW5nIGFuZCBtYWtlIGNvZGluZyBhY2Nlc3NpYmxlIHRvIGV2ZXJ5IGxlYXJuZXIuIFdlIGJlbGlldmUgcHJvZ3JhbW1pbmcgaXMgbWFnaWMgYW5kIHdhbnQgbGVhcm5lcnMgdG8gYmUgZW1wb3dlcmVkIHRvIHRvIGNyZWF0ZSB0aGluZ3MgZnJvbSBwdXJlIGltYWdpbmF0aW9uLlwiXG4gICAgbGVhcm5fbW9yZTogXCJTYWJlciBNYWlzXCJcbiAgICBtYWluX3RpdGxlOiBcIlNlIHF1ZXJlcyBhcHJlbmRlciBhIHByb2dyYW1hciwgcHJlY2lzYXMgZGUgZXNjcmV2ZXIgKG11aXRvKSBjw7NkaWdvLlwiXG4gICAgbWFpbl9kZXNjcmlwdGlvbjogXCJObyBDb2RlQ29tYmF0LCBvIG5vc3NvIHRyYWJhbGhvIMOpIGNlcnRpZmljYXJtby1ub3MgZGUgcXVlIGVzdMOhcyBhIGZhemVyIGlzc28gY29tIHVtIHNvcnJpc28gbmEgY2FyYS5cIlxuICAgIG1pc3Npb25fbGluazogXCJNaXNzw6NvXCJcbiAgICB0ZWFtX2xpbms6IFwiRXF1aXBhXCJcbiAgICBzdG9yeV9saW5rOiBcIkhpc3TDs3JpYVwiXG4gICAgcHJlc3NfbGluazogXCJJbXByZW5zYVwiXG4gICAgbWlzc2lvbl90aXRsZTogXCJBIG5vc3NhIG1pc3PDo286IHRvcm5hciBhIHByb2dyYW1hw6fDo28gYWNlc3PDrXZlbCBhIHRvZG9zIG9zIGVzdHVkYW50ZXMgZGEgVGVycmEuXCJcbiAgICBtaXNzaW9uX2Rlc2NyaXB0aW9uXzE6IFwiPHN0cm9uZz5BIHByb2dyYW1hw6fDo28gw6kgbcOhZ2ljYTwvc3Ryb25nPi4gw4kgYSBjYXBhY2lkYWRlIGRlIGNyaWFyIGNvaXNhcyBhIHBhcnRpciBkZSBpbWFnaW5hw6fDo28gcHVyYS4gQ29tZcOnYW1vcyBvIENvZGVDb21iYXQgcGFyYSBkYXIgYW9zIHV0aWxpemFkb3JlcyBhIHNlbnNhw6fDo28gZGUgdGVyZW0gcG9kZXJlcyBtw6FnaWNvcyBuYXMgcG9udGFzIGRvcyBkZWRvcyBhbyB1c2FyZW0gPHN0cm9uZz5jw7NkaWdvIGVzY3JpdG88L3N0cm9uZz4uXCJcbiMgICAgbWlzc2lvbl9kZXNjcmlwdGlvbl8yOiBcIkFzIGl0IHR1cm5zIG91dCwgdGhhdCBlbmFibGVzIHRoZW0gdG8gbGVhcm4gZmFzdGVyIHRvby4gV0FZIGZhc3Rlci4gSXQncyBsaWtlIGhhdmluZyBhIGNvbnZlcnNhdGlvbiBpbnN0ZWFkIG9mIHJlYWRpbmcgYSBtYW51YWwuIFdlIHdhbnQgdG8gYnJpbmcgdGhhdCBjb252ZXJzYXRpb24gdG8gZXZlcnkgc2Nob29sIGFuZCB0byA8c3Ryb25nPmV2ZXJ5IHN0dWRlbnQ8L3N0cm9uZz4sIGJlY2F1c2UgZXZlcnlvbmUgc2hvdWxkIGhhdmUgdGhlIGNoYW5jZSB0byBsZWFybiB0aGUgbWFnaWMgb2YgcHJvZ3JhbW1pbmcuXCJcbiAgICB0ZWFtX3RpdGxlOiBcIkNvbmhlY2UgYSBlcXVpcGEgZG8gQ29kZUNvbWJhdFwiXG4jICAgIHRlYW1fdmFsdWVzOiBcIldlIHZhbHVlIG9wZW4gYW5kIHJlc3BlY3RmdWwgZGlhbG9nLCB3aGVyZSB0aGUgYmVzdCBpZGVhIHdpbnMuIE91ciBkZWNpc2lvbnMgYXJlIGdyb3VuZGVkIGluIGN1c3RvbWVyIHJlc2VhcmNoIGFuZCBvdXIgcHJvY2VzcyBpcyBmb2N1c2VkIG9uIGRlbGl2ZXJpbmcgdGFuZ2libGUgcmVzdWx0cyBmb3IgdGhlbS4gRXZlcnlvbmUgaXMgaGFuZHMtb24sIGZyb20gb3VyIENFTyB0byBvdXIgR2l0SHViIGNvbnRyaWJ1dG9ycywgYmVjYXVzZSB3ZSB2YWx1ZSBncm93dGggYW5kIGxlYXJuaW5nIGluIG91ciB0ZWFtLlwiXG4gICAgbmlja190aXRsZTogXCJDby1mdW5kYWRvciwgQ0VPXCJcbiAgICBtYXR0X3RpdGxlOiBcIkNvLWZ1bmRhZG9yLCBDVE9cIlxuICAgIGNhdF90aXRsZTogXCJEZXNpZ25lciBkZSBKb2dvc1wiXG4gICAgc2NvdHRfdGl0bGU6IFwiQ28tZnVuZGFkb3IsIEVuZ2VuaGVpcm8gZGUgU29mdHdhcmVcIlxuICAgIG1ha2FfdGl0bGU6IFwiRGVmZW5zb3IgZG9zIENsaWVudGVzXCJcbiAgICByb2Jpbl90aXRsZTogXCJHZXN0b3JhIGRlIFByb2R1dG8gU8OpbmlvclwiXG4gICAgbm9sYW5fdGl0bGU6IFwiR2VzdG9yIGRlIFZlbmRhc1wiXG4gICAgZGF2aWRfdGl0bGU6IFwiTMOtZGVyIGRlIE1hcmtldGluZ1wiXG4gICAgdGl0bGVzX2NzbTogXCJHZXJlbnRlIGRlIFN1Y2Vzc28gZG8gQ2xpZW50ZVwiXG4gICAgdGl0bGVzX3RlcnJpdG9yeV9tYW5hZ2VyOiBcIkdlc3RvcmEgZGUgVGVycml0w7NyaW9cIlxuIyAgICBsYXdyZW5jZV90aXRsZTogXCJDdXN0b21lciBTdWNjZXNzIE1hbmFnZXJcIlxuIyAgICBzZWFuX3RpdGxlOiBcIlNlbmlvciBBY2NvdW50IEV4ZWN1dGl2ZVwiXG4jICAgIGxpel90aXRsZTogXCJTZW5pb3IgQWNjb3VudCBFeGVjdXRpdmVcIlxuIyAgICBqYW5lX3RpdGxlOiBcIkFjY291bnQgRXhlY3V0aXZlXCJcbiMgICAgc2hhbl90aXRsZTogXCJQYXJ0bmVyc2hpcCBEZXZlbG9wbWVudCBMZWFkLCBDaGluYVwiXG4jICAgIHJ1bl90aXRsZTogXCJIZWFkIG9mIE9wZXJhdGlvbnMsIENoaW5hXCJcbiMgICAgbGFuY2VfdGl0bGU6IFwiU29mdHdhcmUgRW5naW5lZXIgSW50ZXJuLCBDaGluYVwiXG4jICAgIG1hdGlhc190aXRsZTogXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIlxuIyAgICByeWFuX3RpdGxlOiBcIkN1c3RvbWVyIFN1cHBvcnQgU3BlY2lhbGlzdFwiXG4jICAgIG1heWFfdGl0bGU6IFwiQ3VycmljdWx1bSBEZXZlbG9wZXJcIlxuIyAgICBiaWxsX3RpdGxlOiBcIkdlbmVyYWwgTWFuYWdlciwgQ2hpbmFcIlxuIyAgICBzaGFzaGFfdGl0bGU6IFwiUHJvZHVjdCBhbmQgVmlzdWFsIERlc2lnbmVyXCJcbiMgICAgZGFuaWVsYV90aXRsZTogXCJNYXJrZXRpbmcgTWFuYWdlclwiXG4jICAgIGNoZWxzZWFfdGl0bGU6IFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCJcbiMgICAgY2xhaXJlX3RpdGxlOiBcIkV4ZWN1dGl2ZSBBc3Npc3RhbnRcIlxuIyAgICBib2JieV90aXRsZTogXCJTZW5pb3IgR2FtZSBEZXNpZ25lclwiXG4jICAgIGJyaWFuX3RpdGxlOiBcIkxlYWQgR2FtZSBEZXNpZ25lclwiXG4jICAgIGFuZHJld190aXRsZTogXCJTb2Z0d2FyZSBFbmdpbmVlclwiXG4jICAgIHN0ZXBoYW5pZV90aXRsZTogXCJDdXN0b21lciBTdXBwb3J0IFNwZWNpYWxpc3RcIlxuIyAgICByb2JfdGl0bGU6IFwiU2FsZXMgRGV2ZWxvcG1lbnQgUmVwcmVzZW50YXRpdmVcIlxuIyAgICBzaHViaGFuZ2lfdGl0bGU6IFwiU29mdHdhcmUgRW5naW5lZXJcIlxuIyAgICBicnl1a2hfdGl0bGU6IFwiR2FtZXBsYXkgRGV2ZWxvcGVyXCJcbiAgICByZXRyb3N0eWxlX3RpdGxlOiBcIklsdXN0cmHDp8Ojb1wiXG4gICAgcmV0cm9zdHlsZV9ibHVyYjogXCInUmV0cm9TdHlsZSBHYW1lcydcIlxuICAgIGJyeXVraF9ibHVyYjogXCJDb25zdHLDs2kgcHV6emxlc1wiXG4gICAgY29tbXVuaXR5X3RpdGxlOiBcIi4uLmUgYSBub3NzYSBjb211bmlkYWRlIG9wZW4gc291cmNlXCJcbiAgICBjb21tdW5pdHlfc3VidGl0bGU6IFwiTWFpcyBkZSA1MDAgY29udHJpYnVpZG9yZXMgYWp1ZGFyYW0gYSBjb25zdHJ1aXIgbyBDb2RlQ29tYmF0LCBjb20gbWFpcyBhIHNlIGp1bnRhcmVtIHRvZGFzIGFzIHNlbWFuYXMhXCJcbiAgICBjb21tdW5pdHlfZGVzY3JpcHRpb25fMzogXCJPIENvZGVDb21iYXQgw6kgdW1cIlxuICAgIGNvbW11bml0eV9kZXNjcmlwdGlvbl9saW5rXzI6IFwicHJvamV0byBjb211bml0w6FyaW9cIlxuIyAgICBjb21tdW5pdHlfZGVzY3JpcHRpb25fMTogXCJ3aXRoIGh1bmRyZWRzIG9mIHBsYXllcnMgdm9sdW50ZWVyaW5nIHRvIGNyZWF0ZSBsZXZlbHMsIGNvbnRyaWJ1dGUgdG8gb3VyIGNvZGUgdG8gYWRkIGZlYXR1cmVzLCBmaXggYnVncywgcGxheXRlc3QsIGFuZCBldmVuIHRyYW5zbGF0ZSB0aGUgZ2FtZSBpbnRvIDUwIGxhbmd1YWdlcyBzbyBmYXIuIEVtcGxveWVlcywgY29udHJpYnV0b3JzIGFuZCB0aGUgc2l0ZSBnYWluIGJ5IHNoYXJpbmcgaWRlYXMgYW5kIHBvb2xpbmcgZWZmb3J0LCBhcyBkb2VzIHRoZSBvcGVuIHNvdXJjZSBjb21tdW5pdHkgaW4gZ2VuZXJhbC4gVGhlIHNpdGUgaXMgYnVpbHQgb24gbnVtZXJvdXMgb3BlbiBzb3VyY2UgcHJvamVjdHMsIGFuZCB3ZSBhcmUgb3BlbiBzb3VyY2VkIHRvIGdpdmUgYmFjayB0byB0aGUgY29tbXVuaXR5IGFuZCBwcm92aWRlIGNvZGUtY3VyaW91cyBwbGF5ZXJzIGEgZmFtaWxpYXIgcHJvamVjdCB0byBleHBsb3JlIGFuZCBleHBlcmltZW50IHdpdGguIEFueW9uZSBjYW4gam9pbiB0aGUgQ29kZUNvbWJhdCBjb21tdW5pdHkhIENoZWNrIG91dCBvdXJcIlxuICAgIGNvbW11bml0eV9kZXNjcmlwdGlvbl9saW5rOiBcInDDoWdpbmEgZGUgY29udHJpYnVpw6fDo29cIlxuICAgIGNvbW11bml0eV9kZXNjcmlwdGlvbl8yOiBcInBhcmEgbWFpcyBpbmZvcm1hw6fDtWVzLlwiXG4gICAgbnVtYmVyX2NvbnRyaWJ1dG9yczogXCJNYWlzIGRlIDQ1MCBjb250cmlidWlkb3JlcyBkZXJhbSBvIHNldSBhcG9pbyBlIHRlbXBvIGEgZXN0ZSBwcm9qZXRvLlwiXG4gICAgc3RvcnlfdGl0bGU6IFwiQSBub3NzYSBoaXN0w7NyaWEgYXTDqSBhZ29yYVwiXG4gICAgc3Rvcnlfc3VidGl0bGU6IFwiRGVzZGUgMjAxMywgbyBDb2RlQ29tYmF0IGNyZXNjZXUgZGUgdW0gbWVybyBjb25qdW50byBkZSBlc2Jvw6dvcyBwYXJhIHVtIGpvZ28gcGFscMOhdmVsIGUgcHLDs3NwZXJvLlwiXG4gICAgc3Rvcnlfc3RhdGlzdGljXzFhOiBcIjUsMDAwLDAwMCtcIlxuICAgIHN0b3J5X3N0YXRpc3RpY18xYjogXCJqb2dhZG9yZXMgbm8gdG90YWxcIlxuICAgIHN0b3J5X3N0YXRpc3RpY18xYzogXCJjb21lw6dhcmFtIGEgam9ybmFkYSBkZSBwcm9ncmFtYcOnw6NvIGRlbGVzIHBlbG8gQ29kZUNvbWJhdFwiXG4gICAgc3Rvcnlfc3RhdGlzdGljXzJhOiBcIkZvbW9zIHRyYWR1emlkb3MgcGFyYSBtYWlzIGRlIDUwIGlkaW9tYXMg4oCUIG9zIG5vc3NvcyBqb2dhZG9yZXMgc2F1ZGFtIGEgcGFydGlyIGRlXCJcbiAgICBzdG9yeV9zdGF0aXN0aWNfMmI6IFwiMTkwKyBwYcOtc2VzXCJcbiAgICBzdG9yeV9zdGF0aXN0aWNfM2E6IFwiSnVudG9zLCBlbGVzIGVzY3JldmVyYW1cIlxuICAgIHN0b3J5X3N0YXRpc3RpY18zYjogXCJtaWwgbWlsaMO1ZXMgZGUgbGluaGFzIGRlIGPDs2RpZ28gKGUgY29udGludWEgYSBjb250YXIpXCJcbiAgICBzdG9yeV9zdGF0aXN0aWNfM2M6IFwiZW0gbXVpdGFzIGxpbmd1YWdlbnMgZGUgcHJvZ3JhbWHDp8OjbyBkaWZlcmVudGVzXCJcbiMgICAgc3RvcnlfbG9uZ193YXlfMTogXCJUaG91Z2ggd2UndmUgY29tZSBhIGxvbmcgd2F5Li4uXCJcbiMgICAgc3Rvcnlfc2tldGNoX2NhcHRpb246IFwiTmljaydzIHZlcnkgZmlyc3Qgc2tldGNoIGRlcGljdGluZyBhIHByb2dyYW1taW5nIGdhbWUgaW4gYWN0aW9uLlwiXG4jICAgIHN0b3J5X2xvbmdfd2F5XzI6IFwid2Ugc3RpbGwgaGF2ZSBtdWNoIHRvIGRvIGJlZm9yZSB3ZSBjb21wbGV0ZSBvdXIgcXVlc3QsIHNvLi4uXCJcbiMgICAgam9ic190aXRsZTogXCJDb21lIHdvcmsgd2l0aCB1cyBhbmQgaGVscCB3cml0ZSBDb2RlQ29tYmF0IGhpc3RvcnkhXCJcbiMgICAgam9ic19zdWJ0aXRsZTogXCJEb24ndCBzZWUgYSBnb29kIGZpdCBidXQgaW50ZXJlc3RlZCBpbiBrZWVwaW5nIGluIHRvdWNoPyBTZWUgb3VyIFxcXCJDcmVhdGUgWW91ciBPd25cXFwiIGxpc3RpbmcuXCJcbiAgICBqb2JzX2JlbmVmaXRzOiBcIkJlbmVmw61jaW9zIGRlIEVtcHJlZ2Fkb1wiXG4gICAgam9ic19iZW5lZml0XzQ6IFwiRsOpcmlhcyBpbGltaXRhZGFzXCJcbiMgICAgam9ic19iZW5lZml0XzU6IFwiUHJvZmVzc2lvbmFsIGRldmVsb3BtZW50IGFuZCBjb250aW51aW5nIGVkdWNhdGlvbiBzdXBwb3J0IOKAkyBmcmVlIGJvb2tzIGFuZCBnYW1lcyFcIlxuIyAgICBqb2JzX2JlbmVmaXRfNjogXCJNZWRpY2FsIChnb2xkKSwgZGVudGFsLCB2aXNpb24sIGNvbW11dGVyLCA0MDFLXCJcbiMgICAgam9ic19iZW5lZml0Xzc6IFwiU2l0LXN0YW5kIGRlc2tzIGZvciBhbGxcIlxuIyAgICBqb2JzX2JlbmVmaXRfOTogXCIxMC15ZWFyIG9wdGlvbiBleGVyY2lzZSB3aW5kb3dcIlxuIyAgICBqb2JzX2JlbmVmaXRfMTA6IFwiTWF0ZXJuaXR5IGxlYXZlOiAxMiB3ZWVrcyBwYWlkLCBuZXh0IDYgQCA1NSUgc2FsYXJ5XCJcbiMgICAgam9ic19iZW5lZml0XzExOiBcIlBhdGVybml0eSBsZWF2ZTogMTIgd2Vla3MgcGFpZFwiXG4gICAgam9ic19jdXN0b21fdGl0bGU6IFwiQ3JpYSBvIFRldSBQcsOzcHJpb1wiXG4jICAgIGpvYnNfY3VzdG9tX2Rlc2NyaXB0aW9uOiBcIkFyZSB5b3UgcGFzc2lvbmF0ZSBhYm91dCBDb2RlQ29tYmF0IGJ1dCBkb24ndCBzZWUgYSBqb2IgbGlzdGVkIHRoYXQgbWF0Y2hlcyB5b3VyIHF1YWxpZmljYXRpb25zPyBXcml0ZSB1cyBhbmQgc2hvdyBob3cgeW91IHRoaW5rIHlvdSBjYW4gY29udHJpYnV0ZSB0byBvdXIgdGVhbS4gV2UnZCBsb3ZlIHRvIGhlYXIgZnJvbSB5b3UhXCJcbiMgICAgam9ic19jdXN0b21fY29udGFjdF8xOiBcIlNlbmQgdXMgYSBub3RlIGF0XCJcbiMgICAgam9ic19jdXN0b21fY29udGFjdF8yOiBcImludHJvZHVjaW5nIHlvdXJzZWxmIGFuZCB3ZSBtaWdodCBnZXQgaW4gdG91Y2ggaW4gdGhlIGZ1dHVyZSFcIlxuICAgIGNvbnRhY3RfdGl0bGU6IFwiSW1wcmVuc2EgZSBDb250YWN0b3NcIlxuICAgIGNvbnRhY3Rfc3VidGl0bGU6IFwiUHJlY2lzYXMgZGUgbWFpcyBpbmZvcm1hw6fDo28/IEVudHJhIGVtIGNvbnRhY3RvIGNvbm5vc2NvIGF0cmF2w6lzIGRlXCJcbiMgICAgc2NyZWVuc2hvdHNfdGl0bGU6IFwiR2FtZSBTY3JlZW5zaG90c1wiXG4jICAgIHNjcmVlbnNob3RzX2hpbnQ6IFwiKGNsaWNrIHRvIHZpZXcgZnVsbCBzaXplKVwiXG4jICAgIGRvd25sb2Fkc190aXRsZTogXCJEb3dubG9hZCBBc3NldHMgJiBJbmZvcm1hdGlvblwiXG4gICAgYWJvdXRfY29kZWNvbWJhdDogXCJTb2JyZSBvIENvZGVDb21iYXRcIlxuICAgIGxvZ286IFwiTG9nw7N0aXBvXCJcbiMgICAgc2NyZWVuc2hvdHM6IFwiU2NyZWVuc2hvdHNcIlxuIyAgICBjaGFyYWN0ZXJfYXJ0OiBcIkNoYXJhY3RlciBBcnRcIlxuIyAgICBkb3dubG9hZF9hbGw6IFwiRG93bmxvYWQgQWxsXCJcbiAgICBwcmV2aW91czogXCJBbnRlcmlvclwiXG4jICAgIGxvY2F0aW9uX3RpdGxlOiBcIldlJ3JlIGxvY2F0ZWQgaW4gZG93bnRvd24gU0Y6XCJcblxuICB0ZWFjaGVyczpcbiAgICBsaWNlbnNlc19uZWVkZWQ6IFwiTGljZW7Dp2FzIG5lY2Vzc8Ohcmlhc1wiXG5cbiAgc3BlY2lhbF9vZmZlcjpcbiAgICBzcGVjaWFsX29mZmVyOiBcIk9mZXJ0YSBFc3BlY2lhbFwiXG4jICAgIHByb2plY3RfYmFzZWRfdGl0bGU6IFwiUHJvamVjdC1CYXNlZCBDb3Vyc2VzXCJcbiMgICAgcHJvamVjdF9iYXNlZF9kZXNjcmlwdGlvbjogXCJXZWIgYW5kIEdhbWUgRGV2ZWxvcG1lbnQgY291cnNlcyBmZWF0dXJlIHNoYXJlYWJsZSBmaW5hbCBwcm9qZWN0cy5cIlxuIyAgICBncmVhdF9mb3JfY2x1YnNfdGl0bGU6IFwiR3JlYXQgZm9yIGNsdWJzIGFuZCBlbGVjdGl2ZXNcIlxuIyAgICBncmVhdF9mb3JfY2x1YnNfZGVzY3JpcHRpb246IFwiVGVhY2hlcnMgY2FuIHB1cmNoYXNlIHVwIHRvIF9fbWF4UXVhbnRpdHlTdGFydGVyTGljZW5zZXNfXyBTdGFydGVyIExpY2Vuc2VzLlwiXG4jICAgIGxvd19wcmljZV90aXRsZTogXCJKdXN0IF9fc3RhcnRlckxpY2Vuc2VQcmljZV9fIHBlciBzdHVkZW50XCJcbiMgICAgbG93X3ByaWNlX2Rlc2NyaXB0aW9uOiBcIlN0YXJ0ZXIgTGljZW5zZXMgYXJlIGFjdGl2ZSBmb3IgX19zdGFydGVyTGljZW5zZUxlbmd0aE1vbnRoc19fIG1vbnRocyBmcm9tIHB1cmNoYXNlLlwiXG4jICAgIHRocmVlX2dyZWF0X2NvdXJzZXM6IFwiVGhyZWUgZ3JlYXQgY291cnNlcyBpbmNsdWRlZCBpbiB0aGUgU3RhcnRlciBMaWNlbnNlOlwiXG4jICAgIGxpY2Vuc2VfbGltaXRfZGVzY3JpcHRpb246IFwiVGVhY2hlcnMgY2FuIHB1cmNoYXNlIHVwIHRvIF9fbWF4UXVhbnRpdHlTdGFydGVyTGljZW5zZXNfXyBTdGFydGVyIExpY2Vuc2VzLiBZb3UgaGF2ZSBhbHJlYWR5IHB1cmNoYXNlZCBfX3F1YW50aXR5QWxyZWFkeVB1cmNoYXNlZF9fLiBJZiB5b3UgbmVlZCBtb3JlLCBjb250YWN0IF9fc3VwcG9ydEVtYWlsX18uIFN0YXJ0ZXIgTGljZW5zZXMgYXJlIHZhbGlkIGZvciBfX3N0YXJ0ZXJMaWNlbnNlTGVuZ3RoTW9udGhzX18gbW9udGhzLlwiXG4jICAgIHN0dWRlbnRfc3RhcnRlcl9saWNlbnNlOiBcIlN0dWRlbnQgU3RhcnRlciBMaWNlbnNlXCJcbiMgICAgcHVyY2hhc2Vfc3RhcnRlcl9saWNlbnNlczogXCJQdXJjaGFzZSBTdGFydGVyIExpY2Vuc2VzXCJcbiMgICAgcHVyY2hhc2Vfc3RhcnRlcl9saWNlbnNlc190b19ncmFudDogXCJQdXJjaGFzZSBTdGFydGVyIExpY2Vuc2VzIHRvIGdyYW50IGFjY2VzcyB0byBfX3N0YXJ0ZXJMaWNlbnNlQ291cnNlTGlzdF9fXCJcbiMgICAgc3RhcnRlcl9saWNlbnNlc19jYW5fYmVfdXNlZDogXCJTdGFydGVyIExpY2Vuc2VzIGNhbiBiZSB1c2VkIHRvIGFzc2lnbiBhZGRpdGlvbmFsIGNvdXJzZXMgaW1tZWRpYXRlbHkgYWZ0ZXIgcHVyY2hhc2UuXCJcbiMgICAgcGF5X25vdzogXCJQYXkgTm93XCJcbiMgICAgd2VfYWNjZXB0X2FsbF9tYWpvcl9jcmVkaXRfY2FyZHM6IFwiV2UgYWNjZXB0IGFsbCBtYWpvciBjcmVkaXQgY2FyZHMuXCJcbiMgICAgY3MyX2Rlc2NyaXB0aW9uOiBcImJ1aWxkcyBvbiB0aGUgZm91bmRhdGlvbiBmcm9tIEludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlLCBkaXZpbmcgaW50byBpZi1zdGF0ZW1lbnRzLCBmdW5jdGlvbnMsIGV2ZW50cyBhbmQgbW9yZS5cIlxuIyAgICB3ZDFfZGVzY3JpcHRpb246IFwiaW50cm9kdWNlcyB0aGUgYmFzaWNzIG9mIEhUTUwgYW5kIENTUyB3aGlsZSB0ZWFjaGluZyBza2lsbHMgbmVlZGVkIGZvciBzdHVkZW50cyB0byBidWlsZCB0aGVpciBmaXJzdCB3ZWJwYWdlLlwiXG4jICAgIGdkMV9kZXNjcmlwdGlvbjogXCJ1c2VzIHN5bnRheCBzdHVkZW50cyBhcmUgYWxyZWFkeSBmYW1pbGlhciB3aXRoIHRvIHNob3cgdGhlbSBob3cgdG8gYnVpbGQgYW5kIHNoYXJlIHRoZWlyIG93biBwbGF5YWJsZSBnYW1lIGxldmVscy5cIlxuIyAgICBzZWVfYW5fZXhhbXBsZV9wcm9qZWN0OiBcInNlZSBhbiBleGFtcGxlIHByb2plY3RcIlxuIyAgICBnZXRfc3RhcnRlZF90b2RheTogXCJHZXQgc3RhcnRlZCB0b2RheSFcIlxuIyAgICB3YW50X2FsbF90aGVfY291cnNlczogXCJXYW50IGFsbCB0aGUgY291cnNlcz8gUmVxdWVzdCBpbmZvcm1hdGlvbiBvbiBvdXIgRnVsbCBMaWNlbnNlcy5cIlxuIyAgICBjb21wYXJlX2xpY2Vuc2VfdHlwZXM6IFwiQ29tcGFyZSBMaWNlbnNlIFR5cGVzOlwiXG4jICAgIGNzOiBcIkNvbXB1dGVyIFNjaWVuY2VcIlxuIyAgICB3ZDogXCJXZWIgRGV2ZWxvcG1lbnRcIlxuIyAgICB3ZDE6IFwiV2ViIERldmVsb3BtZW50IDFcIlxuIyAgICBnZDogXCJHYW1lIERldmVsb3BtZW50XCJcbiMgICAgZ2QxOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMVwiXG4jICAgIG1heGltdW1fc3R1ZGVudHM6IFwiTWF4aW11bSAjIG9mIFN0dWRlbnRzXCJcbiMgICAgdW5saW1pdGVkOiBcIlVubGltaXRlZFwiXG4jICAgIHByaW9yaXR5X3N1cHBvcnQ6IFwiUHJpb3JpdHkgc3VwcG9ydFwiXG4jICAgIHllczogXCJZZXNcIlxuIyAgICBwcmljZV9wZXJfc3R1ZGVudDogXCJfX3ByaWNlX18gcGVyIHN0dWRlbnRcIlxuIyAgICBwcmljaW5nOiBcIlByaWNpbmdcIlxuIyAgICBmcmVlOiBcIkZyZWVcIlxuIyAgICBwdXJjaGFzZTogXCJQdXJjaGFzZVwiXG4jICAgIGNvdXJzZXNfcHJlZml4OiBcIkNvdXJzZXNcIlxuIyAgICBjb3Vyc2VzX3N1ZmZpeDogXCJcIlxuIyAgICBjb3Vyc2VfcHJlZml4OiBcIkNvdXJzZVwiXG4jICAgIGNvdXJzZV9zdWZmaXg6IFwiXCJcblxuICB0ZWFjaGVyc19xdW90ZTpcbiMgICAgc3VidGl0bGU6IFwiR2V0IHlvdXIgc3R1ZGVudHMgc3RhcnRlZCBpbiBsZXNzIHRoYW4gYW4gaG91ci4gWW91J2xsIGJlIGFibGUgdG8gPHN0cm9uZz5jcmVhdGUgYSBjbGFzcywgYWRkIHN0dWRlbnRzLCBhbmQgbW9uaXRvciB0aGVpciBwcm9ncmVzczwvc3Ryb25nPiBhcyB0aGV5IGxlYXJuIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiMgICAgZW1haWxfZXhpc3RzOiBcIlVzZXIgZXhpc3RzIHdpdGggdGhpcyBlbWFpbC5cIlxuICAgIHBob25lX251bWJlcjogXCJOw7ptZXJvIGRlIHRlbGVtw7N2ZWxcIlxuICAgIHBob25lX251bWJlcl9oZWxwOiBcIlF1YWwgw6kgbyBtZWxob3IgbsO6bWVybyBwYXJhIGVudHJhcm1vcyBlbSBjb250YWN0byBjb250aWdvP1wiXG4gICAgcHJpbWFyeV9yb2xlX2xhYmVsOiBcIk8gVGV1IENhcmdvIFByaW5jaXBhbFwiXG4gICAgcm9sZV9kZWZhdWx0OiBcIlNlbGVjaW9uYXIgQ2FyZ29cIlxuIyAgICBwcmltYXJ5X3JvbGVfZGVmYXVsdDogXCJTZWxlY3QgUHJpbWFyeSBSb2xlXCJcbiMgICAgcHVyY2hhc2VyX3JvbGVfZGVmYXVsdDogXCJTZWxlY3QgUHVyY2hhc2VyIFJvbGVcIlxuICAgIHRlY2hfY29vcmRpbmF0b3I6IFwiQ29vcmRlbmFkb3IgZGUgVGVjbm9sb2dpYVwiXG4jICAgIGFkdmlzb3I6IFwiQ3VycmljdWx1bSBTcGVjaWFsaXN0L0Fkdmlzb3JcIlxuICAgIHByaW5jaXBhbDogXCJEaXJldG9yXCJcbiAgICBzdXBlcmludGVuZGVudDogXCJTdXBlcmludGVuZGVudGVcIlxuICAgIHBhcmVudDogXCJFZHVjYWRvclwiXG4jICAgIHB1cmNoYXNlcl9yb2xlX2xhYmVsOiBcIllvdXIgUHVyY2hhc2VyIFJvbGVcIlxuIyAgICBpbmZsdWVuY2VfYWR2b2NhdGU6IFwiSW5mbHVlbmNlL0Fkdm9jYXRlXCJcbiMgICAgZXZhbHVhdGVfcmVjb21tZW5kOiBcIkV2YWx1YXRlL1JlY29tbWVuZFwiXG4jICAgIGFwcHJvdmVfZnVuZHM6IFwiQXBwcm92ZSBGdW5kc1wiXG4jICAgIG5vX3B1cmNoYXNlcl9yb2xlOiBcIk5vIHJvbGUgaW4gcHVyY2hhc2UgZGVjaXNpb25zXCJcbiAgICBkaXN0cmljdF9sYWJlbDogXCJEaXN0cml0b1wiXG4gICAgZGlzdHJpY3RfbmFtZTogXCJOb21lIGRvIERpc3RyaXRvXCJcbiAgICBkaXN0cmljdF9uYTogXCJFc2NyZXZlIE4vQSBzZSBuw6NvIHNlIGFwbGljYXJcIlxuICAgIG9yZ2FuaXphdGlvbl9sYWJlbDogXCJFc2NvbGFcIlxuICAgIHNjaG9vbF9uYW1lOiBcIk5vbWUgZGEgRXNjb2xhXCJcbiAgICBjaXR5OiBcIkNpZGFkZVwiXG4gICAgc3RhdGU6IFwiRXN0YWRvXCJcbiAgICBjb3VudHJ5OiBcIlBhw61zXCJcbiAgICBudW1fc3R1ZGVudHNfaGVscDogXCJRdWFudG9zIGVzdHVkYW50ZXMgdsOjbyB1c2FyIG8gQ29kZUNvbWJhdD9cIlxuICAgIG51bV9zdHVkZW50c19kZWZhdWx0OiBcIlNlbGVjaW9uYXIgSW50ZXJ2YWxvXCJcbiAgICBlZHVjYXRpb25fbGV2ZWxfbGFiZWw6IFwiTsOtdmVsIGRlIEVkdWNhw6fDo28gZG9zIEVzdHVkYW50ZXNcIlxuICAgIGVkdWNhdGlvbl9sZXZlbF9oZWxwOiBcIkVzY29saGUgdG9kb3Mgb3MgcXVlIHNlIGFwbGljYXJlbS5cIlxuIyAgICBlbGVtZW50YXJ5X3NjaG9vbDogXCJFbGVtZW50YXJ5IFNjaG9vbFwiXG4jICAgIGhpZ2hfc2Nob29sOiBcIkhpZ2ggU2Nob29sXCJcbiAgICBwbGVhc2VfZXhwbGFpbjogXCIocG9yIGZhdm9yLCBleHBsaWNhKVwiXG4jICAgIG1pZGRsZV9zY2hvb2w6IFwiTWlkZGxlIFNjaG9vbFwiXG4jICAgIGNvbGxlZ2VfcGx1czogXCJDb2xsZWdlIG9yIGhpZ2hlclwiXG4gICAgcmVmZXJyZXI6IFwiQ29tbyBvdXZpc3RlIGZhbGFyIGRlIG7Ds3M/XCJcbiAgICByZWZlcnJlcl9oZWxwOiBcIlBvciBleGVtcGxvOiBhdHJhdsOpcyBkZSBvdXRybyBwcm9mZXNzb3IsIGRlIHVtYSBjb25mZXLDqm5jaWEsIGRvcyB0ZXVzIGVzdHVkYW50ZXMsIGRvIENvZGUub3JnLCBldGMuXCJcbiAgICByZWZlcnJlcl9kZWZhdWx0OiBcIlNlbGVjaW9uYSBVbVwiXG4jICAgIHJlZmVycmVyX2NvbmZlcmVuY2U6IFwiQ29uZmVyZW5jZSAoZS5nLiBJU1RFKVwiXG4gICAgcmVmZXJyZXJfaG9jOiBcIkNvZGUub3JnL0hvcmEgZG8gQ8OzZGlnb1wiXG4gICAgcmVmZXJyZXJfdGVhY2hlcjogXCJVbSBwcm9mZXNzb3JcIlxuICAgIHJlZmVycmVyX2FkbWluOiBcIlVtIGFkbWluaXN0cmFkb3JcIlxuICAgIHJlZmVycmVyX3N0dWRlbnQ6IFwiVW0gZXN0dWRhbnRlXCJcbiMgICAgcmVmZXJyZXJfcGQ6IFwiUHJvZmVzc2lvbmFsIHRyYWluaW5ncy93b3Jrc2hvcHNcIlxuICAgIHJlZmVycmVyX3dlYjogXCJHb29nbGVcIlxuICAgIHJlZmVycmVyX290aGVyOiBcIk91dHJvXCJcbiMgICAgYW55dGhpbmdfZWxzZTogXCJXaGF0IGtpbmQgb2YgY2xhc3MgZG8geW91IGFudGljaXBhdGUgdXNpbmcgQ29kZUNvbWJhdCBmb3I/XCJcbiAgICB0aGFua3NfaGVhZGVyOiBcIlBlZGlkbyBSZWNlYmlkbyFcIlxuIyAgICB0aGFua3Nfc3ViX2hlYWRlcjogXCJUaGFua3MgZm9yIGV4cHJlc3NpbmcgaW50ZXJlc3QgaW4gQ29kZUNvbWJhdCBmb3IgeW91ciBzY2hvb2wuXCJcbiMgICAgdGhhbmtzX3A6IFwiV2UnbGwgYmUgaW4gdG91Y2ggc29vbiEgSWYgeW91IG5lZWQgdG8gZ2V0IGluIGNvbnRhY3QsIHlvdSBjYW4gcmVhY2ggdXMgYXQ6XCJcbiAgICBiYWNrX3RvX2NsYXNzZXM6IFwiVm9sdGFyIMOgcyBUdXJtYXNcIlxuIyAgICBmaW5pc2hfc2lnbnVwOiBcIkZpbmlzaCBjcmVhdGluZyB5b3VyIHRlYWNoZXIgYWNjb3VudDpcIlxuIyAgICBmaW5pc2hfc2lnbnVwX3A6IFwiQ3JlYXRlIGFuIGFjY291bnQgdG8gc2V0IHVwIGEgY2xhc3MsIGFkZCB5b3VyIHN0dWRlbnRzLCBhbmQgbW9uaXRvciB0aGVpciBwcm9ncmVzcyBhcyB0aGV5IGxlYXJuIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiMgICAgc2lnbnVwX3dpdGg6IFwiU2lnbiB1cCB3aXRoOlwiXG4gICAgY29ubmVjdF93aXRoOiBcIkNvbmVjdGFyIGNvbTpcIlxuIyAgICBjb252ZXJzaW9uX3dhcm5pbmc6IFwiV0FSTklORzogWW91ciBjdXJyZW50IGFjY291bnQgaXMgYSA8ZW0+U3R1ZGVudCBBY2NvdW50PC9lbT4uIE9uY2UgeW91IHN1Ym1pdCB0aGlzIGZvcm0sIHlvdXIgYWNjb3VudCB3aWxsIGJlIHVwZGF0ZWQgdG8gYSBUZWFjaGVyIEFjY291bnQuXCJcbiMgICAgbGVhcm5fbW9yZV9tb2RhbDogXCJUZWFjaGVyIGFjY291bnRzIG9uIENvZGVDb21iYXQgaGF2ZSB0aGUgYWJpbGl0eSB0byBtb25pdG9yIHN0dWRlbnQgcHJvZ3Jlc3MsIGFzc2lnbiBsaWNlbnNlcyBhbmQgbWFuYWdlIGNsYXNzcm9vbXMuIFRlYWNoZXIgYWNjb3VudHMgY2Fubm90IGJlIGEgcGFydCBvZiBhIGNsYXNzcm9vbSAtIGlmIHlvdSBhcmUgY3VycmVudGx5IGVucm9sbGVkIGluIGEgY2xhc3MgdXNpbmcgdGhpcyBhY2NvdW50LCB5b3Ugd2lsbCBubyBsb25nZXIgYmUgYWJsZSB0byBhY2Nlc3MgaXQgb25jZSB5b3UgdXBkYXRlIHRvIGEgVGVhY2hlciBBY2NvdW50LlwiXG4gICAgY3JlYXRlX2FjY291bnQ6IFwiQ3JpYXIgdW1hIENvbnRhIGRlIFByb2Zlc3NvclwiXG4gICAgY3JlYXRlX2FjY291bnRfc3VidGl0bGU6IFwiT2J0w6ltIGFjZXNzbyBhIGZlcnJhbWVudGFzIHJlc2VydmFkYXMgYSBwcm9mZXNzb3JlcyBwYXJhIHVzYXJlcyBvIENvZGVDb21iYXQgbmEgc2FsYSBkZSBhdWxhLiA8c3Ryb25nPkNyaWEgdW1hIHR1cm1hPC9zdHJvbmc+LCBhZGljaW9uYSBvcyB0ZXVzIGVzdHVkYW50ZXMgZSA8c3Ryb25nPm1vbml0b3JpemEgbyBwcm9ncmVzc28gZGVsZXM8L3N0cm9uZz4hXCJcbiMgICAgY29udmVydF9hY2NvdW50X3RpdGxlOiBcIlVwZGF0ZSB0byBUZWFjaGVyIEFjY291bnRcIlxuIyAgICBub3Q6IFwiTm90XCJcblxuICB2ZXJzaW9uczpcbiAgICBzYXZlX3ZlcnNpb25fdGl0bGU6IFwiR3VhcmRhciBOb3ZhIFZlcnPDo29cIlxuICAgIG5ld19tYWpvcl92ZXJzaW9uOiBcIk5vdmEgVmVyc8OjbyBQcmluY2lwYWxcIlxuICAgIHN1Ym1pdHRpbmdfcGF0Y2g6IFwiQSBTdWJtZXRlciBBdHVhbGl6YcOnw6NvLi4uXCJcbiAgICBjbGFfcHJlZml4OiBcIlBhcmEgZ3VhcmRhcmVzIGFzIGFsdGVyYcOnw7VlcywgcHJlY2lzYXMgZGUgY29uY29yZGFyIGNvbSBvIG5vc3NvXCJcbiAgICBjbGFfdXJsOiBcIkNMQVwiXG4gICAgY2xhX3N1ZmZpeDogXCIuXCJcbiAgICBjbGFfYWdyZWU6IFwiRVUgQ09OQ09SRE9cIlxuICAgIG93bmVyX2FwcHJvdmU6IFwiVW0gYWRtaW5pc3RyYWRvciB0ZXLDoSBkZSBhcHJvdsOhLWxhIGFudGVzIGRlIGFzIHR1YXMgYWx0ZXJhw6fDtWVzIGZpY2FyZW0gdmlzw612ZWlzLlwiXG5cbiAgY29udGFjdDpcbiAgICBjb250YWN0X3VzOiBcIkNvbnRhY3RhIG8gQ29kZUNvbWJhdFwiXG4gICAgd2VsY29tZTogXCLDiSBib20gdGVyIG5vdMOtY2lhcyB0dWFzISBVc2EgZXN0ZSBmb3JtdWzDoXJpbyBwYXJhIG5vcyBlbnZpYXJlcyB1bSBlLW1haWwuIFwiXG4gICAgZm9ydW1fcHJlZml4OiBcIlBhcmEgYWxnbyBww7pibGljbywgcG9yIGZhdm9yIHVzYSBvIFwiXG4gICAgZm9ydW1fcGFnZTogXCJub3NzbyBmw7NydW1cIlxuICAgIGZvcnVtX3N1ZmZpeDogXCIgY29tbyBhbHRlcm5hdGl2YS5cIlxuICAgIGZhcV9wcmVmaXg6IFwiSMOhIHRhbWLDqW0gdW1hXCJcbiAgICBmYXE6IFwiRkFRXCJcbiAgICBzdWJzY3JpYmVfcHJlZml4OiBcIlNlIHByZWNpc2FzIGRlIGFqdWRhIGEgcGVyY2ViZXIgdW0gbsOtdmVsLCBwb3IgZmF2b3JcIlxuICAgIHN1YnNjcmliZTogXCJjb21wcmEgdW1hIHN1YnNjcmnDp8OjbyBkbyBDb2RlQ29tYmF0XCJcbiAgICBzdWJzY3JpYmVfc3VmZml4OiBcImUgbsOzcyBmaWNhcmVtb3MgZmVsaXplcyBwb3IgYWp1ZGFyLXRlIGNvbSBvIHRldSBjw7NkaWdvLlwiXG4gICAgc3Vic2NyaWJlcl9zdXBwb3J0OiBcIkNvbW8gw6lzIHVtIHN1YnNjcml0b3IgZG8gQ29kZUNvbWJhdCwgb3MgdGV1cyBlLW1haWxzIHRlcsOjbyBwcmlvcmlkYWRlIG5vIG5vc3NvIHN1cG9ydGUuXCJcbiAgICBzY3JlZW5zaG90X2luY2x1ZGVkOiBcIkNhcHR1cmEgZGUgZWNyw6MgaW5jbHXDrWRhLlwiXG4gICAgd2hlcmVfcmVwbHk6IFwiUGFyYSBvbmRlIGRldmVtb3MgZW52aWFyIGEgcmVzcG9zdGE/XCJcbiAgICBzZW5kOiBcIkVudmlhciBGZWVkYmFja1wiXG5cbiAgYWNjb3VudF9zZXR0aW5nczpcbiAgICB0aXRsZTogXCJEZWZpbmnDp8O1ZXMgZGEgQ29udGFcIlxuICAgIG5vdF9sb2dnZWRfaW46IFwiSW5pY2lhIHNlc3PDo28gb3UgY3JpYSB1bWEgY29udGEgcGFyYSBhbHRlcmFyZXMgYXMgdHVhcyBkZWZpbmnDp8O1ZXMuXCJcbiAgICBtZV90YWI6IFwiRXVcIlxuICAgIHBpY3R1cmVfdGFiOiBcIkZvdG9ncmFmaWFcIlxuICAgIGRlbGV0ZV9hY2NvdW50X3RhYjogXCJFbGltaW5hIGEgVHVhIENvbnRhXCJcbiAgICB3cm9uZ19lbWFpbDogXCJFLW1haWwgb3UgTm9tZSBkZSBVdGlsaXphZG9yIEVycmFkb1wiXG4gICAgd3JvbmdfcGFzc3dvcmQ6IFwiUGFsYXZyYS1wYXNzZSBFcnJhZGFcIlxuICAgIGRlbGV0ZV90aGlzX2FjY291bnQ6IFwiRWxpbWluYSBlc3RhIGNvbnRhIHBlcm1hbmVudGVtZW50ZVwiXG4gICAgcmVzZXRfcHJvZ3Jlc3NfdGFiOiBcIlJlaW5pY2lhciBUb2RvIG8gUHJvZ3Jlc3NvXCJcbiAgICByZXNldF95b3VyX3Byb2dyZXNzOiBcIkxpbXBhciB0b2RvIG8gdGV1IHByb2dyZXNzbyBlIGNvbWXDp2FyIGRlIG5vdm9cIlxuICAgIGdvZF9tb2RlOiBcIk1vZG8gRGV1c1wiXG4gICAgZW1haWxzX3RhYjogXCJFLW1haWxzXCJcbiAgICBhZG1pbjogXCJBZG1pbmlzdHJhZG9yXCJcbiAgICBtYW5hZ2Vfc3Vic2NyaXB0aW9uOiBcIkNsaWNhIGFxdWkgcGFyYSBnZXJpcmVzIGEgdHVhIHN1YnNjcmnDp8Ojby5cIlxuICAgIG5ld19wYXNzd29yZDogXCJOb3ZhIFBhbGF2cmEtcGFzc2VcIlxuICAgIG5ld19wYXNzd29yZF92ZXJpZnk6IFwiVmVyaWZpY2FyXCJcbiAgICB0eXBlX2luX2VtYWlsOiBcIkVzY3JldmUgbyB0ZXUgZS1tYWlsIG91IG5vbWUgZGUgdXRpbGl6YWRvciBwYXJhIGNvbmZpcm1hcmVzIGEgZWxpbWluYcOnw6NvIGRhIGNvbnRhLlwiXG4gICAgdHlwZV9pbl9lbWFpbF9wcm9ncmVzczogXCJFc2NyZXZlIG8gdGV1IGUtbWFpbCBwYXJhIGNvbmZpcm1hcmVzIGEgZWxpbWluYcOnw6NvIGRvIHRldSBwcm9ncmVzc28uXCJcbiAgICB0eXBlX2luX3Bhc3N3b3JkOiBcIkVzY3JldmUgdGFtYsOpbSBhIHR1YSBwYWxhdnJhLXBhc3NlLlwiXG4gICAgZW1haWxfc3Vic2NyaXB0aW9uczogXCJTdWJzY3Jpw6fDtWVzIGRlIEUtbWFpbFwiXG4gICAgZW1haWxfc3Vic2NyaXB0aW9uc19ub25lOiBcIlNlbSBTdWJzY2nDp8O1ZXMgZGUgRS1tYWlsLlwiXG4gICAgZW1haWxfYW5ub3VuY2VtZW50czogXCJBbsO6bmNpb3NcIlxuICAgIGVtYWlsX2Fubm91bmNlbWVudHNfZGVzY3JpcHRpb246IFwiUmVjZWJlIGUtbWFpbHMgc29icmUgYXMgw7psdGltYXMgbm92aWRhZGVzIGUgZGVzZW52b2x2aW1lbnRvcyBubyBDb2RlQ29tYmF0LlwiXG4gICAgZW1haWxfbm90aWZpY2F0aW9uczogXCJOb3RpZmljYcOnw7Vlc1wiXG4gICAgZW1haWxfbm90aWZpY2F0aW9uc19zdW1tYXJ5OiBcIkNvbnRyb2xhLCBkZSB1bWEgZm9ybWEgcGVyc29uYWxpemFkYSBlIGF1dG9tw6F0aWNhLCBvcyBlLW1haWxzIGRlIG5vdGlmaWNhw6fDtWVzIHJlbGFjaW9uYWRvcyBjb20gYSB0dWEgYXRpdmlkYWRlIG5vIENvZGVDb21iYXQuXCJcbiAgICBlbWFpbF9hbnlfbm90ZXM6IFwiUXVhaXNxdWVyIE5vdGlmaWNhw6fDtWVzXCJcbiAgICBlbWFpbF9hbnlfbm90ZXNfZGVzY3JpcHRpb246IFwiRGVzYXRpdmEgcGFyYSBwYXJhcmVzIGRlIHJlY2ViZXIgdG9kb3Mgb3MgZS1tYWlscyBkZSBub3RpZmljYcOnw6NvIGRlIGF0aXZpZGFkZS5cIlxuICAgIGVtYWlsX25ld3M6IFwiTm90w61jaWFzXCJcbiAgICBlbWFpbF9yZWNydWl0X25vdGVzOiBcIk9wb3J0dW5pZGFkZXMgZGUgRW1wcmVnb1wiXG4gICAgZW1haWxfcmVjcnVpdF9ub3Rlc19kZXNjcmlwdGlvbjogXCJTZSBqb2dhcyBtdWl0byBiZW0sIHBvZGVtb3MgY29udGFjdGFyLXRlIHBhcmEgdGUgYXJyYW5qYXIgdW0gKG1lbGhvcikgZW1wcmVnby5cIlxuICAgIGNvbnRyaWJ1dG9yX2VtYWlsczogXCJFLW1haWwgUGFyYSBDb250cmlidWludGVzXCJcbiAgICBjb250cmlidXRlX3ByZWZpeDogXCJFc3RhbW9zIMOgIHByb2N1cmEgZGUgcGVzc29hcyBwYXJhIHNlIGp1bnRhcmVtIGEgbsOzcyEgVmlzaXRhIGEgXCJcbiAgICBjb250cmlidXRlX3BhZ2U6IFwicMOhZ2luYSBkZSBjb250cmlidWnDp8Ojb1wiXG4gICAgY29udHJpYnV0ZV9zdWZmaXg6IFwiIHBhcmEgbWFpcyBpbmZvcm1hw6fDtWVzLlwiXG4gICAgZW1haWxfdG9nZ2xlOiBcIkFsdGVybmFyIFRvZG9zXCJcbiAgICBlcnJvcl9zYXZpbmc6IFwiRXJybyBhbyBHdWFyZGFyXCJcbiAgICBzYXZlZDogXCJBbHRlcmHDp8O1ZXMgR3VhcmRhZGFzXCJcbiAgICBwYXNzd29yZF9taXNtYXRjaDogXCJBcyBwYWxhdnJhcy1wYXNzZSBuw6NvIGNvaW5jaWRlbS5cIlxuICAgIHBhc3N3b3JkX3JlcGVhdDogXCJQb3IgZmF2b3IgcmVwZXRlIGEgdHVhIHBhbGF2cmEtcGFzc2UuXCJcblxuICBrZXlib2FyZF9zaG9ydGN1dHM6XG4gICAga2V5Ym9hcmRfc2hvcnRjdXRzOiBcIkF0YWxob3MgZGUgVGVjbGFkb1wiXG4gICAgc3BhY2U6IFwiRXNwYcOnb1wiXG4gICAgZW50ZXI6IFwiRW50ZXJcIlxuICAgIHByZXNzX2VudGVyOiBcInByZXNzaW9uYSBlbnRlclwiXG4gICAgZXNjYXBlOiBcIkVzY1wiXG4gICAgc2hpZnQ6IFwiU2hpZnRcIlxuICAgIHJ1bl9jb2RlOiBcIkV4ZWN1dGFyIGPDs2RpZ28gYXR1YWwuXCJcbiAgICBydW5fcmVhbF90aW1lOiBcIkV4ZWN1dGFyIGVtIHRlbXBvIHJlYWwuXCJcbiAgICBjb250aW51ZV9zY3JpcHQ6IFwiU2FsdGFyIG8gc2NyaXB0IGF0dWFsLlwiXG4gICAgc2tpcF9zY3JpcHRzOiBcIlNhbHRhciB0b2RvcyBvcyBzY3JpcHRzIHNhbHTDoXZlaXMuXCJcbiAgICB0b2dnbGVfcGxheWJhY2s6IFwiQWx0ZXJuYXIgZW50cmUgSm9nYXIgZSBQYXVzYXIuXCJcbiAgICBzY3J1Yl9wbGF5YmFjazogXCJBbmRhciBwYXJhIGEgZnJlbnRlIGUgcGFyYSB0csOhcyBubyB0ZW1wby5cIlxuICAgIHNpbmdsZV9zY3J1Yl9wbGF5YmFjazogXCJBbmRhciBwYXJhIGEgZnJlbnRlIGUgcGFyYSB0csOhcyBubyB0ZW1wbyB1bSDDum5pY28gZnJhbWUuXCJcbiAgICBzY3J1Yl9leGVjdXRpb246IFwiQW5hbGlzYXIgYSBleGVjdcOnw6NvIGRvIGZlaXRpw6dvIGF0dWFsLlwiXG4gICAgdG9nZ2xlX2RlYnVnOiBcIkF0aXZhci9kZXNhdGl2YXIgYSBqYW5lbGEgZGUgZGVwdXJhw6fDo28uXCJcbiAgICB0b2dnbGVfZ3JpZDogXCJBdGl2YXIvZGVzYXRpdmFyIGEgc29icmVwb3Npw6fDo28gZGEgZ3JlbGhhLlwiXG4gICAgdG9nZ2xlX3BhdGhmaW5kaW5nOiBcIkF0aXZhci9kZXNhdGl2YXIgYSBzb2JyZXBvc2nDp8OjbyBkbyBlbmNvbnRyYWRvciBkZSBjYW1pbmhvLlwiXG4gICAgYmVhdXRpZnk6IFwiRW1iZWxlemFyIG8gY8OzZGlnbyBhbyBlc3RhbmRhcmRpemFyIGEgZm9ybWF0YcOnw6NvLlwiXG4gICAgbWF4aW1pemVfZWRpdG9yOiBcIk1heGltaXphci9taW5pbWl6YXIgbyBlZGl0b3IgZGUgY8OzZGlnby5cIlxuXG4gIGNvbW11bml0eTpcbiAgICBtYWluX3RpdGxlOiBcIkNvbXVuaWRhZGUgZG8gQ29kZUNvbWJhdFwiXG4gICAgaW50cm9kdWN0aW9uOiBcIkNvbmZlcmUgYWJhaXhvIGFzIGZvcm1hcyBkZSB0ZSBlbnZvbHZlcmVzIGUgZXNjb2xoZSBhIHF1ZSB0ZSBwYXJlY2UgbWFpcyBkaXZlcnRpZGEuIEVzdGFtb3MgYW5zaW9zb3MgcG9yIHRyYWJhbGhhciBjb250aWdvIVwiXG4gICAgbGV2ZWxfZWRpdG9yX3ByZWZpeDogXCJVc2Egb1wiXG4gICAgbGV2ZWxfZWRpdG9yX3N1ZmZpeDogXCJkbyBDb2RlQ29tYmF0IHBhcmEgY3JpYXJlcyBlIGVkaXRhcmVzIG7DrXZlaXMuIE9zIHV0aWxpemFkb3JlcyBqw6EgY3JpYXJhbSBuw612ZWlzIHBhcmEgYXVsYXMsIGFtaWdvcywgbWFyYXRvbmFzIGhhY2tlciwgZXN0dWRhbnRlcyBlIGZhbWlsaWFyZXMuIFNlIGNyaWFyIHVtIG7DrXZlbCBub3ZvIHBhcmVjZSBpbnRpbWlkYW50ZSwgcG9kZXMgY29tZcOnYXIgcG9yIGJpZnVyY2FyIHVtIGRvcyBub3Nzb3MhXCJcbiAgICB0aGFuZ19lZGl0b3JfcHJlZml4OiBcIkNoYW1hbW9zICd0aGFuZ3MnIMOgcyB1bmlkYWRlcyBkbyBqb2dvLiBVc2Egb1wiXG4gICAgdGhhbmdfZWRpdG9yX3N1ZmZpeDogXCJwYXJhIG1vZGlmaWNhcmVzIGEgYXJ0ZSBkbyBDb2RlQ29tYmF0LiBGYXogYXMgdW5pZGFkZXMgbGFuw6dhcmVtIHByb2rDqXRlaXMsIGFsdGVyYSBhIGRpcmXDp8OjbyBkZSB1bWEgYW5pbWHDp8OjbywgYWx0ZXJhIG9zIHBvbnRvcyBkZSB2aWRhIGRlIHVtYSB1bmlkYWRlIG91IGFuZXhhIGFzIHR1YXMgcHLDs3ByaWFzIHVuaWRhZGVzLlwiXG4gICAgYXJ0aWNsZV9lZGl0b3JfcHJlZml4OiBcIlbDqnMgdW0gZXJybyBlbSBhbGd1bnMgZG9zIG5vc3NvcyBkb2N1bWVudG9zPyBRdWVyZXMgZXNjcmV2ZXIgYWxndW1hcyBpbnN0cnXDp8O1ZXMgcGFyYSBhcyB0dWFzIHByw7NwcmlhcyBjcmlhw6fDtWVzPyBDb25mZXJlIG9cIlxuICAgIGFydGljbGVfZWRpdG9yX3N1ZmZpeDogXCJlIGFqdWRhIG9zIGpvZ2Fkb3JlcyBkbyBDb2RlQ29tYmF0IGEgb2J0ZXIgbyBtw6F4aW1vIGRvIHRlbXBvIGRlIGpvZ28gZGVsZXMuXCJcbiAgICBmaW5kX3VzOiBcIkVuY29udHJhLW5vcyBuZXN0ZXMgc8OtdGlvc1wiXG4gICAgc29jaWFsX2dpdGh1YjogXCJDb25mZXJlIHRvZG8gbyBub3NzbyBjw7NkaWdvIG5vIEdpdEh1YlwiXG4gICAgc29jaWFsX2Jsb2c6IFwiTMOqIG8gYmxvZyBkbyBDb2RlQ29tYmF0IG5vIFNldHRcIlxuICAgIHNvY2lhbF9kaXNjb3VyY2U6IFwiSnVudGEtdGUgw6AgZGlzY3Vzc8OjbyBubyBub3NzbyBmw7NydW0gRGlzY291cnNlXCJcbiAgICBzb2NpYWxfZmFjZWJvb2s6IFwiR29zdGEgZG8gQ29kZUNvbWJhdCBubyBGYWNlYm9va1wiXG4gICAgc29jaWFsX3R3aXR0ZXI6IFwiU2VndWUgbyBDb2RlQ29tYmF0IG5vIFR3aXR0ZXJcIlxuICAgIHNvY2lhbF9ncGx1czogXCJKdW50YS10ZSBhbyBDb2RlQ29tYmF0IG5vIEdvb2dsZStcIlxuICAgIHNvY2lhbF9zbGFjazogXCJGYWxhIGNvbm5vc2NvIG5vIGNhbmFsIHDDumJsaWNvIGRvIENvZGVDb21iYXQgbm8gU2xhY2tcIlxuICAgIGNvbnRyaWJ1dGVfdG9fdGhlX3Byb2plY3Q6IFwiQ29udHJpYnVpIHBhcmEgbyBwcm9qZXRvXCJcblxuICBjbGFuczpcbiMgICAgdGl0bGU6IFwiSm9pbiBDb2RlQ29tYmF0IENsYW5zIC0gTGVhcm4gdG8gQ29kZSBpbiBQeXRob24sIEphdmFTY3JpcHQsIGFuZCBIVE1MXCJcbiMgICAgY2xhbl90aXRsZTogXCJfX2NsYW5fXyAtIEpvaW4gQ29kZUNvbWJhdCBDbGFucyBhbmQgTGVhcm4gdG8gQ29kZVwiXG4jICAgIG1ldGFfZGVzY3JpcHRpb246IFwiSm9pbiBhIENsYW4gb3IgYnVpbGQgeW91ciBvd24gY29tbXVuaXR5IG9mIGNvZGVycy4gUGxheSBtdWx0aXBsYXllciBhcmVuYSBsZXZlbHMgYW5kIGxldmVsIHVwIHlvdXIgaGVybyBhbmQgeW91ciBjb2Rpbmcgc2tpbGxzLlwiXG4gICAgY2xhbjogXCJDbMOjXCJcbiAgICBjbGFuczogXCJDbMOjc1wiXG4gICAgbmV3X25hbWU6IFwiTm9tZSBkbyBub3ZvIGNsw6NcIlxuICAgIG5ld19kZXNjcmlwdGlvbjogXCJEZXNjcmnDp8OjbyBkbyBub3ZvIGNsw6NcIlxuICAgIG1ha2VfcHJpdmF0ZTogXCJUb3JuYXIgbyBjbMOjIHByaXZhZG9cIlxuICAgIHN1YnNfb25seTogXCJhcGVuYXMgcGFyYSBzdWJzY3JpdG9yZXNcIlxuICAgIGNyZWF0ZV9jbGFuOiBcIkNyaWFyIHVtIE5vdm8gQ2zDo1wiXG4gICAgcHJpdmF0ZV9wcmV2aWV3OiBcIlByw6ktdmlzdWFsaXphw6fDo29cIlxuICAgIHByaXZhdGVfY2xhbnM6IFwiQ2zDo3MgUHJpdmFkb3NcIlxuICAgIHB1YmxpY19jbGFuczogXCJDbMOjcyBQw7pibGljb3NcIlxuICAgIG15X2NsYW5zOiBcIk9zIE1ldXMgQ2zDo3NcIlxuICAgIGNsYW5fbmFtZTogXCJOb21lIGRvIENsw6NcIlxuICAgIG5hbWU6IFwiTm9tZVwiXG4gICAgY2hpZWZ0YWluOiBcIkzDrWRlclwiXG4gICAgZWRpdF9jbGFuX25hbWU6IFwiRWRpdGFyIE5vbWUgZG8gQ2zDo1wiXG4gICAgZWRpdF9jbGFuX2Rlc2NyaXB0aW9uOiBcIkVkaXRhciBEZXNjcmnDp8OjbyBkbyBDbMOjXCJcbiAgICBlZGl0X25hbWU6IFwiZWRpdGFyIG5vbWVcIlxuICAgIGVkaXRfZGVzY3JpcHRpb246IFwiZWRpdGFyIGRlc2NyacOnw6NvXCJcbiAgICBwcml2YXRlOiBcIihwcml2YWRvKVwiXG4gICAgc3VtbWFyeTogXCJSZXN1bW9cIlxuICAgIGF2ZXJhZ2VfbGV2ZWw6IFwiTsOtdmVsIGVtIE3DqWRpYVwiXG4gICAgYXZlcmFnZV9hY2hpZXZlbWVudHM6IFwiQ29ucXVpc3RhcyBlbSBNw6lkaWFcIlxuICAgIGRlbGV0ZV9jbGFuOiBcIkVsaW1pbmFyIG8gQ2zDo1wiXG4gICAgbGVhdmVfY2xhbjogXCJBYmFuZG9uYXIgbyBDbMOjXCJcbiAgICBqb2luX2NsYW46IFwiRW50cmFyIG5vIENsw6NcIlxuICAgIGludml0ZV8xOiBcIkNvbnZpZGFyOlwiXG4gICAgaW52aXRlXzI6IFwiKkNvbnZpZGEgam9nYWRvcmVzIHBhcmEgZXN0ZSBDbMOjIGVudmlhbmRvLWxoZXMgZXN0YSBsaWdhw6fDo28uXCJcbiAgICBtZW1iZXJzOiBcIk1lbWJyb3NcIlxuICAgIHByb2dyZXNzOiBcIlByb2dyZXNzb1wiXG4gICAgbm90X3N0YXJ0ZWRfMTogXCJuw6NvIGNvbWXDp2Fkb1wiXG4gICAgc3RhcnRlZF8xOiBcImNvbWXDp2Fkb1wiXG4gICAgY29tcGxldGVfMTogXCJjb21wbGV0b1wiXG4gICAgZXhwX2xldmVsczogXCJFeHBhbmRpciBvcyBuw612ZWlzXCJcbiAgICByZW1faGVybzogXCJSZW1vdmVyIEhlcsOzaVwiXG4gICAgc3RhdHVzOiBcIkVzdGFkb1wiXG4gICAgY29tcGxldGVfMjogXCJDb21wbGV0b1wiXG4gICAgc3RhcnRlZF8yOiBcIkNvbWXDp2Fkb1wiXG4gICAgbm90X3N0YXJ0ZWRfMjogXCJOw6NvIENvbWXDp2Fkb1wiXG4gICAgdmlld19zb2x1dGlvbjogXCJDbGljYSBwYXJhIHZlcmVzIGEgc29sdcOnw6NvLlwiXG4gICAgdmlld19hdHRlbXB0OiBcIkNsaWNhIHBhcmEgdmVyZXMgYSB0ZW50YXRpdmEuXCJcbiAgICBsYXRlc3RfYWNoaWV2ZW1lbnQ6IFwiw5psdGltYSBDb25xdWlzdGFcIlxuICAgIHBsYXl0aW1lOiBcIlRlbXBvIGRlIGpvZ29cIlxuICAgIGxhc3RfcGxheWVkOiBcIsOabHRpbWEgdmV6IGpvZ2Fkb1wiXG4gICAgbGVhZ3Vlc19leHBsYW5hdGlvbjogXCJKb2dhIG51bWEgbGlnYSBjb250cmEgb3V0cm9zIG1lbWJyb3MgZG8gY2zDoyBuZXN0YXMgaW5zdMOibmNpYXMgZGUgYXJlbmFzIG11bHRpam9nYWRvci5cIlxuICAgIHRyYWNrX2NvbmNlcHRzMTogXCJBY29tcGFuaGUgb3MgY29uY2VpdG9zXCJcbiAgICB0cmFja19jb25jZXB0czJhOiBcImFwcmVuZGlkb3MgcG9yIGNhZGEgZXN0dWRhbnRlXCJcbiAgICB0cmFja19jb25jZXB0czJiOiBcImFwcmVuZGlkb3MgcG9yIGNhZGEgbWVtYnJvXCJcbiAgICB0cmFja19jb25jZXB0czNhOiBcIkFjb21wYW5oZSBvcyBuw612ZWlzIGNvbXBsZXRhZG9zIHBvciBjYWRhIGVzdHVkYW50ZVwiXG4gICAgdHJhY2tfY29uY2VwdHMzYjogXCJBY29tcGFuaGUgb3MgbsOtdmVpcyBjb21wbGV0YWRvcyBwb3IgY2FkYSBtZW1icm9cIlxuICAgIHRyYWNrX2NvbmNlcHRzNGE6IFwiVmVqYSwgZG9zIHNldXMgZXN0dWRhbnRlcywgYXNcIlxuICAgIHRyYWNrX2NvbmNlcHRzNGI6IFwiVmVqYSwgZG9zIHNldXMgbWVtYnJvcywgYXNcIlxuICAgIHRyYWNrX2NvbmNlcHRzNTogXCJzb2x1w6fDtWVzXCJcbiAgICB0cmFja19jb25jZXB0czZhOiBcIk9yZGVuZSBvcyBlc3R1ZGFudGVzIHBvciBub21lIG91IHByb2dyZXNzb1wiXG4gICAgdHJhY2tfY29uY2VwdHM2YjogXCJPcmRlbmUgb3MgbWVtYnJvcyBwb3Igbm9tZSBvdSBwcm9ncmVzc29cIlxuICAgIHRyYWNrX2NvbmNlcHRzNzogXCLDiSBuZWNlc3PDoXJpbyB1bSBjb252aXRlXCJcbiAgICB0cmFja19jb25jZXB0czg6IFwicGFyYSBlbnRyYXJcIlxuICAgIHByaXZhdGVfcmVxdWlyZV9zdWI6IFwiw4kgbmVjZXNzw6FyaWEgdW1hIHN1YnNjcmnDp8OjbyBwYXJhIGNyaWFyIG91IGVudHJhciBudW0gY2zDoyBwcml2YWRvLlwiXG5cbiAgY291cnNlczpcbiAgICBjcmVhdGVfbmV3X2NsYXNzOiBcIkNyaWFyIFR1cm1hIE5vdmFcIlxuIyAgICBob2NfYmx1cmIxOiBcIlRyeSB0aGVcIlxuIyAgICBob2NfYmx1cmIyOiBcIkNvZGUsIFBsYXksIFNoYXJlXCJcbiMgICAgaG9jX2JsdXJiMzogXCJhY3Rpdml0eSEgQ29uc3RydWN0IGZvdXIgZGlmZmVyZW50IG1pbmlnYW1lcyB0byBsZWFybiB0aGUgYmFzaWNzIG9mIGdhbWUgZGV2ZWxvcG1lbnQsIHRoZW4gbWFrZSB5b3VyIG93biFcIlxuICAgIHNvbHV0aW9uc19yZXF1aXJlX2xpY2Vuc2VzOiBcIkFzIHNvbHXDp8O1ZXMgZG9zIG7DrXZlaXMgZXN0w6NvIGRpc3BvbsOtdmVpcyBwYXJhIHByb2Zlc3NvcmVzIHF1ZSB0ZW5oYW0gbGljZW7Dp2FzLlwiXG4gICAgdW5uYW1lZF9jbGFzczogXCJUdXJtYSBTZW0gTm9tZVwiXG4gICAgZWRpdF9zZXR0aW5nczE6IFwiRWRpdGFyIERlZmluacOnw7VlcyBkYSBUdXJtYVwiXG4gICAgYWRkX3N0dWRlbnRzOiBcIkFkaWNpb25hciBFc3R1ZGFudGVzXCJcbiAgICBzdGF0czogXCJFc3RhdMOtc3RpY2FzXCJcbiMgICAgc3R1ZGVudF9lbWFpbF9pbnZpdGVfYmx1cmI6IFwiWW91ciBzdHVkZW50cyBjYW4gYWxzbyB1c2UgY2xhc3MgY29kZSA8c3Ryb25nPl9fY2xhc3NDb2RlX188L3N0cm9uZz4gd2hlbiBjcmVhdGluZyBhIFN0dWRlbnQgQWNjb3VudCwgbm8gZW1haWwgcmVxdWlyZWQuXCJcbiAgICB0b3RhbF9zdHVkZW50czogXCJFc3R1ZGFudGVzIG5vIHRvdGFsOlwiXG4gICAgYXZlcmFnZV90aW1lOiBcIk3DqWRpYSBkbyB0ZW1wbyBkZSBqb2dvIGRvIG7DrXZlbDpcIlxuICAgIHRvdGFsX3RpbWU6IFwiVGVtcG8gZGUgam9nbyB0b3RhbDpcIlxuICAgIGF2ZXJhZ2VfbGV2ZWxzOiBcIk3DqWRpYSBkZSBuw612ZWlzIGNvbXBsZXRvczpcIlxuICAgIHRvdGFsX2xldmVsczogXCJUb3RhbCBkZSBuw612ZWlzIGNvbXBsZXRvczpcIlxuICAgIHN0dWRlbnRzOiBcIkVzdHVkYW50ZXNcIlxuICAgIGNvbmNlcHRzOiBcIkNvbmNlaXRvc1wiXG4gICAgcGxheV90aW1lOiBcIlRlbXBvIGRlIGpvZ286XCJcbiAgICBjb21wbGV0ZWQ6IFwiQ29tcGxldG9zOlwiXG4gICAgZW50ZXJfZW1haWxzOiBcIlNlcGFyYSBjYWRhIGVuZGVyZcOnbyBkZSBlLW1haWwgY29tIHVtYSBxdWVicmEgZGUgbGluaGEgb3UgdsOtcmd1bGFzXCJcbiAgICBzZW5kX2ludml0ZXM6IFwiQ29udmlkYXIgRXN0dWRhbnRlc1wiXG4gICAgbnVtYmVyX3Byb2dyYW1taW5nX3N0dWRlbnRzOiBcIk7Dum1lcm8gZGUgRXN0dWRhbnRlc1wiXG4gICAgbnVtYmVyX3RvdGFsX3N0dWRlbnRzOiBcIlRvdGFsIGRlIEVzdHVkYW50ZXMgbmEgRXNjb2xhL0Rpc3RyaXRvXCJcbiAgICBlbnJvbGw6IFwiSW5zY3JldmVyXCJcbiAgICBlbnJvbGxfcGFpZDogXCJJbnNjcmV2ZXIgRXN0dWRhbnRlcyBlbSBDdXJzb3MgUGFnb3NcIlxuICAgIGdldF9lbnJvbGxtZW50czogXCJPYnRlciBNYWlzIExpY2Vuw6dhc1wiXG4gICAgY2hhbmdlX2xhbmd1YWdlOiBcIkFsdGVyYXIgTGluZ3VhZ2VtIGRvIEN1cnNvXCJcbiAgICBrZWVwX3VzaW5nOiBcIkNvbnRpbnVhciBhIFVzYXJcIlxuICAgIHN3aXRjaF90bzogXCJNdWRhciBQYXJhXCJcbiAgICBncmVldGluZ3M6IFwiU2F1ZGHDp8O1ZXMhXCJcbiAgICBiYWNrX2NsYXNzcm9vbXM6IFwiVm9sdGFyIMOgcyBtaW5oYXMgdHVybWFzXCJcbiAgICBiYWNrX2NsYXNzcm9vbTogXCJWb2x0YXIgw6AgdHVybWFcIlxuICAgIGJhY2tfY291cnNlczogXCJWb2x0YXIgYW9zIG1ldXMgY3Vyc29zXCJcbiAgICBlZGl0X2RldGFpbHM6IFwiRWRpdGFyIGRldGFsaGVzIGRhIHR1cm1hXCJcbiAgICBwdXJjaGFzZV9lbnJvbGxtZW50czogXCJBZHF1aXJpciBMaWNlbsOnYXMgZGUgRXN0dWRhbnRlXCJcbiAgICByZW1vdmVfc3R1ZGVudDogXCJyZW1vdmVyIGVzdHVkYW50ZVwiXG4jICAgIGFzc2lnbjogXCJBc3NpZ25cIlxuIyAgICB0b19hc3NpZ246IFwidG8gYXNzaWduIHBhaWQgY291cnNlcy5cIlxuICAgIHN0dWRlbnQ6IFwiRXN0dWRhbnRlXCJcbiAgICB0ZWFjaGVyOiBcIlByb2Zlc3NvclwiXG4gICAgYXJlbmE6IFwiQXJlbmFcIlxuICAgIGF2YWlsYWJsZV9sZXZlbHM6IFwiTsOtdmVpcyBEaXNwb27DrXZlaXNcIlxuICAgIHN0YXJ0ZWQ6IFwiY29tZcOnYWRvXCJcbiAgICBjb21wbGV0ZTogXCJjb21wbGV0YWRvXCJcbiAgICBwcmFjdGljZTogXCJwcsOhdGljYVwiXG4gICAgcmVxdWlyZWQ6IFwib2JyaWdhdMOzcmlvXCJcbiAgICB3ZWxjb21lX3RvX2NvdXJzZXM6IFwiQXZlbnR1cmVpcm9zLCBzZWphbSBiZW0tdmluZG9zIGFvcyBDdXJzb3MhXCJcbiAgICByZWFkeV90b19wbGF5OiBcIlByb250byBwYXJhIGpvZ2FyP1wiXG4gICAgc3RhcnRfbmV3X2dhbWU6IFwiQ29tZcOnYXIgTm92byBKb2dvXCJcbiAgICBwbGF5X25vd19sZWFybl9oZWFkZXI6IFwiSm9nYSBhZ29yYSBwYXJhIGFwcmVuZGVyZXNcIlxuIyAgICBwbGF5X25vd19sZWFybl8xOiBcImJhc2ljIHN5bnRheCB0byBjb250cm9sIHlvdXIgY2hhcmFjdGVyXCJcbiMgICAgcGxheV9ub3dfbGVhcm5fMjogXCJ3aGlsZSBsb29wcyB0byBzb2x2ZSBwZXNreSBwdXp6bGVzXCJcbiMgICAgcGxheV9ub3dfbGVhcm5fMzogXCJzdHJpbmdzICYgdmFyaWFibGVzIHRvIGN1c3RvbWl6ZSBhY3Rpb25zXCJcbiMgICAgcGxheV9ub3dfbGVhcm5fNDogXCJob3cgdG8gZGVmZWF0IGFuIG9ncmUgKGltcG9ydGFudCBsaWZlIHNraWxscyEpXCJcbiAgICB3ZWxjb21lX3RvX3BhZ2U6IFwiTyBNZXUgUGFpbmVsIGRlIEVzdHVkYW50ZVwiXG4gICAgbXlfY2xhc3NlczogXCJUdXJtYXMgQXR1YWlzXCJcbiAgICBjbGFzc19hZGRlZDogXCJUdXJtYSBhZGljaW9uYWRhIGNvbSBzdWNlc3NvIVwiXG4jICAgIHZpZXdfbWFwOiBcInZpZXcgbWFwXCJcbiMgICAgdmlld192aWRlb3M6IFwidmlldyB2aWRlb3NcIlxuICAgIHZpZXdfcHJvamVjdF9nYWxsZXJ5OiBcInZlciBvcyBwcm9qZXRvcyBkb3MgbWV1cyBjb2xlZ2FzXCJcbiAgICBqb2luX2NsYXNzOiBcIkVudHJhciBOdW1hIFR1cm1hXCJcbiAgICBqb2luX2NsYXNzXzI6IFwiRW50cmFyIG5hIHR1cm1hXCJcbiAgICBhc2tfdGVhY2hlcl9mb3JfY29kZTogXCJQZXJndW50YSBhbyB0ZXUgcHJvZmVzc29yIHNlIHRlbnMgdW0gY8OzZGlnbyBkZSB0dXJtYSBkbyBDb2RlQ29tYmF0ISBTZSB0aXZlcmVzLCBpbnRyb2R1LWxvIGFiYWl4bzpcIlxuICAgIGVudGVyX2NfY29kZTogXCI8SW50cm9kdXppciBDw7NkaWdvIGRlIFR1cm1hPlwiXG4gICAgam9pbjogXCJFbnRyYXJcIlxuICAgIGpvaW5pbmc6IFwiQSBlbnRyYXIgbmEgdHVybWFcIlxuICAgIGNvdXJzZV9jb21wbGV0ZTogXCJDdXJzbyBDb21wbGV0b1wiXG4gICAgcGxheV9hcmVuYTogXCJKb2dhciBuYSBBcmVuYVwiXG4gICAgdmlld19wcm9qZWN0OiBcIlZlciBQcm9qZXRvXCJcbiAgICBzdGFydDogXCJDb21lw6dhclwiXG4gICAgbGFzdF9sZXZlbDogXCLDmmx0aW1vIG7DrXZlbCBqb2dhZG9cIlxuICAgIG5vdF95b3U6IFwiTsOjbyDDqXMgdHU/XCJcbiAgICBjb250aW51ZV9wbGF5aW5nOiBcIkNvbnRpbnVhciBhIEpvZ2FyXCJcbiAgICBvcHRpb24xX2hlYWRlcjogXCJDb252aWRhciBFc3R1ZGFudGVzIHBvciBFLW1haWxcIlxuICAgIHJlbW92ZV9zdHVkZW50MTogXCJSZW1vdmVyIEVzdHVkYW50ZVwiXG4gICAgYXJlX3lvdV9zdXJlOiBcIlRlbnMgYSBjZXJ0ZXphIGRlIHF1ZSBxdWVyZXMgcmVtb3ZlciBlc3RlIGVzdHVkYW50ZSBkZXN0YSB0dXJtYT9cIlxuIyAgICByZW1vdmVfZGVzY3JpcHRpb24xOiBcIlN0dWRlbnQgd2lsbCBsb3NlIGFjY2VzcyB0byB0aGlzIGNsYXNzcm9vbSBhbmQgYXNzaWduZWQgY2xhc3Nlcy4gUHJvZ3Jlc3MgYW5kIGdhbWVwbGF5IGlzIE5PVCBsb3N0LCBhbmQgdGhlIHN0dWRlbnQgY2FuIGJlIGFkZGVkIGJhY2sgdG8gdGhlIGNsYXNzcm9vbSBhdCBhbnkgdGltZS5cIlxuIyAgICByZW1vdmVfZGVzY3JpcHRpb24yOiBcIlRoZSBhY3RpdmF0ZWQgcGFpZCBsaWNlbnNlIHdpbGwgbm90IGJlIHJldHVybmVkLlwiXG4jICAgIGxpY2Vuc2Vfd2lsbF9yZXZva2U6IFwiVGhpcyBzdHVkZW50J3MgcGFpZCBsaWNlbnNlIHdpbGwgYmUgcmV2b2tlZCBhbmQgbWFkZSBhdmFpbGFibGUgdG8gYXNzaWduIHRvIGFub3RoZXIgc3R1ZGVudC5cIlxuICAgIGtlZXBfc3R1ZGVudDogXCJNYW50ZXIgRXN0dWRhbnRlXCJcbiAgICByZW1vdmluZ191c2VyOiBcIkEgcmVtb3ZlciB1dGlsaXphZG9yXCJcbiAgICBzdWJ0aXRsZTogXCJSZXbDqiB2aXPDtWVzIGdlcmFpcyBkZSBjdXJzb3MgZSBuw612ZWlzXCIgIyBGbGF0IHN0eWxlIHJlZGVzaWduXG4jICAgIGNoYW5nZWxvZzogXCJWaWV3IGxhdGVzdCBjaGFuZ2VzIHRvIGNvdXJzZSBsZXZlbHMuXCJcbiAgICBzZWxlY3RfbGFuZ3VhZ2U6IFwiU2VsZWNpb25hciBsaW5ndWFnZW1cIlxuICAgIHNlbGVjdF9sZXZlbDogXCJTZWxlY2lvbmFyIG7DrXZlbFwiXG4gICAgcGxheV9sZXZlbDogXCJKb2dhciBOw612ZWxcIlxuICAgIGNvbmNlcHRzX2NvdmVyZWQ6IFwiQ29uY2VpdG9zIEFib3JkYWRvc1wiXG4gICAgdmlld19ndWlkZV9vbmxpbmU6IFwiVmlzw7VlcyBHZXJhaXMgZSBTb2x1w6fDtWVzIGRvIE7DrXZlbFwiXG4gICAgZ3JhbnRzX2xpZmV0aW1lX2FjY2VzczogXCJHYXJhbnRlIGFjZXNzbyBhIHRvZG9zIG9zIEN1cnNvcy5cIlxuICAgIGVucm9sbG1lbnRfY3JlZGl0c19hdmFpbGFibGU6IFwiTGljZW7Dp2FzIERpc3BvbsOtdmVpczpcIlxuICAgIGxhbmd1YWdlX3NlbGVjdDogXCJTZWxlY2lvbmEgdW1hIGxpbmd1YWdlbVwiICMgQ2xhc3Nyb29tU2V0dGluZ3NNb2RhbFxuICAgIGxhbmd1YWdlX2Nhbm5vdF9jaGFuZ2U6IFwiQSBsaW5ndWFnZW0gbsOjbyBwb2RlIHNlciBhbHRlcmFkYSBkZXBvaXMgZGUgZXN0dWRhbnRlcyBlbnRyYXJlbSBudW1hIHR1cm1hLlwiXG4gICAgYXZnX3N0dWRlbnRfZXhwX2xhYmVsOiBcIkV4cGVyacOqbmNpYSBNw6lkaWEgZGUgUHJvZ3JhbWHDp8OjbyBkb3MgRXN0dWRhbnRlc1wiXG4gICAgYXZnX3N0dWRlbnRfZXhwX2Rlc2M6IFwiSXN0byB2YWktbm9zIGFqdWRhciBhIHBlcmNlYmVyIHF1YWwgbyBtZWxob3IgYW5kYW1lbnRvIHBhcmEgb3MgY3Vyc29zLlwiXG4gICAgYXZnX3N0dWRlbnRfZXhwX3NlbGVjdDogXCJTZWxlY2lvbmEgYSBtZWxob3Igb3DDp8Ojb1wiXG4gICAgYXZnX3N0dWRlbnRfZXhwX25vbmU6IFwiTmVuaHVtYSBFeHBlcmnDqm5jaWEgLSBwb3VjYSBvdSBuZW5odW1hIGV4cGVyacOqbmNpYVwiXG4gICAgYXZnX3N0dWRlbnRfZXhwX2JlZ2lubmVyOiBcIkluaWNpYW50ZSAtIGFsZ3VtYSBleHBvc2nDp8OjbyBvdSBiYXNlYWRhIGVtIGJsb2Nvc1wiXG4gICAgYXZnX3N0dWRlbnRfZXhwX2ludGVybWVkaWF0ZTogXCJJbnRlcm3DqWRpYSAtIGFsZ3VtYSBleHBlcmnDqm5jaWEgY29tIGPDs2RpZ28gZXNjcml0b1wiXG4gICAgYXZnX3N0dWRlbnRfZXhwX2FkdmFuY2VkOiBcIkF2YW7Dp2FkYSAtIG11aXRhIGV4cGVyacOqbmNpYSBjb20gY8OzZGlnbyBlc2NyaXRvXCJcbiAgICBhdmdfc3R1ZGVudF9leHBfdmFyaWVkOiBcIlbDoXJpb3MgTsOtdmVpcyBkZSBFeHBlcmnDqm5jaWFcIlxuICAgIHN0dWRlbnRfYWdlX3JhbmdlX2xhYmVsOiBcIkludGVydmFsbyBkZSBJZGFkZXMgZG9zIEVzdHVkYW50ZXNcIlxuICAgIHN0dWRlbnRfYWdlX3JhbmdlX3lvdW5nZXI6IFwiTWVub3MgZGUgNlwiXG4gICAgc3R1ZGVudF9hZ2VfcmFuZ2Vfb2xkZXI6IFwiTWFpcyBkZSAxOFwiXG4gICAgc3R1ZGVudF9hZ2VfcmFuZ2VfdG86IFwiYXTDqVwiXG4jICAgIGVzdGltYXRlZF9jbGFzc19kYXRlc19sYWJlbDogXCJFc3RpbWF0ZWQgQ2xhc3MgRGF0ZXNcIlxuIyAgICBlc3RpbWF0ZWRfY2xhc3NfZnJlcXVlbmN5X2xhYmVsOiBcIkVzdGltYXRlZCBDbGFzcyBGcmVxdWVuY3lcIlxuIyAgICBjbGFzc2VzX3Blcl93ZWVrOiBcImNsYXNzZXMgcGVyIHdlZWtcIlxuIyAgICBtaW51dGVzX3Blcl9jbGFzczogXCJtaW51dGVzIHBlciBjbGFzc1wiXG4gICAgY3JlYXRlX2NsYXNzOiBcIkNyaWFyIFR1cm1hXCJcbiAgICBjbGFzc19uYW1lOiBcIk5vbWUgZGEgVHVybWFcIlxuIyAgICB0ZWFjaGVyX2FjY291bnRfcmVzdHJpY3RlZDogXCJZb3VyIGFjY291bnQgaXMgYSB0ZWFjaGVyIGFjY291bnQgYW5kIGNhbm5vdCBhY2Nlc3Mgc3R1ZGVudCBjb250ZW50LlwiXG4gICAgYWNjb3VudF9yZXN0cmljdGVkOiBcIsOJIG5lY2Vzc8OhcmlhIHVtYSBjb250YSBkZSBlc3R1ZGFudGUgcGFyYSBhY2VkZXJlcyBhIGVzdGEgcMOhZ2luYS5cIlxuIyAgICB1cGRhdGVfYWNjb3VudF9sb2dpbl90aXRsZTogXCJMb2cgaW4gdG8gdXBkYXRlIHlvdXIgYWNjb3VudFwiXG4gICAgdXBkYXRlX2FjY291bnRfdGl0bGU6IFwiQSB0dWEgY29udGEgcHJlY2lzYSBkZSBhdGVuw6fDo28hXCJcbiMgICAgdXBkYXRlX2FjY291bnRfYmx1cmI6IFwiQmVmb3JlIHlvdSBjYW4gYWNjZXNzIHlvdXIgY2xhc3NlcywgY2hvb3NlIGhvdyB5b3Ugd2FudCB0byB1c2UgdGhpcyBhY2NvdW50LlwiXG4jICAgIHVwZGF0ZV9hY2NvdW50X2N1cnJlbnRfdHlwZTogXCJDdXJyZW50IEFjY291bnQgVHlwZTpcIlxuIyAgICB1cGRhdGVfYWNjb3VudF9hY2NvdW50X2VtYWlsOiBcIkFjY291bnQgRW1haWwvVXNlcm5hbWU6XCJcbiAgICB1cGRhdGVfYWNjb3VudF9hbV90ZWFjaGVyOiBcIlNvdSB1bSBwcm9mZXNzb3JcIlxuIyAgICB1cGRhdGVfYWNjb3VudF9rZWVwX2FjY2VzczogXCJLZWVwIGFjY2VzcyB0byBjbGFzc2VzIEkndmUgY3JlYXRlZFwiXG4jICAgIHVwZGF0ZV9hY2NvdW50X3RlYWNoZXJzX2NhbjogXCJUZWFjaGVyIGFjY291bnRzIGNhbjpcIlxuIyAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc19jYW4xOiBcIkNyZWF0ZS9tYW5hZ2UvYWRkIGNsYXNzZXNcIlxuIyAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc19jYW4yOiBcIkFzc2lnbi9lbnJvbGwgc3R1ZGVudHMgaW4gY291cnNlc1wiXG4jICAgIHVwZGF0ZV9hY2NvdW50X3RlYWNoZXJzX2NhbjM6IFwiVW5sb2NrIGFsbCBjb3Vyc2UgbGV2ZWxzIHRvIHRyeSBvdXRcIlxuIyAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc19jYW40OiBcIkFjY2VzcyBuZXcgdGVhY2hlci1vbmx5IGZlYXR1cmVzIGFzIHdlIHJlbGVhc2UgdGhlbVwiXG4jICAgIHVwZGF0ZV9hY2NvdW50X3RlYWNoZXJzX3dhcm5pbmc6IFwiV2FybmluZzogWW91IHdpbGwgYmUgcmVtb3ZlZCBmcm9tIGFsbCBjbGFzc2VzIHRoYXQgeW91IGhhdmUgcHJldmlvdXNseSBqb2luZWQgYW5kIHdpbGwgbm90IGJlIGFibGUgdG8gcGxheSBhcyBhIHN0dWRlbnQuXCJcbiMgICAgdXBkYXRlX2FjY291bnRfcmVtYWluX3RlYWNoZXI6IFwiUmVtYWluIGEgVGVhY2hlclwiXG4jICAgIHVwZGF0ZV9hY2NvdW50X3VwZGF0ZV90ZWFjaGVyOiBcIlVwZGF0ZSB0byBUZWFjaGVyXCJcbiAgICB1cGRhdGVfYWNjb3VudF9hbV9zdHVkZW50OiBcIlNvdSB1bSBlc3R1ZGFudGVcIlxuIyAgICB1cGRhdGVfYWNjb3VudF9yZW1vdmVfYWNjZXNzOiBcIlJlbW92ZSBhY2Nlc3MgdG8gY2xhc3NlcyBJIGhhdmUgY3JlYXRlZFwiXG4jICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjogXCJTdHVkZW50IGFjY291bnRzIGNhbjpcIlxuIyAgICB1cGRhdGVfYWNjb3VudF9zdHVkZW50c19jYW4xOiBcIkpvaW4gY2xhc3Nlc1wiXG4jICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjI6IFwiUGxheSB0aHJvdWdoIGNvdXJzZXMgYXMgYSBzdHVkZW50IGFuZCB0cmFjayB5b3VyIG93biBwcm9ncmVzc1wiXG4jICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjM6IFwiQ29tcGV0ZSBhZ2FpbnN0IGNsYXNzbWF0ZXMgaW4gYXJlbmFzXCJcbiMgICAgdXBkYXRlX2FjY291bnRfc3R1ZGVudHNfY2FuNDogXCJBY2Nlc3MgbmV3IHN0dWRlbnQtb25seSBmZWF0dXJlcyBhcyB3ZSByZWxlYXNlIHRoZW1cIlxuIyAgICB1cGRhdGVfYWNjb3VudF9zdHVkZW50c193YXJuaW5nOiBcIldhcm5pbmc6IFlvdSB3aWxsIG5vdCBiZSBhYmxlIHRvIG1hbmFnZSBhbnkgY2xhc3NlcyB0aGF0IHlvdSBoYXZlIHByZXZpb3VzbHkgY3JlYXRlZCBvciBjcmVhdGUgbmV3IGNsYXNzZXMuXCJcbiMgICAgdW5zdWJzY3JpYmVfd2FybmluZzogXCJXYXJuaW5nOiBZb3Ugd2lsbCBiZSB1bnN1YnNjcmliZWQgZnJvbSB5b3VyIG1vbnRobHkgc3Vic2NyaXB0aW9uLlwiXG4jICAgIHVwZGF0ZV9hY2NvdW50X3JlbWFpbl9zdHVkZW50OiBcIlJlbWFpbiBhIFN0dWRlbnRcIlxuIyAgICB1cGRhdGVfYWNjb3VudF91cGRhdGVfc3R1ZGVudDogXCJVcGRhdGUgdG8gU3R1ZGVudFwiXG4jICAgIG5lZWRfYV9jbGFzc19jb2RlOiBcIllvdSdsbCBuZWVkIGEgQ2xhc3MgQ29kZSBmb3IgdGhlIGNsYXNzIHlvdSdyZSBqb2luaW5nOlwiXG4jICAgIHVwZGF0ZV9hY2NvdW50X25vdF9zdXJlOiBcIk5vdCBzdXJlIHdoaWNoIG9uZSB0byBjaG9vc2U/IEVtYWlsXCJcbiMgICAgdXBkYXRlX2FjY291bnRfY29uZmlybV91cGRhdGVfc3R1ZGVudDogXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gdXBkYXRlIHlvdXIgYWNjb3VudCB0byBhIFN0dWRlbnQgZXhwZXJpZW5jZT9cIlxuIyAgICB1cGRhdGVfYWNjb3VudF9jb25maXJtX3VwZGF0ZV9zdHVkZW50MjogXCJZb3Ugd2lsbCBub3QgYmUgYWJsZSB0byBtYW5hZ2UgYW55IGNsYXNzZXMgdGhhdCB5b3UgaGF2ZSBwcmV2aW91c2x5IGNyZWF0ZWQgb3IgY3JlYXRlIG5ldyBjbGFzc2VzLiBZb3VyIHByZXZpb3VzbHkgY3JlYXRlZCBjbGFzc2VzIHdpbGwgYmUgcmVtb3ZlZCBmcm9tIENvZGVDb21iYXQgYW5kIGNhbm5vdCBiZSByZXN0b3JlZC5cIlxuIyAgICBpbnN0cnVjdG9yOiBcIkluc3RydWN0b3I6IFwiXG4jICAgIHlvdXZlX2JlZW5faW52aXRlZF8xOiBcIllvdSd2ZSBiZWVuIGludml0ZWQgdG8gam9pbiBcIlxuIyAgICB5b3V2ZV9iZWVuX2ludml0ZWRfMjogXCIsIHdoZXJlIHlvdSdsbCBsZWFybiBcIlxuIyAgICB5b3V2ZV9iZWVuX2ludml0ZWRfMzogXCIgd2l0aCB5b3VyIGNsYXNzbWF0ZXMgaW4gQ29kZUNvbWJhdC5cIlxuIyAgICBieV9qb2luaW5nXzE6IFwiQnkgam9pbmluZyBcIlxuIyAgICBieV9qb2luaW5nXzI6IFwid2lsbCBiZSBhYmxlIHRvIGhlbHAgcmVzZXQgeW91ciBwYXNzd29yZCBpZiB5b3UgZm9yZ2V0IG9yIGxvc2UgaXQuIFlvdSBjYW4gYWxzbyB2ZXJpZnkgeW91ciBlbWFpbCBhZGRyZXNzIHNvIHRoYXQgeW91IGNhbiByZXNldCB0aGUgcGFzc3dvcmQgeW91cnNlbGYhXCJcbiMgICAgc2VudF92ZXJpZmljYXRpb246IFwiV2UndmUgc2VudCBhIHZlcmlmaWNhdGlvbiBlbWFpbCB0bzpcIlxuIyAgICB5b3VfY2FuX2VkaXQ6IFwiWW91IGNhbiBlZGl0IHlvdXIgZW1haWwgYWRkcmVzcyBpbiBcIlxuIyAgICBhY2NvdW50X3NldHRpbmdzOiBcIkFjY291bnQgU2V0dGluZ3NcIlxuICAgIHNlbGVjdF95b3VyX2hlcm86IFwiU2VsZWNpb25hIG8gVGV1IEhlcsOzaVwiXG4gICAgc2VsZWN0X3lvdXJfaGVyb19kZXNjcmlwdGlvbjogXCJQb2RlcyBzZW1wcmUgYWx0ZXJhciBvIHRldSBoZXLDs2kgYW8gYWNlZGVyZXMgw6AgdHVhIHDDoWdpbmEgZGUgQ3Vyc29zIGUgY2xpY2FyZXMgZW0gXFxcIkFsdGVyYXIgSGVyw7NpXFxcIlwiXG4gICAgc2VsZWN0X3RoaXNfaGVybzogXCJTZWxlY2lvbmFyIGVzdGUgaGVyw7NpXCJcbiAgICBjdXJyZW50X2hlcm86IFwiSGVyw7NpIEF0dWFsOlwiXG4gICAgY3VycmVudF9oZXJvX2ZlbWFsZTogXCJIZXJvw61uYSBBdHVhbDpcIlxuIyAgICB3ZWJfZGV2X2xhbmd1YWdlX3RyYW5zaXRpb246IFwiQWxsIGNsYXNzZXMgcHJvZ3JhbSBpbiBIVE1MIC8gSmF2YVNjcmlwdCBmb3IgdGhpcyBjb3Vyc2UuICBDbGFzc2VzIHRoYXQgaGF2ZSBiZWVuIHVzaW5nIFB5dGhvbiB3aWxsIHN0YXJ0IHdpdGggZXh0cmEgSmF2YVNjcmlwdCBpbnRybyBsZXZlbHMgdG8gZWFzZSB0aGUgdHJhbnNpdGlvbi4gIENsYXNzZXMgdGhhdCBhcmUgYWxyZWFkeSB1c2luZyBKYXZhU2NyaXB0IHdpbGwgc2tpcCB0aGUgaW50cm8gbGV2ZWxzLlwiXG4gICAgY291cnNlX21lbWJlcnNoaXBfcmVxdWlyZWRfdG9fcGxheTogXCJQcmVjaXNhcyBkZSB0ZSBqdW50YXIgYSB1bSBjdXJzbyBwYXJhIGpvZ2FyZXMgZXN0ZSBuw612ZWwuXCJcbiMgICAgbGljZW5zZV9yZXF1aXJlZF90b19wbGF5OiBcIkFzayB5b3VyIHRlYWNoZXIgdG8gYXNzaWduIGEgbGljZW5zZSB0byB5b3Ugc28geW91IGNhbiBjb250aW51ZSB0byBwbGF5IENvZGVDb21iYXQhXCJcbiMgICAgdXBkYXRlX29sZF9jbGFzc3Jvb206IFwiTmV3IHNjaG9vbCB5ZWFyLCBuZXcgbGV2ZWxzIVwiXG4jICAgIHVwZGF0ZV9vbGRfY2xhc3Nyb29tX2RldGFpbDogXCJUbyBtYWtlIHN1cmUgeW91J3JlIGdldHRpbmcgdGhlIG1vc3QgdXAtdG8tZGF0ZSBsZXZlbHMsIG1ha2Ugc3VyZSB5b3UgY3JlYXRlIGEgbmV3IGNsYXNzIGZvciB0aGlzIHNlbWVzdGVyIGJ5IGNsaWNraW5nIENyZWF0ZSBhIE5ldyBDbGFzcyBvbiB5b3VyXCJcbiMgICAgdGVhY2hlcl9kYXNoYm9hcmQ6IFwidGVhY2hlciBkYXNoYm9hcmRcIlxuIyAgICB1cGRhdGVfb2xkX2NsYXNzcm9vbV9kZXRhaWxfMjogXCJhbmQgZ2l2aW5nIHN0dWRlbnRzIHRoZSBuZXcgQ2xhc3MgQ29kZSB0aGF0IGFwcGVhcnMuXCJcbiMgICAgdmlld19hc3Nlc3NtZW50czogXCJWaWV3IEFzc2Vzc21lbnRzXCJcbiMgICAgdmlld19jaGFsbGVuZ2VzOiBcInZpZXcgY2hhbGxlbmdlIGxldmVsc1wiXG4jICAgIHZpZXdfcmFua2luZzogXCJ2aWV3IHJhbmtpbmdcIlxuIyAgICByYW5raW5nX3Bvc2l0aW9uOiBcIlBvc2l0aW9uXCJcbiMgICAgcmFua2luZ19wbGF5ZXJzOiBcIlBsYXllcnNcIlxuIyAgICByYW5raW5nX2NvbXBsZXRlZF9sZXZlczogXCJDb21wbGV0ZWQgbGV2ZWxzXCJcbiMgICAgY2hhbGxlbmdlOiBcIkNoYWxsZW5nZTpcIlxuIyAgICBjaGFsbGVuZ2VfbGV2ZWw6IFwiQ2hhbGxlbmdlIExldmVsOlwiXG4gICAgc3RhdHVzOiBcIkVzdGFkbzpcIlxuIyAgICBhc3Nlc3NtZW50czogXCJBc3Nlc3NtZW50c1wiXG4gICAgY2hhbGxlbmdlczogXCJEZXNhZmlvc1wiXG4gICAgbGV2ZWxfbmFtZTogXCJOb21lIGRvIE7DrXZlbDpcIlxuIyAgICBrZWVwX3RyeWluZzogXCJLZWVwIFRyeWluZ1wiXG4gICAgc3RhcnRfY2hhbGxlbmdlOiBcIkNvbWXDp2FyIERlc2FmaW9cIlxuIyAgICBsb2NrZWQ6IFwiTG9ja2VkXCJcbiAgICBjb25jZXB0c191c2VkOiBcIkNvbmNlaXRvcyBVc2Fkb3M6XCJcbiMgICAgc2hvd19jaGFuZ2VfbG9nOiBcIlNob3cgY2hhbmdlcyB0byB0aGlzIGNvdXJzZSdzIGxldmVsc1wiXG4jICAgIGhpZGVfY2hhbmdlX2xvZzogXCJIaWRlIGNoYW5nZXMgdG8gdGhpcyBjb3Vyc2UncyBsZXZlbHNcIlxuIyAgICBjb25jZXB0X3ZpZGVvczogXCJDb25jZXB0IFZpZGVvc1wiXG4jICAgIGNvbmNlcHQ6IFwiQ29uY2VwdDpcIlxuIyAgICBiYXNpY19zeW50YXg6IFwiQmFzaWMgU3ludGF4XCJcbiMgICAgd2hpbGVfbG9vcHM6IFwiV2hpbGUgTG9vcHNcIlxuIyAgICB2YXJpYWJsZXM6IFwiVmFyaWFibGVzXCJcbiMgICAgYmFzaWNfc3ludGF4X2Rlc2M6IFwiU3ludGF4IGlzIGhvdyB3ZSB3cml0ZSBjb2RlLiBKdXN0IGFzIHNwZWxsaW5nIGFuZCBncmFtbWFyIGFyZSBpbXBvcnRhbnQgaW4gd3JpdGluZyBuYXJyYXRpdmVzIGFuZCBlc3NheXMsIHN5bnRheCBpcyBpbXBvcnRhbnQgd2hlbiB3cml0aW5nIGNvZGUuIEh1bWFucyBhcmUgZ29vZCBhdCBmaWd1cmluZyBvdXQgd2hhdCBzb21ldGhpbmcgbWVhbnMsIGV2ZW4gaWYgaXQgaXNuJ3QgZXhhY3RseSBjb3JyZWN0LCBidXQgY29tcHV0ZXJzIGFyZW4ndCB0aGF0IHNtYXJ0LCBhbmQgdGhleSBuZWVkIHlvdSB0byB3cml0ZSB2ZXJ5IHByZWNpc2VseS5cIlxuIyAgICB3aGlsZV9sb29wc19kZXNjOiBcIkEgbG9vcCBpcyBhIHdheSBvZiByZXBlYXRpbmcgYWN0aW9ucyBpbiBhIHByb2dyYW0uIFlvdSBjYW4gdXNlIHRoZW0gc28geW91IGRvbid0IGhhdmUgdG8ga2VlcCB3cml0aW5nIHJlcGV0aXRpdmUgY29kZSwgYW5kIHdoZW4geW91IGRvbid0IGtub3cgZXhhY3RseSBob3cgbWFueSB0aW1lcyBhbiBhY3Rpb24gd2lsbCBuZWVkIHRvIG9jY3VyIHRvIGFjY29tcGxpc2ggYSB0YXNrLlwiXG4jICAgIHZhcmlhYmxlc19kZXNjOiBcIldvcmtpbmcgd2l0aCB2YXJpYWJsZXMgaXMgbGlrZSBvcmdhbml6aW5nIHRoaW5ncyBpbiBzaG9lYm94ZXMuIFlvdSBnaXZlIHRoZSBzaG9lYm94IGEgbmFtZSwgbGlrZSBcXFwiU2Nob29sIFN1cHBsaWVzXFxcIiwgYW5kIHRoZW4geW91IHB1dCB0aGluZ3MgaW5zaWRlLiBUaGUgZXhhY3QgY29udGVudHMgb2YgdGhlIGJveCBtaWdodCBjaGFuZ2Ugb3ZlciB0aW1lLCBidXQgd2hhdGV2ZXIncyBpbnNpZGUgd2lsbCBhbHdheXMgYmUgY2FsbGVkIFxcXCJTY2hvb2wgU3VwcGxpZXNcXFwiLiBJbiBwcm9ncmFtbWluZywgdmFyaWFibGVzIGFyZSBzeW1ib2xzIHVzZWQgdG8gc3RvcmUgZGF0YSB0aGF0IHdpbGwgY2hhbmdlIG92ZXIgdGhlIGNvdXJzZSBvZiB0aGUgcHJvZ3JhbS4gVmFyaWFibGVzIGNhbiBob2xkIGEgdmFyaWV0eSBvZiBkYXRhIHR5cGVzLCBpbmNsdWRpbmcgbnVtYmVycyBhbmQgc3RyaW5ncy5cIlxuIyAgICBsb2NrZWRfdmlkZW9zX2Rlc2M6IFwiS2VlcCBwbGF5aW5nIHRoZSBnYW1lIHRvIHVubG9jayB0aGUgX19jb25jZXB0X25hbWVfXyBjb25jZXB0IHZpZGVvLlwiXG4jICAgIHVubG9ja2VkX3ZpZGVvc19kZXNjOiBcIlJldmlldyB0aGUgX19jb25jZXB0X25hbWVfXyBjb25jZXB0IHZpZGVvLlwiXG4jICAgIHZpZGVvX3Nob3duX2JlZm9yZTogXCJzaG93biBiZWZvcmUgX19sZXZlbF9fXCJcbiMgICAgbGlua19nb29nbGVfY2xhc3Nyb29tOiBcIkxpbmsgR29vZ2xlIENsYXNzcm9vbVwiXG4jICAgIHNlbGVjdF95b3VyX2NsYXNzcm9vbTogXCJTZWxlY3QgWW91ciBDbGFzc3Jvb21cIlxuIyAgICBub19jbGFzc3Jvb21zX2ZvdW5kOiBcIk5vIGNsYXNzcm9vbXMgZm91bmRcIlxuIyAgICBjcmVhdGVfY2xhc3Nyb29tX21hbnVhbGx5OiBcIkNyZWF0ZSBjbGFzc3Jvb20gbWFudWFsbHlcIlxuIyAgICBjbGFzc2VzOiBcIkNsYXNzZXNcIlxuIyAgICBjZXJ0aWZpY2F0ZV9idG5fcHJpbnQ6IFwiUHJpbnRcIlxuIyAgICBjZXJ0aWZpY2F0ZV9idG5fdG9nZ2xlOiBcIlRvZ2dsZVwiXG5cbiAgcHJvamVjdF9nYWxsZXJ5OlxuICAgIG5vX3Byb2plY3RzX3B1Ymxpc2hlZDogXCJTw6ogbyBwcmltZWlybyBhIHB1YmxpY2FyIHVtIHByb2pldG8gbmVzdGUgY3Vyc28hXCJcbiAgICB2aWV3X3Byb2plY3Q6IFwiVmVyIFByb2pldG9cIlxuICAgIGVkaXRfcHJvamVjdDogXCJFZGl0YXIgUHJvamV0b1wiXG5cbiAgdGVhY2hlcjpcbiMgICAgYXNzaWduaW5nX2NvdXJzZTogXCJBc3NpZ25pbmcgY291cnNlXCJcbiAgICBiYWNrX3RvX3RvcDogXCJWb2x0YXIgYW8gVG9wb1wiXG4jICAgIGNsaWNrX3N0dWRlbnRfY29kZTogXCJDbGljayBvbiBhbnkgbGV2ZWwgdGhhdCB0aGUgc3R1ZGVudCBoYXMgc3RhcnRlZCBvciBjb21wbGV0ZWQgYmVsb3cgdG8gdmlldyB0aGUgY29kZSB0aGV5IHdyb3RlLlwiXG4gICAgY29kZTogXCJDw7NkaWdvIGRlIF9fbmFtZV9fXCJcbiAgICBjb21wbGV0ZV9zb2x1dGlvbjogXCJTb2x1w6fDo28gQ29tcGxldGFcIlxuIyAgICBjb3Vyc2Vfbm90X3N0YXJ0ZWQ6IFwiU3R1ZGVudCBoYXMgbm90IHN0YXJ0ZWQgdGhpcyBjb3Vyc2UgeWV0LlwiXG4jICAgIGFwcHJlY2lhdGlvbl93ZWVrX2JsdXJiMTogXCJGb3IgPHN0cm9uZz5UZWFjaGVyIEFwcHJlY2lhdGlvbiBXZWVrIDIwMTk8L3N0cm9uZz4sIHdlIGFyZSBvZmZlcmluZyBmcmVlIDEtd2VlayBsaWNlbnNlcyE8YnIgLz5FbWFpbCBSb2IgQXJldmFsbyAoPGEgaHJlZj1cXFwibWFpbHRvOnJvYmFyZXZAY29kZWNvbWJhdC5jb20/c3ViamVjdD1UZWFjaGVyIEFwcHJlY2lhdGlvbiBXZWVrXFxcIj5yb2JhcmV2QGNvZGVjb21iYXQuY29tPC9hPikgd2l0aCBzdWJqZWN0IGxpbmUgXFxcIjxzdHJvbmc+VGVhY2hlciBBcHByZWNpYXRpb24gV2Vlazwvc3Ryb25nPlxcXCIsIGFuZCBpbmNsdWRlOlwiXG4jICAgIGFwcHJlY2lhdGlvbl93ZWVrX2JsdXJiMjogXCJ0aGUgcXVhbnRpdHkgb2YgMS13ZWVrIGxpY2Vuc2VzIHlvdSdkIGxpa2UgKDEgcGVyIHN0dWRlbnQpXCJcbiMgICAgYXBwcmVjaWF0aW9uX3dlZWtfYmx1cmIzOiBcInRoZSBlbWFpbCBhZGRyZXNzIG9mIHlvdXIgQ29kZUNvbWJhdCB0ZWFjaGVyIGFjY291bnRcIlxuIyAgICBhcHByZWNpYXRpb25fd2Vla19ibHVyYjQ6IFwid2hldGhlciB5b3UnZCBsaWtlIGxpY2Vuc2VzIGZvciBXZWVrIDEgKE1heSA2LTEwKSBvciBXZWVrIDIgKE1heSAxMy0xNylcIlxuIyAgICBob2NfaGFwcHlfZWRfd2VlazogXCJIYXBweSBDb21wdXRlciBTY2llbmNlIEVkdWNhdGlvbiBXZWVrIVwiXG4jICAgIGhvY19ibHVyYjE6IFwiTGVhcm4gYWJvdXQgdGhlIGZyZWVcIlxuIyAgICBob2NfYmx1cmIyOiBcIkNvZGUsIFBsYXksIFNoYXJlXCJcbiMgICAgaG9jX2JsdXJiMzogXCJhY3Rpdml0eSwgZG93bmxvYWQgYSBuZXcgdGVhY2hlciBsZXNzb24gcGxhbiwgYW5kIHRlbGwgeW91ciBzdHVkZW50cyB0byBsb2cgaW4gdG8gcGxheSFcIlxuIyAgICBob2NfYnV0dG9uX3RleHQ6IFwiVmlldyBBY3Rpdml0eVwiXG4jICAgIG5vX2NvZGVfeWV0OiBcIlN0dWRlbnQgaGFzIG5vdCB3cml0dGVuIGFueSBjb2RlIGZvciB0aGlzIGxldmVsIHlldC5cIlxuIyAgICBvcGVuX2VuZGVkX2xldmVsOiBcIk9wZW4tRW5kZWQgTGV2ZWxcIlxuICAgIHBhcnRpYWxfc29sdXRpb246IFwiU29sdcOnw6NvIFBhcmNpYWxcIlxuICAgIHJlbW92aW5nX2NvdXJzZTogXCJBIHJlbW92ZXIgbyBjdXJzb1wiXG4jICAgIHNvbHV0aW9uX2FyZW5hX2JsdXJiOiBcIlN0dWRlbnRzIGFyZSBlbmNvdXJhZ2VkIHRvIHNvbHZlIGFyZW5hIGxldmVscyBjcmVhdGl2ZWx5LiBUaGUgc29sdXRpb24gcHJvdmlkZWQgYmVsb3cgbWVldHMgdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgYXJlbmEgbGV2ZWwuXCJcbiMgICAgc29sdXRpb25fY2hhbGxlbmdlX2JsdXJiOiBcIlN0dWRlbnRzIGFyZSBlbmNvdXJhZ2VkIHRvIHNvbHZlIG9wZW4tZW5kZWQgY2hhbGxlbmdlIGxldmVscyBjcmVhdGl2ZWx5LiBPbmUgcG9zc2libGUgc29sdXRpb24gaXMgZGlzcGxheWVkIGJlbG93LlwiXG4jICAgIHNvbHV0aW9uX3Byb2plY3RfYmx1cmI6IFwiU3R1ZGVudHMgYXJlIGVuY291cmFnZWQgdG8gYnVpbGQgYSBjcmVhdGl2ZSBwcm9qZWN0IGluIHRoaXMgbGV2ZWwuIFBsZWFzZSByZWZlciB0byBjdXJyaWN1bHVtIGd1aWRlcyBpbiB0aGUgUmVzb3VyY2UgSHViIGZvciBpbmZvcm1hdGlvbiBvbiBob3cgdG8gZXZhbHVhdGUgdGhlc2UgcHJvamVjdHMuXCJcbiMgICAgc3R1ZGVudHNfY29kZV9ibHVyYjogXCJBIGNvcnJlY3Qgc29sdXRpb24gdG8gZWFjaCBsZXZlbCBpcyBwcm92aWRlZCB3aGVyZSBhcHByb3ByaWF0ZS4gSW4gc29tZSBjYXNlcywgaXTigJlzIHBvc3NpYmxlIGZvciBhIHN0dWRlbnQgdG8gc29sdmUgYSBsZXZlbCB1c2luZyBkaWZmZXJlbnQgY29kZS4gU29sdXRpb25zIGFyZSBub3Qgc2hvd24gZm9yIGxldmVscyB0aGUgc3R1ZGVudCBoYXMgbm90IHN0YXJ0ZWQuXCJcbiMgICAgY291cnNlX3NvbHV0aW9uOiBcIkNvdXJzZSBTb2x1dGlvblwiXG4jICAgIGxldmVsX292ZXJ2aWV3X3NvbHV0aW9uczogXCJMZXZlbCBPdmVydmlldyBhbmQgU29sdXRpb25zXCJcbiMgICAgbm9fc3R1ZGVudF9hc3NpZ25lZDogXCJObyBzdHVkZW50cyBoYXZlIGJlZW4gYXNzaWduZWQgdGhpcyBjb3Vyc2UuXCJcbiMgICAgcGFyZW5fbmV3OiBcIihuZXcpXCJcbiAgICBzdHVkZW50X2NvZGU6IFwiQ8OzZGlnbyBkZSBFc3R1ZGFudGUgZGUgX19uYW1lX19cIlxuICAgIHRlYWNoZXJfZGFzaGJvYXJkOiBcIlBhaW5lbCBkbyBQcm9mZXNzb3JcIiAjIE5hdmJhclxuICAgIG15X2NsYXNzZXM6IFwiQXMgTWluaGFzIFR1cm1hc1wiXG4gICAgY291cnNlczogXCJHdWlhcyBkb3MgQ3Vyc29zXCJcbiAgICBlbnJvbGxtZW50czogXCJMaWNlbsOnYXMgZGUgRXN0dWRhbnRlc1wiXG4gICAgcmVzb3VyY2VzOiBcIlJlY3Vyc29zXCJcbiAgICBoZWxwOiBcIkFqdWRhXCJcbiAgICBsYW5ndWFnZTogXCJMaW5ndWFnZW1cIlxuICAgIGVkaXRfY2xhc3Nfc2V0dGluZ3M6IFwiZWRpdGFyIGRlZmluacOnw7VlcyBkYSB0dXJtYVwiXG4gICAgYWNjZXNzX3Jlc3RyaWN0ZWQ6IFwiQXR1YWxpemHDp8OjbyBkZSBDb250YSBOZWNlc3PDoXJpYVwiXG4gICAgdGVhY2hlcl9hY2NvdW50X3JlcXVpcmVkOiBcIsOJIG5lY2Vzc8OhcmlhIHVtYSBjb250YSBkZSBwcm9mZXNzb3IgcGFyYSBhY2VkZXJlcyBhIGVzdGUgY29udGXDumRvLlwiXG4gICAgY3JlYXRlX3RlYWNoZXJfYWNjb3VudDogXCJDcmlhciBDb250YSBkZSBQcm9mZXNzb3JcIlxuICAgIHdoYXRfaXNfYV90ZWFjaGVyX2FjY291bnQ6IFwiTyBxdWUgw6kgdW1hIENvbnRhIGRlIFByb2Zlc3Nvcj9cIlxuIyAgICB0ZWFjaGVyX2FjY291bnRfZXhwbGFuYXRpb246IFwiQSBDb2RlQ29tYmF0IFRlYWNoZXIgYWNjb3VudCBhbGxvd3MgeW91IHRvIHNldCB1cCBjbGFzc3Jvb21zLCBtb25pdG9yIHN0dWRlbnRz4oCZIHByb2dyZXNzIGFzIHRoZXkgd29yayB0aHJvdWdoIGNvdXJzZXMsIG1hbmFnZSBsaWNlbnNlcyBhbmQgYWNjZXNzIHJlc291cmNlcyB0byBhaWQgaW4geW91ciBjdXJyaWN1bHVtLWJ1aWxkaW5nLlwiXG4gICAgY3VycmVudF9jbGFzc2VzOiBcIlR1cm1hcyBBdHVhaXNcIlxuICAgIGFyY2hpdmVkX2NsYXNzZXM6IFwiVHVybWFzIEFycXVpdmFkYXNcIlxuICAgIGFyY2hpdmVkX2NsYXNzZXNfYmx1cmI6IFwiQXMgdHVybWFzIHBvZGVtIHNlciBhcnF1aXZhZGFzIHBhcmEgcmVmZXLDqm5jaWEgZnV0dXJhLiBEZXNhcnF1aXZhIHVtYSB0dXJtYSBwYXJhIGEgdmVyZXMgbm92YW1lbnRlIG5hIGxpc3RhIGRhcyBUdXJtYXMgQXR1YWlzLlwiXG4gICAgdmlld19jbGFzczogXCJ2ZXIgdHVybWFcIlxuICAgIGFyY2hpdmVfY2xhc3M6IFwiYXJxdWl2YXIgdHVybWFcIlxuICAgIHVuYXJjaGl2ZV9jbGFzczogXCJkZXNhcnF1aXZhciB0dXJtYVwiXG4gICAgdW5hcmNoaXZlX3RoaXNfY2xhc3M6IFwiRGVzYXJxdWl2YXIgZXN0YSB0dXJtYVwiXG4gICAgbm9fc3R1ZGVudHNfeWV0OiBcIkVzdGEgdHVybWEgYWluZGEgbsOjbyB0ZW0gZXN0dWRhbnRlcy5cIlxuICAgIG5vX3N0dWRlbnRzX3lldF92aWV3X2NsYXNzOiBcIlZlciB0dXJtYSBwYXJhIGFkaWNpb25hciBlc3R1ZGFudGVzLlwiXG4gICAgdHJ5X3JlZnJlc2hpbmc6IFwiKFBvZGVzIHByZWNpc2FyIGRlIGF0dWFsaXphciBhIHDDoWdpbmEpXCJcbiAgICBjcmVhdGVfbmV3X2NsYXNzOiBcIkNyaWFyIHVtYSBUdXJtYSBOb3ZhXCJcbiAgICBjbGFzc19vdmVydmlldzogXCJWaXPDo28gR2VyYWwgZGEgVHVybWFcIiAjIFZpZXcgQ2xhc3MgcGFnZVxuICAgIGF2Z19wbGF5dGltZTogXCJUZW1wbyBkZSBqb2dvIG3DqWRpbyBwb3IgbsOtdmVsXCJcbiAgICB0b3RhbF9wbGF5dGltZTogXCJUZW1wbyBkZSBqb2dvIHRvdGFsXCJcbiAgICBhdmdfY29tcGxldGVkOiBcIk3DqWRpYSBkZSBuw612ZWlzIGNvbXBsZXRvc1wiXG4gICAgdG90YWxfY29tcGxldGVkOiBcIlRvdGFsaWRhZGUgZG9zIG7DrXZlaXMgY29tcGxldG9zXCJcbiAgICBjcmVhdGVkOiBcIkNyaWFkYVwiXG4gICAgY29uY2VwdHNfY292ZXJlZDogXCJDb25jZWl0b3MgYWJvcmRhZG9zXCJcbiAgICBlYXJsaWVzdF9pbmNvbXBsZXRlOiBcIk7DrXZlbCBtYWlzIGLDoXNpY28gaW5jb21wbGV0b1wiXG4gICAgbGF0ZXN0X2NvbXBsZXRlOiBcIsOabHRpbW8gbsOtdmVsIGNvbXBsZXRvXCJcbiAgICBlbnJvbGxfc3R1ZGVudDogXCJJbnNjcmV2ZXIgZXN0dWRhbnRlXCJcbiAgICBhcHBseV9saWNlbnNlOiBcIkFwbGljYXIgTGljZW7Dp2FcIlxuICAgIHJldm9rZV9saWNlbnNlOiBcIlJldm9nYXIgTGljZW7Dp2FcIlxuICAgIHJldm9rZV9saWNlbnNlczogXCJSZXZvZ2FyIFRvZGFzIGFzIExpY2Vuw6dhc1wiXG4gICAgY291cnNlX3Byb2dyZXNzOiBcIlByb2dyZXNzbyBkb3MgQ3Vyc29zXCJcbiAgICBub3RfYXBwbGljYWJsZTogXCJOL0FcIlxuICAgIGVkaXQ6IFwiZWRpdGFyXCJcbiAgICBlZGl0XzI6IFwiRWRpdGFyXCJcbiAgICByZW1vdmU6IFwicmVtb3ZlclwiXG4gICAgbGF0ZXN0X2NvbXBsZXRlZDogXCLDmmx0aW1vIGNvbXBsZXRvOlwiXG4gICAgc29ydF9ieTogXCJPcmRlbmFyIHBvclwiXG4gICAgcHJvZ3Jlc3M6IFwiUHJvZ3Jlc3NvXCJcbiAgICBjb25jZXB0c191c2VkOiBcIkNvbmNlaXRvcyB1c2Fkb3MgcGVsbyBFc3R1ZGFudGU6XCJcbiMgICAgY29uY2VwdF9jaGVja2VkOiBcIkNvbmNlcHQgY2hlY2tlZDpcIlxuICAgIGNvbXBsZXRlZDogXCJDb21wbGV0YXJhbVwiXG4gICAgcHJhY3RpY2U6IFwiUHLDoXRpY2FcIlxuICAgIHN0YXJ0ZWQ6IFwiQ29tZcOnYXJhbVwiXG4gICAgbm9fcHJvZ3Jlc3M6IFwiTmVuaHVtIHByb2dyZXNzb1wiXG4jICAgIG5vdF9yZXF1aXJlZDogXCJOb3QgcmVxdWlyZWRcIlxuIyAgICB2aWV3X3N0dWRlbnRfY29kZTogXCJDbGljayB0byB2aWV3IHN0dWRlbnQgY29kZVwiXG4gICAgc2VsZWN0X2NvdXJzZTogXCJTZWxlY2lvbmEgbyBjdXJzbyBwYXJhIHNlciB2aXN0b1wiXG4gICAgcHJvZ3Jlc3NfY29sb3Jfa2V5OiBcIkVzcXVlbWEgZGUgY29yZXMgZG8gcHJvZ3Jlc3NvOlwiXG4gICAgbGV2ZWxfaW5fcHJvZ3Jlc3M6IFwiTsOtdmVsIGVtIFByb2dyZXNzb1wiXG4gICAgbGV2ZWxfbm90X3N0YXJ0ZWQ6IFwiTsOtdmVsIE7Do28gQ29tZcOnYWRvXCJcbiAgICBwcm9qZWN0X29yX2FyZW5hOiBcIlByb2pldG8gb3UgQXJlbmFcIlxuIyAgICBzdHVkZW50c19ub3RfYXNzaWduZWQ6IFwiU3R1ZGVudHMgd2hvIGhhdmUgbm90IGJlZW4gYXNzaWduZWQge3tjb3Vyc2VOYW1lfX1cIlxuIyAgICBjb3Vyc2Vfb3ZlcnZpZXc6IFwiQ291cnNlIE92ZXJ2aWV3XCJcbiAgICBjb3B5X2NsYXNzX2NvZGU6IFwiQ29waWFyIEPDs2RpZ28gZGUgVHVybWFcIlxuICAgIGNsYXNzX2NvZGVfYmx1cmI6IFwiT3MgZXN0dWRhbnRlcyBwb2RlbSBlbnRyYXIgbmEgdHVhIHR1cm1hIGFvIHVzYXJlbSBlc3RlIEPDs2RpZ28gZGUgVHVybWEuIE7Do28gw6kgbmVjZXNzw6FyaW8gbmVuaHVtIGVuZGVyZcOnbyBkZSBlLW1haWwgYXF1YW5kbyBkYSBjcmlhw6fDo28gZGUgdW1hIGNvbnRhIGRlIEVzdHVkYW50ZSBjb20gZXN0ZSBDw7NkaWdvIGRlIFR1cm1hLlwiXG4gICAgY29weV9jbGFzc191cmw6IFwiQ29waWFyIFVSTCBkYSBUdXJtYVwiXG4gICAgY2xhc3Nfam9pbl91cmxfYmx1cmI6IFwiVGFtYsOpbSBwb2RlcyBwdWJsaWNhciBlc3RlIFVSTCDDum5pY28gZGEgdHVybWEgbnVtYSBww6FnaW5hIHdlYiBwYXJ0aWxoYWRhLlwiXG4gICAgYWRkX3N0dWRlbnRzX21hbnVhbGx5OiBcIkNvbnZpZGFyIEVzdHVkYW50ZXMgcG9yIEUtbWFpbFwiXG4gICAgYnVsa19hc3NpZ246IFwiU2VsZWNpb25hciBjdXJzb1wiXG4jICAgIGFzc2lnbmVkX21zZ18xOiBcInt7bnVtYmVyQXNzaWduZWR9fSBzdHVkZW50cyB3ZXJlIGFzc2lnbmVkIHt7Y291cnNlTmFtZX19LlwiXG4gICAgYXNzaWduZWRfbXNnXzI6IFwie3tudW1iZXJFbnJvbGxlZH19IGxpY2Vuw6dhcyBmb3JhbSBhcGxpY2FkYXMuXCJcbiMgICAgYXNzaWduZWRfbXNnXzM6IFwiWW91IG5vdyBoYXZlIHt7cmVtYWluaW5nU3BvdHN9fSBhdmFpbGFibGUgbGljZW5zZXMgcmVtYWluaW5nLlwiXG4gICAgYXNzaWduX2NvdXJzZTogXCJBdHJpYnVpciBDdXJzb1wiXG4gICAgcmVtb3ZlZF9jb3Vyc2VfbXNnOiBcInt7bnVtYmVyUmVtb3ZlZH19IGVzdHVkYW50ZXMgZm9yYW0gcmVtb3ZpZG9zIGRlIHt7Y291cnNlTmFtZX19LlwiXG4gICAgcmVtb3ZlX2NvdXJzZTogXCJSZW1vdmVyIEN1cnNvXCJcbiAgICBub3RfYXNzaWduZWRfbW9kYWxfdGl0bGU6IFwiT3MgY3Vyc29zIG7Do28gZm9yYW0gYXRyaWJ1w61kb3NcIlxuIyAgICBub3RfYXNzaWduZWRfbW9kYWxfc3RhcnRlcl9ib2R5XzE6IFwiVGhpcyBjb3Vyc2UgcmVxdWlyZXMgYSBTdGFydGVyIExpY2Vuc2UuIFlvdSBkbyBub3QgaGF2ZSBlbm91Z2ggU3RhcnRlciBMaWNlbnNlcyBhdmFpbGFibGUgdG8gYXNzaWduIHRoaXMgY291cnNlIHRvIGFsbCBfX3NlbGVjdGVkX18gc2VsZWN0ZWQgc3R1ZGVudHMuXCJcbiMgICAgbm90X2Fzc2lnbmVkX21vZGFsX3N0YXJ0ZXJfYm9keV8yOiBcIlB1cmNoYXNlIFN0YXJ0ZXIgTGljZW5zZXMgdG8gZ3JhbnQgYWNjZXNzIHRvIHRoaXMgY291cnNlLlwiXG4jICAgIG5vdF9hc3NpZ25lZF9tb2RhbF9mdWxsX2JvZHlfMTogXCJUaGlzIGNvdXJzZSByZXF1aXJlcyBhIEZ1bGwgTGljZW5zZS4gWW91IGRvIG5vdCBoYXZlIGVub3VnaCBGdWxsIExpY2Vuc2VzIGF2YWlsYWJsZSB0byBhc3NpZ24gdGhpcyBjb3Vyc2UgdG8gYWxsIF9fc2VsZWN0ZWRfXyBzZWxlY3RlZCBzdHVkZW50cy5cIlxuIyAgICBub3RfYXNzaWduZWRfbW9kYWxfZnVsbF9ib2R5XzI6IFwiWW91IG9ubHkgaGF2ZSBfX251bUZ1bGxMaWNlbnNlc0F2YWlsYWJsZV9fIEZ1bGwgTGljZW5zZXMgYXZhaWxhYmxlIChfX251bVN0dWRlbnRzV2l0aG91dEZ1bGxMaWNlbnNlc19fIHN0dWRlbnRzIGRvIG5vdCBjdXJyZW50bHkgaGF2ZSBhIEZ1bGwgTGljZW5zZSBhY3RpdmUpLlwiXG4jICAgIG5vdF9hc3NpZ25lZF9tb2RhbF9mdWxsX2JvZHlfMzogXCJQbGVhc2Ugc2VsZWN0IGZld2VyIHN0dWRlbnRzLCBvciByZWFjaCBvdXQgdG8gX19zdXBwb3J0RW1haWxfXyBmb3IgYXNzaXN0YW5jZS5cIlxuIyAgICBhc3NpZ25lZDogXCJBc3NpZ25lZFwiXG4gICAgZW5yb2xsX3NlbGVjdGVkX3N0dWRlbnRzOiBcIkluc2NyZXZlciBvcyBFc3R1ZGFudGVzIFNlbGVjaW9uYWRvc1wiXG4gICAgbm9fc3R1ZGVudHNfc2VsZWN0ZWQ6IFwiTmVuaHVtIGVzdHVkYW50ZSBmb2kgc2VsZWNpb25hZG8uXCJcbiMgICAgc2hvd19zdHVkZW50c19mcm9tOiBcIlNob3cgc3R1ZGVudHMgZnJvbVwiICMgRW5yb2xsIHN0dWRlbnRzIG1vZGFsXG4gICAgYXBwbHlfbGljZW5zZXNfdG9fdGhlX2ZvbGxvd2luZ19zdHVkZW50czogXCJBcGxpY2FyIExpY2Vuw6dhcyBhb3MgU2VndWludGVzIEVzdHVkYW50ZXNcIlxuIyAgICBzdHVkZW50c19oYXZlX2xpY2Vuc2VzOiBcIlRoZSBmb2xsb3dpbmcgc3R1ZGVudHMgYWxyZWFkeSBoYXZlIGxpY2Vuc2VzIGFwcGxpZWQ6XCJcbiAgICBhbGxfc3R1ZGVudHM6IFwiVG9kb3Mgb3MgRXN0dWRhbnRlc1wiXG4gICAgYXBwbHlfbGljZW5zZXM6IFwiQXBsaWNhciBMaWNlbsOnYXNcIlxuICAgIG5vdF9lbm91Z2hfZW5yb2xsbWVudHM6IFwiTsOjbyBow6EgbGljZW7Dp2FzIHN1ZmljaWVudGVzIGRpc3BvbsOtdmVpcy5cIlxuICAgIGVucm9sbG1lbnRzX2JsdXJiOiBcIsOJIG5lY2Vzc8OhcmlvIHF1ZSBvcyBlc3R1ZGFudGVzIHRlbmhhbSB1bWEgbGljZW7Dp2EgcGFyYSBhY2VkZXJlbSBhIHF1YWxxdWVyIGNvbnRlw7pkbyBkZXBvaXMgZG8gcHJpbWVpcm8gY3Vyc28uXCJcbiAgICBob3dfdG9fYXBwbHlfbGljZW5zZXM6IFwiQ29tbyBBcGxpY2FyIExpY2Vuw6dhc1wiXG4gICAgZXhwb3J0X3N0dWRlbnRfcHJvZ3Jlc3M6IFwiRXhwb3J0YXIgUHJvZ3Jlc3NvIGRvcyBFc3R1ZGFudGVzIChDU1YpXCJcbiMgICAgc2VuZF9lbWFpbF90bzogXCJTZW5kIFJlY292ZXIgUGFzc3dvcmQgRW1haWwgdG86XCJcbiAgICBlbWFpbF9zZW50OiBcIkUtbWFpbCBlbnZpYWRvXCJcbiAgICBzZW5kX3JlY292ZXJ5X2VtYWlsOiBcIkVudmlhciBlLW1haWwgZGUgcmVjdXBlcmHDp8Ojb1wiXG4gICAgZW50ZXJfbmV3X3Bhc3N3b3JkX2JlbG93OiBcIkludHJvZHV6IGEgbm92YSBwYWxhdnJhLXBhc3NlIGFiYWl4bzpcIlxuICAgIGNoYW5nZV9wYXNzd29yZDogXCJBbHRlcmFyIFBhbGF2cmEtcGFzc2VcIlxuICAgIGNoYW5nZWQ6IFwiQWx0ZXJhZGFcIlxuICAgIGF2YWlsYWJsZV9jcmVkaXRzOiBcIkxpY2Vuw6dhcyBEaXNwb27DrXZlaXNcIlxuICAgIHBlbmRpbmdfY3JlZGl0czogXCJMaWNlbsOnYXMgUGVuZGVudGVzXCJcbiMgICAgZW1wdHlfY3JlZGl0czogXCJFeGhhdXN0ZWQgTGljZW5zZXNcIlxuICAgIGxpY2Vuc2VfcmVtYWluaW5nOiBcImxpY2Vuw6dhIHJlc3RhbnRlXCJcbiAgICBsaWNlbnNlc19yZW1haW5pbmc6IFwibGljZW7Dp2FzIHJlc3RhbnRlc1wiXG4gICAgb25lX2xpY2Vuc2VfdXNlZDogXCIxIGRlIF9fdG90YWxMaWNlbnNlc19fIGxpY2Vuw6dhcyBmb2kgdXNhZGFcIlxuICAgIG51bV9saWNlbnNlc191c2VkOiBcIl9fbnVtTGljZW5zZXNVc2VkX18gZGUgX190b3RhbExpY2Vuc2VzX18gbGljZW7Dp2FzIGZvcmFtIHVzYWRhc1wiXG4jICAgIHN0YXJ0ZXJfbGljZW5zZXM6IFwic3RhcnRlciBsaWNlbnNlc1wiXG4jICAgIHN0YXJ0X2RhdGU6IFwic3RhcnQgZGF0ZTpcIlxuIyAgICBlbmRfZGF0ZTogXCJlbmQgZGF0ZTpcIlxuICAgIGdldF9lbnJvbGxtZW50c19ibHVyYjogXCIgVmFtb3MgYWp1ZGFyLXRlIGEgY29uc3RydWlyIHVtYSBzb2x1w6fDo28gcXVlIHNhdGlzZmHDp2EgYXMgbmVjZXNzaWRhZGVzIGRhIHR1YSB0dXJtYSwgZXNjb2xhIG91IGRpc3RyaXRvLlwiXG4jICAgIGhvd190b19hcHBseV9saWNlbnNlc19ibHVyYl8xOiBcIldoZW4gYSB0ZWFjaGVyIGFzc2lnbnMgYSBjb3Vyc2UgdG8gYSBzdHVkZW50IGZvciB0aGUgZmlyc3QgdGltZSwgd2XigJlsbCBhdXRvbWF0aWNhbGx5IGFwcGx5IGEgbGljZW5zZS4gVXNlIHRoZSBidWxrLWFzc2lnbiBkcm9wZG93biBpbiB5b3VyIGNsYXNzcm9vbSB0byBhc3NpZ24gYSBjb3Vyc2UgdG8gc2VsZWN0ZWQgc3R1ZGVudHM6XCJcbiMgICAgaG93X3RvX2FwcGx5X2xpY2Vuc2VzX2JsdXJiXzI6IFwiQ2FuIEkgc3RpbGwgYXBwbHkgYSBsaWNlbnNlIHdpdGhvdXQgYXNzaWduaW5nIGEgY291cnNlP1wiXG4jICAgIGhvd190b19hcHBseV9saWNlbnNlc19ibHVyYl8zOiBcIlllcyDigJQgZ28gdG8gdGhlIExpY2Vuc2UgU3RhdHVzIHRhYiBpbiB5b3VyIGNsYXNzcm9vbSBhbmQgY2xpY2sgXFxcIkFwcGx5IExpY2Vuc2VcXFwiIHRvIGFueSBzdHVkZW50IHdobyBkb2VzIG5vdCBoYXZlIGFuIGFjdGl2ZSBsaWNlbnNlLlwiXG4gICAgcmVxdWVzdF9zZW50OiBcIlBlZGlkbyBFbnZpYWRvIVwiXG4jICAgIGFzc2Vzc21lbnRzOiBcIkFzc2Vzc21lbnRzXCJcbiAgICBsaWNlbnNlX3N0YXR1czogXCJFc3RhZG8gZGFzIExpY2Vuw6dhc1wiXG4jICAgIHN0YXR1c19leHBpcmVkOiBcIkV4cGlyZWQgb24ge3tkYXRlfX1cIlxuICAgIHN0YXR1c19ub3RfZW5yb2xsZWQ6IFwiTsOjbyBJbnNjcml0b1wiXG4jICAgIHN0YXR1c19lbnJvbGxlZDogXCJFeHBpcmVzIG9uIHt7ZGF0ZX19XCJcbiAgICBzZWxlY3RfYWxsOiBcIlNlbGVjaW9uYXIgVG9kb3NcIlxuICAgIHByb2plY3Q6IFwiUHJvamV0b1wiXG4jICAgIHByb2plY3RfZ2FsbGVyeTogXCJQcm9qZWN0IEdhbGxlcnlcIlxuICAgIHZpZXdfcHJvamVjdDogXCJWZXIgUHJvamV0b1wiXG4gICAgdW5wdWJsaXNoZWQ6IFwiKG7Do28gcHVibGljYWRvKVwiXG4jICAgIHZpZXdfYXJlbmFfbGFkZGVyOiBcIlZpZXcgQXJlbmEgTGFkZGVyXCJcbiAgICByZXNvdXJjZV9odWI6IFwiQ2VudHJvIGRlIFJlY3Vyc29zXCJcbiMgICAgcGFjaW5nX2d1aWRlczogXCJDbGFzc3Jvb20taW4tYS1Cb3ggUGFjaW5nIEd1aWRlc1wiXG4jICAgIHBhY2luZ19ndWlkZXNfZGVzYzogXCJMZWFybiBob3cgdG8gaW5jb3Jwb3JhdGUgYWxsIG9mIENvZGVDb21iYXQncyByZXNvdXJjZXMgdG8gcGxhbiB5b3VyIHNjaG9vbCB5ZWFyIVwiXG4jICAgIHBhY2luZ19ndWlkZXNfZWxlbTogXCJFbGVtZW50YXJ5IFNjaG9vbCBQYWNpbmcgR3VpZGVcIlxuIyAgICBwYWNpbmdfZ3VpZGVzX21pZGRsZTogXCJNaWRkbGUgU2Nob29sIFBhY2luZyBHdWlkZVwiXG4jICAgIHBhY2luZ19ndWlkZXNfaGlnaDogXCJIaWdoIFNjaG9vbCBQYWNpbmcgR3VpZGVcIlxuIyAgICBnZXR0aW5nX3N0YXJ0ZWQ6IFwiR2V0dGluZyBTdGFydGVkXCJcbiMgICAgZWR1Y2F0b3JfZmFxOiBcIkVkdWNhdG9yIEZBUVwiXG4jICAgIGVkdWNhdG9yX2ZhcV9kZXNjOiBcIkZyZXF1ZW50bHkgYXNrZWQgcXVlc3Rpb25zIGFib3V0IHVzaW5nIENvZGVDb21iYXQgaW4geW91ciBjbGFzc3Jvb20gb3Igc2Nob29sLlwiXG4jICAgIHRlYWNoZXJfZ2V0dGluZ19zdGFydGVkOiBcIlRlYWNoZXIgR2V0dGluZyBTdGFydGVkIEd1aWRlXCJcbiMgICAgdGVhY2hlcl9nZXR0aW5nX3N0YXJ0ZWRfZGVzYzogXCJOZXcgdG8gQ29kZUNvbWJhdD8gRG93bmxvYWQgdGhpcyBUZWFjaGVyIEdldHRpbmcgU3RhcnRlZCBHdWlkZSB0byBzZXQgdXAgeW91ciBhY2NvdW50LCBjcmVhdGUgeW91ciBmaXJzdCBjbGFzcywgYW5kIGludml0ZSBzdHVkZW50cyB0byB0aGUgZmlyc3QgY291cnNlLlwiXG4jICAgIHN0dWRlbnRfZ2V0dGluZ19zdGFydGVkOiBcIlN0dWRlbnQgUXVpY2sgU3RhcnQgR3VpZGVcIlxuIyAgICBzdHVkZW50X2dldHRpbmdfc3RhcnRlZF9kZXNjOiBcIllvdSBjYW4gZGlzdHJpYnV0ZSB0aGlzIGd1aWRlIHRvIHlvdXIgc3R1ZGVudHMgYmVmb3JlIHN0YXJ0aW5nIENvZGVDb21iYXQgc28gdGhhdCB0aGV5IGNhbiBmYW1pbGlhcml6ZSB0aGVtc2VsdmVzIHdpdGggdGhlIGNvZGUgZWRpdG9yLiBUaGlzIGd1aWRlIGNhbiBiZSB1c2VkIGZvciBib3RoIFB5dGhvbiBhbmQgSmF2YVNjcmlwdCBjbGFzc3Jvb21zLlwiXG4jICAgIGFwX2NzX3ByaW5jaXBsZXM6IFwiQVAgQ29tcHV0ZXIgU2NpZW5jZSBQcmluY2lwbGVzXCJcbiMgICAgYXBfY3NfcHJpbmNpcGxlc19kZXNjOiBcIkFQIENvbXB1dGVyIFNjaWVuY2UgUHJpbmNpcGxlcyBnaXZlcyBzdHVkZW50cyBhIGJyb2FkIGludHJvZHVjdGlvbiB0byB0aGUgcG93ZXIsIGltcGFjdCwgYW5kIHBvc3NpYmlsaXRpZXMgb2YgQ29tcHV0ZXIgU2NpZW5jZS4gVGhlIGNvdXJzZSBlbXBoYXNpemVzIGNvbXB1dGF0aW9uYWwgdGhpbmtpbmcgYW5kIHByb2JsZW0gc29sdmluZyB3aGlsZSBhbHNvIHRlYWNoaW5nIHRoZSBiYXNpY3Mgb2YgcHJvZ3JhbW1pbmcuXCJcbiMgICAgY3MxOiBcIkludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlXCJcbiMgICAgY3MyOiBcIkNvbXB1dGVyIFNjaWVuY2UgMlwiXG4jICAgIGNzMzogXCJDb21wdXRlciBTY2llbmNlIDNcIlxuIyAgICBjczQ6IFwiQ29tcHV0ZXIgU2NpZW5jZSA0XCJcbiMgICAgY3M1OiBcIkNvbXB1dGVyIFNjaWVuY2UgNVwiXG4jICAgIGNzMV9zeW50YXhfcHl0aG9uOiBcIkNvdXJzZSAxIFB5dGhvbiBTeW50YXggR3VpZGVcIlxuIyAgICBjczFfc3ludGF4X3B5dGhvbl9kZXNjOiBcIkNoZWF0c2hlZXQgd2l0aCByZWZlcmVuY2VzIHRvIGNvbW1vbiBQeXRob24gc3ludGF4IHRoYXQgc3R1ZGVudHMgd2lsbCBsZWFybiBpbiBJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZS5cIlxuIyAgICBjczFfc3ludGF4X2phdmFzY3JpcHQ6IFwiQ291cnNlIDEgSmF2YVNjcmlwdCBTeW50YXggR3VpZGVcIlxuIyAgICBjczFfc3ludGF4X2phdmFzY3JpcHRfZGVzYzogXCJDaGVhdHNoZWV0IHdpdGggcmVmZXJlbmNlcyB0byBjb21tb24gSmF2YVNjcmlwdCBzeW50YXggdGhhdCBzdHVkZW50cyB3aWxsIGxlYXJuIGluIEludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlLlwiXG4gICAgY29taW5nX3Nvb246IFwiR3VpYXMgYWRpY2lvbmFpcyBlbSBicmV2ZSFcIlxuIyAgICBlbmdpbmVlcmluZ19jeWNsZV93b3Jrc2hlZXQ6IFwiRW5naW5lZXJpbmcgQ3ljbGUgV29ya3NoZWV0XCJcbiMgICAgZW5naW5lZXJpbmdfY3ljbGVfd29ya3NoZWV0X2Rlc2M6IFwiVXNlIHRoaXMgd29ya3NoZWV0IHRvIHRlYWNoIHN0dWRlbnRzIHRoZSBiYXNpY3Mgb2YgdGhlIGVuZ2luZWVyaW5nIGN5Y2xlOiBBc3Nlc3MsIERlc2lnbiwgSW1wbGVtZW50IGFuZCBEZWJ1Zy4gUmVmZXIgdG8gdGhlIGNvbXBsZXRlZCBleGFtcGxlIHdvcmtzaGVldCBhcyBhIGd1aWRlLlwiXG4jICAgIGVuZ2luZWVyaW5nX2N5Y2xlX3dvcmtzaGVldF9saW5rOiBcIlZpZXcgZXhhbXBsZVwiXG4jICAgIHByb2dyZXNzX2pvdXJuYWw6IFwiUHJvZ3Jlc3MgSm91cm5hbFwiXG4jICAgIHByb2dyZXNzX2pvdXJuYWxfZGVzYzogXCJFbmNvdXJhZ2Ugc3R1ZGVudHMgdG8ga2VlcCB0cmFjayBvZiB0aGVpciBwcm9ncmVzcyB2aWEgYSBwcm9ncmVzcyBqb3VybmFsLlwiXG4jICAgIGNzMV9jdXJyaWN1bHVtOiBcIkludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIGNzMV9jdXJyaWN1bHVtX2Rlc2M6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMgYW5kIG1vcmUgZm9yIENvdXJzZSAxLlwiXG4jICAgIGFyZW5hc19jdXJyaWN1bHVtOiBcIkFyZW5hIExldmVscyAtIFRlYWNoZXIgR3VpZGVcIlxuIyAgICBhcmVuYXNfY3VycmljdWx1bV9kZXNjOiBcIkluc3RydWN0aW9ucyBvbiBob3cgdG8gcnVuIFdha2thIE1hdWwsIENyb3NzIEJvbmVzIGFuZCBQb3dlciBQZWFrIG11bHRpcGxheWVyIGFyZW5hcyB3aXRoIHlvdXIgY2xhc3MuXCJcbiMgICAgYXNzZXNzbWVudHNfY3VycmljdWx1bTogXCJBc3Nlc3NtZW50IExldmVscyAtIFRlYWNoZXIgR3VpZGVcIlxuIyAgICBhc3Nlc3NtZW50c19jdXJyaWN1bHVtX2Rlc2M6IFwiTGVhcm4gaG93IHRvIHVzZSBDaGFsbGVuZ2UgTGV2ZWxzIGFuZCBDb21ibyBDaGFsbGVuZ2UgbGV2ZWxzIHRvIGFzc2VzcyBzdHVkZW50cycgbGVhcm5pbmcgb3V0Y29tZXMuXCJcbiMgICAgY3MyX2N1cnJpY3VsdW06IFwiQ29tcHV0ZXIgU2NpZW5jZSAyIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIGNzMl9jdXJyaWN1bHVtX2Rlc2M6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMgYW5kIG1vcmUgZm9yIENvdXJzZSAyLlwiXG4jICAgIGNzM19jdXJyaWN1bHVtOiBcIkNvbXB1dGVyIFNjaWVuY2UgMyAtIEN1cnJpY3VsdW0gR3VpZGVcIlxuIyAgICBjczNfY3VycmljdWx1bV9kZXNjOiBcIlNjb3BlIGFuZCBzZXF1ZW5jZSwgbGVzc29uIHBsYW5zLCBhY3Rpdml0aWVzIGFuZCBtb3JlIGZvciBDb3Vyc2UgMy5cIlxuIyAgICBjczRfY3VycmljdWx1bTogXCJDb21wdXRlciBTY2llbmNlIDQgLSBDdXJyaWN1bHVtIEd1aWRlXCJcbiMgICAgY3M0X2N1cnJpY3VsdW1fZGVzYzogXCJTY29wZSBhbmQgc2VxdWVuY2UsIGxlc3NvbiBwbGFucywgYWN0aXZpdGllcyBhbmQgbW9yZSBmb3IgQ291cnNlIDQuXCJcbiMgICAgY3M1X2N1cnJpY3VsdW1fanM6IFwiQ29tcHV0ZXIgU2NpZW5jZSA1IC0gQ3VycmljdWx1bSBHdWlkZSAoSmF2YVNjcmlwdClcIlxuIyAgICBjczVfY3VycmljdWx1bV9kZXNjX2pzOiBcIlNjb3BlIGFuZCBzZXF1ZW5jZSwgbGVzc29uIHBsYW5zLCBhY3Rpdml0aWVzIGFuZCBtb3JlIGZvciBDb3Vyc2UgNSBjbGFzc2VzIHVzaW5nIEphdmFTY3JpcHQuXCJcbiMgICAgY3M1X2N1cnJpY3VsdW1fcHk6IFwiQ29tcHV0ZXIgU2NpZW5jZSA1IC0gQ3VycmljdWx1bSBHdWlkZSAoUHl0aG9uKVwiXG4jICAgIGNzNV9jdXJyaWN1bHVtX2Rlc2NfcHk6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMgYW5kIG1vcmUgZm9yIENvdXJzZSA1IGNsYXNzZXMgdXNpbmcgUHl0aG9uLlwiXG4jICAgIGNzMV9wYWlycHJvZ3JhbW1pbmc6IFwiUGFpciBQcm9ncmFtbWluZyBBY3Rpdml0eVwiXG4jICAgIGNzMV9wYWlycHJvZ3JhbW1pbmdfZGVzYzogXCJJbnRyb2R1Y2Ugc3R1ZGVudHMgdG8gYSBwYWlyIHByb2dyYW1taW5nIGV4ZXJjaXNlIHRoYXQgd2lsbCBoZWxwIHRoZW0gYmVjb21lIGJldHRlciBsaXN0ZW5lcnMgYW5kIGNvbW11bmljYXRvcnMuXCJcbiMgICAgZ2QxOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMVwiXG4jICAgIGdkMV9ndWlkZTogXCJHYW1lIERldmVsb3BtZW50IDEgLSBQcm9qZWN0IEd1aWRlXCJcbiMgICAgZ2QxX2d1aWRlX2Rlc2M6IFwiVXNlIHRoaXMgdG8gZ3VpZGUgeW91ciBzdHVkZW50cyBhcyB0aGV5IGNyZWF0ZSB0aGVpciBmaXJzdCBzaGFyZWFibGUgZ2FtZSBwcm9qZWN0IGluIDUgZGF5cy5cIlxuIyAgICBnZDFfcnVicmljOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMSAtIFByb2plY3QgUnVicmljXCJcbiMgICAgZ2QxX3J1YnJpY19kZXNjOiBcIlVzZSB0aGlzIHJ1YnJpYyB0byBhc3Nlc3Mgc3R1ZGVudCBwcm9qZWN0cyBhdCB0aGUgZW5kIG9mIEdhbWUgRGV2ZWxvcG1lbnQgMS5cIlxuIyAgICBnZDI6IFwiR2FtZSBEZXZlbG9wbWVudCAyXCJcbiMgICAgZ2QyX2N1cnJpY3VsdW06IFwiR2FtZSBEZXZlbG9wbWVudCAyIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIGdkMl9jdXJyaWN1bHVtX2Rlc2M6IFwiTGVzc29uIHBsYW5zIGZvciBHYW1lIERldmVsb3BtZW50IDIuXCJcbiMgICAgZ2QzOiBcIkdhbWUgRGV2ZWxvcG1lbnQgM1wiXG4jICAgIGdkM19jdXJyaWN1bHVtOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMyAtIEN1cnJpY3VsdW0gR3VpZGVcIlxuIyAgICBnZDNfY3VycmljdWx1bV9kZXNjOiBcIkxlc3NvbiBwbGFucyBmb3IgR2FtZSBEZXZlbG9wbWVudCAzLlwiXG4jICAgIHdkMTogXCJXZWIgRGV2ZWxvcG1lbnQgMVwiXG4jICAgIHdkMV9jdXJyaWN1bHVtOiBcIldlYiBEZXZlbG9wbWVudCAxIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIHdkMV9jdXJyaWN1bHVtX2Rlc2M6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMsIGFuZCBtb3JlIGZvciBXZWIgRGV2ZWxvcG1lbnQgMS5cIlxuIyAgICB3ZDFfaGVhZGxpbmVzOiBcIkhlYWRsaW5lcyAmIEhlYWRlcnMgQWN0aXZpdHlcIlxuIyAgICB3ZDFfaGVhZGxpbmVzX2V4YW1wbGU6IFwiVmlldyBzYW1wbGUgc29sdXRpb25cIlxuIyAgICB3ZDFfaGVhZGxpbmVzX2Rlc2M6IFwiV2h5IGFyZSBwYXJhZ3JhcGggYW5kIGhlYWRlciB0YWdzIGltcG9ydGFudD8gVXNlIHRoaXMgYWN0aXZpdHkgdG8gc2hvdyBob3cgd2VsbC1jaG9zZW4gaGVhZGVycyBtYWtlIHdlYiBwYWdlcyBlYXNpZXIgdG8gcmVhZC4gVGhlcmUgYXJlIG1hbnkgY29ycmVjdCBzb2x1dGlvbnMgdG8gdGhpcyFcIlxuIyAgICB3ZDFfaHRtbF9zeW50YXg6IFwiSFRNTCBTeW50YXggR3VpZGVcIlxuIyAgICB3ZDFfaHRtbF9zeW50YXhfZGVzYzogXCJPbmUtcGFnZSByZWZlcmVuY2UgZm9yIHRoZSBIVE1MIHN0eWxlIHN0dWRlbnRzIHdpbGwgbGVhcm4gaW4gV2ViIERldmVsb3BtZW50IDEuXCJcbiMgICAgd2QxX2Nzc19zeW50YXg6IFwiQ1NTIFN5bnRheCBHdWlkZVwiXG4jICAgIHdkMV9jc3Nfc3ludGF4X2Rlc2M6IFwiT25lLXBhZ2UgcmVmZXJlbmNlIGZvciB0aGUgQ1NTIGFuZCBTdHlsZSBzeW50YXggc3R1ZGVudHMgd2lsbCBsZWFybiBpbiBXZWIgRGV2ZWxvcG1lbnQgMS5cIlxuIyAgICB3ZDI6IFwiV2ViIERldmVsb3BtZW50IDJcIlxuIyAgICB3ZDJfanF1ZXJ5X3N5bnRheDogXCJqUXVlcnkgRnVuY3Rpb25zIFN5bnRheCBHdWlkZVwiXG4jICAgIHdkMl9qcXVlcnlfc3ludGF4X2Rlc2M6IFwiT25lLXBhZ2UgcmVmZXJlbmNlIGZvciB0aGUgalF1ZXJ5IGZ1bmN0aW9ucyBzdHVkZW50cyB3aWxsIGxlYXJuIGluIFdlYiBEZXZlbG9wbWVudCAyLlwiXG4jICAgIHdkMl9xdWl6bGV0X3dvcmtzaGVldDogXCJRdWl6bGV0IFBsYW5uaW5nIFdvcmtzaGVldFwiXG4jICAgIHdkMl9xdWl6bGV0X3dvcmtzaGVldF9pbnN0cnVjdGlvbnM6IFwiVmlldyBpbnN0cnVjdGlvbnMgJiBleGFtcGxlc1wiXG4jICAgIHdkMl9xdWl6bGV0X3dvcmtzaGVldF9kZXNjOiBcIkJlZm9yZSB5b3VyIHN0dWRlbnRzIGJ1aWxkIHRoZWlyIHBlcnNvbmFsaXR5IHF1aXogcHJvamVjdCBhdCB0aGUgZW5kIG9mIFdlYiBEZXZlbG9wbWVudCAyLCB0aGV5IHNob3VsZCBwbGFuIG91dCB0aGVpciBxdWl6IHF1ZXN0aW9ucywgb3V0Y29tZXMgYW5kIHJlc3BvbnNlcyB1c2luZyB0aGlzIHdvcmtzaGVldC4gVGVhY2hlcnMgY2FuIGRpc3RyaWJ1dGUgdGhlIGluc3RydWN0aW9ucyBhbmQgZXhhbXBsZXMgZm9yIHN0dWRlbnRzIHRvIHJlZmVyIHRvLlwiXG4gICAgc3R1ZGVudF9vdmVydmlldzogXCJWaXPDo28gR2VyYWxcIlxuICAgIHN0dWRlbnRfZGV0YWlsczogXCJEZXRhbGhlcyBkbyBFc3R1ZGFudGVcIlxuICAgIHN0dWRlbnRfbmFtZTogXCJOb21lIGRvIEVzdHVkYW50ZVwiXG4gICAgbm9fbmFtZTogXCJOZW5odW0gbm9tZSBmb3JuZWNpZG8uXCJcbiAgICBub191c2VybmFtZTogXCJOZW5odW0gbm9tZSBkZSB1dGlsaXphZG9yIGZvcm5lY2lkby5cIlxuICAgIG5vX2VtYWlsOiBcIk8gZXN0dWRhbnRlIG7Do28gdGVtIG5lbmh1bSBlbmRlcmXDp28gZGUgZS1tYWlsIGRlZmluaWRvLlwiXG4gICAgc3R1ZGVudF9wcm9maWxlOiBcIlBlcmZpbCBkbyBFc3R1ZGFudGVcIlxuICAgIHBsYXl0aW1lX2RldGFpbDogXCJEZXRhbGhlIGRvIFRlbXBvIGRlIEpvZ29cIlxuICAgIHN0dWRlbnRfY29tcGxldGVkOiBcIkNvbXBsZXRvIHBlbG8gRXN0dWRhbnRlXCJcbiAgICBzdHVkZW50X2luX3Byb2dyZXNzOiBcIkVtIHByb2dyZXNzbyBwZWxvIEVzdHVkYW50ZVwiXG4gICAgY2xhc3NfYXZlcmFnZTogXCJNw6lkaWEgZGEgVHVybWFcIlxuIyAgICBub3RfYXNzaWduZWQ6IFwiaGFzIG5vdCBiZWVuIGFzc2lnbmVkIHRoZSBmb2xsb3dpbmcgY291cnNlc1wiXG4gICAgcGxheXRpbWVfYXhpczogXCJUZW1wbyBkZSBKb2dvIGVtIFNlZ3VuZG9zXCJcbiAgICBsZXZlbHNfYXhpczogXCJOw612ZWlzIGVtXCJcbiAgICBzdHVkZW50X3N0YXRlOiBcIkNvbW8gc2UgZXN0w6FcIlxuICAgIHN0dWRlbnRfc3RhdGVfMjogXCJhIHNhaXI/XCJcbiMgICAgc3R1ZGVudF9nb29kOiBcImlzIGRvaW5nIHdlbGwgaW5cIlxuIyAgICBzdHVkZW50X2dvb2RfZGV0YWlsOiBcIlRoaXMgc3R1ZGVudCBpcyBrZWVwaW5nIHBhY2Ugd2l0aCB0aGUgY2xhc3MuXCJcbiMgICAgc3R1ZGVudF93YXJuOiBcIm1pZ2h0IG5lZWQgc29tZSBoZWxwIGluXCJcbiMgICAgc3R1ZGVudF93YXJuX2RldGFpbDogXCJUaGlzIHN0dWRlbnQgbWlnaHQgbmVlZCBzb21lIGhlbHAgd2l0aCBuZXcgY29uY2VwdHMgdGhhdCBoYXZlIGJlZW4gaW50cm9kdWNlZCBpbiB0aGlzIGNvdXJzZS5cIlxuIyAgICBzdHVkZW50X2dyZWF0OiBcImlzIGRvaW5nIGdyZWF0IGluXCJcbiMgICAgc3R1ZGVudF9ncmVhdF9kZXRhaWw6IFwiVGhpcyBzdHVkZW50IG1pZ2h0IGJlIGEgZ29vZCBjYW5kaWRhdGUgdG8gaGVscCBvdGhlciBzdHVkZW50cyB3b3JraW5nIHRocm91Z2ggdGhpcyBjb3Vyc2UuXCJcbiMgICAgZnVsbF9saWNlbnNlOiBcIkZ1bGwgTGljZW5zZVwiXG4jICAgIHN0YXJ0ZXJfbGljZW5zZTogXCJTdGFydGVyIExpY2Vuc2VcIlxuIyAgICB0cmlhbDogXCJUcmlhbFwiXG4jICAgIGhvY193ZWxjb21lOiBcIkhhcHB5IENvbXB1dGVyIFNjaWVuY2UgRWR1Y2F0aW9uIFdlZWtcIlxuIyAgICBob2NfdGl0bGU6IFwiSG91ciBvZiBDb2RlIEdhbWVzIC0gRnJlZSBBY3Rpdml0aWVzIHRvIExlYXJuIFJlYWwgQ29kaW5nIExhbmd1YWdlc1wiXG4jICAgIGhvY19tZXRhX2Rlc2NyaXB0aW9uOiBcIk1ha2UgeW91ciBvd24gZ2FtZSBvciBjb2RlIHlvdXIgd2F5IG91dCBvZiBhIGR1bmdlb24hIENvZGVDb21iYXQgaGFzIGZvdXIgZGlmZmVyZW50IEhvdXIgb2YgQ29kZSBhY3Rpdml0aWVzIGFuZCBvdmVyIDYwIGxldmVscyB0byBsZWFybiBjb2RlLCBwbGF5LCBhbmQgY3JlYXRlLlwiXG4jICAgIGhvY19pbnRybzogXCJUaGVyZSBhcmUgdGhyZWUgd2F5cyBmb3IgeW91ciBjbGFzcyB0byBwYXJ0aWNpcGF0ZSBpbiBIb3VyIG9mIENvZGUgd2l0aCBDb2RlQ29tYmF0XCJcbiMgICAgaG9jX3NlbGZfbGVkOiBcIlNlbGYtTGVkIEdhbWVwbGF5XCJcbiMgICAgaG9jX3NlbGZfbGVkX2Rlc2M6IFwiU3R1ZGVudHMgY2FuIHBsYXkgdGhyb3VnaCB0d28gSG91ciBvZiBDb2RlIENvZGVDb21iYXQgdHV0b3JpYWxzIG9uIHRoZWlyIG93blwiXG4jICAgIGhvY19nYW1lX2RldjogXCJHYW1lIERldmVsb3BtZW50XCJcbiMgICAgaG9jX2FuZDogXCJhbmRcIlxuIyAgICBob2NfcHJvZ3JhbW1pbmc6IFwiSmF2YVNjcmlwdC9QeXRob24gUHJvZ3JhbW1pbmdcIlxuIyAgICBob2NfdGVhY2hlcl9sZWQ6IFwiVGVhY2hlci1MZWQgTGVzc29uc1wiXG4jICAgIGhvY190ZWFjaGVyX2xlZF9kZXNjMTogXCJEb3dubG9hZCBvdXJcIlxuIyAgICBob2NfdGVhY2hlcl9sZWRfbGluazogXCJJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZSBsZXNzb24gcGxhbnNcIlxuIyAgICBob2NfdGVhY2hlcl9sZWRfZGVzYzI6IFwidG8gaW50cm9kdWNlIHlvdXIgc3R1ZGVudHMgdG8gcHJvZ3JhbW1pbmcgY29uY2VwdHMgdXNpbmcgb2ZmbGluZSBhY3Rpdml0aWVzXCJcbiMgICAgaG9jX2dyb3VwOiBcIkdyb3VwIEdhbWVwbGF5XCJcbiMgICAgaG9jX2dyb3VwX2Rlc2NfMTogXCJUZWFjaGVycyBjYW4gdXNlIHRoZSBsZXNzb25zIGluIGNvbmp1bmN0aW9uIHdpdGggb3VyIEludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlIGNvdXJzZSB0byB0cmFjayBzdHVkZW50IHByb2dyZXNzLiBTZWUgb3VyXCJcbiMgICAgaG9jX2dyb3VwX2xpbms6IFwiR2V0dGluZyBTdGFydGVkIEd1aWRlXCJcbiMgICAgaG9jX2dyb3VwX2Rlc2NfMjogXCJmb3IgbW9yZSBkZXRhaWxzXCJcbiMgICAgaG9jX2FkZGl0aW9uYWxfZGVzYzE6IFwiRm9yIGFkZGl0aW9uYWwgQ29kZUNvbWJhdCByZXNvdXJjZXMgYW5kIGFjdGl2aXRpZXMsIHNlZSBvdXJcIlxuIyAgICBob2NfYWRkaXRpb25hbF9kZXNjMjogXCJRdWVzdGlvbnNcIlxuIyAgICBob2NfYWRkaXRpb25hbF9jb250YWN0OiBcIkdldCBpbiB0b3VjaFwiXG4jICAgIHJldm9rZV9jb25maXJtOiBcIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byByZXZva2UgYSBGdWxsIExpY2Vuc2UgZnJvbSB7e3N0dWRlbnRfbmFtZX19PyBUaGUgbGljZW5zZSB3aWxsIGJlY29tZSBhdmFpbGFibGUgdG8gYXNzaWduIHRvIGFub3RoZXIgc3R1ZGVudC5cIlxuIyAgICByZXZva2VfYWxsX2NvbmZpcm06IFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJldm9rZSBGdWxsIExpY2Vuc2VzIGZyb20gYWxsIHN0dWRlbnRzIGluIHRoaXMgY2xhc3M/XCJcbiAgICByZXZva2luZzogXCJBIHJldm9nYXIuLi5cIlxuIyAgICB1bnVzZWRfbGljZW5zZXM6IFwiWW91IGhhdmUgdW51c2VkIExpY2Vuc2VzIHRoYXQgYWxsb3cgeW91IHRvIGFzc2lnbiBzdHVkZW50cyBwYWlkIGNvdXJzZXMgd2hlbiB0aGV5J3JlIHJlYWR5IHRvIGxlYXJuIG1vcmUhXCJcbiMgICAgcmVtZW1iZXJfbmV3X2NvdXJzZXM6IFwiUmVtZW1iZXIgdG8gYXNzaWduIG5ldyBjb3Vyc2VzIVwiXG4gICAgbW9yZV9pbmZvOiBcIk1haXMgSW5mb3JtYcOnw6NvXCJcbiMgICAgaG93X3RvX2Fzc2lnbl9jb3Vyc2VzOiBcIkhvdyB0byBBc3NpZ24gQ291cnNlc1wiXG4jICAgIHNlbGVjdF9zdHVkZW50czogXCJTZWxlY3QgU3R1ZGVudHNcIlxuIyAgICBzZWxlY3RfaW5zdHJ1Y3Rpb25zOiBcIkNsaWNrIHRoZSBjaGVja2JveCBuZXh0IHRvIGVhY2ggc3R1ZGVudCB5b3Ugd2FudCB0byBhc3NpZ24gY291cnNlcyB0by5cIlxuIyAgICBjaG9vc2VfY291cnNlOiBcIkNob29zZSBDb3Vyc2VcIlxuIyAgICBjaG9vc2VfaW5zdHJ1Y3Rpb25zOiBcIlNlbGVjdCB0aGUgY291cnNlIGZyb20gdGhlIGRyb3Bkb3duIG1lbnUgeW914oCZZCBsaWtlIHRvIGFzc2lnbiwgdGhlbiBjbGljayDigJxBc3NpZ24gdG8gU2VsZWN0ZWQgU3R1ZGVudHMu4oCdXCJcbiMgICAgcHVzaF9wcm9qZWN0czogXCJXZSByZWNvbW1lbmQgYXNzaWduaW5nIFdlYiBEZXZlbG9wbWVudCAxIG9yIEdhbWUgRGV2ZWxvcG1lbnQgMSBhZnRlciBzdHVkZW50cyBoYXZlIGZpbmlzaGVkIEludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlISBTZWUgb3VyIHt7cmVzb3VyY2VfaHVifX0gZm9yIG1vcmUgZGV0YWlscyBvbiB0aG9zZSBjb3Vyc2VzLlwiXG4jICAgIHRlYWNoZXJfcXVlc3Q6IFwiVGVhY2hlcidzIFF1ZXN0IGZvciBTdWNjZXNzXCJcbiMgICAgcXVlc3RzX2NvbXBsZXRlOiBcIlF1ZXN0cyBDb21wbGV0ZVwiXG4jICAgIHRlYWNoZXJfcXVlc3RfY3JlYXRlX2NsYXNzcm9vbTogXCJDcmVhdGUgQ2xhc3Nyb29tXCJcbiAgICB0ZWFjaGVyX3F1ZXN0X2FkZF9zdHVkZW50czogXCJBZGljaW9uYXIgRXN0dWRhbnRlc1wiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbWV0aG9kczogXCJIZWxwIHlvdXIgc3R1ZGVudHMgbGVhcm4gaG93IHRvIGBjYWxsIG1ldGhvZHNgLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbWV0aG9kc19zdGVwMTogXCJHZXQgNzUlIG9mIGF0IGxlYXN0IG9uZSBjbGFzcyB0aHJvdWdoIHRoZSBmaXJzdCBsZXZlbCwgX19EdW5nZW9ucyBvZiBLaXRoZ2FyZF9fXCJcbiMgICAgdGVhY2hlcl9xdWVzdF90ZWFjaF9tZXRob2RzX3N0ZXAyOiBcIlByaW50IG91dCB0aGUgW1N0dWRlbnQgUXVpY2sgU3RhcnQgR3VpZGVdKGh0dHA6Ly9maWxlcy5jb2RlY29tYmF0LmNvbS9kb2NzL3Jlc291cmNlcy9TdHVkZW50UXVpY2tTdGFydEd1aWRlLnBkZikgaW4gdGhlIFJlc291cmNlIEh1Yi5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX3N0cmluZ3M6IFwiRG9uJ3Qgc3RyaW5nIHlvdXIgc3R1ZGVudHMgYWxvbmcsIHRlYWNoIHRoZW0gYHN0cmluZ3NgLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfc3RyaW5nc19zdGVwMTogXCJHZXQgNzUlIG9mIGF0IGxlYXN0IG9uZSBjbGFzcyB0aHJvdWdoIF9fVHJ1ZSBOYW1lc19fXCJcbiMgICAgdGVhY2hlcl9xdWVzdF90ZWFjaF9zdHJpbmdzX3N0ZXAyOiBcIlVzZSB0aGUgVGVhY2hlciBMZXZlbCBTZWxlY3RvciBvbiBbQ291cnNlIEd1aWRlc10oL3RlYWNoZXJzL2NvdXJzZXMpIHBhZ2UgdG8gcHJldmlldyBfX1RydWUgTmFtZXNfXy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX2xvb3BzOiBcIktlZXAgeW91ciBzdHVkZW50cyBpbiB0aGUgbG9vcCBhYm91dCBgbG9vcHNgLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbG9vcHNfc3RlcDE6IFwiR2V0IDc1JSBvZiBhdCBsZWFzdCBvbmUgY2xhc3MgdGhyb3VnaCBfX0ZpcmUgRGFuY2luZ19fLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbG9vcHNfc3RlcDI6IFwiVXNlIHRoZSBfX0xvb3BzIEFjdGl2aXR5X18gaW4gdGhlIFtDUzEgQ3VycmljdWx1bSBndWlkZV0oL3RlYWNoZXJzL3Jlc291cmNlcy9jczEpIHRvIHJlaW5mb3JjZSB0aGlzIGNvbmNlcHQuXCJcbiMgICAgdGVhY2hlcl9xdWVzdF90ZWFjaF92YXJpYWJsZXM6IFwiVmFyeSBpdCB1cCB3aXRoIGB2YXJpYWJsZXNgLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfdmFyaWFibGVzX3N0ZXAxOiBcIkdldCA3NSUgb2YgYXQgbGVhc3Qgb25lIGNsYXNzIHRocm91Z2ggX19Lbm93biBFbmVteV9fLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfdmFyaWFibGVzX3N0ZXAyOiBcIkVuY291cmFnZSBjb2xsYWJvcmF0aW9uIGJ5IHVzaW5nIHRoZSBbUGFpciBQcm9ncmFtbWluZyBBY3Rpdml0eV0oL3RlYWNoZXJzL3Jlc291cmNlcy9wYWlyLXByb2dyYW1taW5nKS5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2tpdGhnYXJkX2dhdGVzXzEwMDogXCJFc2NhcGUgdGhlIEtpdGhnYXJkIEdhdGVzIHdpdGggeW91ciBjbGFzcy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2tpdGhnYXJkX2dhdGVzXzEwMF9zdGVwMTogXCJHZXQgNzUlIG9mIGF0IGxlYXN0IG9uZSBjbGFzcyB0aHJvdWdoIF9fS2l0aGdhcmQgR2F0ZXNfXy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2tpdGhnYXJkX2dhdGVzXzEwMF9zdGVwMjogXCJHdWlkZSBzdHVkZW50cyB0byB0aGluayB0aHJvdWdoIGhhcmQgcHJvYmxlbXMgdXNpbmcgdGhlIFtFbmdpbmVlcmluZyBDeWNsZSBXb3Jrc2hlZXRdKGh0dHA6Ly9maWxlcy5jb2RlY29tYmF0LmNvbS9kb2NzL3Jlc291cmNlcy9FbmdpbmVlcmluZ0N5Y2xlV29ya3NoZWV0LnBkZikuXCJcbiMgICAgdGVhY2hlcl9xdWVzdF93YWtrYV9tYXVsXzEwMDogXCJQcmVwYXJlIHRvIGR1ZWwgaW4gV2Fra2EgTWF1bC5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3dha2thX21hdWxfMTAwX3N0ZXAxOiBcIkdldCA3NSUgb2YgYXQgbGVhc3Qgb25lIGNsYXNzIHRvIF9fV2Fra2EgTWF1bF9fLlwiXG4jICAgIHRlYWNoZXJfcXVlc3Rfd2Fra2FfbWF1bF8xMDBfc3RlcDI6IFwiU2VlIHRoZSBbQXJlbmEgR3VpZGVdKC90ZWFjaGVycy9yZXNvdXJjZXMvYXJlbmFzKSBpbiB0aGUgW1Jlc291cmNlIEh1Yl0oL3RlYWNoZXJzL3Jlc291cmNlcykgZm9yIHRpcHMgb24gaG93IHRvIHJ1biBhIHN1Y2Nlc3NmdWwgYXJlbmEgZGF5LlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfcmVhY2hfZ2FtZWRldjogXCJFeHBsb3JlIG5ldyB3b3JsZHMhXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9yZWFjaF9nYW1lZGV2X3N0ZXAxOiBcIltHZXQgbGljZW5zZXNdKC90ZWFjaGVycy9saWNlbnNlcykgc28gdGhhdCB5b3VyIHN0dWRlbnRzIGNhbiBleHBsb3JlIG5ldyB3b3JsZHMsIGxpa2UgR2FtZSBEZXZlbG9wbWVudCBhbmQgV2ViIERldmVsb3BtZW50IVwiXG4jICAgIHRlYWNoZXJfcXVlc3RfZG9uZTogXCJXYW50IHlvdXIgc3R1ZGVudHMgdG8gbGVhcm4gZXZlbiBtb3JlIGNvZGU/IEdldCBpbiB0b3VjaCB3aXRoIG91ciBbc2Nob29sIHNwZWNpYWxpc3RzXShtYWlsdG86c2Nob29sc0Bjb2RlY29tYmF0LmNvbSkgdG9kYXkhXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9rZWVwX2dvaW5nOiBcIktlZXAgZ29pbmchIEhlcmUncyB3aGF0IHlvdSBjYW4gZG8gbmV4dDpcIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X21vcmU6IFwiU2VlIGFsbCBxdWVzdHNcIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2xlc3M6IFwiU2VlIGZld2VyIHF1ZXN0c1wiXG4jICAgIHJlZnJlc2hfdG9fdXBkYXRlOiBcIihyZWZyZXNoIHRoZSBwYWdlIHRvIHNlZSB1cGRhdGVzKVwiXG4jICAgIHZpZXdfcHJvamVjdF9nYWxsZXJ5OiBcIlZpZXcgUHJvamVjdCBHYWxsZXJ5XCJcbiMgICAgb2ZmaWNlX2hvdXJzOiBcIlRlYWNoZXIgV2ViaW5hcnNcIlxuIyAgICBvZmZpY2VfaG91cnNfZGV0YWlsOiBcIkxlYXJuIGhvdyB0byBrZWVwIHVwIHdpdGggd2l0aCB5b3VyIHN0dWRlbnRzIGFzIHRoZXkgY3JlYXRlIGdhbWVzIGFuZCBlbWJhcmsgb24gdGhlaXIgY29kaW5nIGpvdXJuZXkhIENvbWUgYW5kIGF0dGVuZCBvdXJcIlxuIyAgICBvZmZpY2VfaG91cnNfbGluazogXCJ0ZWFjaGVyIHdlYmluYXJcIlxuIyAgICBvZmZpY2VfaG91cnNfZGV0YWlsXzI6IFwic2Vzc2lvbnMuXCJcbiMgICAgc3VjY2VzczogXCJTdWNjZXNzXCJcbiMgICAgaW5fcHJvZ3Jlc3M6IFwiSW4gUHJvZ3Jlc3NcIlxuIyAgICBub3Rfc3RhcnRlZDogXCJOb3QgU3RhcnRlZFwiXG4jICAgIG1pZF9jb3Vyc2U6IFwiTWlkLUNvdXJzZVwiXG4jICAgIGVuZF9jb3Vyc2U6IFwiRW5kIG9mIENvdXJzZVwiXG4jICAgIG5vbmU6IFwiTm9uZSBkZXRlY3RlZCB5ZXRcIlxuIyAgICBleHBsYWluX29wZW5fZW5kZWQ6IFwiTm90ZTogU3R1ZGVudHMgYXJlIGVuY291cmFnZWQgdG8gc29sdmUgdGhpcyBsZXZlbCBjcmVhdGl2ZWx5IOKAlCBvbmUgcG9zc2libGUgc29sdXRpb24gaXMgcHJvdmlkZWQgYmVsb3cuXCJcbiAgICBsZXZlbF9sYWJlbDogXCJOw612ZWw6XCJcbiAgICB0aW1lX3BsYXllZF9sYWJlbDogXCJUZW1wbyBKb2dhZG86XCJcbiMgICAgYmFja190b19yZXNvdXJjZV9odWI6IFwiQmFjayB0byBSZXNvdXJjZSBIdWJcIlxuIyAgICBiYWNrX3RvX2NvdXJzZV9ndWlkZXM6IFwiQmFjayB0byBDb3Vyc2UgR3VpZGVzXCJcbiAgICBwcmludF9ndWlkZTogXCJJbXByaW1pciBlc3RlIGd1aWFcIlxuIyAgICBjb21ibzogXCJDb21ib1wiXG4jICAgIGNvbWJvX2V4cGxhbmF0aW9uOiBcIlN0dWRlbnRzIHBhc3MgQ29tYm8gY2hhbGxlbmdlIGxldmVscyBieSB1c2luZyBhdCBsZWFzdCBvbmUgbGlzdGVkIGNvbmNlcHQuIFJldmlldyBzdHVkZW50IGNvZGUgYnkgY2xpY2tpbmcgdGhlIHByb2dyZXNzIGRvdC5cIlxuICAgIGNvbmNlcHQ6IFwiQ29uY2VpdG9cIlxuIyAgICBzeW5jX2dvb2dsZV9jbGFzc3Jvb206IFwiU3luYyBHb29nbGUgQ2xhc3Nyb29tXCJcblxuICBzaGFyZV9saWNlbnNlczpcbiAgICBzaGFyZV9saWNlbnNlczogXCJQYXJ0aWxoYXIgTGljZW7Dp2FzXCJcbiAgICBzaGFyZWRfYnk6IFwiUGFydGlsaGFkYXMgUG9yOlwiXG4jICAgIGFkZF90ZWFjaGVyX2xhYmVsOiBcIkVudGVyIGV4YWN0IHRlYWNoZXIgZW1haWw6XCJcbiAgICBhZGRfdGVhY2hlcl9idXR0b246IFwiQWRpY2lvbmFyIFByb2Zlc3NvclwiXG4jICAgIHN1YmhlYWRlcjogXCJZb3UgY2FuIG1ha2UgeW91ciBsaWNlbnNlcyBhdmFpbGFibGUgdG8gb3RoZXIgdGVhY2hlcnMgaW4geW91ciBvcmdhbml6YXRpb24uIEVhY2ggbGljZW5zZSBjYW4gb25seSBiZSB1c2VkIGZvciBvbmUgc3R1ZGVudCBhdCBhIHRpbWUuXCJcbiMgICAgdGVhY2hlcl9ub3RfZm91bmQ6IFwiVGVhY2hlciBub3QgZm91bmQuIFBsZWFzZSBtYWtlIHN1cmUgdGhpcyB0ZWFjaGVyIGhhcyBhbHJlYWR5IGNyZWF0ZWQgYSBUZWFjaGVyIEFjY291bnQuXCJcbiMgICAgdGVhY2hlcl9ub3RfdmFsaWQ6IFwiVGhpcyBpcyBub3QgYSB2YWxpZCBUZWFjaGVyIEFjY291bnQuIE9ubHkgdGVhY2hlciBhY2NvdW50cyBjYW4gc2hhcmUgbGljZW5zZXMuXCJcbiMgICAgYWxyZWFkeV9zaGFyZWQ6IFwiWW91J3ZlIGFscmVhZHkgc2hhcmVkIHRoZXNlIGxpY2Vuc2VzIHdpdGggdGhhdCB0ZWFjaGVyLlwiXG4jICAgIHRlYWNoZXJzX3VzaW5nX3RoZXNlOiBcIlRlYWNoZXJzIHdobyBjYW4gYWNjZXNzIHRoZXNlIGxpY2Vuc2VzOlwiXG4jICAgIGZvb3RlcjogXCJXaGVuIHRlYWNoZXJzIHJldm9rZSBsaWNlbnNlcyBmcm9tIHN0dWRlbnRzLCB0aGUgbGljZW5zZXMgd2lsbCBiZSByZXR1cm5lZCB0byB0aGUgc2hhcmVkIHBvb2wgZm9yIG90aGVyIHRlYWNoZXJzIGluIHRoaXMgZ3JvdXAgdG8gdXNlLlwiXG4gICAgeW91OiBcIih0dSlcIlxuICAgIG9uZV9saWNlbnNlX3VzZWQ6IFwiKDEgbGljZW7Dp2EgdXNhZGEpXCJcbiAgICBsaWNlbnNlc191c2VkOiBcIihfX2xpY2Vuc2VzVXNlZF9fIGxpY2Vuw6dhcyB1c2FkYXMpXCJcbiAgICBtb3JlX2luZm86IFwiTWFpcyBpbmZvcm1hw6fDo29cIlxuXG4gIHNoYXJpbmc6XG4gICAgZ2FtZTogXCJKb2dvXCJcbiAgICB3ZWJwYWdlOiBcIlDDoWdpbmEgV2ViXCJcbiMgICAgeW91cl9zdHVkZW50c19wcmV2aWV3OiBcIllvdXIgc3R1ZGVudHMgd2lsbCBjbGljayBoZXJlIHRvIHNlZSB0aGVpciBmaW5pc2hlZCBwcm9qZWN0cyEgVW5hdmFpbGFibGUgaW4gdGVhY2hlciBwcmV2aWV3LlwiXG4jICAgIHVuYXZhaWxhYmxlOiBcIkxpbmsgc2hhcmluZyBub3QgYXZhaWxhYmxlIGluIHRlYWNoZXIgcHJldmlldy5cIlxuICAgIHNoYXJlX2dhbWU6IFwiUGFydGlsaGFyIEVzdGUgSm9nb1wiXG4gICAgc2hhcmVfd2ViOiBcIlBhcnRpbGhhciBFc3RhIFDDoWdpbmEgV2ViXCJcbiAgICB2aWN0b3J5X3NoYXJlX3ByZWZpeDogXCJQYXJ0aWxoYSBlc3RhIGxpZ2HDp8OjbyBwYXJhIGNvbnZpZGFyZXMgb3MgdGV1cyBhbWlnb3MgZSBhIHR1YSBmYW3DrWxpYSBwYXJhXCJcbiAgICB2aWN0b3J5X3NoYXJlX3ByZWZpeF9zaG9ydDogXCJDb252aWRhIHBlc3NvYXMgcGFyYVwiXG4gICAgdmljdG9yeV9zaGFyZV9nYW1lOiBcImpvZ2FyZW0gbyB0ZXUgbsOtdmVsIGRlIGpvZ29cIlxuICAgIHZpY3Rvcnlfc2hhcmVfd2ViOiBcInZlcmVtIGEgdHVhIHDDoWdpbmEgd2ViXCJcbiAgICB2aWN0b3J5X3NoYXJlX3N1ZmZpeDogXCIuXCJcbiAgICB2aWN0b3J5X2NvdXJzZV9zaGFyZV9wcmVmaXg6IFwiRXN0YSBsaWdhw6fDo28gdmFpIHBlcm1pdGlyIHF1ZSBvcyB0ZXVzIGFtaWdvcyBlIGEgdHVhIGZhbcOtbGlhXCJcbiAgICB2aWN0b3J5X2NvdXJzZV9zaGFyZV9nYW1lOiBcImpvZ3VlbSBvIGpvZ29cIlxuICAgIHZpY3RvcnlfY291cnNlX3NoYXJlX3dlYjogXCJ2ZWphbSBhIHDDoWdpbmEgd2ViXCJcbiAgICB2aWN0b3J5X2NvdXJzZV9zaGFyZV9zdWZmaXg6IFwicXVlIGFjYWJhc3RlIGRlIGNyaWFyLlwiXG4gICAgY29weV91cmw6IFwiQ29waWFyIFVSTFwiXG4gICAgc2hhcmVfd2l0aF90ZWFjaGVyX2VtYWlsOiBcIkVudmlhIHBhcmEgbyB0ZXUgcHJvZmVzc29yXCJcblxuICBnYW1lX2RldjpcbiAgICBjcmVhdG9yOiBcIkNyaWFkb3JcIlxuXG4gIHdlYl9kZXY6XG4gICAgaW1hZ2VfZ2FsbGVyeV90aXRsZTogXCJHYWxlcmlhIGRlIEltYWdlbnNcIlxuICAgIHNlbGVjdF9hbl9pbWFnZTogXCJTZWxlY2lvbmEgdW1hIGltYWdlbSBxdWUgcXVlaXJhcyB1c2FyXCJcbiAgICBzY3JvbGxfZG93bl9mb3JfbW9yZV9pbWFnZXM6IFwiKEFycmFzdGEgcGFyYSBiYWl4byBwYXJhIG1haXMgaW1hZ2VucylcIlxuICAgIGNvcHlfdGhlX3VybDogXCJDb3BpYXIgbyBVUkwgYWJhaXhvXCJcbiAgICBjb3B5X3RoZV91cmxfZGVzY3JpcHRpb246IFwiw5p0aWwgc2UgcXVpc2VyZXMgc3Vic3RpdHVpciB1bWEgaW1hZ2VtIGV4aXN0ZW50ZS5cIlxuICAgIGNvcHlfdGhlX2ltZ190YWc6IFwiQ29waWFyIGEgZXRpcXVldGEgPGltZz5cIlxuICAgIGNvcHlfdGhlX2ltZ190YWdfZGVzY3JpcHRpb246IFwiw5p0aWwgc2UgcXVpc2VyZXMgaW5zZXJpciB1bWEgaW1hZ2VtIG5vdmEuXCJcbiAgICBjb3B5X3VybDogXCJDb3BpYXIgVVJMXCJcbiAgICBjb3B5X2ltZzogXCJDb3BpYXIgPGltZz5cIlxuICAgIGhvd190b19jb3B5X3Bhc3RlOiBcIkNvbW8gQ29waWFyL0NvbGFyXCJcbiAgICBjb3B5OiBcIkNvcGlhclwiXG4gICAgcGFzdGU6IFwiQ29sYXJcIlxuICAgIGJhY2tfdG9fZWRpdGluZzogXCJWb2x0YXIgw6AgRWRpw6fDo29cIlxuXG4gIGNsYXNzZXM6XG4gICAgYXJjaG1hZ2VfdGl0bGU6IFwiQXJjb21hZ29cIlxuICAgIGFyY2htYWdlX3RpdGxlX2Rlc2NyaXB0aW9uOiBcIihQcm9ncmFtYWRvcilcIlxuICAgIGFyY2htYWdlX3N1bW1hcnk6IFwiU2Ugw6lzIHVtIHByb2dyYW1hZG9yIGludGVyZXNzYWRvIGVtIHByb2dyYW1hciBqb2dvcyBlZHVjYWNpb25haXMsIHRvcm5hLXRlIHVtIEFyY29tYWdvIHBhcmEgbm9zIGFqdWRhcmVzIGEgY29uc3RydWlyIG8gQ29kZUNvbWJhdCFcIlxuICAgIGFydGlzYW5fdGl0bGU6IFwiQXJ0ZXPDo29cIlxuICAgIGFydGlzYW5fdGl0bGVfZGVzY3JpcHRpb246IFwiKENvbnN0cnV0b3IgZGUgTsOtdmVpcylcIlxuICAgIGFydGlzYW5fc3VtbWFyeTogXCJDb25zdHLDs2kgZSBwYXJ0aWxoYSBuw612ZWlzIHBhcmEgdHUgZSBvcyB0ZXVzIGFtaWdvcyBqb2dhcmVtLiBUb3JuYS10ZSB1bSBBcnRlc8OjbyBwYXJhIGFwcmVuZGVyZXMgYSBhcnRlIGRlIGVuc2luYXIgb3V0cm9zIGEgcHJvZ3JhbWFyLlwiXG4gICAgYWR2ZW50dXJlcl90aXRsZTogXCJBdmVudHVyZWlyb1wiXG4gICAgYWR2ZW50dXJlcl90aXRsZV9kZXNjcmlwdGlvbjogXCIoVGVzdGFkb3IgZGUgTsOtdmVpcylcIlxuICAgIGFkdmVudHVyZXJfc3VtbWFyeTogXCJSZWNlYmUgb3Mgbm9zc29zIG5vdm9zIG7DrXZlaXMgKGF0w6kgbyBjb250ZcO6ZG8gcGFyYSBzdWJzY3JpdG9yZXMpIGRlIGdyYcOnYSwgdW1hIHNlbWFuYSBhbnRlcywgZSBhanVkYS1ub3MgYSBkZXNjb2JyaXIgZXJyb3MgYW50ZXMgZG8gbGFuw6dhbWVudG8gcGFyYSBvIHDDumJsaWNvLlwiXG4gICAgc2NyaWJlX3RpdGxlOiBcIkVzY3JpdsOjb1wiXG4gICAgc2NyaWJlX3RpdGxlX2Rlc2NyaXB0aW9uOiBcIihFZGl0b3IgZGUgQXJ0aWdvcylcIlxuICAgIHNjcmliZV9zdW1tYXJ5OiBcIkJvbSBjw7NkaWdvIHByZWNpc2EgZGUgdW1hIGJvYSBkb2N1bWVudGHDp8Ojby4gRXNjcmV2ZSwgZWRpdGEgZSBtZWxob3JhIG9zIGRvY3VtZW50b3MgbGlkb3MgcG9yIG1pbGjDtWVzIGRlIGpvZ2Fkb3JlcyBwZWxvIG11bmRvLlwiXG4gICAgZGlwbG9tYXRfdGl0bGU6IFwiRGlwbG9tYXRhXCJcbiAgICBkaXBsb21hdF90aXRsZV9kZXNjcmlwdGlvbjogXCIoVHJhZHV0b3IpXCJcbiAgICBkaXBsb21hdF9zdW1tYXJ5OiBcIk8gQ29kZUNvbWJhdCBlc3TDoSB0cmFkdXppZG8gZW0gNDUrIGlkaW9tYXMgZ3Jhw6dhcyBhb3Mgbm9zc29zIERpcGxvbWF0YXMuIEFqdWRhLW5vcyBlIGNvbnRyaWJ1aSBjb20gdHJhZHXDp8O1ZXMuXCJcbiAgICBhbWJhc3NhZG9yX3RpdGxlOiBcIkVtYmFpeGFkb3JcIlxuICAgIGFtYmFzc2Fkb3JfdGl0bGVfZGVzY3JpcHRpb246IFwiKFN1cG9ydGUpXCJcbiAgICBhbWJhc3NhZG9yX3N1bW1hcnk6IFwiQW1hbnNhIG9zIG5vc3NvcyB1dGlsaXphZG9yZXMgZG8gZsOzcnVtIGUgZGlyZWNpb25hIGFxdWVsZXMgcXVlIHTDqm0gcXVlc3TDtWVzLiBPcyBub3Nzb3MgRW1iYWl4YWRvcmVzIHJlcHJlc2VudGFtIG8gQ29kZUNvbWJhdCBwZXJhbnRlIG8gbXVuZG8uXCJcbiAgICB0ZWFjaGVyX3RpdGxlOiBcIlByb2Zlc3NvclwiXG5cbiAgZWRpdG9yOlxuICAgIG1haW5fdGl0bGU6IFwiRWRpdG9yZXMgZG8gQ29kZUNvbWJhdFwiXG4gICAgYXJ0aWNsZV90aXRsZTogXCJFZGl0b3IgZGUgQXJ0aWdvc1wiXG4gICAgdGhhbmdfdGl0bGU6IFwiRWRpdG9yIGRlIFRoYW5nc1wiXG4gICAgbGV2ZWxfdGl0bGU6IFwiRWRpdG9yIGRlIE7DrXZlaXNcIlxuICAgIGNvdXJzZV90aXRsZTogXCJFZGl0b3IgZGUgQ3Vyc29zXCJcbiAgICBhY2hpZXZlbWVudF90aXRsZTogXCJFZGl0b3IgZGUgQ29ucXVpc3Rhc1wiXG4gICAgcG9sbF90aXRsZTogXCJFZGl0b3IgZGUgVm90YcOnw7Vlc1wiXG4gICAgYmFjazogXCJWb2x0YXJcIlxuICAgIHJldmVydDogXCJSZXZlcnRlclwiXG4gICAgcmV2ZXJ0X21vZGVsczogXCJSZXZlcnRlciBNb2RlbG9zXCJcbiAgICBwaWNrX2FfdGVycmFpbjogXCJFc2NvbGhlIFVtIFRlcnJlbm9cIlxuICAgIGR1bmdlb246IFwiTWFzbW9ycmFcIlxuICAgIGluZG9vcjogXCJJbnRlcmlvclwiXG4gICAgZGVzZXJ0OiBcIkRlc2VydG9cIlxuICAgIGdyYXNzeTogXCJSZWx2YWRvXCJcbiAgICBtb3VudGFpbjogXCJNb250YW5oYVwiXG4gICAgZ2xhY2llcjogXCJHbGFjaWFyXCJcbiAgICBzbWFsbDogXCJQZXF1ZW5vXCJcbiAgICBsYXJnZTogXCJHcmFuZGVcIlxuICAgIGZvcmtfdGl0bGU6IFwiQmlmdXJjYXIgTm92YSBWZXJzw6NvXCJcbiAgICBmb3JrX2NyZWF0aW5nOiBcIkEgQ3JpYXIgQmlmdXJjYcOnw6NvLi4uXCJcbiAgICBnZW5lcmF0ZV90ZXJyYWluOiBcIkdlcmFyIFRlcnJlbm9cIlxuICAgIG1vcmU6IFwiTWFpc1wiXG4gICAgd2lraTogXCJXaWtpXCJcbiAgICBsaXZlX2NoYXQ6IFwiQ2hhdCBhbyBWaXZvXCJcbiAgICB0aGFuZ19tYWluOiBcIlByaW5jaXBhbFwiXG4gICAgdGhhbmdfc3ByaXRlc2hlZXRzOiBcIlNwcml0ZXNoZWV0c1wiXG4gICAgdGhhbmdfY29sb3JzOiBcIkNvcmVzXCJcbiAgICBsZXZlbF9zb21lX29wdGlvbnM6IFwiQWxndW1hcyBPcMOnw7Vlcz9cIlxuICAgIGxldmVsX3RhYl90aGFuZ3M6IFwiVGhhbmdzXCJcbiAgICBsZXZlbF90YWJfc2NyaXB0czogXCJTY3JpcHRzXCJcbiAgICBsZXZlbF90YWJfY29tcG9uZW50czogXCJDb21wb25lbnRlc1wiXG4gICAgbGV2ZWxfdGFiX3N5c3RlbXM6IFwiU2lzdGVtYXNcIlxuICAgIGxldmVsX3RhYl9kb2NzOiBcIkRvY3VtZW50YcOnw6NvXCJcbiAgICBsZXZlbF90YWJfdGhhbmdzX3RpdGxlOiBcIlRoYW5ncyBBdHVhaXNcIlxuICAgIGxldmVsX3RhYl90aGFuZ3NfYWxsOiBcIlRvZG9zXCJcbiAgICBsZXZlbF90YWJfdGhhbmdzX2NvbmRpdGlvbnM6IFwiQ29uZGnDp8O1ZXMgSW5pY2lhaXNcIlxuICAgIGxldmVsX3RhYl90aGFuZ3NfYWRkOiBcIkFkaWNpb25hciBUaGFuZ3NcIlxuICAgIGxldmVsX3RhYl90aGFuZ3Nfc2VhcmNoOiBcIlBlc3F1aXNhciB0aGFuZ3NcIlxuICAgIGFkZF9jb21wb25lbnRzOiBcIkFkaWNpb25hciBDb21wb25lbnRlc1wiXG4gICAgY29tcG9uZW50X2NvbmZpZ3M6IFwiQ29uZmlndXJhw6fDtWVzIGRvcyBDb21wb25lbnRlc1wiXG4gICAgY29uZmlnX3RoYW5nOiBcIkNsaWNhIGR1YXMgdmV6ZXMgcGFyYSBjb25maWd1cmFyZXMgdW1hIHRoYW5nXCJcbiAgICBkZWxldGU6IFwiRWxpbWluYXJcIlxuICAgIGR1cGxpY2F0ZTogXCJEdXBsaWNhclwiXG4gICAgc3RvcF9kdXBsaWNhdGU6IFwiUGFyYXIgZGUgRHVwbGljYXJcIlxuICAgIHJvdGF0ZTogXCJSb2RhclwiXG4gICAgbGV2ZWxfY29tcG9uZW50X3RhYl90aXRsZTogXCJDb21wb25lbnRlcyBBdHVhaXNcIlxuICAgIGxldmVsX2NvbXBvbmVudF9idG5fbmV3OiBcIkNyaWFyIE5vdm8gQ29tcG9uZW50ZVwiXG4gICAgbGV2ZWxfc3lzdGVtc190YWJfdGl0bGU6IFwiU2lzdGVtYXMgQXR1YWlzXCJcbiAgICBsZXZlbF9zeXN0ZW1zX2J0bl9uZXc6IFwiQ3JpYSBOb3ZvIFNpc3RlbWFcIlxuICAgIGxldmVsX3N5c3RlbXNfYnRuX2FkZDogXCJBZGljaW9uYXIgU2lzdGVtYVwiXG4gICAgbGV2ZWxfY29tcG9uZW50c190aXRsZTogXCJWb2x0YXIgcGFyYSBUb2RhcyBhcyBUaGFuZ3NcIlxuICAgIGxldmVsX2NvbXBvbmVudHNfdHlwZTogXCJUaXBvXCJcbiAgICBsZXZlbF9jb21wb25lbnRfZWRpdF90aXRsZTogXCJFZGl0YXIgQ29tcG9uZW50ZVwiXG4gICAgbGV2ZWxfY29tcG9uZW50X2NvbmZpZ19zY2hlbWE6IFwiQ29uZmlndXJhciBFc3F1ZW1hXCJcbiAgICBsZXZlbF9zeXN0ZW1fZWRpdF90aXRsZTogXCJFZGl0YXIgU2lzdGVtYVwiXG4gICAgY3JlYXRlX3N5c3RlbV90aXRsZTogXCJDcmlhciBOb3ZvIFNpc3RlbWFcIlxuICAgIG5ld19jb21wb25lbnRfdGl0bGU6IFwiQ3JpYXIgTm92byBDb21wb25lbnRlXCJcbiAgICBuZXdfY29tcG9uZW50X2ZpZWxkX3N5c3RlbTogXCJTaXN0ZW1hXCJcbiAgICBuZXdfYXJ0aWNsZV90aXRsZTogXCJDcmlhciB1bSBOb3ZvIEFydGlnb1wiXG4gICAgbmV3X3RoYW5nX3RpdGxlOiBcIkNyaWFyIHVtIE5vdm8gVGlwbyBkZSBUaGFuZ1wiXG4gICAgbmV3X2xldmVsX3RpdGxlOiBcIkNyaWFyIHVtIE5vdm8gTsOtdmVsXCJcbiAgICBuZXdfYXJ0aWNsZV90aXRsZV9sb2dpbjogXCJJbmljaWEgU2Vzc8OjbyBwYXJhIENyaWFyZXMgdW0gTm92byBBcnRpZ29cIlxuICAgIG5ld190aGFuZ190aXRsZV9sb2dpbjogXCJJbmljaWEgU2Vzc8OjbyBwYXJhIENyaWFyZXMgdW0gTm92byBUaXBvIGRlIFRoYW5nXCJcbiAgICBuZXdfbGV2ZWxfdGl0bGVfbG9naW46IFwiSW5pY2lhIFNlc3PDo28gcGFyYSBDcmlhcmVzIHVtIE5vdm8gTsOtdmVsXCJcbiAgICBuZXdfYWNoaWV2ZW1lbnRfdGl0bGU6IFwiQ3JpYXIgdW1hIE5vdmEgQ29ucXVpc3RhXCJcbiAgICBuZXdfYWNoaWV2ZW1lbnRfdGl0bGVfbG9naW46IFwiSW5pY2lhIFNlc3PDo28gcGFyYSBDcmlhcmVzIHVtYSBOb3ZhIENvbnF1aXN0YVwiXG4gICAgbmV3X3BvbGxfdGl0bGU6IFwiQ3JpYXIgdW1hIE5vdmEgVm90YcOnw6NvXCJcbiAgICBuZXdfcG9sbF90aXRsZV9sb2dpbjogXCJJbmljaWFyIFNlc3PDo28gcGFyYSBDcmlhciB1bWEgTm92YSBWb3Rhw6fDo29cIlxuICAgIGFydGljbGVfc2VhcmNoX3RpdGxlOiBcIlByb2N1cmFyIEFydGlnb3MgQXF1aVwiXG4gICAgdGhhbmdfc2VhcmNoX3RpdGxlOiBcIlByb2N1cmFyIFRoYW5ncyBBcXVpXCJcbiAgICBsZXZlbF9zZWFyY2hfdGl0bGU6IFwiUHJvY3VyYXIgTsOtdmVpcyBBcXVpXCJcbiAgICBhY2hpZXZlbWVudF9zZWFyY2hfdGl0bGU6IFwiUHJvY3VyYXIgQ29ucXVpc3Rhc1wiXG4gICAgcG9sbF9zZWFyY2hfdGl0bGU6IFwiUHJvY3VyYXIgVm90YcOnw7Vlc1wiXG4gICAgcmVhZF9vbmx5X3dhcm5pbmcyOiBcIk5vdGE6IG7Do28gcG9kZXMgZ3VhcmRhciBuZW5odW1hIGVkacOnw6NvIGZlaXRhIGFxdWksIHBvcnF1ZSBuw6NvIHRlbnMgc2Vzc8OjbyBpbmljaWFkYS5cIlxuICAgIG5vX2FjaGlldmVtZW50czogXCJBaW5kYSBuw6NvIGZvcmFtIGFkaWNpb25hZGFzIGNvbnF1aXN0YXMgYSBlc3RlIG7DrXZlbC5cIlxuICAgIGFjaGlldmVtZW50X3F1ZXJ5X21pc2M6IFwiQ29ucXVpc3RhLWNoYXZlIGRlIHVtYSBsaXN0YSBkZSB2YXJpYWRvc1wiXG4gICAgYWNoaWV2ZW1lbnRfcXVlcnlfZ29hbHM6IFwiQ29ucXVpc3RhLWNoYXZlIGRvcyBvYmpldGl2b3MgZG8gbsOtdmVsXCJcbiAgICBsZXZlbF9jb21wbGV0aW9uOiBcIkNvbXBsZXRhw6fDo28gZG8gTsOtdmVsXCJcbiAgICBwb3BfaTE4bjogXCJQcm9wYWdhciBJMThOXCJcbiAgICB0YXNrczogXCJUYXJlZmFzXCJcbiAgICBjbGVhcl9zdG9yYWdlOiBcIkxpbXBhIGFzIHR1YXMgYWx0ZXJhw6fDtWVzIGxvY2Fpc1wiXG4gICAgYWRkX3N5c3RlbV90aXRsZTogXCJBZGljaW9uYXIgU2lzdGVtYXMgYW8gTsOtdmVsXCJcbiAgICBkb25lX2FkZGluZzogXCJBZGnDp8OjbyBDb25jbHXDrWRhXCJcblxuICBhcnRpY2xlOlxuICAgIGVkaXRfYnRuX3ByZXZpZXc6IFwiUHLDqS12aXN1YWxpemFyXCJcbiAgICBlZGl0X2FydGljbGVfdGl0bGU6IFwiRWRpdGFyIEFydGlnb1wiXG5cbiAgcG9sbHM6XG4gICAgcHJpb3JpdHk6IFwiUHJpb3JpZGFkZVwiXG5cbiAgY29udHJpYnV0ZTpcbiAgICBwYWdlX3RpdGxlOiBcIkNvbnRyaWJ1aXJcIlxuICAgIGludHJvX2JsdXJiOiBcIk8gQ29kZUNvbWJhdCBmYXogcGFydGUgZGEgY29tdW5pZGFkZSBvcGVuIHNvdXJjZSEgQ2VudGVuYXMgZGUgam9nYWRvcmVzIGRlZGljYWRvcyBhanVkYXJhbS1ub3MgYSB0cmFuc2Zvcm1hciBvIGpvZ28gbmFxdWlsbyBxdWUgZWxlIMOpIGhvamUuIEp1bnRhLXRlIGEgbsOzcyBlIGVzY3JldmUgbyBwcsOzeGltbyBjYXDDrXR1bG8gZGEgYXZlbnR1cmEgZG8gQ29kZUNvbWJhdCBwYXJhIGVuc2luYXIgbyBtdW5kbyBhIHByb2dyYW1hciFcIlxuICAgIGFsZXJ0X2FjY291bnRfbWVzc2FnZV9pbnRybzogXCJIZXksIHR1IVwiXG4gICAgYWxlcnRfYWNjb3VudF9tZXNzYWdlOiBcIlBhcmEgdGUgc3Vic2NyZXZlcmVzIHBhcmEgcmVjZWJlciBlLW1haWxzIGRlIGNsYXNzZXMsIG5lY2Vzc2l0YXLDoXMgZGUgaW5pY2lhciBzZXNzw6NvLlwiXG4gICAgYXJjaG1hZ2VfaW50cm9kdWN0aW9uOiBcIlVtYSBkYXMgbWVsaG9yZXMgcGFydGVzIGRhIGNvbnN0cnXDp8OjbyBkZSBqb2dvcyDDqSBxdWUgZWxlcyBzaW50ZXRpemFtIG11aXRhcyBjb2lzYXMgZGlmZXJlbnRlcy4gR3LDoWZpY29zLCBzb20sIHJlZGUgZW0gdGVtcG8gcmVhbCwgcmVkZXMgc29jaWFpcywgZSwgY2xhcm8sIG11aXRvcyBkb3MgYXNwZWN0b3MgbWFpcyBjb211bnMgZGEgcHJvZ3JhbWHDp8OjbywgZGVzZGUgYSBnZXN0w6NvIGRlIGJhc2VzIGRlIGRhZG9zIGRlIGJhaXhvIG7DrXZlbCwgZSBhZG1pbmlzdHJhw6fDo28gZG8gc2Vydmlkb3IgYXTDqSDDoCBjb25zdHJ1w6fDo28gZG8gZGVzaWduIGUgZGEgaW50ZXJmYWNlIGRvIHV0aWxpemFkb3IuIEjDoSBtdWl0byBhIGZhemVyLCBlIHNlIMOpcyB1bSBwcm9ncmFtYWRvciBleHBlcmllbnRlIGNvbSB1bSB2ZXJkYWRlaXJvIGRlc2VqbyBkZSBtZXJndWxoYXIgbmFzIGVudHJhbmhhcyBkbyBDb2RlQ29tYmF0LCBlc3RhIGNsYXNzZSBwb2RlIHNlciBwYXJhIHRpLiBHb3N0YXLDrWFtb3MgbXVpdG8gZGUgdGVyIGEgdHVhIGFqdWRhIHBhcmEgY29uc3RydWlyIG8gbWVsaG9yIGpvZ28gZGUgcHJvZ3JhbWHDp8OjbyBkZSBzZW1wcmUuXCJcbiAgICBjbGFzc19hdHRyaWJ1dGVzOiBcIkF0cmlidXRvcyBkYSBDbGFzc2VcIlxuICAgIGFyY2htYWdlX2F0dHJpYnV0ZV8xX3ByZWY6IFwiQ29uaGVjaW1lbnRvIGVtIFwiXG4gICAgYXJjaG1hZ2VfYXR0cmlidXRlXzFfc3VmOiBcIiwgb3Ugdm9udGFkZSBkZSBhcHJlbmRlci4gQSBtYWlvcmlhIGRvIG5vc3NvIGPDs2RpZ28gZXN0w6EgbmVzdGEgbGluZ3VhZ2VtLiBTZSDDqXMgdW0gZsOjIGRlIFJ1Ynkgb3UgUHl0aG9uLCB2YWlzIHNlbnRpci10ZSBlbSBjYXNhLiDDiSBpZ3VhbCBhbyBKYXZhU2NyaXB0LCBtYXMgY29tIHVtYSBzaW50YXhlIG1lbGhvci5cIlxuICAgIGFyY2htYWdlX2F0dHJpYnV0ZV8yOiBcIkFsZ3VtYSBleHBlcmnDqm5jaWEgZW0gcHJvZ3JhbWHDp8OjbyBlIGluaWNpYXRpdmEgcGVzc29hbC4gTsOzcyBhanVkYW1vcy10ZSBhIG9yaWVudGFyZXMtdGUsIG1hcyBuw6NvIHBvZGVtb3MgZ2FzdGFyIG11aXRvIHRlbXBvIGEgdHJlaW5hci10ZS5cIlxuICAgIGhvd190b19qb2luOiBcIkNvbW8gTWUgSnVudG9cIlxuICAgIGpvaW5fZGVzY18xOiBcIlF1YWxxdWVyIHVtIHBvZGUgYWp1ZGFyISBTw7MgdGVucyBkZSBjb25mZXJpciBvIG5vc3NvIFwiXG4gICAgam9pbl9kZXNjXzI6IFwicGFyYSBjb21lw6dhcmVzLCBlIGFzc2luYWxhciBhIGNhaXhhIGFiYWl4byBwYXJhIHRlIGRlY2xhcmFyZXMgdW0gYnJhdm8gQXJjb21hZ28gZSByZWNlYmVyZXMgYXMgw7psdGltYXMgbm90w61jaWFzIHBvciBlLW1haWwuIFF1ZXJlcyBmYWxhciBzb2JyZSBvIHF1ZSBmYXplciBvdSBjb21vIHRlIGVudm9sdmVyZXMgbWFpcyBwcm9mdW5kYW1lbnRlIG5vIHByb2pldG8/IFwiXG4gICAgam9pbl9kZXNjXzM6IFwiIG91IGVuY29udHJhLW5vcyBuYSBub3NzYSBcIlxuICAgIGpvaW5fZGVzY180OiBcImUgY29tZcOnYW1vcyBhIHBhcnRpciBkYcOtIVwiXG4gICAgam9pbl91cmxfZW1haWw6IFwiQ29udGFjdGEtbm9zXCJcbiAgICBqb2luX3VybF9zbGFjazogXCJjYW5hbCBww7pibGljbyBubyBTbGFja1wiXG4gICAgYXJjaG1hZ2Vfc3Vic2NyaWJlX2Rlc2M6IFwiUmVjZWJlciBlLW1haWxzIHJlbGF0aXZvcyBhIG5vdmFzIG9wb3J0dW5pZGFkZXMgZGUgcHJvZ3JhbWHDp8OjbyBlIGFuw7puY2lvcy5cIlxuICAgIGFydGlzYW5faW50cm9kdWN0aW9uX3ByZWY6IFwiVGVtb3MgZGUgY29uc3RydWlyIG1haXMgbsOtdmVpcyEgQXMgcGVzc29hcyBlc3TDo28gYSBwZWRpciBtYWlzIGNvbnRlw7pkbywgZSBuw7NzIG1lc21vcyBzw7MgcG9kZW1vcyBjb25zdHJ1aXIgZXN0ZXMgdGFudG9zLiBOZXN0ZSBtb21lbnRvLCBhIHR1YSBlc3Rhw6fDo28gZGUgdHJhYmFsaG8gw6kgbyBuw612ZWwgdW07IG8gbm9zc28gZWRpdG9yIGRlIG7DrXZlbCDDqSBwb3VjbyB1dGlsaXrDoXZlbCwgYXTDqSBtZXNtbyBwZWxvcyBzZXVzIGNyaWFkb3JlcywgcG9yIGlzc28gZmljYSBhdGVudG8uIFNlIHRlbnMgdmlzw7VlcyBkZSBjYW1wYW5oYXMgcXVlIGFicmFuamFtICdmb3ItbG9vcHMnIHBhcmEgb1wiXG4gICAgYXJ0aXNhbl9pbnRyb2R1Y3Rpb25fc3VmOiBcIiwgZW50w6NvIGVzdGEgY2xhc3NlIHBvZGUgc2VyIHBhcmEgdGkuXCJcbiMgICAgYXJ0aXNhbl9hdHRyaWJ1dGVfMTogXCJBbnkgZXhwZXJpZW5jZSBpbiBidWlsZGluZyBjb250ZW50IGxpa2UgdGhpcyB3b3VsZCBiZSBuaWNlLCBzdWNoIGFzIHVzaW5nIEJsaXp6YXJkJ3MgbGV2ZWwgZWRpdG9ycy4gQnV0IG5vdCByZXF1aXJlZCFcIlxuIyAgICBhcnRpc2FuX2F0dHJpYnV0ZV8yOiBcIkEgaGFua2VyaW5nIHRvIGRvIGEgd2hvbGUgbG90IG9mIHRlc3RpbmcgYW5kIGl0ZXJhdGlvbi4gVG8gbWFrZSBnb29kIGxldmVscywgeW91IG5lZWQgdG8gdGFrZSBpdCB0byBvdGhlcnMgYW5kIHdhdGNoIHRoZW0gcGxheSBpdCwgYW5kIGJlIHByZXBhcmVkIHRvIGZpbmQgYSBsb3Qgb2YgdGhpbmdzIHRvIGZpeC5cIlxuIyAgICBhcnRpc2FuX2F0dHJpYnV0ZV8zOiBcIkZvciB0aGUgdGltZSBiZWluZywgZW5kdXJhbmNlIGVuIHBhciB3aXRoIGFuIEFkdmVudHVyZXIuIE91ciBMZXZlbCBFZGl0b3IgaXMgc3VwZXIgcHJlbGltaW5hcnkgYW5kIGZydXN0cmF0aW5nIHRvIHVzZS4gWW91IGhhdmUgYmVlbiB3YXJuZWQhXCJcbiAgICBhcnRpc2FuX2pvaW5fZGVzYzogXCJVc2EgbyBFZGl0b3IgZGUgTsOtdmVpcyBwb3IgZXN0YSBvcmRlbSwgcGVnYXIgb3UgbGFyZ2FyOlwiXG4gICAgYXJ0aXNhbl9qb2luX3N0ZXAxOiBcIkzDqiBhIGRvY3VtZW50YcOnw6NvLlwiXG4gICAgYXJ0aXNhbl9qb2luX3N0ZXAyOiBcIkNyaWEgdW0gbsOtdmVsIG5vdm8gZSBleHBsb3JhIG7DrXZlaXMgZXhpc3RlbnRlcy5cIlxuICAgIGFydGlzYW5fam9pbl9zdGVwMzogXCJFbmNvbnRyYS1ub3MgbmEgbm9zc2Egc2FsYSBTbGFjayBww7pibGljYSBzZSBuZWNlc3NpdGFyZXMgZGUgYWp1ZGEuXCJcbiAgICBhcnRpc2FuX2pvaW5fc3RlcDQ6IFwiQ29sb2NhIG9zIHRldXMgbsOtdmVpcyBubyBmw7NydW0gcGFyYSByZWNlYmVyZXMgZmVlZGJhY2suXCJcbiAgICBhcnRpc2FuX3N1YnNjcmliZV9kZXNjOiBcIlJlY2ViZXIgZS1tYWlscyByZWxhdGl2b3MgYSBub3ZpZGFkZXMgZG8gZWRpdG9yIGRlIG7DrXZlaXMgZSBhbsO6bmNpb3MuXCJcbiMgICAgYWR2ZW50dXJlcl9pbnRyb2R1Y3Rpb246IFwiTGV0J3MgYmUgY2xlYXIgYWJvdXQgeW91ciByb2xlOiB5b3UgYXJlIHRoZSB0YW5rLiBZb3UncmUgZ29pbmcgdG8gdGFrZSBoZWF2eSBkYW1hZ2UuIFdlIG5lZWQgcGVvcGxlIHRvIHRyeSBvdXQgYnJhbmQtbmV3IGxldmVscyBhbmQgaGVscCBpZGVudGlmeSBob3cgdG8gbWFrZSB0aGluZ3MgYmV0dGVyLiBUaGUgcGFpbiB3aWxsIGJlIGVub3Jtb3VzOyBtYWtpbmcgZ29vZCBnYW1lcyBpcyBhIGxvbmcgcHJvY2VzcyBhbmQgbm8gb25lIGdldHMgaXQgcmlnaHQgdGhlIGZpcnN0IHRpbWUuIElmIHlvdSBjYW4gZW5kdXJlIGFuZCBoYXZlIGEgaGlnaCBjb25zdGl0dXRpb24gc2NvcmUsIHRoZW4gdGhpcyBjbGFzcyBtaWdodCBiZSBmb3IgeW91LlwiXG4jICAgIGFkdmVudHVyZXJfYXR0cmlidXRlXzE6IFwiQSB0aGlyc3QgZm9yIGxlYXJuaW5nLiBZb3Ugd2FudCB0byBsZWFybiBob3cgdG8gY29kZSBhbmQgd2Ugd2FudCB0byB0ZWFjaCB5b3UgaG93IHRvIGNvZGUuIFlvdSdsbCBwcm9iYWJseSBiZSBkb2luZyBtb3N0IG9mIHRoZSB0ZWFjaGluZyBpbiB0aGlzIGNhc2UsIHRob3VnaC5cIlxuIyAgICBhZHZlbnR1cmVyX2F0dHJpYnV0ZV8yOiBcIkNoYXJpc21hdGljLiBCZSBnZW50bGUgYnV0IGFydGljdWxhdGUgYWJvdXQgd2hhdCBuZWVkcyBpbXByb3ZpbmcsIGFuZCBvZmZlciBzdWdnZXN0aW9ucyBvbiBob3cgdG8gaW1wcm92ZS5cIlxuIyAgICBhZHZlbnR1cmVyX2pvaW5fcHJlZjogXCJFaXRoZXIgZ2V0IHRvZ2V0aGVyIHdpdGggKG9yIHJlY3J1aXQhKSBhbiBBcnRpc2FuIGFuZCB3b3JrIHdpdGggdGhlbSwgb3IgY2hlY2sgdGhlIGJveCBiZWxvdyB0byByZWNlaXZlIGVtYWlscyB3aGVuIHRoZXJlIGFyZSBuZXcgbGV2ZWxzIHRvIHRlc3QuIFdlJ2xsIGFsc28gYmUgcG9zdGluZyBhYm91dCBsZXZlbHMgdG8gcmV2aWV3IG9uIG91ciBuZXR3b3JrcyBsaWtlXCJcbiMgICAgYWR2ZW50dXJlcl9mb3J1bV91cmw6IFwib3VyIGZvcnVtXCJcbiMgICAgYWR2ZW50dXJlcl9qb2luX3N1ZjogXCJzbyBpZiB5b3UgcHJlZmVyIHRvIGJlIG5vdGlmaWVkIHRob3NlIHdheXMsIHNpZ24gdXAgdGhlcmUhXCJcbiAgICBhZHZlbnR1cmVyX3N1YnNjcmliZV9kZXNjOiBcIlJlY2ViZXIgZS1tYWlscyBxdWFuZG8gaG91dmVyIG5vdm9zIG7DrXZlaXMgcGFyYSB0ZXN0YXIuXCJcbiMgICAgc2NyaWJlX2ludHJvZHVjdGlvbl9wcmVmOiBcIkNvZGVDb21iYXQgaXNuJ3QganVzdCBnb2luZyB0byBiZSBhIGJ1bmNoIG9mIGxldmVscy4gSXQgd2lsbCBhbHNvIGluY2x1ZGUgYSByZXNvdXJjZSBmb3Iga25vd2xlZGdlLCBhIHdpa2kgb2YgcHJvZ3JhbW1pbmcgY29uY2VwdHMgdGhhdCBsZXZlbHMgY2FuIGhvb2sgaW50by4gVGhhdCB3YXkgcmF0aGVyIHRoYW4gZWFjaCBBcnRpc2FuIGhhdmluZyB0byBkZXNjcmliZSBpbiBkZXRhaWwgd2hhdCBhIGNvbXBhcmlzb24gb3BlcmF0b3IgaXMsIHRoZXkgY2FuIHNpbXBseSBsaW5rIHRoZWlyIGxldmVsIHRvIHRoZSBBcnRpY2xlIGRlc2NyaWJpbmcgdGhlbSB0aGF0IGlzIGFscmVhZHkgd3JpdHRlbiBmb3IgdGhlIHBsYXllcidzIGVkaWZpY2F0aW9uLiBTb21ldGhpbmcgYWxvbmcgdGhlIGxpbmVzIG9mIHdoYXQgdGhlIFwiXG4jICAgIHNjcmliZV9pbnRyb2R1Y3Rpb25fdXJsX21vemlsbGE6IFwiTW96aWxsYSBEZXZlbG9wZXIgTmV0d29ya1wiXG4jICAgIHNjcmliZV9pbnRyb2R1Y3Rpb25fc3VmOiBcIiBoYXMgYnVpbHQuIElmIHlvdXIgaWRlYSBvZiBmdW4gaXMgYXJ0aWN1bGF0aW5nIHRoZSBjb25jZXB0cyBvZiBwcm9ncmFtbWluZyBpbiBNYXJrZG93biBmb3JtLCB0aGVuIHRoaXMgY2xhc3MgbWlnaHQgYmUgZm9yIHlvdS5cIlxuICAgIHNjcmliZV9hdHRyaWJ1dGVfMTogXCJIYWJpbGlkYWRlIGNvbSBwYWxhdnJhcyDDqSBiYXNpY2FtZW50ZSBvIHF1ZSBwcmVjaXNhcy4gTsOjbyBhcGVuYXMgZ3JhbcOhdGljYSBlIG9ydG9ncmFmaWEsIG1hcyBzZXJlcyBjYXBheiBkZSBleHBsaWNhciBpZGVpYXMgY29tcGxpY2FkYXMgYSBvdXRyb3MuXCJcbiAgICBjb250YWN0X3VzX3VybDogXCJDb250YWN0YS1ub3NcIlxuICAgIHNjcmliZV9qb2luX2Rlc2NyaXB0aW9uOiBcImZhbGEtbm9zIHVtIGJvY2FkbyBkZSB0aSwgZGEgdHVhIGV4cGVyacOqbmNpYSBjb20gYSBwcm9ncmFtYcOnw6NvIGUgZG8gdGlwbyBkZSBjb2lzYXMgc29icmUgYXMgcXVhaXMgZ29zdGFyaWFzIGRlIGVzY3JldmVyLiBDb21lw6dhbW9zIGEgcGFydGlyIGRhw60hXCJcbiAgICBzY3JpYmVfc3Vic2NyaWJlX2Rlc2M6IFwiUmVjZWJlciBlLW1haWxzIHNvYnJlIGFuw7puY2lvcyByZWxhdGl2b3Mgw6AgZXNjcml0YSBkZSBhcnRpZ29zLlwiXG4gICAgZGlwbG9tYXRfaW50cm9kdWN0aW9uX3ByZWY6IFwiUG9ydGFudG8sIHNlIGjDoSB1bWEgY29pc2EgcXVlIGFwcmVuZGVtb3MgY29tIG8gbm9zc28gXCJcbiAgICBkaXBsb21hdF9sYXVuY2hfdXJsOiBcImxhbsOnYW1lbnRvIGVtIE91dHVicm9cIlxuICAgIGRpcGxvbWF0X2ludHJvZHVjdGlvbl9zdWY6IFwiw6kgcXVlIGjDoSB1bSBpbnRlcmVzc2UgY29uc2lkZXLDoXZlbCBubyBDb2RlQ29tYmF0IG5vdXRyb3MgcGHDrXNlcyEgRXN0YW1vcyBhIGNvbnN0cnVpciB1bSBleMOpcmNpdG8gZGUgdHJhZHV0b3JlcyBkaXNwb3N0b3MgYSB0cmFuc2Zvcm1hciB1bSBjb25qdW50byBkZSBwYWxhdnJhcyBudW0gb3V0cm8gY29uanV0byBkZSBwYWxhdnJhcywgcGFyYSBjb25zZWd1aXIgcXVlIG8gQ29kZUNvbWJhdCBmaXF1ZSBvIG1haXMgYWNlc3PDrXZlbCBxdWFudG8gcG9zw612ZWwgZW0gdG9kbyBvIG11bmRvLiBTZSBnb3N0YXMgZGUgZGFyIGVzcHJlaXRhZGVsYXMgYSBjb250ZcO6ZG9zIGZ1dHVyb3MgZSBkaXNwb25pYmlsaXphciBvcyBuw612ZWlzIHBhcmEgb3MgdGV1cyBjb2xlZ2FzIG5hY2lvbmFpcyBvIG1haXMgZGVwcmVzc2EgcG9zc8OtdmVsLCBlbnTDo28gZXN0YSBjbGFzc2UgdGFsdmV6IHNlamEgcGFyYSB0aS5cIlxuICAgIGRpcGxvbWF0X2F0dHJpYnV0ZV8xOiBcIkZsdcOqbmNpYSBlbSBJbmdsw6pzIGUgbm8gaWRpb21hIHBhcmEgbyBxdWFsIGdvc3RhcmlhcyBkZSB0cmFkdXppci4gUXVhbmRvIHPDo28gdGVudGFkYXMgcGFzc2FyIGlkZWlhcyBjb21wbGljYWRhcywgw6kgaW1wb3J0YW50ZSB1bWEgZXhjZWxlbnRlIGNvbXByZWVuc8OjbyBkYXMgZHVhcyFcIlxuICAgIGRpcGxvbWF0X2kxOG5fcGFnZV9wcmVmaXg6IFwiUG9kZXMgY29tZcOnYXIgYSB0cmFkdXppciBvcyBub3Nzb3MgbsOtdmVpcyBzZSBmb3JlcyDDoCBub3NzYVwiXG4gICAgZGlwbG9tYXRfaTE4bl9wYWdlOiBcInDDoWdpbmEgZGUgdHJhZHXDp8O1ZXNcIlxuICAgIGRpcGxvbWF0X2kxOG5fcGFnZV9zdWZmaXg6IFwiLCBvdSBhIG5vc3NhIGludGVyZmFjZSBlIHdlYnNpdGUgbm8gR2l0SHViLlwiXG4gICAgZGlwbG9tYXRfam9pbl9wcmVmX2dpdGh1YjogXCJFbmNvbnRyYSBvIGZpY2hlaXJvICdsb2NhbGUnIGRvIHRldSBpZGlvbWEgXCJcbiAgICBkaXBsb21hdF9naXRodWJfdXJsOiBcIm5vIEdpdEh1YlwiXG4gICAgZGlwbG9tYXRfam9pbl9zdWZfZ2l0aHViOiBcIiwgZWRpdGEtbyBvbmxpbmUgZSBzdWJtZXRlIHVtICdwdWxsIHJlcXVlc3QnLiBBc3NpbmFsYSBhaW5kYSBhIGNhaXhhIGFiYWl4byBwYXJhIGZpY2FyZXMgYXR1YWxpemFkbyBlbSByZWxhw6fDo28gYSBub3ZvcyBkZXNlbnZvbHZpbWVudG9zIGRhIGludGVybmFjaW9uYWxpemHDp8OjbyFcIlxuICAgIGRpcGxvbWF0X3N1YnNjcmliZV9kZXNjOiBcIlJlY2ViZXIgZS1tYWlscyBzb2JyZSBkZXNlbnZvbHZpbWVudG9zIGRhIGkxOG4gZSBuw612ZWlzIHBhcmEgdHJhZHV6aXIuXCJcbiMgICAgYW1iYXNzYWRvcl9pbnRyb2R1Y3Rpb246IFwiVGhpcyBpcyBhIGNvbW11bml0eSB3ZSdyZSBidWlsZGluZywgYW5kIHlvdSBhcmUgdGhlIGNvbm5lY3Rpb25zLiBXZSd2ZSBnb3QgZm9ydW1zLCBlbWFpbHMsIGFuZCBzb2NpYWwgbmV0d29ya3Mgd2l0aCBsb3RzIG9mIHBlb3BsZSB0byB0YWxrIHdpdGggYW5kIGhlbHAgZ2V0IGFjcXVhaW50ZWQgd2l0aCB0aGUgZ2FtZSBhbmQgbGVhcm4gZnJvbS4gSWYgeW91IHdhbnQgdG8gaGVscCBwZW9wbGUgZ2V0IGludm9sdmVkIGFuZCBoYXZlIGZ1biwgYW5kIGdldCBhIGdvb2QgZmVlbCBvZiB0aGUgcHVsc2Ugb2YgQ29kZUNvbWJhdCBhbmQgd2hlcmUgd2UncmUgZ29pbmcsIHRoZW4gdGhpcyBjbGFzcyBtaWdodCBiZSBmb3IgeW91LlwiXG4jICAgIGFtYmFzc2Fkb3JfYXR0cmlidXRlXzE6IFwiQ29tbXVuaWNhdGlvbiBza2lsbHMuIEJlIGFibGUgdG8gaWRlbnRpZnkgdGhlIHByb2JsZW1zIHBsYXllcnMgYXJlIGhhdmluZyBhbmQgaGVscCB0aGVtIHNvbHZlIHRoZW0uIEFsc28sIGtlZXAgdGhlIHJlc3Qgb2YgdXMgaW5mb3JtZWQgYWJvdXQgd2hhdCBwbGF5ZXJzIGFyZSBzYXlpbmcsIHdoYXQgdGhleSBsaWtlIGFuZCBkb24ndCBsaWtlIGFuZCB3YW50IG1vcmUgb2YhXCJcbiMgICAgYW1iYXNzYWRvcl9qb2luX2Rlc2M6IFwidGVsbCB1cyBhIGxpdHRsZSBhYm91dCB5b3Vyc2VsZiwgd2hhdCB5b3UndmUgZG9uZSBhbmQgd2hhdCB5b3UnZCBiZSBpbnRlcmVzdGVkIGluIGRvaW5nLiBXZSdsbCBnbyBmcm9tIHRoZXJlIVwiXG4gICAgYW1iYXNzYWRvcl9qb2luX25vdGVfc3Ryb25nOiBcIk5vdGFcIlxuICAgIGFtYmFzc2Fkb3Jfam9pbl9ub3RlX2Rlc2M6IFwiVW1hIGRhcyBub3NzYXMgbWFpb3JlcyBwcmlvcmlkYWRlcyDDqSBjb25zdHJ1aXIgbsOtdmVpcyBtdWx0aWpvZ2Fkb3Igb25kZSBvcyBqb2dhZG9yZXMgY29tIGRpZmljdWxkYWRlIHBhcmEgcGFzc2FyIG7DrXZlaXMgcG9zc2FtIGludm9jYXIgZmVpdGljZWlyb3MgbWFpcyBleHBlcmllbnRlcyBwYXJhIG9zIGFqdWRhcmVtLiBFc3RhIHNlcsOhIHVtYSDDs3RpbWEgZm9ybWEgZGUgb3MgZW1iYWl4YWRvcmVzIGZhemVyZW0gbyBxdWUgc2FiZW0uIFZhbW9zIG1hbnRlci10ZSBhdHVhbGl6YWRvIVwiXG4gICAgYW1iYXNzYWRvcl9zdWJzY3JpYmVfZGVzYzogXCJSZWNlYmVyIGUtbWFpbHMgcmVsYXRpdm9zIGEgbm92aWRhZGVzIGRvIHN1cG9ydGUgZSBkZXNlbnZvbHZpbWVudG9zIGRvIG1vZG8gbXVsdGlqb2dhZG9yLlwiXG4gICAgdGVhY2hlcl9zdWJzY3JpYmVfZGVzYzogXCJSZWNlYmVyIGUtbWFpbHMgc29icmUgYXR1YWxpemHDp8O1ZXMgZSBhbsO6bmNpb3MgcGFyYSBwcm9mZXNzb3Jlcy5cIlxuICAgIGNoYW5nZXNfYXV0b19zYXZlOiBcIkFzIGFsdGVyYcOnw7VlcyBzw6NvIGd1YXJkYWRhcyBhdXRvbWF0aWNhbWVudGUgcXVhbmRvIGNsaWNhcyBuYXMgY2FpeGFzLlwiXG4gICAgZGlsaWdlbnRfc2NyaWJlczogXCJPcyBOb3Nzb3MgRGVkaWNhZG9zIEVzY3JpdsO1ZXM6XCJcbiAgICBwb3dlcmZ1bF9hcmNobWFnZXM6IFwiT3MgTm9zc29zIFBvZGVyb3NvcyBBcmNvbWFnb3M6XCJcbiAgICBjcmVhdGl2ZV9hcnRpc2FuczogXCJPcyBOb3Nzb3MgQ3JlYXRpdm9zIEFydGVzw6NvczpcIlxuICAgIGJyYXZlX2FkdmVudHVyZXJzOiBcIk9zIE5vc3NvcyBCcmF2b3MgQXZlbnR1cmVpcm9zOlwiXG4gICAgdHJhbnNsYXRpbmdfZGlwbG9tYXRzOiBcIk9zIE5vc3NvcyBUcmFkdXRvcmVzIERpcGxvbWF0YXM6XCJcbiAgICBoZWxwZnVsX2FtYmFzc2Fkb3JzOiBcIk9zIE5vc3NvcyBQcmVzdMOhdmVpcyBFbWJhaXhhZG9yZXM6XCJcblxuICBsYWRkZXI6XG4jICAgIHRpdGxlOiBcIk11bHRpcGxheWVyIEFyZW5hc1wiXG4jICAgIGFyZW5hX3RpdGxlOiBcIl9fYXJlbmFfXyB8IE11bHRpcGxheWVyIEFyZW5hc1wiXG4gICAgbXlfbWF0Y2hlczogXCJPcyBNZXVzIEpvZ29zXCJcbiAgICBzaW11bGF0ZTogXCJTaW11bGFyXCJcbiAgICBzaW11bGF0aW9uX2V4cGxhbmF0aW9uOiBcIkFvIHNpbXVsYXJlcyBqb2dvcyBwb2RlcyB0ZXIgbyB0ZXUgam9nbyBjbGFzc2lmaWNhZG8gbWFpcyByYXBpZGFtZW50ZSFcIlxuICAgIHNpbXVsYXRpb25fZXhwbGFuYXRpb25fbGVhZ3VlczogXCJQcmluY2lwYWxtZW50ZSwgdmFpcyBhanVkYXIgYSBzaW11bGFyIGpvZ29zIHBhcmEgam9nYWRvcmVzIGFsaWFkb3Mgbm9zIHRldXMgY2zDonMgZSBjdXJzb3MuXCJcbiAgICBzaW11bGF0ZV9nYW1lczogXCJTaW11bGFyIEpvZ29zIVwiXG4gICAgZ2FtZXNfc2ltdWxhdGVkX2J5OiBcIkpvZ29zIHNpbXVsYWRvcyBwb3IgdGk6XCJcbiAgICBnYW1lc19zaW11bGF0ZWRfZm9yOiBcIkpvZ29zIHNpbXVsYWRvcyBwYXJhIHRpOlwiXG4gICAgZ2FtZXNfaW5fcXVldWU6IFwiSm9nb3MgbmEgZmlsYSBkZSBlc3BlcmEgYXR1YWxtZW50ZTpcIlxuICAgIGdhbWVzX3NpbXVsYXRlZDogXCJKb2dvcyBzaW11bGFkb3NcIlxuICAgIGdhbWVzX3BsYXllZDogXCJKb2dvcyBqb2dhZG9zXCJcbiAgICByYXRpbzogXCJSw6FjaW9cIlxuICAgIGxlYWRlcmJvYXJkOiBcIlRhYmVsYSBkZSBDbGFzc2lmaWNhw6fDo29cIlxuICAgIGJhdHRsZV9hczogXCJMdXRhciBjb21vIFwiXG4gICAgc3VtbWFyeV95b3VyOiBcIkFzIFR1YXMgXCJcbiAgICBzdW1tYXJ5X21hdGNoZXM6IFwiUGFydGlkYXMgLSBcIlxuICAgIHN1bW1hcnlfd2luczogXCIgVml0w7NyaWFzLCBcIlxuICAgIHN1bW1hcnlfbG9zc2VzOiBcIiBEZXJyb3Rhc1wiXG4gICAgcmFua19ub19jb2RlOiBcIlNlbSBDw7NkaWdvIE5vdm8gcGFyYSBDbGFzc2lmaWNhclwiXG4gICAgcmFua19teV9nYW1lOiBcIkNsYXNzaWZpY2FyIG8gTWV1IEpvZ28hXCJcbiAgICByYW5rX3N1Ym1pdHRpbmc6IFwiQSBzdWJtZXRlci4uLlwiXG4gICAgcmFua19zdWJtaXR0ZWQ6IFwiU3VibWV0aWRvIHBhcmEgQ2xhc3NpZmljYcOnw6NvXCJcbiAgICByYW5rX2ZhaWxlZDogXCJBIENsYXNzaWZpY2HDp8OjbyBGYWxob3VcIlxuICAgIHJhbmtfYmVpbmdfcmFua2VkOiBcIkpvZ28gYSBzZXIgQ2xhc3NpZmljYWRvXCJcbiAgICByYW5rX2xhc3Rfc3VibWl0dGVkOiBcInN1Ym1ldGlkbyBcIlxuICAgIGhlbHBfc2ltdWxhdGU6IFwiQWp1ZGFyIGEgc2ltdWxhciBqb2dvcz9cIlxuICAgIGNvZGVfYmVpbmdfc2ltdWxhdGVkOiBcIk8gdGV1IG5vdm8gY8OzZGlnbyBlc3TDoSBhIHNlciBzaW11bGFkbyBwb3Igb3V0cm9zIGpvZ2Fkb3JlcywgcGFyYSBzZXIgY2xhc3NpZmljYWRvLiBJc3RvIHNlcsOhIGF0dWFsaXphZG8gcXVhbmRvIHN1cmdpcmVtIG5vdmFzIHBhcnRpZGFzLlwiXG4gICAgbm9fcmFua2VkX21hdGNoZXNfcHJlOiBcIlNlbSBqb2dvcyBjbGFzc2lmaWNhZG9zIHBlbGEgZXF1aXBhIFwiXG4gICAgbm9fcmFua2VkX21hdGNoZXNfcG9zdDogXCIhIEpvZ2EgY29udHJhIGFsZ3VucyBhZHZlcnPDoXJpb3MgZSB2b2x0YSBhcXVpIHBhcmEgdmVyZXMgbyB0ZXUgam9nbyBjbGFzc2lmaWNhZG8uXCJcbiAgICBjaG9vc2Vfb3Bwb25lbnQ6IFwiRXNjb2xoZSB1bSBBZHZlcnPDoXJpb1wiXG4gICAgc2VsZWN0X3lvdXJfbGFuZ3VhZ2U6IFwiU2VsZWNpb25hIGEgdHVhIGxpbmd1YWdlbSFcIlxuICAgIHR1dG9yaWFsX3BsYXk6IFwiSm9nYXIgVHV0b3JpYWxcIlxuICAgIHR1dG9yaWFsX3JlY29tbWVuZGVkOiBcIlJlY29tZW5kYWRvIHNlIG51bmNhIGpvZ2FzdGUgYW50ZXNcIlxuICAgIHR1dG9yaWFsX3NraXA6IFwiU2FsdGFyIFR1dG9yaWFsXCJcbiAgICB0dXRvcmlhbF9ub3Rfc3VyZTogXCJOw6NvIHRlbnMgYSBjZXJ0ZXphIGRvIHF1ZSBzZSBwYXNzYT9cIlxuICAgIHR1dG9yaWFsX3BsYXlfZmlyc3Q6IFwiSm9nYSBvIFR1dG9yaWFsIHByaW1laXJvLlwiXG4gICAgc2ltcGxlX2FpOiBcIkNQVSBTaW1wbGVzXCJcbiAgICB3YXJtdXA6IFwiQXF1ZWNpbWVudG9cIlxuICAgIGZyaWVuZHNfcGxheWluZzogXCJBbWlnb3MgYSBKb2dhclwiXG4gICAgbG9nX2luX2Zvcl9mcmllbmRzOiBcIkluaWNpYSBzZXNzw6NvIHBhcmEgam9nYXJlcyBjb20gb3MgdGV1cyBhbWlnb3MhXCJcbiAgICBzb2NpYWxfY29ubmVjdF9ibHVyYjogXCJDb25lY3RhLXRlIGUgam9nYSBjb250cmEgb3MgdGV1cyBhbWlnb3MhXCJcbiAgICBpbnZpdGVfZnJpZW5kc190b19iYXR0bGU6IFwiQ29udmlkYSBvcyB0ZXVzIGFtaWdvcyBwYXJhIHNlIGp1bnRhcmVtIGEgdGkgZW0gYmF0YWxoYSFcIlxuICAgIGZpZ2h0OiBcIkx1dGFyIVwiXG4gICAgd2F0Y2hfdmljdG9yeTogXCJWw6ogYSB0dWEgdml0w7NyaWFcIlxuICAgIGRlZmVhdF90aGU6IFwiRGVycm90YSBvXCJcbiAgICB3YXRjaF9iYXR0bGU6IFwiVmVyIGEgYmF0YWxoYVwiXG4gICAgdG91cm5hbWVudF9zdGFydGVkOiBcIiwgY29tZcOnb3VcIlxuICAgIHRvdXJuYW1lbnRfZW5kczogXCJPIFRvcm5laW8gYWNhYmFcIlxuICAgIHRvdXJuYW1lbnRfZW5kZWQ6IFwiTyBUb3JuZWlvIGFjYWJvdVwiXG4gICAgdG91cm5hbWVudF9ydWxlczogXCJSZWdyYXMgZG8gVG9ybmVpb1wiXG4gICAgdG91cm5hbWVudF9ibHVyYjogXCJFc2NyZXZlIGPDs2RpZ28sIHJlY29saGUgb3VybywgY29uc3Ryw7NpIGV4w6lyY2l0b3MsIGVzbWFnYSBpbmltaWdvcywgZ2FuaGEgcHLDqW1pb3MgZSBtZWxob3JhIGEgdHVhIGNhcnJlaXJhIG5vIG5vc3NvIHRvcm5laW8gJDQwLDAwMCBHcmVlZCEgQ29uZmVyZSBvcyBkZXRhbGhlc1wiXG4gICAgdG91cm5hbWVudF9ibHVyYl9jcmlzc19jcm9zczogXCJHYW5oYSBvZmVydGFzLCBjb25zdHLDs2kgY2FtaW5ob3MsIHN1cGVyYSBvcyBhZHZlcnPDoXJpb3MsIGFwYW5oYSBnZW1hcyBlIG1lbGhvcmUgYSB0dWEgY2FycmVpcmEgbm8gbm9zc28gdG9ybmVpbyBDcmlzcy1Dcm9zcyEgQ29uZmVyZSBvcyBkZXRhbGhlc1wiXG4gICAgdG91cm5hbWVudF9ibHVyYl96ZXJvX3N1bTogXCJMaWJlcnRhIGEgdHVhIGNyaWF0aXZpZGFkZSBkZSBwcm9ncmFtYcOnw6NvIHRhbnRvIG5hIHJlY29saGEgZGUgb3VybyBjb21vIGVtIHTDoXRpY2FzIGRlIGNvbWJhdGUgbmVzdGEgYmF0YWxoYS1lc3BlbGhhZGEgbmEgbW9udGFuaGEsIGVudHJlIG8gZmVpdGljZWlybyB2ZXJtZWxobyBlIG8gZmVpdGljZWlybyBhenVsLiBPIHRvcm5laW8gY29tZcOnb3UgbmEgU2V4dGEtZmVpcmEsIDI3IGRlIE1hcsOnbywgZSBkZWNvcnJlcsOhIGF0w6kgw6BzIDAwOjAwIGRlIFRlcsOnYS1mZWlyYSwgNyBkZSBBYnJpbC4gQ29tcGV0ZSBwb3IgZGl2ZXJzw6NvIGUgZ2zDs3JpYSEgQ29uZmVyZSBvcyBkZXRhbGhlc1wiXG4gICAgdG91cm5hbWVudF9ibHVyYl9hY2Vfb2ZfY29kZXJzOiBcIkx1dGEgbm8gZ2xhY2lhciBjb25nZWxhZG8gbmVzdGEgcGFydGlkYSBlc3BlbGhhZGEgZG8gZXN0aWxvIGRvbcOtbmlvISBPIHRvcm5laW8gY29tZcOnb3UgUXVhcnRhLWZlaXJhLCAxNiBkZSBTZXRlbWJybywgZSBkZWNvcnJlcsOhIGF0w6kgUXVhcnRhLWZlaXJhLCAxNCBkZSBPdXR1YnJvIMOgcyAyMzowMC4gQ29uZmVyZSBvcyBkZXRhbGhlc1wiXG4gICAgdG91cm5hbWVudF9ibHVyYl9ibG9nOiBcIm5vIG5vc3NvIGJsb2dcIlxuICAgIHJ1bGVzOiBcIlJlZ3Jhc1wiXG4gICAgd2lubmVyczogXCJWZW5jZWRvcmVzXCJcbiAgICBsZWFndWU6IFwiTGlnYVwiXG4gICAgcmVkX2FpOiBcIkNQVSBWZXJtZWxob1wiICMgXCJSZWQgQUkgV2luc1wiLCBhdCBlbmQgb2YgbXVsdGlwbGF5ZXIgbWF0Y2ggcGxheWJhY2tcbiAgICBibHVlX2FpOiBcIkNQVSBBenVsXCJcbiAgICB3aW5zOiBcIlZlbmNlXCIgIyBBdCBlbmQgb2YgbXVsdGlwbGF5ZXIgbWF0Y2ggcGxheWJhY2tcbiAgICBodW1hbnM6IFwiVmVybWVsaG9cIiAjIExhZGRlciBwYWdlIGRpc3BsYXkgdGVhbSBuYW1lXG4gICAgb2dyZXM6IFwiQXp1bFwiXG4jICAgIGxpdmVfdG91cm5hbWVudDogXCJMaXZlIFRvdXJuYW1lbnRcIlxuIyAgICBhd2FpdGluZ190b3VybmFtZW50X3RpdGxlOiBcIlRvdXJuYW1lbnQgSW5hY3RpdmVcIlxuIyAgICBhd2FpdGluZ190b3VybmFtZW50X2JsdXJiOiBcIlRoZSB0b3VybmFtZW50IGFyZW5hIGlzIG5vdCBjdXJyZW50bHkgYWN0aXZlLlwiXG5cbiAgdXNlcjpcbiMgICAgdXNlcl90aXRsZTogXCJfX25hbWVfXyAtIExlYXJuIHRvIENvZGUgd2l0aCBDb2RlQ29tYmF0XCJcbiAgICBzdGF0czogXCJFc3RhdMOtc3RpY2FzXCJcbiAgICBzaW5nbGVwbGF5ZXJfdGl0bGU6IFwiTsOtdmVpcyBVbSBKb2dhZG9yXCJcbiAgICBtdWx0aXBsYXllcl90aXRsZTogXCJOw612ZWlzIE11bHRpam9nYWRvclwiXG4gICAgYWNoaWV2ZW1lbnRzX3RpdGxlOiBcIkNvbnF1aXN0YXNcIlxuICAgIGxhc3RfcGxheWVkOiBcIsOabHRpbWEgVmV6IEpvZ2Fkb1wiXG4gICAgc3RhdHVzOiBcIkVzdGFkb1wiXG4gICAgc3RhdHVzX2NvbXBsZXRlZDogXCJDb21wbGV0b1wiXG4gICAgc3RhdHVzX3VuZmluaXNoZWQ6IFwiSW5hY2FiYWRvXCJcbiAgICBub19zaW5nbGVwbGF5ZXI6IFwiU2VtIGpvZ29zIFVtIEpvZ2Fkb3Igam9nYWRvcy5cIlxuICAgIG5vX211bHRpcGxheWVyOiBcIlNlbSBqb2dvcyBNdWx0aWpvZ2Fkb3Igam9nYWRvcy5cIlxuICAgIG5vX2FjaGlldmVtZW50czogXCJTZW0gQ29ucXVpc3RhcyBnYW5oYXMuXCJcbiAgICBmYXZvcml0ZV9wcmVmaXg6IFwiQSBsaW5ndWFnZW0gZmF2b3JpdGEgw6kgXCJcbiAgICBmYXZvcml0ZV9wb3N0Zml4OiBcIi5cIlxuICAgIG5vdF9tZW1iZXJfb2ZfY2xhbnM6IFwiQWluZGEgbsOjbyDDqSBtZW1icm8gZGUgbmVuaHVtIGNsw6MuXCJcbiMgICAgY2VydGlmaWNhdGVfdmlldzogXCJ2aWV3IGNlcnRpZmljYXRlXCJcbiMgICAgY2VydGlmaWNhdGVfY2xpY2tfdG9fdmlldzogXCJjbGljayB0byB2aWV3IGNlcnRpZmljYXRlXCJcbiMgICAgY2VydGlmaWNhdGVfY291cnNlX2luY29tcGxldGU6IFwiY291cnNlIGluY29tcGxldGVcIlxuIyAgICBjZXJ0aWZpY2F0ZV9vZl9jb21wbGV0aW9uOiBcIkNlcnRpZmljYXRlIG9mIENvbXBsZXRpb25cIlxuIyAgICBjZXJ0aWZpY2F0ZV9lbmRvcnNlZF9ieTogXCJFbmRvcnNlZCBieVwiXG4jICAgIGNlcnRpZmljYXRlX3N0YXRzOiBcIkNvdXJzZSBTdGF0c1wiXG4jICAgIGNlcnRpZmljYXRlX2xpbmVzX29mOiBcImxpbmVzIG9mXCJcbiMgICAgY2VydGlmaWNhdGVfbGV2ZWxzX2NvbXBsZXRlZDogXCJsZXZlbHMgY29tcGxldGVkXCJcbiMgICAgY2VydGlmaWNhdGVfZm9yOiBcIkZvclwiXG4jICAgIGNlcnRpZmljYXRlX251bWJlcjogXCJOby5cIlxuXG4gIGFjaGlldmVtZW50czpcbiAgICBsYXN0X2Vhcm5lZDogXCLDmmx0aW1vIEdhbmhvXCJcbiAgICBhbW91bnRfYWNoaWV2ZWQ6IFwiUXVhbnRpZGFkZVwiXG4gICAgYWNoaWV2ZW1lbnQ6IFwiQ29ucXVpc3RhXCJcbiAgICBjdXJyZW50X3hwX3ByZWZpeDogXCJcIlxuICAgIGN1cnJlbnRfeHBfcG9zdGZpeDogXCIgbm8gdG90YWxcIlxuICAgIG5ld194cF9wcmVmaXg6IFwiXCJcbiAgICBuZXdfeHBfcG9zdGZpeDogXCIgZ2FuaG9cIlxuICAgIGxlZnRfeHBfcHJlZml4OiBcIlwiXG4gICAgbGVmdF94cF9pbmZpeDogXCIgYXTDqSBhbyBuw612ZWwgXCJcbiAgICBsZWZ0X3hwX3Bvc3RmaXg6IFwiXCJcblxuICBhY2NvdW50OlxuIyAgICB0aXRsZTogXCJBY2NvdW50XCJcbiMgICAgc2V0dGluZ3NfdGl0bGU6IFwiQWNjb3VudCBTZXR0aW5nc1wiXG4jICAgIHVuc3Vic2NyaWJlX3RpdGxlOiBcIlVuc3Vic2NyaWJlXCJcbiMgICAgcGF5bWVudHNfdGl0bGU6IFwiUGF5bWVudHNcIlxuIyAgICBzdWJzY3JpcHRpb25fdGl0bGU6IFwiU3Vic2NyaXB0aW9uXCJcbiMgICAgaW52b2ljZXNfdGl0bGU6IFwiSW52b2ljZXNcIlxuIyAgICBwcmVwYWlkc190aXRsZTogXCJQcmVwYWlkc1wiXG4gICAgcGF5bWVudHM6IFwiUGFnYW1lbnRvc1wiXG4gICAgcHJlcGFpZF9jb2RlczogXCJDw7NkaWdvcyBQcsOpLXBhZ29zXCJcbiAgICBwdXJjaGFzZWQ6IFwiQWRxdWlyaWRvXCJcbiMgICAgc3Vic2NyaWJlX2Zvcl9nZW1zOiBcIlN1YnNjcmliZSBmb3IgZ2Vtc1wiXG4gICAgc3Vic2NyaXB0aW9uOiBcIlN1YnNjcmnDp8Ojb1wiXG4gICAgaW52b2ljZXM6IFwiRG9uYXRpdm9zXCJcbiAgICBzZXJ2aWNlX2FwcGxlOiBcIkFwcGxlXCJcbiAgICBzZXJ2aWNlX3dlYjogXCJXZWJcIlxuICAgIHBhaWRfb246IFwiUGFnbyBFbVwiXG4gICAgc2VydmljZTogXCJTZXJ2acOnb1wiXG4gICAgcHJpY2U6IFwiUHJlw6dvXCJcbiAgICBnZW1zOiBcIkdlbWFzXCJcbiAgICBhY3RpdmU6IFwiQWN0aXZhXCJcbiAgICBzdWJzY3JpYmVkOiBcIlN1YnNjcml0byhhKVwiXG4gICAgdW5zdWJzY3JpYmVkOiBcIk7Do28gU3Vic2NyaXRvKGEpXCJcbiAgICBhY3RpdmVfdW50aWw6IFwiQXRpdmEgQXTDqVwiXG4gICAgY29zdDogXCJDdXN0b1wiXG4gICAgbmV4dF9wYXltZW50OiBcIlByw7N4aW1vIFBhZ2FtZW50b1wiXG4gICAgY2FyZDogXCJDYXJ0w6NvXCJcbiAgICBzdGF0dXNfdW5zdWJzY3JpYmVkX2FjdGl2ZTogXCJOw6NvIGVzdMOhcyBzdWJzY3JpdG8gZSBuw6NvIHRlIHZhbW9zIGNvYnJhciwgbWFzIGEgdHVhIGNvbnRhIGFpbmRhIGVzdMOhIGF0aXZhLCBwb3IgYWdvcmEuXCJcbiAgICBzdGF0dXNfdW5zdWJzY3JpYmVkOiBcIkdhbmhhIGFjZXNzbyBhIG5vdm9zIG7DrXZlaXMsIGhlcsOzaXMsIGl0ZW5zIGUgZ2VtYXMgZGUgYsOzbnVzIGNvbSB1bWEgc3Vic2NyacOnw6NvIGRvIENvZGVDb21iYXQhXCJcbiAgICBub3RfeWV0X3ZlcmlmaWVkOiBcIkFpbmRhIG7Do28gZm9pIHZlcmlmaWNhZG8uXCJcbiAgICByZXNlbmRfZW1haWw6IFwiUmVlbnZpYXIgZS1tYWlsXCJcbiAgICBlbWFpbF9zZW50OiBcIkUtbWFpbCBlbnZpYWRvISBWZXJpZmljYSBhIHR1YSBjYWl4YSBkZSBlbnRyYWRhLlwiXG4gICAgdmVyaWZ5aW5nX2VtYWlsOiBcIkEgdmVyaWZpY2FyIG8gdGV1IGVuZGVyZcOnbyBkZSBlLW1haWwuLi5cIlxuICAgIHN1Y2Nlc3NmdWxseV92ZXJpZmllZDogXCJWZXJpZmljYXN0ZSBvIHRldSBlbmRlcmXDp28gZGUgZS1tYWlsIGNvbSBzdWNlc3NvIVwiXG4gICAgdmVyaWZ5X2Vycm9yOiBcIkFsZ28gY29ycmV1IG1hbCBhcXVhbmRvIGRhIHZlcmlmaWNhw6fDo28gZG8gdGV1IGUtbWFpbCA6KFwiXG4jICAgIHVuc3Vic2NyaWJlX2Zyb21fbWFya2V0aW5nOiBcIlVuc3Vic2NyaWJlIF9fZW1haWxfXyBmcm9tIGFsbCBDb2RlQ29tYmF0IG1hcmtldGluZyBlbWFpbHM/XCJcbiMgICAgdW5zdWJzY3JpYmVfYnV0dG9uOiBcIlllcywgdW5zdWJzY3JpYmVcIlxuIyAgICB1bnN1YnNjcmliZV9mYWlsZWQ6IFwiRmFpbGVkXCJcbiMgICAgdW5zdWJzY3JpYmVfc3VjY2VzczogXCJTdWNjZXNzXCJcblxuICBhY2NvdW50X2ludm9pY2VzOlxuICAgIGFtb3VudDogXCJRdWFudGlkYWRlIGVtIGTDs2xhcmVzIGFtZXJpY2Fub3NcIlxuICAgIGRlY2xpbmVkOiBcIk8gdGV1IGNhcnTDo28gZm9pIHJlY3VzYWRvXCJcbiAgICBpbnZhbGlkX2Ftb3VudDogXCJQb3IgZmF2b3IgaW50cm9kdXogdW1hIHF1YW50aWRhZGUgZGUgZMOzbGFyZXMgYW1lcmljYW5vcy5cIlxuICAgIG5vdF9sb2dnZWRfaW46IFwiSW5pY2lhIHNlc3PDo28gb3UgY3JpYSB1bWEgY29udGEgcGFyYSBhY2VkZXJlcyBhb3MgZG9uYXRpdm9zLlwiXG4gICAgcGF5OiBcIlBhZ2FyIERvbmF0aXZvXCJcbiAgICBwdXJjaGFzaW5nOiBcIkEgYWRxdWlyaXIuLi5cIlxuICAgIHJldHJ5aW5nOiBcIkVycm8gZG8gc2Vydmlkb3IsIGEgdGVudGFyIG5vdmFtZW50ZS5cIlxuICAgIHN1Y2Nlc3M6IFwiUGFnbyBjb20gc3VjZXNzby4gT2JyaWdhZG8hXCJcblxuICBhY2NvdW50X3ByZXBhaWQ6XG4gICAgcHVyY2hhc2VfY29kZTogXCJDb21wcmFyIHVtIEPDs2RpZ28gZGUgU3Vic2NyacOnw6NvXCJcbiMgICAgcHVyY2hhc2VfY29kZTE6IFwiU3Vic2NyaXB0aW9uIENvZGVzIGNhbiBiZSByZWRlZW1lZCB0byBhZGQgcHJlbWl1bSBzdWJzY3JpcHRpb24gdGltZSB0byBvbmUgb3IgbW9yZSBhY2NvdW50cyBmb3IgdGhlIEhvbWUgdmVyc2lvbiBvZiBDb2RlQ29tYmF0LlwiXG4jICAgIHB1cmNoYXNlX2NvZGUyOiBcIkVhY2ggQ29kZUNvbWJhdCBhY2NvdW50IGNhbiBvbmx5IHJlZGVlbSBhIHBhcnRpY3VsYXIgU3Vic2NyaXB0aW9uIENvZGUgb25jZS5cIlxuIyAgICBwdXJjaGFzZV9jb2RlMzogXCJTdWJzY3JpcHRpb24gQ29kZSBtb250aHMgd2lsbCBiZSBhZGRlZCB0byB0aGUgZW5kIG9mIGFueSBleGlzdGluZyBzdWJzY3JpcHRpb24gb24gdGhlIGFjY291bnQuXCJcbiMgICAgcHVyY2hhc2VfY29kZTQ6IFwiU3Vic2NyaXB0aW9uIENvZGVzIGFyZSBmb3IgYWNjb3VudHMgcGxheWluZyB0aGUgSG9tZSB2ZXJzaW9uIG9mIENvZGVDb21iYXQsIHRoZXkgY2Fubm90IGJlIHVzZWQgaW4gcGxhY2Ugb2YgU3R1ZGVudCBMaWNlbnNlcyBmb3IgdGhlIENsYXNzcm9vbSB2ZXJzaW9uLlwiXG4jICAgIHB1cmNoYXNlX2NvZGU1OiBcIkZvciBtb3JlIGluZm9ybWF0aW9uIG9uIFN0dWRlbnQgTGljZW5zZXMsIHJlYWNoIG91dCB0b1wiXG4gICAgdXNlcnM6IFwiVXRpbGl6YWRvcmVzXCJcbiAgICBtb250aHM6IFwiTWVzZXNcIlxuICAgIHB1cmNoYXNlX3RvdGFsOiBcIlRvdGFsXCJcbiAgICBwdXJjaGFzZV9idXR0b246IFwiU3VibWV0ZXIgQ29tcHJhXCJcbiAgICB5b3VyX2NvZGVzOiBcIk9zIFRldXMgQ8OzZGlnb3NcIlxuICAgIHJlZGVlbV9jb2RlczogXCJSZXNnYXRhIHVtIEPDs2RpZ28gZGUgU3Vic2NyacOnw6NvXCJcbiAgICBwcmVwYWlkX2NvZGU6IFwiQ8OzZGlnbyBQcsOpLXBhZ29cIlxuICAgIGxvb2t1cF9jb2RlOiBcIlByb2N1cmFyIGPDs2RpZ28gcHLDqS1wYWdvXCJcbiAgICBhcHBseV9hY2NvdW50OiBcIkFwbGljYXIgw6AgdHVhIGNvbnRhXCJcbiAgICBjb3B5X2xpbms6IFwiUG9kZXMgY29waWFyIGEgbGlnYcOnw6NvIGRvIGPDs2RpZ28gZSBlbnZpw6EtbGEgYSBhbGd1w6ltLlwiXG4gICAgcXVhbnRpdHk6IFwiUXVhbnRpZGFkZVwiXG4gICAgcmVkZWVtZWQ6IFwiUmVzZ2F0YWRvXCJcbiAgICBub19jb2RlczogXCJOZW5odW0gY8OzZGlnbyBhaW5kYSFcIlxuICAgIHlvdV9jYW4xOiBcIlBvZGVzXCJcbiAgICB5b3VfY2FuMjogXCJhZHF1aXJpciB1bSBjw7NkaWdvIHByw6ktcGFnb1wiXG4gICAgeW91X2NhbjM6IFwicXVlIHBvZGUgc2VyIGFwbGljYWRvIMOgIHR1YSBjb250YSBvdSBkYWRvIGEgb3V0cm9zLlwiXG5cbiAgbG9hZGluZ19lcnJvcjpcbiAgICBjb3VsZF9ub3RfbG9hZDogXCJFcnJvIGEgY2FycmVnYXIgZG8gc2Vydmlkb3IuIEV4cGVyaW1lbnRhIGF0dWFsaXphciBhIHDDoWdpbmEuXCJcbiAgICBjb25uZWN0aW9uX2ZhaWx1cmU6IFwiQSBMaWdhw6fDo28gRmFsaG91XCJcbiAgICBjb25uZWN0aW9uX2ZhaWx1cmVfZGVzYzogXCJOw6NvIHBhcmVjZSBxdWUgZXN0ZWphcyBsaWdhZG8gw6AgaW50ZXJuZXQhIFZlcmlmaWNhIGEgdHVhIGxpZ2HDp8OjbyBkZSByZWRlIGUgZGVwb2lzIHJlY2FycmVnYSBlc3RhIHDDoWdpbmEuXCJcbiAgICBsb2dpbl9yZXF1aXJlZDogXCJTZXNzw6NvIEluaWNpYWRhIE9icmlnYXTDs3JpYVwiXG4gICAgbG9naW5fcmVxdWlyZWRfZGVzYzogXCJQcmVjaXNhcyBkZSB0ZXIgc2Vzc8OjbyBpbmljaWFkYSBwYXJhIGFjZWRlcmVzIGEgZXN0YSBww6FnaW5hLlwiXG4gICAgdW5hdXRob3JpemVkOiBcIlByZWNpc2FzIGRlIHRlciBzZXNzw6NvIGluaWNpYWRhLiBUZW5zIG9zIGNvb2tpZXMgZGVzYXRpdmFkb3M/XCJcbiAgICBmb3JiaWRkZW46IFwiUHJvaWJpZG9cIlxuICAgIGZvcmJpZGRlbl9kZXNjOiBcIk9oIG7Do28sIG7Do28gaMOhIG5hZGEgYXF1aSBxdWUgdGUgcG9zc2Ftb3MgbW9zdHJhciEgQ2VydGlmaWNhLXRlIGRlIHF1ZSB0ZW5zIHNlc3PDo28gaW5pY2lhZGEgbmEgY29udGEgY29ycmV0YSBvdSB2aXNpdGEgdW1hIGRhcyBsaWdhw6fDtWVzIGFiYWl4byBwYXJhIHZvbHRhcmVzIHBhcmEgYSBwcm9ncmFtYcOnw6NvIVwiXG4gICAgbm90X2ZvdW5kOiBcIk7Do28gRW5jb250cmFkb1wiXG4gICAgbm90X2ZvdW5kX2Rlc2M6IFwiSG0sIG7Do28gaMOhIG5hZGEgYXF1aS4gVmlzaXRhIHVtYSBkYXMgbGlnYcOnw7VlcyBzZWd1aW50ZXMgcGFyYSB2b2x0YXJlcyBwYXJhIGEgcHJvZ3JhbWHDp8OjbyFcIlxuICAgIG5vdF9hbGxvd2VkOiBcIk3DqXRvZG8gbsOjbyBwZXJtaXRpZG8uXCJcbiAgICB0aW1lb3V0OiBcIk8gU2Vydmlkb3IgRXhwaXJvdVwiXG4gICAgY29uZmxpY3Q6IFwiQ29uZmxpdG8gZGUgcmVjdXJzb3MuXCJcbiAgICBiYWRfaW5wdXQ6IFwiTcOhIGVudHJhZGEuXCJcbiAgICBzZXJ2ZXJfZXJyb3I6IFwiRXJybyBkbyBzZXJ2aWRvci5cIlxuICAgIHVua25vd246IFwiRXJybyBEZXNjb25oZWNpZG9cIlxuICAgIGVycm9yOiBcIkVSUk9cIlxuICAgIGdlbmVyYWxfZGVzYzogXCJBbGdvIGNvcnJldSBtYWwsIGUsIHByb3ZhdmVsbWVudGUsIGEgY3VscGEgw6kgbm9zc2EuIFRlbnRhIGVzcGVyYXIgdW0gcG91Y28gZSBkZXBvaXMgcmVjYXJyZWdhciBhIHDDoWdpbmEsIG91IHZpc2l0YSB1bWEgZGFzIGxpZ2HDp8O1ZXMgc2VndWludGVzIHBhcmEgdm9sdGFyZXMgcGFyYSBhIHByb2dyYW1hw6fDo28hXCJcblxuICByZXNvdXJjZXM6XG4gICAgbGV2ZWw6IFwiTsOtdmVsXCJcbiAgICBwYXRjaDogXCJBdHVhbGl6YcOnw6NvXCJcbiAgICBwYXRjaGVzOiBcIkF0dWFsaXphw6fDtWVzXCJcbiAgICBzeXN0ZW06IFwiU2lzdGVtYVwiXG4gICAgc3lzdGVtczogXCJTaXN0ZW1hc1wiXG4gICAgY29tcG9uZW50OiBcIkNvbXBvbmVudGVcIlxuICAgIGNvbXBvbmVudHM6IFwiQ29tcG9uZW50ZXNcIlxuICAgIGhlcm86IFwiSGVyw7NpXCJcbiAgICBjYW1wYWlnbnM6IFwiQ2FtcGFuaGFzXCJcblxuICBjb25jZXB0czpcbiMgICAgYWR2YW5jZWRfY3NzX3J1bGVzOiBcIkFkdmFuY2VkIENTUyBSdWxlc1wiXG4jICAgIGFkdmFuY2VkX2Nzc19zZWxlY3RvcnM6IFwiQWR2YW5jZWQgQ1NTIFNlbGVjdG9yc1wiXG4jICAgIGFkdmFuY2VkX2h0bWxfYXR0cmlidXRlczogXCJBZHZhbmNlZCBIVE1MIEF0dHJpYnV0ZXNcIlxuIyAgICBhZHZhbmNlZF9odG1sX3RhZ3M6IFwiQWR2YW5jZWQgSFRNTCBUYWdzXCJcbiMgICAgYWxnb3JpdGhtX2F2ZXJhZ2U6IFwiQWxnb3JpdGhtIEF2ZXJhZ2VcIlxuIyAgICBhbGdvcml0aG1fZmluZF9taW5tYXg6IFwiQWxnb3JpdGhtIEZpbmQgTWluL01heFwiXG4jICAgIGFsZ29yaXRobV9zZWFyY2hfYmluYXJ5OiBcIkFsZ29yaXRobSBTZWFyY2ggQmluYXJ5XCJcbiMgICAgYWxnb3JpdGhtX3NlYXJjaF9ncmFwaDogXCJBbGdvcml0aG0gU2VhcmNoIEdyYXBoXCJcbiMgICAgYWxnb3JpdGhtX3NvcnQ6IFwiQWxnb3JpdGhtIFNvcnRcIlxuIyAgICBhbGdvcml0aG1fc3VtOiBcIkFsZ29yaXRobSBTdW1cIlxuICAgIGFyZ3VtZW50czogXCJBcmd1bWVudG9zXCJcbiAgICBhcml0aG1ldGljOiBcIkFyaXRtw6l0aWNhXCJcbiMgICAgYXJyYXlfMmQ6IFwiMkQgQXJyYXlcIlxuIyAgICBhcnJheV9pbmRleDogXCJBcnJheSBJbmRleGluZ1wiXG4jICAgIGFycmF5X2l0ZXJhdGluZzogXCJJdGVyYXRpbmcgT3ZlciBBcnJheXNcIlxuIyAgICBhcnJheV9saXRlcmFsczogXCJBcnJheSBMaXRlcmFsc1wiXG4jICAgIGFycmF5X3NlYXJjaGluZzogXCJBcnJheSBTZWFyY2hpbmdcIlxuIyAgICBhcnJheV9zb3J0aW5nOiBcIkFycmF5IFNvcnRpbmdcIlxuICAgIGFycmF5czogXCInQXJyYXlzJ1wiXG4jICAgIGJhc2ljX2Nzc19ydWxlczogXCJCYXNpYyBDU1MgcnVsZXNcIlxuIyAgICBiYXNpY19jc3Nfc2VsZWN0b3JzOiBcIkJhc2ljIENTUyBzZWxlY3RvcnNcIlxuIyAgICBiYXNpY19odG1sX2F0dHJpYnV0ZXM6IFwiQmFzaWMgSFRNTCBBdHRyaWJ1dGVzXCJcbiMgICAgYmFzaWNfaHRtbF90YWdzOiBcIkJhc2ljIEhUTUwgVGFnc1wiXG4gICAgYmFzaWNfc3ludGF4OiBcIlNpbnRheGUgQsOhc2ljYVwiXG4gICAgYmluYXJ5OiBcIkJpbsOhcmlvXCJcbiMgICAgYm9vbGVhbl9hbmQ6IFwiQm9vbGVhbiBBbmRcIlxuIyAgICBib29sZWFuX2luZXF1YWxpdHk6IFwiQm9vbGVhbiBJbmVxdWFsaXR5XCJcbiMgICAgYm9vbGVhbl9lcXVhbGl0eTogXCJCb29sZWFuIEVxdWFsaXR5XCJcbiMgICAgYm9vbGVhbl9ncmVhdGVyX2xlc3M6IFwiQm9vbGVhbiBHcmVhdGVyL0xlc3NcIlxuIyAgICBib29sZWFuX2xvZ2ljX3Nob3J0Y2lyY3VpdDogXCJCb29sZWFuIExvZ2ljIFNob3J0Y2lyY3VpdGluZ1wiXG4jICAgIGJvb2xlYW5fbm90OiBcIkJvb2xlYW4gTm90XCJcbiMgICAgYm9vbGVhbl9vcGVyYXRvcl9wcmVjZWRlbmNlOiBcIkJvb2xlYW4gT3BlcmF0b3IgUHJlY2VkZW5jZVwiXG4jICAgIGJvb2xlYW5fb3I6IFwiQm9vbGVhbiBPclwiXG4jICAgIGJvb2xlYW5fd2l0aF94eWNvb3JkaW5hdGVzOiBcIkNvb3JkaW5hdGUgQ29tcGFyaXNvblwiXG4jICAgIGJvb3RzdHJhcDogXCJCb290c3RyYXBcIlxuICAgIGJyZWFrX3N0YXRlbWVudHM6IFwiRGVjbGFyYcOnw7VlcyAnQnJlYWsnXCJcbiAgICBjbGFzc2VzOiBcIkNsYXNzZXNcIlxuICAgIGNvbnRpbnVlX3N0YXRlbWVudHM6IFwiRGVjbGFyYcOnw7VlcyAnQ29udGludWUnXCJcbiMgICAgZG9tX2V2ZW50czogXCJET00gRXZlbnRzXCJcbiMgICAgZHluYW1pY19zdHlsaW5nOiBcIkR5bmFtaWMgU3R5bGluZ1wiXG4gICAgZXZlbnRzOiBcIkV2ZW50b3NcIlxuIyAgICBldmVudF9jb25jdXJyZW5jeTogXCJFdmVudCBDb25jdXJyZW5jeVwiXG4jICAgIGV2ZW50X2RhdGE6IFwiRXZlbnQgRGF0YVwiXG4jICAgIGV2ZW50X2hhbmRsZXJzOiBcIkV2ZW50IEhhbmRsZXJzXCJcbiMgICAgZXZlbnRfc3Bhd246IFwiU3Bhd24gRXZlbnRcIlxuICAgIGZvcl9sb29wczogXCInRm9yIExvb3BzJ1wiXG4jICAgIGZvcl9sb29wc19uZXN0ZWQ6IFwiTmVzdGVkIEZvciBMb29wc1wiXG4jICAgIGZvcl9sb29wc19yYW5nZTogXCJGb3IgTG9vcHMgUmFuZ2VcIlxuICAgIGZ1bmN0aW9uczogXCJGdW7Dp8O1ZXNcIlxuICAgIGZ1bmN0aW9uc19wYXJhbWV0ZXJzOiBcIlBhcsOibWV0cm9zXCJcbiAgICBmdW5jdGlvbnNfbXVsdGlwbGVfcGFyYW1ldGVyczogXCJNdWx0aXBsb3MgUGFyw6JtZXRyb3NcIlxuIyAgICBnYW1lX2FpOiBcIkdhbWUgQUlcIlxuIyAgICBnYW1lX2dvYWxzOiBcIkdhbWUgR29hbHNcIlxuIyAgICBnYW1lX3NwYXduOiBcIkdhbWUgU3Bhd25cIlxuICAgIGdyYXBoaWNzOiBcIkdyw6FmaWNvc1wiXG4jICAgIGdyYXBoczogXCJHcmFwaHNcIlxuIyAgICBoZWFwczogXCJIZWFwc1wiXG4jICAgIGlmX2NvbmRpdGlvbjogXCJDb25kaXRpb25hbCBJZiBTdGF0ZW1lbnRzXCJcbiMgICAgaWZfZWxzZV9pZjogXCJJZi9FbHNlIElmIFN0YXRlbWVudHNcIlxuIyAgICBpZl9lbHNlX3N0YXRlbWVudHM6IFwiSWYvRWxzZSBTdGF0ZW1lbnRzXCJcbiAgICBpZl9zdGF0ZW1lbnRzOiBcIkRlY2xhcmHDp8O1ZXMgJ0lmJ1wiXG4jICAgIGlmX3N0YXRlbWVudHNfbmVzdGVkOiBcIk5lc3RlZCBJZiBTdGF0ZW1lbnRzXCJcbiMgICAgaW5kZXhpbmc6IFwiQXJyYXkgSW5kZXhlc1wiXG4jICAgIGlucHV0X2hhbmRsaW5nX2ZsYWdzOiBcIklucHV0IEhhbmRsaW5nIC0gRmxhZ3NcIlxuIyAgICBpbnB1dF9oYW5kbGluZ19rZXlib2FyZDogXCJJbnB1dCBIYW5kbGluZyAtIEtleWJvYXJkXCJcbiMgICAgaW5wdXRfaGFuZGxpbmdfbW91c2U6IFwiSW5wdXQgSGFuZGxpbmcgLSBNb3VzZVwiXG4jICAgIGludGVybWVkaWF0ZV9jc3NfcnVsZXM6IFwiSW50ZXJtZWRpYXRlIENTUyBSdWxlc1wiXG4jICAgIGludGVybWVkaWF0ZV9jc3Nfc2VsZWN0b3JzOiBcIkludGVybWVkaWF0ZSBDU1MgU2VsZWN0b3JzXCJcbiMgICAgaW50ZXJtZWRpYXRlX2h0bWxfYXR0cmlidXRlczogXCJJbnRlcm1lZGlhdGUgSFRNTCBBdHRyaWJ1dGVzXCJcbiMgICAgaW50ZXJtZWRpYXRlX2h0bWxfdGFnczogXCJJbnRlcm1lZGlhdGUgSFRNTCBUYWdzXCJcbiAgICBqcXVlcnk6IFwialF1ZXJ5XCJcbiMgICAganF1ZXJ5X2FuaW1hdGlvbnM6IFwialF1ZXJ5IEFuaW1hdGlvbnNcIlxuIyAgICBqcXVlcnlfZmlsdGVyaW5nOiBcImpRdWVyeSBFbGVtZW50IEZpbHRlcmluZ1wiXG4jICAgIGpxdWVyeV9zZWxlY3RvcnM6IFwialF1ZXJ5IFNlbGVjdG9yc1wiXG4jICAgIGxlbmd0aDogXCJBcnJheSBMZW5ndGhcIlxuIyAgICBtYXRoX2Nvb3JkaW5hdGVzOiBcIkNvb3JkaW5hdGUgTWF0aFwiXG4gICAgbWF0aF9nZW9tZXRyeTogXCJHZW9tZXRyaWFcIlxuICAgIG1hdGhfb3BlcmF0aW9uczogXCJPcGVyYcOnw7VlcyBNYXRlbcOhdGljYXNcIlxuIyAgICBtYXRoX3Byb3BvcnRpb25zOiBcIlByb3BvcnRpb24gTWF0aFwiXG4gICAgbWF0aF90cmlnb25vbWV0cnk6IFwiVHJpZ29ub21ldHJpYVwiXG4gICAgb2JqZWN0X2xpdGVyYWxzOiBcIidPYmplY3QgTGl0ZXJhbHMnXCJcbiAgICBwYXJhbWV0ZXJzOiBcIlBhcsOibWV0cm9zXCJcbiAgICBwcm9ncmFtczogXCJQcm9ncmFtYXNcIlxuICAgIHByb3BlcnRpZXM6IFwiUHJvcHJpZWRhZGVzXCJcbiMgICAgcHJvcGVydHlfYWNjZXNzOiBcIkFjY2Vzc2luZyBQcm9wZXJ0aWVzXCJcbiMgICAgcHJvcGVydHlfYXNzaWdubWVudDogXCJBc3NpZ25pbmcgUHJvcGVydGllc1wiXG4jICAgIHByb3BlcnR5X2Nvb3JkaW5hdGU6IFwiQ29vcmRpbmF0ZSBQcm9wZXJ0eVwiXG4jICAgIHF1ZXVlczogXCJEYXRhIFN0cnVjdHVyZXMgLSBRdWV1ZXNcIlxuIyAgICByZWFkaW5nX2RvY3M6IFwiUmVhZGluZyB0aGUgRG9jc1wiXG4gICAgcmVjdXJzaW9uOiBcIlJlY3Vyc8Ojb1wiXG4jICAgIHJldHVybl9zdGF0ZW1lbnRzOiBcIlJldHVybiBTdGF0ZW1lbnRzXCJcbiMgICAgc3RhY2tzOiBcIkRhdGEgU3RydWN0dXJlcyAtIFN0YWNrc1wiXG4gICAgc3RyaW5nczogXCInU3RyaW5ncydcIlxuIyAgICBzdHJpbmdzX2NvbmNhdGVuYXRpb246IFwiU3RyaW5nIENvbmNhdGVuYXRpb25cIlxuIyAgICBzdHJpbmdzX3N1YnN0cmluZ3M6IFwiU3Vic3RyaW5nXCJcbiAgICB0cmVlczogXCJFc3RydXR1cmFzIGRlIERhZG9zIC0gw4Fydm9yZXNcIlxuICAgIHZhcmlhYmxlczogXCJWYXJpw6F2ZWlzXCJcbiAgICB2ZWN0b3JzOiBcIlZldG9yZXNcIlxuIyAgICB3aGlsZV9jb25kaXRpb25fbG9vcHM6IFwiV2hpbGUgTG9vcHMgd2l0aCBDb25kaXRpb25hbHNcIlxuIyAgICB3aGlsZV9sb29wc19zaW1wbGU6IFwiV2hpbGUgTG9vcHNcIlxuIyAgICB3aGlsZV9sb29wc19uZXN0ZWQ6IFwiTmVzdGVkIFdoaWxlIExvb3BzXCJcbiAgICB4eV9jb29yZGluYXRlczogXCJQYXJlcyBkZSBDb29yZGVuYWRhc1wiXG4gICAgYWR2YW5jZWRfc3RyaW5nczogXCInU3RyaW5ncycgQXZhbsOnYWRhc1wiICMgUmVzdCBvZiBjb25jZXB0cyBhcmUgZGVwcmVjYXRlZFxuICAgIGFsZ29yaXRobXM6IFwiQWxnb3JpdG1vc1wiXG4gICAgYm9vbGVhbl9sb2dpYzogXCJMw7NnaWNhIEJvb2xlYW5hXCJcbiAgICBiYXNpY19odG1sOiBcIkhUTUwgQsOhc2ljb1wiXG4gICAgYmFzaWNfY3NzOiBcIkNTUyBCw6FzaWNvXCJcbiMgICAgYmFzaWNfd2ViX3NjcmlwdGluZzogXCJCYXNpYyBXZWIgU2NyaXB0aW5nXCJcbiAgICBpbnRlcm1lZGlhdGVfaHRtbDogXCJIVE1MIEludGVybcOpZGlvXCJcbiAgICBpbnRlcm1lZGlhdGVfY3NzOiBcIkNTUyBJbnRlcm3DqWRpb1wiXG4jICAgIGludGVybWVkaWF0ZV93ZWJfc2NyaXB0aW5nOiBcIkludGVybWVkaWF0ZSBXZWIgU2NyaXB0aW5nXCJcbiAgICBhZHZhbmNlZF9odG1sOiBcIkhUTUwgQXZhbsOnYWRvXCJcbiAgICBhZHZhbmNlZF9jc3M6IFwiQ1NTIEF2YW7Dp2Fkb1wiXG4jICAgIGFkdmFuY2VkX3dlYl9zY3JpcHRpbmc6IFwiQWR2YW5jZWQgV2ViIFNjcmlwdGluZ1wiXG4gICAgaW5wdXRfaGFuZGxpbmc6IFwiTWFudXNlYW1lbnRvIGRlICdJbnB1dCdcIlxuICAgIHdoaWxlX2xvb3BzOiBcIidMb29wcyBXaGlsZSdcIlxuIyAgICBwbGFjZV9nYW1lX29iamVjdHM6IFwiUGxhY2UgZ2FtZSBvYmplY3RzXCJcbiAgICBjb25zdHJ1Y3RfbWF6ZXM6IFwiQ29uc3RydWlyIGxhYmlyaW50b3NcIlxuIyAgICBjcmVhdGVfcGxheWFibGVfZ2FtZTogXCJDcmVhdGUgYSBwbGF5YWJsZSwgc2hhcmFibGUgZ2FtZSBwcm9qZWN0XCJcbiMgICAgYWx0ZXJfZXhpc3Rpbmdfd2ViX3BhZ2VzOiBcIkFsdGVyIGV4aXN0aW5nIHdlYiBwYWdlc1wiXG4jICAgIGNyZWF0ZV9zaGFyYWJsZV93ZWJfcGFnZTogXCJDcmVhdGUgYSBzaGFyYWJsZSB3ZWIgcGFnZVwiXG4jICAgIGJhc2ljX2lucHV0X2hhbmRsaW5nOiBcIkJhc2ljIElucHV0IEhhbmRsaW5nXCJcbiMgICAgYmFzaWNfZ2FtZV9haTogXCJCYXNpYyBHYW1lIEFJXCJcbiAgICBiYXNpY19qYXZhc2NyaXB0OiBcIkphdmFTY3JpcHQgQsOhc2ljb1wiXG4jICAgIGJhc2ljX2V2ZW50X2hhbmRsaW5nOiBcIkJhc2ljIEV2ZW50IEhhbmRsaW5nXCJcbiMgICAgY3JlYXRlX3NoYXJhYmxlX2ludGVyYWN0aXZlX3dlYl9wYWdlOiBcIkNyZWF0ZSBhIHNoYXJhYmxlIGludGVyYWN0aXZlIHdlYiBwYWdlXCJcblxuICBhbm9ueW1vdXNfdGVhY2hlcjpcbiMgICAgbm90aWZ5X3RlYWNoZXI6IFwiTm90aWZ5IFRlYWNoZXJcIlxuIyAgICBjcmVhdGVfdGVhY2hlcl9hY2NvdW50OiBcIkNyZWF0ZSBmcmVlIHRlYWNoZXIgYWNjb3VudFwiXG4gICAgZW50ZXJfc3R1ZGVudF9uYW1lOiBcIk8gdGV1IG5vbWU6XCJcbiAgICBlbnRlcl90ZWFjaGVyX2VtYWlsOiBcIk8gZS1tYWlsIGRvIHRldSBwcm9mZXNzb3I6XCJcbiAgICB0ZWFjaGVyX2VtYWlsX3BsYWNlaG9sZGVyOiBcInRlYWNoZXIuZW1haWxAZXhhbXBsZS5jb21cIlxuICAgIHN0dWRlbnRfbmFtZV9wbGFjZWhvbGRlcjogXCJlc2NyZXZlIG8gdGV1IG5vbWUgYXF1aVwiXG4gICAgdGVhY2hlcnNfc2VjdGlvbjogXCJQcm9mZXNzb3JlczpcIlxuICAgIHN0dWRlbnRzX3NlY3Rpb246IFwiRXN0dWRhbnRlczpcIlxuIyAgICB0ZWFjaGVyX25vdGlmaWVkOiBcIldlJ3ZlIG5vdGlmaWVkIHlvdXIgdGVhY2hlciB0aGF0IHlvdSB3YW50IHRvIHBsYXkgbW9yZSBDb2RlQ29tYmF0IGluIHlvdXIgY2xhc3Nyb29tIVwiXG5cbiAgZGVsdGE6XG4gICAgYWRkZWQ6IFwiQWRpY2lvbmFkb1wiXG4gICAgbW9kaWZpZWQ6IFwiTW9kaWZpY2Fkb1wiXG4gICAgbm90X21vZGlmaWVkOiBcIk7Do28gTW9kaWZpY2Fkb1wiXG4gICAgZGVsZXRlZDogXCJFbGltaW5hZG9cIlxuICAgIG1vdmVkX2luZGV4OiBcIsONbmRpY2UgTW92aWRvXCJcbiAgICB0ZXh0X2RpZmY6IFwiRGlmZXJlbsOnYSBkZSBUZXh0b1wiXG4gICAgbWVyZ2VfY29uZmxpY3Rfd2l0aDogXCJGVU5ESVIgQ09ORkxJVE8gQ09NXCJcbiAgICBub19jaGFuZ2VzOiBcIlNlbSBBbHRlcmHDp8O1ZXNcIlxuXG4gIGxlZ2FsOlxuICAgIHBhZ2VfdGl0bGU6IFwiTGVnYWxcIlxuICAgIG9wZW5zb3VyY2VfaW50cm9kdWN0aW9uOiBcIk8gQ29kZUNvbWJhdCBmYXogcGFydGUgZGEgY29tdW5pZGFkZSBvcGVuIHNvdXJjZS5cIlxuICAgIG9wZW5zb3VyY2VfZGVzY3JpcHRpb25fcHJlZml4OiBcIkNvbmZlcmUgXCJcbiAgICBnaXRodWJfdXJsOiBcIm8gbm9zc28gR2l0SHViXCJcbiAgICBvcGVuc291cmNlX2Rlc2NyaXB0aW9uX2NlbnRlcjogXCJlIGFqdWRhIHNlIHF1aXNlcmVzISBPIENvZGVDb21iYXQgw6kgY29uc3RydcOtZG8gdGVuZG8gcG9yIGJhc2UgZGV6ZW5hcyBkZSBwcm9qZXRvcyBvcGVuIHNvdXJjZSwgb3MgcXVhaXMgbsOzcyBhbWFtb3MuIFbDqiBcIlxuICAgIGFyY2htYWdlX3dpa2lfdXJsOiBcImEgbm9zc2Egd2lraSBkb3MgQXJjb21hZ29zXCJcbiAgICBvcGVuc291cmNlX2Rlc2NyaXB0aW9uX3N1ZmZpeDogXCJwYXJhIHVtYSBsaXN0YSBkbyBzb2Z0d2FyZSBxdWUgZmF6IGNvbSBxdWUgZXN0ZSBqb2dvIHNlamEgcG9zc8OtdmVsLlwiXG4gICAgcHJhY3RpY2VzX3RpdGxlOiBcIk1lbGhvcmVzIFByw6F0aWNhcyBSZXNwZWl0b3Nhc1wiXG4gICAgcHJhY3RpY2VzX2Rlc2NyaXB0aW9uOiBcIkVzdGFzIHPDo28gYXMgbm9zc2FzIHByb21lc3NhcyBwYXJhIGNvbnRpZ28sIG8gam9nYWRvciwgY29tIHVtIHBvdWNvIG1lbm9zIGRlIHBvbGl0aXF1aWNlcy5cIlxuICAgIHByaXZhY3lfdGl0bGU6IFwiUHJpdmFjaWRhZGVcIlxuICAgIHByaXZhY3lfZGVzY3JpcHRpb246IFwiTsOzcyBuw6NvIHZhbW9zIHZlbmRlciBuZW5odW1hIGRhcyB0dWFzIGluZm9ybWHDp8O1ZXMgcGVzc29haXMuXCJcbiAgICBzZWN1cml0eV90aXRsZTogXCJTZWd1cmFuw6dhXCJcbiAgICBzZWN1cml0eV9kZXNjcmlwdGlvbjogXCJOw7NzIGx1dGFtb3MgcGFyYSBtYW50ZXIgYXMgdHVhcyBpbmZvcm1hw6fDtWVzIHBlc3NvYWlzIHNlZ3VyYXMuIFNlbmRvIHVtIHByb2pldG8gb3BlbiBzb3VyY2UsIG8gbm9zc28gc8OtdGlvIHRlbSBvIGPDs2RpZ28gZGlzcG9uw612ZWwsIHBlbG8gcXVlIHF1YWxxdWVyIHBlc3NvYSBwb2RlIHJldmVyIGUgbWVsaG9yYXIgb3Mgbm9zc29zIHNpc3RlbWFzIGRlIHNlZ3VyYW7Dp2EuXCJcbiAgICBlbWFpbF90aXRsZTogXCJFLW1haWxcIlxuICAgIGVtYWlsX2Rlc2NyaXB0aW9uX3ByZWZpeDogXCJOw7NzIG7Do28gdGUgaW51bmRhcmVtb3MgY29tIHNwYW0uIEF0cmF2w6lzIGRhc1wiXG4gICAgZW1haWxfc2V0dGluZ3NfdXJsOiBcInR1YXMgZGVmaW5pw6fDtWVzIGRlIGUtbWFpbFwiXG4gICAgZW1haWxfZGVzY3JpcHRpb25fc3VmZml4OiBcIm91IGF0cmF2w6lzIGRlIGxpZ2HDp8O1ZXMgcHJlc2VudGVzIG5vcyBlLW1haWxzIHF1ZSBlbnZpYW1vcywgcG9kZXMgbXVkYXIgYXMgdHVhcyBwcmVmZXLDqm5jaWFzIGUgcGFyYXIgYSB0dWEgc3Vic2NyacOnw6NvIGZhY2lsbWVudGUsIGVtIHF1YWxxdWVyIG1vbWVudG8uXCJcbiAgICBjb3N0X3RpdGxlOiBcIkN1c3RvXCJcbiAgICBjb3N0X2Rlc2NyaXB0aW9uOiBcIk8gQ29kZUNvbWJhdCDDqSBncmF0dWl0byBwYXJhIG9zIG7DrXZlaXMgZnVuZGFtZW50YWlzLCBjb20gdW1hIHN1YnNjcmnDp8OjbyBkZSAke3twcmljZX19IFVTRC9tw6pzIHBhcmEgYWNlZGVyZXMgYSByYW1vcyBkZSBuw612ZWlzIGV4dHJhIGUge3tnZW1zfX0gZ2VtYXMgZGUgYsOzbnVzIHBvciBtw6pzLiBQb2RlcyBjYW5jZWxhciBjb20gdW0gY2xpcXVlLCBlIG9mZXJlY2Vtb3MgdW1hIGdhcmFudGlhIGRlIDEwMCUgZGUgZGV2b2x1w6fDo28gZG8gZGluaGVpcm8uXCJcbiAgICBjb3B5cmlnaHRzX3RpdGxlOiBcIkRpcmVpdG9zIEF1dG9yYWlzIGUgTGljZW5zYXNcIlxuICAgIGNvbnRyaWJ1dG9yX3RpdGxlOiBcIkNvbnRyYXRvIGRlIExpY2Vuw6dhIGRvIENvbnRyaWJ1aW50ZSAoQ0xBKVwiXG4gICAgY29udHJpYnV0b3JfZGVzY3JpcHRpb25fcHJlZml4OiBcIlRvZGFzIGFzIGNvbnRyaWJ1acOnw7VlcywgdGFudG8gbm8gc8OtdGlvIGNvbW8gbm8gbm9zc28gcmVwb3NpdMOzcmlvIEdpdEh1YiwgZXN0w6NvIHN1amVpdGFzIGFvIG5vc3NvXCJcbiAgICBjbGFfdXJsOiBcIkNMQVwiXG4gICAgY29udHJpYnV0b3JfZGVzY3JpcHRpb25fc3VmZml4OiBcImNvbSBvIHF1YWwgZGV2ZXMgY29uY29yZGFyIGFudGVzIGRlIGNvbnRyaWJ1aXIuXCJcbiMgICAgY29kZV90aXRsZTogXCJDbGllbnQtU2lkZSBDb2RlIC0gTUlUXCJcbiMgICAgY2xpZW50X2NvZGVfZGVzY3JpcHRpb25fcHJlZml4OiBcIkFsbCBjbGllbnQtc2lkZSBjb2RlIGZvciBjb2RlY29tYmF0LmNvbSBpbiB0aGUgcHVibGljIEdpdEh1YiByZXBvc2l0b3J5IGFuZCBpbiB0aGUgY29kZWNvbWJhdC5jb20gZGF0YWJhc2UsIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZVwiXG4gICAgbWl0X2xpY2Vuc2VfdXJsOiBcIkxpY2Vuw6dhIGRvIE1JVFwiXG4gICAgY29kZV9kZXNjcmlwdGlvbl9zdWZmaXg6IFwiSXN0byBpbmNsdWkgdG9kbyBvIGPDs2RpZ28gZGVudHJvIGRvcyBTaXN0ZW1hcyBlIGRvcyBDb21wb25lbnRlcywgbyBxdWFsIMOpIGRpc3BvbmliaWxpemFkbyBwZWxvIENvZGVDb21iYXQgcGFyYSBhIGNyaWHDp8OjbyBkZSBuw612ZWlzLlwiXG4gICAgYXJ0X3RpdGxlOiBcIkFydGUvTcO6c2ljYSAtIENyZWF0aXZlIENvbW1vbnMgXCJcbiAgICBhcnRfZGVzY3JpcHRpb25fcHJlZml4OiBcIlRvZG9zIG9zIGNvbnRlw7pkb3MgY29tdW5zIGVzdMOjbyBkaXNwb27DrXZlaXMgw6AgbHV6IGRhXCJcbiAgICBjY19saWNlbnNlX3VybDogXCJMaWNlbsOnYSAnQ3JlYXRpdmUgQ29tbW9ucyBBdHRyaWJ1dGlvbiA0LjAgSW50ZXJuYXRpb25hbCdcIlxuICAgIGFydF9kZXNjcmlwdGlvbl9zdWZmaXg6IFwiQ29udGXDumRvIGNvbXVtIMOpLCBnZXJhbG1lbnRlLCBxdWFscXVlciBjb2lzYSBkaXNwb25pYmlsaXphZGEgcGVsbyBDb2RlQ29tYmF0IGNvbSBvIHByb3DDs3NpdG8gZGUgY3JpYXIgTsOtdmVpcy4gSXN0byBpbmNsdWk6XCJcbiAgICBhcnRfbXVzaWM6IFwiTcO6c2ljYVwiXG4gICAgYXJ0X3NvdW5kOiBcIlNvbVwiXG4gICAgYXJ0X2FydHdvcms6IFwiQXJ0ZVwiXG4gICAgYXJ0X3Nwcml0ZXM6IFwiU3ByaXRlc1wiXG4gICAgYXJ0X290aGVyOiBcIlF1YWlzcXVlciBlIHRvZG9zIG9zIHRyYWJhbGhvcyBjcmlhdGl2b3MgbsOjby1jw7NkaWdvIHF1ZSBzw6NvIGRpc3BvbmliaWxpemFkb3MgYXF1YW5kbyBkYSBjcmlhw6fDo28gZGUgTsOtdmVpcy5cIlxuIyAgICBhcnRfYWNjZXNzOiBcIkN1cnJlbnRseSB0aGVyZSBpcyBubyB1bml2ZXJzYWwsIGVhc3kgc3lzdGVtIGZvciBmZXRjaGluZyB0aGVzZSBhc3NldHMuIEluIGdlbmVyYWwsIGZldGNoIHRoZW0gZnJvbSB0aGUgVVJMcyBhcyB1c2VkIGJ5IHRoZSBzaXRlLCBjb250YWN0IHVzIGZvciBhc3Npc3RhbmNlLCBvciBoZWxwIHVzIGluIGV4dGVuZGluZyB0aGUgc2l0ZSB0byBtYWtlIHRoZXNlIGFzc2V0cyBtb3JlIGVhc2lseSBhY2Nlc3NpYmxlLlwiXG4jICAgIGFydF9wYXJhZ3JhcGhfMTogXCJGb3IgYXR0cmlidXRpb24sIHBsZWFzZSBuYW1lIGFuZCBsaW5rIHRvIGNvZGVjb21iYXQuY29tIG5lYXIgd2hlcmUgdGhlIHNvdXJjZSBpcyB1c2VkIG9yIHdoZXJlIGFwcHJvcHJpYXRlIGZvciB0aGUgbWVkaXVtLiBGb3IgZXhhbXBsZTpcIlxuICAgIHVzZV9saXN0XzE6IFwiU2UgdXNhZG8gbnVtIGZpbG1lIG91IG5vdXRybyBqb2dvLCBpbmNsdWkgJ2NvZGVjb21iYXQuY29tJyBub3MgY3LDqWRpdG9zLlwiXG4jICAgIHVzZV9saXN0XzI6IFwiSWYgdXNlZCBvbiBhIHdlYnNpdGUsIGluY2x1ZGUgYSBsaW5rIG5lYXIgdGhlIHVzYWdlLCBmb3IgZXhhbXBsZSB1bmRlcm5lYXRoIGFuIGltYWdlLCBvciBpbiBhIGdlbmVyYWwgYXR0cmlidXRpb25zIHBhZ2Ugd2hlcmUgeW91IG1pZ2h0IGFsc28gbWVudGlvbiBvdGhlciBDcmVhdGl2ZSBDb21tb25zIHdvcmtzIGFuZCBvcGVuIHNvdXJjZSBzb2Z0d2FyZSBiZWluZyB1c2VkIG9uIHRoZSBzaXRlLiBTb21ldGhpbmcgdGhhdCdzIGFscmVhZHkgY2xlYXJseSByZWZlcmVuY2luZyBDb2RlQ29tYmF0LCBzdWNoIGFzIGEgYmxvZyBwb3N0IG1lbnRpb25pbmcgQ29kZUNvbWJhdCwgZG9lcyBub3QgbmVlZCBzb21lIHNlcGFyYXRlIGF0dHJpYnV0aW9uLlwiXG4jICAgIGFydF9wYXJhZ3JhcGhfMjogXCJJZiB0aGUgY29udGVudCBiZWluZyB1c2VkIGlzIGNyZWF0ZWQgbm90IGJ5IENvZGVDb21iYXQgYnV0IGluc3RlYWQgYnkgYSB1c2VyIG9mIGNvZGVjb21iYXQuY29tLCBhdHRyaWJ1dGUgdGhlbSBpbnN0ZWFkLCBhbmQgZm9sbG93IGF0dHJpYnV0aW9uIGRpcmVjdGlvbnMgcHJvdmlkZWQgaW4gdGhhdCByZXNvdXJjZSdzIGRlc2NyaXB0aW9uIGlmIHRoZXJlIGFyZSBhbnkuXCJcbiAgICByaWdodHNfdGl0bGU6IFwiRGlyZWl0b3MgUmVzZXJ2YWRvc1wiXG4gICAgcmlnaHRzX2Rlc2M6IFwiVG9kb3Mgb3MgZGlyZWl0b3MgZXN0w6NvIHJlc2VydmFkb3MgYW9zIHByw7NwcmlvcyBOw612ZWlzLiBJc3RvIGluY2x1aVwiXG4gICAgcmlnaHRzX3NjcmlwdHM6IFwiU2NyaXB0c1wiXG4gICAgcmlnaHRzX3VuaXQ6IFwiQ29uZmlndXJhw6fDtWVzIGRhcyB1bmlkYWRlc1wiXG4gICAgcmlnaHRzX3dyaXRpbmdzOiBcIlRleHRvc1wiXG4gICAgcmlnaHRzX21lZGlhOiBcIk3DrWRpYSAoc29ucywgbcO6c2ljYSkgZSBxdWFpc3F1ZXIgb3V0cm9zIGNvbnRlw7pkb3MgY3JpYXRpdm9zIGZlaXRvcyBlc3BlY2lmaWNhbWVudGUgcGFyYSBlc3NlIE7DrXZlbCBlIHF1ZSBuw6NvIGZvcmFtIGRpc3BvbmliaWxpemFkb3MgcGFyYSBhIGNyaWHDp8OjbyBkZSBOw612ZWlzLlwiXG4jICAgIHJpZ2h0c19jbGFyaWZpY2F0aW9uOiBcIlRvIGNsYXJpZnksIGFueXRoaW5nIHRoYXQgaXMgbWFkZSBhdmFpbGFibGUgaW4gdGhlIExldmVsIEVkaXRvciBmb3IgdGhlIHB1cnBvc2Ugb2YgbWFraW5nIGxldmVscyBpcyB1bmRlciBDQywgd2hlcmVhcyB0aGUgY29udGVudCBjcmVhdGVkIHdpdGggdGhlIExldmVsIEVkaXRvciBvciB1cGxvYWRlZCBpbiB0aGUgY291cnNlIG9mIGNyZWF0aW9uIG9mIExldmVscyBpcyBub3QuXCJcbiAgICBudXRzaGVsbF90aXRsZTogXCJSZXN1bWlkYW1lbnRlXCJcbiAgICBudXRzaGVsbF9kZXNjcmlwdGlvbjogXCJRdWFscXVlciB1bSBkb3MgcmVjdXJzb3MgcXVlIGZvcm5lY2Vtb3Mgbm8gRWRpdG9yIGRlIE7DrXZlaXMgc8OjbyBkZSB1c28gbGl2cmUgcGFyYSBjcmlhcmVzIE7DrXZlaXMuIE1hcyByZXNlcnZhbW9zIG8gZGlyZWl0byBkZSBkaXN0cmlidWnDp8OjbyByZXN0cml0YSBkb3MgcHLDs3ByaW9zIE7DrXZlaXMgKHF1ZSBzw6NvIGNyaWFkb3MgZW0gY29kZWNvbWJhdC5jb20pIHBlbG8gcXVlIHBvZGVtb3MgY29icmFyIHBvciBlbGVzIG5vIGZ1dHVybywgc2UgZm9yIGlzc28gcXVlIGFjYWJhciBwb3IgYWNvbnRlY2VyLlwiXG4jICAgIG51dHNoZWxsX3NlZV9hbHNvOiBcIlNlZSBhbHNvOlwiXG4gICAgY2Fub25pY2FsOiBcIkEgdmVyc8OjbyBJbmdsZXNhIGRlc3RlIGRvY3VtZW50byDDqSBhIHZlcnPDo28gZGVmaW5pdGl2YSBlIHNvYmVyYW5hLiBTZSBob3V2ZXIgZGlzY3JlcMOibmNpYXMgZW50cmUgdHJhZHXDp8O1ZXMsIG8gZG9jdW1lbnRvIEluZ2zDqnMgcHJldmFsZWNlLlwiXG4gICAgdGhpcmRfcGFydHlfdGl0bGU6IFwiU2VydmnDp29zIGRlIFRlcmNlaXJvc1wiXG4gICAgdGhpcmRfcGFydHlfZGVzY3JpcHRpb246IFwiTyBDb2RlQ29tYmF0IHVzYSBvcyBzZWd1aW50ZXMgc2VydmnDp29zIGRlIHRlcmNlaXJvcyAoZW50cmUgb3V0cm9zKTpcIlxuICAgIGNvb2tpZXNfbWVzc2FnZTogXCJPIENvZGVDb21iYXQgdXNhIGFsZ3VucyBjb29raWVzIGVzc2VuY2lhaXMgZSBuw6NvLWVzc2VuY2lhaXMuXCJcbiAgICBjb29raWVzX2Rlbnk6IFwiUmVjdXNhciBjb29raWVzIG7Do28tZXNzZW5jaWFpc1wiXG5cbiAgbGFkZGVyX3ByaXplczpcbiAgICB0aXRsZTogXCJQcsOpbWlvcyBkbyBUb3JuZWlvXCIgIyBUaGlzIHNlY3Rpb24gd2FzIGZvciBhbiBvbGQgdG91cm5hbWVudCBhbmQgZG9lc24ndCBuZWVkIG5ldyB0cmFuc2xhdGlvbnMgbm93LlxuICAgIGJsdXJiXzE6IFwiRXN0ZXMgcHLDqW1pb3Mgc2Vyw6NvIGVudHJlZ3VlcyBkZSBhY29yZG8gY29tXCJcbiAgICBibHVyYl8yOiBcImFzIHJlZ3JhcyBkbyB0b3JuZWlvXCJcbiAgICBibHVyYl8zOiBcImFvcyBtZWxob3JlcyBqb2dhZG9yZXMgaHVtYW5vcyBlIG9ncmVzLlwiXG4gICAgYmx1cmJfNDogXCJEdWFzIGVxdWlwYXMgc2lnbmlmaWNhbSBvIGRvYnJvIGRvcyBwcsOpbWlvcyFcIlxuICAgIGJsdXJiXzU6IFwiKEhhdmVyw6EgZG9pcyB2ZW5jZWRvcmVzIGVtIHByaW1laXJvIGx1Z2FyLCBkb2lzIGVtIHNlZ3VuZG8sIGV0Yy4pXCJcbiAgICByYW5rOiBcIkNsYXNzaWZpY2HDp8Ojb1wiXG4gICAgcHJpemVzOiBcIlByw6ltaW9zXCJcbiAgICB0b3RhbF92YWx1ZTogXCJWYWxvciBUb3RhbFwiXG4gICAgaW5fY2FzaDogXCJlbSBkaW5oZWlyb1wiXG4gICAgY3VzdG9tX3dpemFyZDogXCJVbSBGZWl0aWNlaXJvIGRvIENvZGVDb21iYXQgUGVyc29uYWxpemFkb1wiXG4gICAgY3VzdG9tX2F2YXRhcjogXCJVbSBBdmF0YXIgZG8gQ29kZUNvbWJhdCBQZXJzb25hbGl6YWRvXCJcbiAgICBoZWFwOiBcInBhcmEgc2VpcyBtZXNlcyBkZSBhY2Vzc28gXFxcIlN0YXJ0dXBcXFwiXCJcbiAgICBjcmVkaXRzOiBcImNyw6lkaXRvc1wiXG4gICAgb25lX21vbnRoX2NvdXBvbjogXCJjdXDDo286IGVzY29saGUgUmFpbHMgb3UgSFRNTFwiXG4gICAgb25lX21vbnRoX2Rpc2NvdW50OiBcImRlc2NvbnRvIGRlIDMwJTogZXNjb2xoZSBSYWlscyBvdSBIVE1MXCJcbiAgICBsaWNlbnNlOiBcImxpY2Vuw6dhXCJcbiAgICBvcmVpbGx5OiBcImVib29rIMOgIHR1YSBlc2NvbGhhXCJcblxuICBjYWxlbmRhcjpcbiAgICB5ZWFyOiBcIkFub1wiXG4gICAgZGF5OiBcIkRpYVwiXG4gICAgbW9udGg6IFwiTcOqc1wiXG4gICAgamFudWFyeTogXCJqYW5laXJvXCJcbiAgICBmZWJydWFyeTogXCJmZXZlcmVpcm9cIlxuICAgIG1hcmNoOiBcIm1hcsOnb1wiXG4gICAgYXByaWw6IFwiYWJyaWxcIlxuICAgIG1heTogXCJtYWlvXCJcbiAgICBqdW5lOiBcImp1bmhvXCJcbiAgICBqdWx5OiBcImp1bGhvXCJcbiAgICBhdWd1c3Q6IFwiYWdvc3RvXCJcbiAgICBzZXB0ZW1iZXI6IFwic2V0ZW1icm9cIlxuICAgIG9jdG9iZXI6IFwib3V0dWJyb1wiXG4gICAgbm92ZW1iZXI6IFwibm92ZW1icm9cIlxuICAgIGRlY2VtYmVyOiBcImRlemVtYnJvXCJcblxuIyAgY29kZV9wbGF5X2NyZWF0ZV9hY2NvdW50X21vZGFsOlxuIyAgICB0aXRsZTogXCJZb3UgZGlkIGl0IVwiICMgVGhpcyBzZWN0aW9uIGlzIG9ubHkgbmVlZGVkIGluIFVTLCBVSywgTWV4aWNvLCBJbmRpYSwgYW5kIEdlcm1hbnlcbiMgICAgYm9keTogXCJZb3UgYXJlIG5vdyBvbiB5b3VyIHdheSB0byBiZWNvbWluZyBhIG1hc3RlciBjb2Rlci4gU2lnbiB1cCB0byByZWNlaXZlIGFuIGV4dHJhIDxzdHJvbmc+MTAwIEdlbXM8L3N0cm9uZz4gJiB5b3Ugd2lsbCBhbHNvIGJlIGVudGVyZWQgZm9yIGEgY2hhbmNlIHRvIDxzdHJvbmc+d2luICQyLDUwMCAmIG90aGVyIExlbm92byBQcml6ZXM8L3N0cm9uZz4uXCJcbiMgICAgc2lnbl91cDogXCJTaWduIHVwICYga2VlcCBjb2Rpbmcg4pa2XCJcbiMgICAgdmljdG9yeV9zaWduX3VwX3Bva2U6IFwiQ3JlYXRlIGEgZnJlZSBhY2NvdW50IHRvIHNhdmUgeW91ciBjb2RlICYgYmUgZW50ZXJlZCBmb3IgYSBjaGFuY2UgdG8gd2luIHByaXplcyFcIlxuIyAgICB2aWN0b3J5X3NpZ25fdXA6IFwiU2lnbiB1cCAmIGJlIGVudGVyZWQgdG8gPHN0cm9uZz53aW4gJDIsNTAwPC9zdHJvbmc+XCJcblxuICBzZXJ2ZXJfZXJyb3I6XG4gICAgZW1haWxfdGFrZW46IFwiRS1tYWlsIGrDoSBlc2NvbGhpZG9cIlxuICAgIHVzZXJuYW1lX3Rha2VuOiBcIk5vbWUgZGUgdXRpbGl6YWRvciBqw6EgZXNjb2xoaWRvXCJcblxuICBlc3BlcjpcbiAgICBsaW5lX25vOiBcIkxpbmhhICQxOiBcIlxuIyAgICB1bmNhdWdodDogXCJVbmNhdWdodCAkMVwiICMgJDEgd2lsbCBiZSBhbiBlcnJvciB0eXBlLCBlZyBcIlVuY2F1Z2h0IFN5bnRheEVycm9yXCJcbiMgICAgcmVmZXJlbmNlX2Vycm9yOiBcIlJlZmVyZW5jZUVycm9yOiBcIlxuIyAgICBhcmd1bWVudF9lcnJvcjogXCJBcmd1bWVudEVycm9yOiBcIlxuIyAgICB0eXBlX2Vycm9yOiBcIlR5cGVFcnJvcjogXCJcbiMgICAgc3ludGF4X2Vycm9yOiBcIlN5bnRheEVycm9yOiBcIlxuICAgIGVycm9yOiBcIkVycm86IFwiXG4gICAgeF9ub3RfYV9mdW5jdGlvbjogXCIkMSBuw6NvIMOpIHVtYSBmdW7Dp8Ojb1wiXG4gICAgeF9ub3RfZGVmaW5lZDogXCIkMSBuw6NvIGVzdMOhIGRlZmluaWRvXCJcbiMgICAgc3BlbGxpbmdfaXNzdWVzOiBcIkxvb2sgb3V0IGZvciBzcGVsbGluZyBpc3N1ZXM6IGRpZCB5b3UgbWVhbiBgJDFgIGluc3RlYWQgb2YgYCQyYD9cIlxuIyAgICBjYXBpdGFsaXphdGlvbl9pc3N1ZXM6IFwiTG9vayBvdXQgZm9yIGNhcGl0YWxpemF0aW9uOiBgJDFgIHNob3VsZCBiZSBgJDJgLlwiXG4jICAgIHB5X2VtcHR5X2Jsb2NrOiBcIkVtcHR5ICQxLiBQdXQgNCBzcGFjZXMgaW4gZnJvbnQgb2Ygc3RhdGVtZW50cyBpbnNpZGUgdGhlICQyIHN0YXRlbWVudC5cIlxuIyAgICBmeF9taXNzaW5nX3BhcmVuOiBcIklmIHlvdSB3YW50IHRvIGNhbGwgYCQxYCBhcyBhIGZ1bmN0aW9uLCB5b3UgbmVlZCBgKClgJ3NcIlxuIyAgICB1bm1hdGNoZWRfdG9rZW46IFwiVW5tYXRjaGVkIGAkMWAuICBFdmVyeSBvcGVuaW5nIGAkMmAgbmVlZHMgYSBjbG9zaW5nIGAkM2AgdG8gbWF0Y2ggaXQuXCJcbiMgICAgdW50ZXJtaW5hdGVkX3N0cmluZzogXCJVbnRlcm1pbmF0ZWQgc3RyaW5nLiBBZGQgYSBtYXRjaGluZyBgXFxcImAgYXQgdGhlIGVuZCBvZiB5b3VyIHN0cmluZy5cIlxuIyAgICBtaXNzaW5nX3NlbWljb2xvbjogXCJNaXNzaW5nIHNlbWljb2xvbi5cIlxuIyAgICBtaXNzaW5nX3F1b3RlczogXCJNaXNzaW5nIHF1b3Rlcy4gVHJ5IGAkMWBcIlxuIyAgICBhcmd1bWVudF90eXBlOiBcImAkMWAncyBhcmd1bWVudCBgJDJgIHNob3VsZCBoYXZlIHR5cGUgYCQzYCwgYnV0IGdvdCBgJDRgOiBgJDVgLlwiXG4jICAgIGFyZ3VtZW50X3R5cGUyOiBcImAkMWAncyBhcmd1bWVudCBgJDJgIHNob3VsZCBoYXZlIHR5cGUgYCQzYCwgYnV0IGdvdCBgJDRgLlwiXG4jICAgIHRhcmdldF9hX3VuaXQ6IFwiVGFyZ2V0IGEgdW5pdC5cIlxuIyAgICBhdHRhY2tfY2FwaXRhbGl6YXRpb246IFwiQXR0YWNrICQxLCBub3QgJDIuIChDYXBpdGFsIGxldHRlcnMgYXJlIGltcG9ydGFudC4pXCJcbiMgICAgZW1wdHlfd2hpbGU6IFwiRW1wdHkgd2hpbGUgc3RhdGVtZW50LiBQdXQgNCBzcGFjZXMgaW4gZnJvbnQgb2Ygc3RhdGVtZW50cyBpbnNpZGUgdGhlIHdoaWxlIHN0YXRlbWVudC5cIlxuIyAgICBsaW5lX29mX3NpdGU6IFwiYCQxYCdzIGFyZ3VtZW50IGAkMmAgaGFzIGEgcHJvYmxlbS4gSXMgdGhlcmUgYW4gZW5lbXkgd2l0aGluIHlvdXIgbGluZS1vZi1zaWdodCB5ZXQ/XCJcbiMgICAgbmVlZF9hX2FmdGVyX3doaWxlOiBcIk5lZWQgYSBgJDFgIGFmdGVyIGAkMmAuXCJcbiMgICAgdG9vX211Y2hfaW5kZW50YXRpb246IFwiVG9vIG11Y2ggaW5kZW50YXRpb24gYXQgdGhlIGJlZ2lubmluZyBvZiB0aGlzIGxpbmUuXCJcbiMgICAgbWlzc2luZ19oZXJvOiBcIk1pc3NpbmcgYCQxYCBrZXl3b3JkOyBzaG91bGQgYmUgYCQyYC5cIlxuIyAgICB0YWtlc19ub19hcmd1bWVudHM6IFwiYCQxYCB0YWtlcyBubyBhcmd1bWVudHMuXCJcbiMgICAgbm9fb25lX25hbWVkOiBcIlRoZXJlJ3Mgbm8gb25lIG5hbWVkIFxcXCIkMVxcXCIgdG8gdGFyZ2V0LlwiXG4jICAgIHNlcGFyYXRlZF9ieV9jb21tYTogXCJGdW5jdGlvbiBjYWxscyBwYXJhbWF0ZXJzIG11c3QgYmUgc2VwZXJhdGVkIGJ5IGAsYHNcIlxuIyAgICBwcm90ZWN0ZWRfcHJvcGVydHk6IFwiQ2FuJ3QgcmVhZCBwcm90ZWN0ZWQgcHJvcGVydHk6ICQxXCJcbiMgICAgbmVlZF9wYXJlbnNfdG9fY2FsbDogXCJJZiB5b3Ugd2FudCB0byBjYWxsIGAkMWAgYXMgZnVuY3Rpb24sIHlvdSBuZWVkIGAoKWAnc1wiXG4jICAgIGV4cGVjdGVkX2FuX2lkZW50aWZpZXI6IFwiRXhwZWN0ZWQgYW4gaWRlbnRpZmllciBhbmQgaW5zdGVhZCBzYXcgJyQxJy5cIlxuIyAgICB1bmV4cGVjdGVkX2lkZW50aWZpZXI6IFwiVW5leHBlY3RlZCBpZGVudGlmaWVyXCJcbiMgICAgdW5leHBlY3RlZF9lbmRfb2Y6IFwiVW5leHBlY3RlZCBlbmQgb2YgaW5wdXRcIlxuIyAgICB1bm5lY2Vzc2FyeV9zZW1pY29sb246IFwiVW5uZWNlc3Nhcnkgc2VtaWNvbG9uLlwiXG4jICAgIHVuZXhwZWN0ZWRfdG9rZW5fZXhwZWN0ZWQ6IFwiVW5leHBlY3RlZCB0b2tlbjogZXhwZWN0ZWQgJDEgYnV0IGZvdW5kICQyIHdoaWxlIHBhcnNpbmcgJDNcIlxuIyAgICB1bmV4cGVjdGVkX3Rva2VuOiBcIlVuZXhwZWN0ZWQgdG9rZW4gJDFcIlxuICAgIHVuZXhwZWN0ZWRfdG9rZW4yOiBcIlPDrW1ib2xvIGluZXNwZXJhZG9cIlxuICAgIHVuZXhwZWN0ZWRfbnVtYmVyOiBcIk7Dum1lcm8gaW5lc3BlcmFkb1wiXG4jICAgIHVuZXhwZWN0ZWQ6IFwiVW5leHBlY3RlZCAnJDEnLlwiXG4jICAgIGVzY2FwZV9wcmVzc2VkX2NvZGU6IFwiRXNjYXBlIHByZXNzZWQ7IGNvZGUgYWJvcnRlZC5cIlxuIyAgICB0YXJnZXRfYW5fZW5lbXk6IFwiVGFyZ2V0IGFuIGVuZW15IGJ5IG5hbWUsIGxpa2UgYCQxYCwgbm90IHRoZSBzdHJpbmcgYCQyYC5cIlxuIyAgICB0YXJnZXRfYW5fZW5lbXlfMjogXCJUYXJnZXQgYW4gZW5lbXkgYnkgbmFtZSwgbGlrZSAkMS5cIlxuIyAgICBjYW5ub3RfcmVhZF9wcm9wZXJ0eTogXCJDYW5ub3QgcmVhZCBwcm9wZXJ0eSAnJDEnIG9mIHVuZGVmaW5lZFwiXG4jICAgIGF0dGVtcHRlZF90b19hc3NpZ246IFwiQXR0ZW1wdGVkIHRvIGFzc2lnbiB0byByZWFkb25seSBwcm9wZXJ0eS5cIlxuIyAgICB1bmV4cGVjdGVkX2Vhcmx5X2VuZDogXCJVbmV4cGVjdGVkIGVhcmx5IGVuZCBvZiBwcm9ncmFtLlwiXG4jICAgIHlvdV9uZWVkX2Ffc3RyaW5nOiBcIllvdSBuZWVkIGEgc3RyaW5nIHRvIGJ1aWxkOyBvbmUgb2YgJDFcIlxuIyAgICB1bmFibGVfdG9fZ2V0X3Byb3BlcnR5OiBcIlVuYWJsZSB0byBnZXQgcHJvcGVydHkgJyQxJyBvZiB1bmRlZmluZWQgb3IgbnVsbCByZWZlcmVuY2VcIiAjIFRPRE86IERvIHdlIHRyYW5zbGF0ZSB1bmRlZmluZWQvbnVsbD9cbiMgICAgY29kZV9uZXZlcl9maW5pc2hlZF9pdHM6IFwiQ29kZSBuZXZlciBmaW5pc2hlZC4gSXQncyBlaXRoZXIgcmVhbGx5IHNsb3cgb3IgaGFzIGFuIGluZmluaXRlIGxvb3AuXCJcbiMgICAgdW5jbG9zZWRfc3RyaW5nOiBcIlVuY2xvc2VkIHN0cmluZy5cIlxuIyAgICB1bm1hdGNoZWQ6IFwiVW5tYXRjaGVkICckMScuXCJcbiMgICAgZXJyb3JfeW91X3NhaWRfYWNob286IFwiWW91IHNhaWQ6ICQxLCBidXQgdGhlIHBhc3N3b3JkIGlzOiAkMi4gKENhcGl0YWwgbGV0dGVycyBhcmUgaW1wb3J0YW50LilcIlxuIyAgICBpbmRlbnRhdGlvbl9lcnJvcl91bmluZGVudF9kb2VzOiBcIkluZGVudGF0aW9uIEVycm9yOiB1bmluZGVudCBkb2VzIG5vdCBtYXRjaCBhbnkgb3V0ZXIgaW5kZW50YXRpb24gbGV2ZWxcIlxuIyAgICBpbmRlbnRhdGlvbl9lcnJvcjogXCJJbmRlbnRhdGlvbiBlcnJvci5cIlxuIyAgICBuZWVkX2Ffb25fdGhlOiBcIk5lZWQgYSBgOmAgb24gdGhlIGVuZCBvZiB0aGUgbGluZSBmb2xsb3dpbmcgYCQxYC5cIlxuIyAgICBhdHRlbXB0X3RvX2NhbGxfdW5kZWZpbmVkOiBcImF0dGVtcHQgdG8gY2FsbCAnJDEnIChhIG5pbCB2YWx1ZSlcIlxuIyAgICB1bnRlcm1pbmF0ZWQ6IFwiVW50ZXJtaW5hdGVkIGAkMWBcIlxuIyAgICB0YXJnZXRfYW5fZW5lbXlfdmFyaWFibGU6IFwiVGFyZ2V0IGFuICQxIHZhcmlhYmxlLCBub3QgdGhlIHN0cmluZyAkMi4gKFRyeSB1c2luZyAkMy4pXCJcbiMgICAgZXJyb3JfdXNlX3RoZV92YXJpYWJsZTogXCJVc2UgdGhlIHZhcmlhYmxlIG5hbWUgbGlrZSBgJDFgIGluc3RlYWQgb2YgYSBzdHJpbmcgbGlrZSBgJDJgXCJcbiMgICAgaW5kZW50YXRpb25fdW5pbmRlbnRfZG9lc19ub3Q6IFwiSW5kZW50YXRpb24gdW5pbmRlbnQgZG9lcyBub3QgbWF0Y2ggYW55IG91dGVyIGluZGVudGF0aW9uIGxldmVsXCJcbiMgICAgdW5jbG9zZWRfcGFyZW5faW5fZnVuY3Rpb25fYXJndW1lbnRzOiBcIlVuY2xvc2VkICQxIGluIGZ1bmN0aW9uIGFyZ3VtZW50cy5cIlxuIyAgICB1bmV4cGVjdGVkX2VuZF9vZl9pbnB1dDogXCJVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dFwiXG4jICAgIHRoZXJlX2lzX25vX2VuZW15OiBcIlRoZXJlIGlzIG5vIGAkMWAuIFVzZSBgJDJgIGZpcnN0LlwiICMgSGludHMgc3RhcnQgaGVyZVxuICAgIHRyeV9oZXJvZmluZG5lYXJlc3RlbmVteTogXCJFeHBlcmltZW50YSBgJDFgXCJcbiAgICB0aGVyZV9pc19ub19mdW5jdGlvbjogXCJOw6NvIGjDoSBuZW5odW1hIGZ1bsOnw6NvIGAkMWAsIG1hcyBgJDJgIHRlbSB1bSBtw6l0b2RvIGAkM2AuXCJcbiMgICAgYXR0YWNrc19hcmd1bWVudF9lbmVteV9oYXM6IFwiYCQxYCdzIGFyZ3VtZW50IGAkMmAgaGFzIGEgcHJvYmxlbS5cIlxuIyAgICBpc190aGVyZV9hbl9lbmVteTogXCJJcyB0aGVyZSBhbiBlbmVteSB3aXRoaW4geW91ciBsaW5lLW9mLXNpZ2h0IHlldD9cIlxuIyAgICB0YXJnZXRfaXNfbnVsbF9pczogXCJUYXJnZXQgaXMgJDEuIElzIHRoZXJlIGFsd2F5cyBhIHRhcmdldCB0byBhdHRhY2s/IChVc2UgJDI/KVwiXG4gICAgaGVyb19oYXNfbm9fbWV0aG9kOiBcImAkMWAgbsOjbyB0ZW0gbmVuaHVtIG3DqXRvZG8gYCQyYC5cIlxuICAgIHRoZXJlX2lzX2FfcHJvYmxlbTogXCJIw6EgdW0gcHJvYmxlbWEgY29tIG8gdGV1IGPDs2RpZ28uXCJcbiMgICAgZGlkX3lvdV9tZWFuOiBcIkRpZCB5b3UgbWVhbiAkMT8gWW91IGRvIG5vdCBoYXZlIGFuIGl0ZW0gZXF1aXBwZWQgd2l0aCB0aGF0IHNraWxsLlwiXG4jICAgIG1pc3NpbmdfYV9xdW90YXRpb25fbWFyazogXCJNaXNzaW5nIGEgcXVvdGF0aW9uIG1hcmsuIFwiXG4jICAgIG1pc3NpbmdfdmFyX3VzZV92YXI6IFwiTWlzc2luZyBgJDFgLiBVc2UgYCQyYCB0byBtYWtlIGEgbmV3IHZhcmlhYmxlLlwiXG4jICAgIHlvdV9kb19ub3RfaGF2ZTogXCJZb3UgZG8gbm90IGhhdmUgYW4gaXRlbSBlcXVpcHBlZCB3aXRoIHRoZSAkMSBza2lsbC5cIlxuIyAgICBwdXRfZWFjaF9jb21tYW5kX29uOiBcIlB1dCBlYWNoIGNvbW1hbmQgb24gYSBzZXBhcmF0ZSBsaW5lXCJcbiMgICAgYXJlX3lvdV9taXNzaW5nX2E6IFwiQXJlIHlvdSBtaXNzaW5nIGEgJyQxJyBhZnRlciAnJDInPyBcIlxuIyAgICB5b3VyX3BhcmVudGhlc2VzX211c3RfbWF0Y2g6IFwiWW91ciBwYXJlbnRoZXNlcyBtdXN0IG1hdGNoLlwiXG5cbiMgIGFwY3NwOlxuIyAgICB0aXRsZTogXCJBUCBDb21wdXRlciBTY2llbmNlIFByaW5jaXBhbHMgfCBDb2xsZWdlIEJvYXJkIEVuZG9yc2VkXCJcbiMgICAgbWV0YV9kZXNjcmlwdGlvbjogXCJDb2RlQ29tYmF04oCZcyBjb21wcmVoZW5zaXZlIGN1cnJpY3VsdW0gYW5kIHByb2Zlc3Npb25hbCBkZXZlbG9wbWVudCBwcm9ncmFtIGFyZSBhbGwgeW91IG5lZWQgdG8gb2ZmZXIgQ29sbGVnZSBCb2FyZOKAmXMgbmV3ZXN0IGNvbXB1dGVyIHNjaWVuY2UgY291cnNlIHRvIHlvdXIgc3R1ZGVudHMuXCJcbiMgICAgc3lsbGFidXM6IFwiQVAgQ1MgUHJpbmNpcGxlcyBTeWxsYWJ1c1wiXG4jICAgIHN5bGxhYnVzX2Rlc2NyaXB0aW9uOiBcIlVzZSB0aGlzIHJlc291cmNlIHRvIHBsYW4gQ29kZUNvbWJhdCBjdXJyaWN1bHVtIGZvciB5b3VyIEFQIENvbXB1dGVyIFNjaWVuY2UgUHJpbmNpcGxlcyBjbGFzcy5cIlxuIyAgICBjb21wdXRhdGlvbmFsX3RoaW5raW5nX3ByYWN0aWNlczogXCJDb21wdXRhdGlvbmFsIFRoaW5raW5nIFByYWN0aWNlc1wiXG4jICAgIGxlYXJuaW5nX29iamVjdGl2ZXM6IFwiTGVhcm5pbmcgT2JqZWN0aXZlc1wiXG4jICAgIGN1cnJpY3VsYXJfcmVxdWlyZW1lbnRzOiBcIkN1cnJpY3VsYXIgUmVxdWlyZW1lbnRzXCJcbiMgICAgdW5pdF8xOiBcIlVuaXQgMTogQ3JlYXRpdmUgVGVjaG5vbG9neVwiXG4jICAgIHVuaXRfMV9hY3Rpdml0eV8xOiBcIlVuaXQgMSBBY3Rpdml0eTogVGVjaG5vbG9neSBVc2FiaWxpdHkgUmV2aWV3XCJcbiMgICAgdW5pdF8yOiBcIlVuaXQgMjogQ29tcHV0YXRpb25hbCBUaGlua2luZ1wiXG4jICAgIHVuaXRfMl9hY3Rpdml0eV8xOiBcIlVuaXQgMiBBY3Rpdml0eTogQmluYXJ5IFNlcXVlbmNlc1wiXG4jICAgIHVuaXRfMl9hY3Rpdml0eV8yOiBcIlVuaXQgMiBBY3Rpdml0eTogQ29tcHV0aW5nIExlc3NvbiBQcm9qZWN0XCJcbiMgICAgdW5pdF8zOiBcIlVuaXQgMzogQWxnb3JpdGhtc1wiXG4jICAgIHVuaXRfM19hY3Rpdml0eV8xOiBcIlVuaXQgMyBBY3Rpdml0eTogQWxnb3JpdGhtcyAtIEhpdGNoaGlrZXIncyBHdWlkZVwiXG4jICAgIHVuaXRfM19hY3Rpdml0eV8yOiBcIlVuaXQgMyBBY3Rpdml0eTogU2ltdWxhdGlvbiAtIFByZWRhdG9yICYgUHJleVwiXG4jICAgIHVuaXRfM19hY3Rpdml0eV8zOiBcIlVuaXQgMyBBY3Rpdml0eTogQWxnb3JpdGhtcyAtIFBhaXIgRGVzaWduIGFuZCBQcm9ncmFtbWluZ1wiXG4jICAgIHVuaXRfNDogXCJVbml0IDQ6IFByb2dyYW1taW5nXCJcbiMgICAgdW5pdF80X2FjdGl2aXR5XzE6IFwiVW5pdCA0IEFjdGl2aXR5OiBBYnN0cmFjdGlvbnNcIlxuIyAgICB1bml0XzRfYWN0aXZpdHlfMjogXCJVbml0IDQgQWN0aXZpdHk6IFNlYXJjaGluZyAmIFNvcnRpbmdcIlxuIyAgICB1bml0XzRfYWN0aXZpdHlfMzogXCJVbml0IDQgQWN0aXZpdHk6IFJlZmFjdG9yaW5nXCJcbiMgICAgdW5pdF81OiBcIlVuaXQgNTogVGhlIEludGVybmV0XCJcbiMgICAgdW5pdF81X2FjdGl2aXR5XzE6IFwiVW5pdCA1IEFjdGl2aXR5OiBIb3cgdGhlIEludGVybmV0IFdvcmtzXCJcbiMgICAgdW5pdF81X2FjdGl2aXR5XzI6IFwiVW5pdCA1IEFjdGl2aXR5OiBJbnRlcm5ldCBTaW11bGF0b3JcIlxuIyAgICB1bml0XzVfYWN0aXZpdHlfMzogXCJVbml0IDUgQWN0aXZpdHk6IENoYXQgUm9vbSBTaW11bGF0aW9uXCJcbiMgICAgdW5pdF81X2FjdGl2aXR5XzQ6IFwiVW5pdCA1IEFjdGl2aXR5OiBDeWJlcnNlY3VyaXR5XCJcbiMgICAgdW5pdF82OiBcIlVuaXQgNjogRGF0YVwiXG4jICAgIHVuaXRfNl9hY3Rpdml0eV8xOiBcIlVuaXQgNiBBY3Rpdml0eTogSW50cm9kdWN0aW9uIHRvIERhdGFcIlxuIyAgICB1bml0XzZfYWN0aXZpdHlfMjogXCJVbml0IDYgQWN0aXZpdHk6IEJpZyBEYXRhXCJcbiMgICAgdW5pdF82X2FjdGl2aXR5XzM6IFwiVW5pdCA2IEFjdGl2aXR5OiBMb3NzeSAmIExvc3NsZXNzIENvbXByZXNzaW9uXCJcbiMgICAgdW5pdF83OiBcIlVuaXQgNzogUGVyc29uYWwgJiBHbG9iYWwgSW1wYWN0XCJcbiMgICAgdW5pdF83X2FjdGl2aXR5XzE6IFwiVW5pdCA3IEFjdGl2aXR5OiBQZXJzb25hbCAmIEdsb2JhbCBJbXBhY3RcIlxuIyAgICB1bml0XzdfYWN0aXZpdHlfMjogXCJVbml0IDcgQWN0aXZpdHk6IENyb3dkc291cmNpbmdcIlxuIyAgICB1bml0Xzg6IFwiVW5pdCA4OiBQZXJmb3JtYW5jZSBUYXNrc1wiXG4jICAgIHVuaXRfOF9kZXNjcmlwdGlvbjogXCJQcmVwYXJlIHN0dWRlbnRzIGZvciB0aGUgQ3JlYXRlIFRhc2sgYnkgYnVpbGRpbmcgdGhlaXIgb3duIGdhbWVzIGFuZCBwcmFjdGljaW5nIGtleSBjb25jZXB0cy5cIlxuIyAgICB1bml0XzhfYWN0aXZpdHlfMTogXCJDcmVhdGUgVGFzayBQcmFjdGljZSAxOiBHYW1lIERldmVsb3BtZW50IDFcIlxuIyAgICB1bml0XzhfYWN0aXZpdHlfMjogXCJDcmVhdGUgVGFzayBQcmFjdGljZSAyOiBHYW1lIERldmVsb3BtZW50IDJcIlxuIyAgICB1bml0XzhfYWN0aXZpdHlfMzogXCJDcmVhdGUgVGFzayBQcmFjdGljZSAzOiBHYW1lIERldmVsb3BtZW50IDNcIlxuIyAgICB1bml0Xzk6IFwiVW5pdCA5OiBBUCBSZXZpZXdcIlxuIyAgICB1bml0XzEwOiBcIlVuaXQgMTA6IFBvc3QtQVBcIlxuIyAgICB1bml0XzEwX2FjdGl2aXR5XzE6IFwiVW5pdCAxMCBBY3Rpdml0eTogV2ViIFF1aXpcIlxuXG4jICBwYXJlbnRfbGFuZGluZzpcbiMgICAgc2xvZ2FuX3F1b3RlOiBcIlxcXCJDb2RlQ29tYmF0IGlzIHJlYWxseSBmdW4sIGFuZCB5b3UgbGVhcm4gYSBsb3QuXFxcIlwiXG4jICAgIHF1b3RlX2F0dHI6IFwiNXRoIEdyYWRlciwgT2FrbGFuZCwgQ0FcIlxuIyAgICByZWZlcl90ZWFjaGVyOiBcIlJlZmVyIGEgVGVhY2hlclwiXG4jICAgIGZvY3VzX3F1b3RlOiBcIlVubG9jayB5b3VyIGNoaWxkJ3MgZnV0dXJlXCJcbiMgICAgdmFsdWVfaGVhZDE6IFwiVGhlIG1vc3QgZW5nYWdpbmcgd2F5IHRvIGxlYXJuIHR5cGVkIGNvZGVcIlxuIyAgICB2YWx1ZV9jb3B5MTogXCJDb2RlQ29tYmF0IGlzIGNoaWxk4oCZcyBwZXJzb25hbCB0dXRvci4gQ292ZXJpbmcgbWF0ZXJpYWwgYWxpZ25lZCB3aXRoIG5hdGlvbmFsIGN1cnJpY3VsdW0gc3RhbmRhcmRzLCB5b3VyIGNoaWxkIHdpbGwgcHJvZ3JhbSBhbGdvcml0aG1zLCBidWlsZCB3ZWJzaXRlcyBhbmQgZXZlbiBkZXNpZ24gdGhlaXIgb3duIGdhbWVzLlwiXG4jICAgIHZhbHVlX2hlYWQyOiBcIkJ1aWxkaW5nIGNyaXRpY2FsIHNraWxscyBmb3IgdGhlIDIxc3QgY2VudHVyeVwiXG4jICAgIHZhbHVlX2NvcHkyOiBcIllvdXIga2lkcyB3aWxsIGxlYXJuIGhvdyB0byBuYXZpZ2F0ZSBhbmQgYmVjb21lIGNpdGl6ZW5zIGluIHRoZSBkaWdpdGFsIHdvcmxkLiBDb2RlQ29tYmF0IGlzIGEgc29sdXRpb24gdGhhdCBlbmhhbmNlcyB5b3VyIGNoaWxk4oCZcyBjcml0aWNhbCB0aGlua2luZyBhbmQgcmVzaWxpZW5jZS5cIlxuIyAgICB2YWx1ZV9oZWFkMzogXCJIZXJvZXMgdGhhdCB5b3VyIGNoaWxkIHdpbGwgbG92ZVwiXG4jICAgIHZhbHVlX2NvcHkzOiBcIldlIGtub3cgaG93IGltcG9ydGFudCBmdW4gYW5kIGVuZ2FnZW1lbnQgaXMgZm9yIHRoZSBkZXZlbG9waW5nIGJyYWluLCBzbyB3ZeKAmXZlIHBhY2tlZCBpbiBhcyBtdWNoIGxlYXJuaW5nIGFzIHdlIGNhbiB3aGlsZSB3cmFwcGluZyBpdCB1cCBpbiBhIGdhbWUgdGhleSdsbCBsb3ZlLlwiXG4jICAgIGRpdmVfaGVhZDE6IFwiTm90IGp1c3QgZm9yIHNvZnR3YXJlIGVuZ2luZWVyc1wiXG4jICAgIGRpdmVfaW50cm86IFwiQ29tcHV0ZXIgc2NpZW5jZSBza2lsbHMgaGF2ZSBhIHdpZGUgcmFuZ2Ugb2YgYXBwbGljYXRpb25zLiBUYWtlIGEgbG9vayBhdCBhIGZldyBleGFtcGxlcyBiZWxvdyFcIlxuIyAgICBtZWRpY2FsX2ZsYWc6IFwiTWVkaWNhbCBBcHBsaWNhdGlvbnNcIlxuIyAgICBtZWRpY2FsX2ZsYWdfY29weTogXCJGcm9tIG1hcHBpbmcgb2YgdGhlIGh1bWFuIGdlbm9tZSB0byBNUkkgbWFjaGluZXMsIGNvZGluZyBhbGxvd3MgdXMgdG8gdW5kZXJzdGFuZCB0aGUgYm9keSBpbiB3YXlzIHdl4oCZdmUgbmV2ZXIgYmVlbiBhYmxlIHRvIGJlZm9yZS5cIlxuIyAgICBleHBsb3JlX2ZsYWc6IFwiU3BhY2UgRXhwbG9yYXRpb25cIlxuIyAgICBleHBsb3JlX2ZsYWdfY29weTogXCJBcG9sbG8gZ290IHRvIHRoZSBNb29uIHRoYW5rcyB0byBoYXJkd29ya2luZyBodW1hbiBjb21wdXRlcnMsIGFuZCBzY2llbnRpc3RzIHVzZSBjb21wdXRlciBwcm9ncmFtcyB0byBhbmFseXplIHRoZSBncmF2aXR5IG9mIHBsYW5ldHMgYW5kIHNlYXJjaCBmb3IgbmV3IHN0YXJzLlwiXG4jICAgIGZpbG1ha2luZ19mbGFnOiBcIkZpbG1tYWtpbmcgYW5kIEFuaW1hdGlvblwiXG4jICAgIGZpbG1ha2luZ19mbGFnX2NvcHk6IFwiRnJvbSB0aGUgcm9ib3RpY3Mgb2YgSnVyYXNzaWMgUGFyayB0byB0aGUgaW5jcmVkaWJsZSBhbmltYXRpb24gb2YgRHJlYW13b3JrcyBhbmQgUGl4YXIsIGZpbG1zIHdvdWxkbuKAmXQgYmUgdGhlIHNhbWUgd2l0aG91dCB0aGUgZGlnaXRhbCBjcmVhdGl2ZXMgYmVoaW5kIHRoZSBzY2VuZXMuXCJcbiMgICAgZGl2ZV9oZWFkMjogXCJHYW1lcyBhcmUgaW1wb3J0YW50IGZvciBsZWFybmluZ1wiXG4jICAgIGRpdmVfcGFyMTogXCJNdWx0aXBsZSBzdHVkaWVzIGhhdmUgZm91bmQgdGhhdCBnYW1lLWJhc2VkIGxlYXJuaW5nIHByb21vdGVzXCJcbiMgICAgZGl2ZV9saW5rMTogXCJjb2duaXRpdmUgZGV2ZWxvcG1lbnRcIlxuIyAgICBkaXZlX3BhcjI6IFwiaW4ga2lkcyB3aGlsZSBhbHNvIHByb3ZpbmcgdG8gYmVcIlxuIyAgICBkaXZlX2xpbmsyOiBcIm1vcmUgZWZmZWN0aXZlXCJcbiMgICAgZGl2ZV9wYXIzOiBcImluIGhlbHBpbmcgc3R1ZGVudHNcIlxuIyAgICBkaXZlX2xpbmszOiBcImxlYXJuIGFuZCByZXRhaW4ga25vd2xlZGdlXCJcbiMgICAgZGl2ZV9wYXI0OiBcIixcIlxuIyAgICBkaXZlX2xpbms0OiBcImNvbmNlbnRyYXRlXCJcbiMgICAgZGl2ZV9wYXI1OiBcIiwgYW5kIHBlcmZvcm0gYXQgYSBoaWdoZXIgbGV2ZWwgb2YgYWNoaWV2ZW1lbnQuXCJcbiMgICAgZGl2ZV9wYXI2OiBcIkdhbWUgYmFzZWQgbGVhcm5pbmcgaXMgYWxzbyBnb29kIGZvciBkZXZlbG9waW5nXCJcbiMgICAgZGl2ZV9saW5rNTogXCJyZXNpbGllbmNlXCJcbiMgICAgZGl2ZV9wYXI3OiBcIiwgY29nbml0aXZlIHJlYXNvbmluZywgYW5kXCJcbiMgICAgZGl2ZV9wYXI4OiBcIi4gU2NpZW5jZSBpcyBqdXN0IHRlbGxpbmcgdXMgd2hhdCBsZWFybmVycyBhbHJlYWR5IGtub3cuIENoaWxkcmVuIGxlYXJuIGJlc3QgYnkgcGxheWluZy5cIlxuIyAgICBkaXZlX2xpbms2OiBcImV4ZWN1dGl2ZSBmdW5jdGlvbnNcIlxuIyAgICBkaXZlX2hlYWQzOiBcIlRlYW0gdXAgd2l0aCB0ZWFjaGVyc1wiXG4jICAgIGRpdmVfM19wYXIxOiBcIkluIHRoZSBmdXR1cmUsIFwiXG4jICAgIGRpdmVfM19saW5rMTogXCJjb2RpbmcgaXMgZ29pbmcgdG8gYmUgYXMgZnVuZGFtZW50YWwgYXMgbGVhcm5pbmcgdG8gcmVhZCBhbmQgd3JpdGVcIlxuIyAgICBkaXZlXzNfcGFyMjogXCIuIFdl4oCZdmUgd29ya2VkIGNsb3NlbHkgd2l0aCB0ZWFjaGVycyB0byBkZXNpZ24gYW5kIGRldmVsb3Agb3VyIGNvbnRlbnQsIGFuZCB3ZSBjYW4ndCB3YWl0IHRvIGdldCB5b3VyIGtpZHMgbGVhcm5pbmcuIEVkdWNhdGlvbmFsIHRlY2hub2xvZ3kgcHJvZ3JhbXMgbGlrZSBDb2RlQ29tYmF0IHdvcmsgYmVzdCB3aGVuIHRoZSB0ZWFjaGVycyBpbXBsZW1lbnQgdGhlbSBjb25zaXN0ZW50bHkuIEhlbHAgdXMgbWFrZSB0aGF0IGNvbm5lY3Rpb24gYnkgaW50cm9kdWNpbmcgdXMgdG8geW91ciBjaGlsZOKAmXMgdGVhY2hlcnMhXCJcbiMgICAgbWlzc2lvbjogXCJPdXIgbWlzc2lvbjogdG8gdGVhY2ggYW5kIGVuZ2FnZVwiXG4jICAgIG1pc3Npb24xX2hlYWRpbmc6IFwiQ29kaW5nIGZvciB0b2RheSdzIGdlbmVyYXRpb25cIlxuIyAgICBtaXNzaW9uMl9oZWFkaW5nOiBcIlByZXBhcmluZyBmb3IgdGhlIGZ1dHVyZVwiXG4jICAgIG1pc3Npb24zX2hlYWRpbmc6IFwiU3VwcG9ydGVkIGJ5IHBhcmVudHMgbGlrZSB5b3VcIlxuIyAgICBtaXNzaW9uMV9jb3B5OiBcIk91ciBlZHVjYXRpb24gc3BlY2lhbGlzdHMgd29yayBjbG9zZWx5IHdpdGggdGVhY2hlcnMgdG8gbWVldCBjaGlsZHJlbiB3aGVyZSB0aGV5IGFyZSBpbiB0aGUgZWR1Y2F0aW9uYWwgbGFuZHNjYXBlLiBLaWRzIGxlYXJuIHNraWxscyB0aGF0IGNhbiBiZSBhcHBsaWVkIG91dHNpZGUgb2YgdGhlIGdhbWUgYmVjYXVzZSB0aGV5IGxlYXJuIGhvdyB0byBzb2x2ZSBwcm9ibGVtcywgbm8gbWF0dGVyIHdoYXQgdGhlaXIgbGVhcm5pbmcgc3R5bGUgaXMuXCJcbiMgICAgbWlzc2lvbjJfY29weTogXCJBIDIwMTYgc3VydmV5IHNob3dlZCB0aGF0IDY0JSBvZiBnaXJscyBpbiAzLTV0aCBncmFkZSB3YW50IHRvIGxlYXJuIGhvdyB0byBjb2RlLiBUaGVyZSB3ZXJlIDcgbWlsbGlvbiBqb2Igb3BlbmluZ3MgaW4gMjAxNSByZXF1aXJlZCBjb2Rpbmcgc2tpbGxzLiBXZSBidWlsdCBDb2RlQ29tYmF0IGJlY2F1c2UgZXZlcnkgY2hpbGQgc2hvdWxkIGJlIGdpdmVuIGEgY2hhbmNlIHRvIGNyZWF0ZSB0aGVpciBiZXN0IGZ1dHVyZS5cIlxuIyAgICBtaXNzaW9uM19jb3B5OiBcIkF0IENvZGVDb21iYXQsIHdl4oCZcmUgcGFyZW50cy4gV2XigJlyZSBjb2RlcnMuIFdl4oCZcmUgZWR1Y2F0b3JzLiBCdXQgbW9zdCBvZiBhbGwsIHdl4oCZcmUgcGVvcGxlIHdobyBiZWxpZXZlIGluIGdpdmluZyBvdXIga2lkcyB0aGUgYmVzdCBvcHBvcnR1bml0eSBmb3Igc3VjY2VzcyBpbiB3aGF0ZXZlciBpdCBpcyB0aGV5IGRlY2lkZSB0byBkby5cIlxuXG4jICBwYXJlbnRfbW9kYWw6XG4jICAgIHJlZmVyX3RlYWNoZXI6IFwiUmVmZXIgVGVhY2hlclwiXG4jICAgIG5hbWU6IFwiWW91ciBOYW1lXCJcbiMgICAgcGFyZW50X2VtYWlsOiBcIllvdXIgRW1haWxcIlxuIyAgICB0ZWFjaGVyX2VtYWlsOiBcIlRlYWNoZXIncyBFbWFpbFwiXG4jICAgIG1lc3NhZ2U6IFwiTWVzc2FnZVwiXG4jICAgIGN1c3RvbV9tZXNzYWdlOiBcIkkganVzdCBmb3VuZCBDb2RlQ29tYmF0IGFuZCB0aG91Z2h0IGl0J2QgYmUgYSBncmVhdCBwcm9ncmFtIGZvciB5b3VyIGNsYXNzcm9vbSEgSXQncyBhIGNvbXB1dGVyIHNjaWVuY2UgbGVhcm5pbmcgcGxhdGZvcm0gd2l0aCBzdGFuZGFyZHMtYWxpZ25lZCBjdXJyaWN1bHVtLlxcblxcbkNvbXB1dGVyIGxpdGVyYWN5IGlzIHNvIGltcG9ydGFudCBhbmQgSSB0aGluayB0aGlzIHdvdWxkIGJlIGEgZ3JlYXQgd2F5IHRvIGdldCBzdHVkZW50cyBlbmdhZ2VkIGluIGxlYXJuaW5nIHRvIGNvZGUuXCJcbiMgICAgc2VuZDogXCJTZW5kIEVtYWlsXCJcblxuIyAgaG9jXzIwMTg6XG4jICAgIGJhbm5lcjogXCJIYXBweSBDb21wdXRlciBTY2llbmNlIEVkdWNhdGlvbiBXZWVrIDIwMTghXCJcbiMgICAgcGFnZV9oZWFkaW5nOiBcIllvdXIgc3R1ZGVudHMgd2lsbCBsZWFybiB0byBjb2RlIGJ5IGJ1aWxkaW5nIHRoZWlyIG93biBnYW1lIVwiXG4jICAgIHN0ZXBfMTogXCJTdGVwIDE6IFdhdGNoIFZpZGVvIE92ZXJ2aWV3XCJcbiMgICAgc3RlcF8yOiBcIlN0ZXAgMjogVHJ5IGl0IFlvdXJzZWxmXCJcbiMgICAgc3RlcF8zOiBcIlN0ZXAgMzogRG93bmxvYWQgTGVzc29uIFBsYW5cIlxuIyAgICB0cnlfYWN0aXZpdHk6IFwiVHJ5IEFjdGl2aXR5XCJcbiMgICAgZG93bmxvYWRfcGRmOiBcIkRvd25sb2FkIFBERlwiXG4jICAgIHRlYWNoZXJfc2lnbnVwX2hlYWRpbmc6IFwiVHVybiBIb3VyIG9mIENvZGUgaW50byBhIFllYXIgb2YgQ29kZVwiXG4jICAgIHRlYWNoZXJfc2lnbnVwX2JsdXJiOiBcIkV2ZXJ5dGhpbmcgeW91IG5lZWQgdG8gdGVhY2ggY29tcHV0ZXIgc2NpZW5jZSwgbm8gcHJpb3IgZXhwZXJpZW5jZSBuZWVkZWQuXCJcbiMgICAgdGVhY2hlcl9zaWdudXBfaW5wdXRfYmx1cmI6IFwiR2V0IGZpcnN0IGNvdXJzZSBmcmVlOlwiXG4jICAgIHRlYWNoZXJfc2lnbnVwX2lucHV0X3BsYWNlaG9sZGVyOiBcIlRlYWNoZXIgZW1haWwgYWRkcmVzc1wiXG4jICAgIHRlYWNoZXJfc2lnbnVwX2lucHV0X2J1dHRvbjogXCJHZXQgQ1MxIEZyZWVcIlxuIyAgICBhY3Rpdml0aWVzX2hlYWRlcjogXCJNb3JlIEhvdXIgb2YgQ29kZSBBY3Rpdml0aWVzXCJcbiMgICAgYWN0aXZpdHlfbGFiZWxfMTogXCJFc2NhcGUgdGhlIER1bmdlb24hXCJcbiMgICAgYWN0aXZpdHlfbGFiZWxfMjogXCIgQmVnaW5uZXI6IEJ1aWxkIGEgR2FtZSFcIlxuIyAgICBhY3Rpdml0eV9sYWJlbF8zOiBcIkFkdmFuY2VkOiBCdWlsZCBhbiBBcmNhZGUgR2FtZSFcIlxuIyAgICBhY3Rpdml0eV9idXR0b25fMTogXCJWaWV3IExlc3NvblwiXG4jICAgIGFib3V0OiBcIkFib3V0IENvZGVDb21iYXRcIlxuIyAgICBhYm91dF9jb3B5OiBcIkEgZ2FtZS1iYXNlZCwgc3RhbmRhcmRzLWFsaWduZWQgY29tcHV0ZXIgc2NpZW5jZSBwcm9ncmFtIHRoYXQgdGVhY2hlcyByZWFsLCB0eXBlZCBQeXRob24gYW5kIEphdmFTY3JpcHQuXCJcbiMgICAgcG9pbnQxOiBcIuKckyBTY2FmZm9sZGVkXCJcbiMgICAgcG9pbnQyOiBcIuKckyBEaWZmZXJlbnRpYXRlZFwiXG4jICAgIHBvaW50MzogXCLinJMgQXNzZXNzbWVudHNcIlxuIyAgICBwb2ludDQ6IFwi4pyTIFByb2plY3QtYmFzZWQgY291cnNlc1wiXG4jICAgIHBvaW50NTogXCLinJMgU3R1ZGVudCB0cmFja2luZ1wiXG4jICAgIHBvaW50NjogXCLinJMgRnVsbCBsZXNzb24gcGxhbnNcIlxuIyAgICB0aXRsZTogXCJIT1VSIE9GIENPREUgMjAxOFwiXG4jICAgIGFjcm9ueW06IFwiSE9DXCJcblxuIyAgaG9jXzIwMThfaW50ZXJzdGl0aWFsOlxuIyAgICB3ZWxjb21lOiBcIldlbGNvbWUgdG8gQ29kZUNvbWJhdCdzIEhvdXIgb2YgQ29kZSAyMDE4IVwiXG4jICAgIGVkdWNhdG9yOiBcIkknbSBhbiBlZHVjYXRvclwiXG4jICAgIHNob3dfcmVzb3VyY2VzOiBcIlNob3cgbWUgdGVhY2hlciByZXNvdXJjZXMhXCJcbiMgICAgc3R1ZGVudDogXCJJJ20gYSBzdHVkZW50XCJcbiMgICAgcmVhZHlfdG9fY29kZTogXCJJJ20gcmVhZHkgdG8gY29kZSFcIlxuXG4jICBob2NfMjAxOF9jb21wbGV0aW9uOlxuIyAgICBjb25ncmF0dWxhdGlvbnM6IFwiQ29uZ3JhdHVsYXRpb25zIG9uIGNvbXBsZXRpbmcgPGI+Q29kZSwgUGxheSwgU2hhcmUhPC9iPlwiXG4jICAgIHNlbmQ6IFwiU2VuZCB5b3VyIEhvdXIgb2YgQ29kZSBnYW1lIHRvIGZyaWVuZHMgYW5kIGZhbWlseSFcIlxuIyAgICBjb3B5OiBcIkNvcHkgVVJMXCJcbiMgICAgZ2V0X2NlcnRpZmljYXRlOiBcIkdldCBhIGNlcnRpZmljYXRlIG9mIGNvbXBsZXRpb24gdG8gY2VsZWJyYXRlIHdpdGggeW91ciBjbGFzcyFcIlxuIyAgICBnZXRfY2VydF9idG46IFwiR2V0IENlcnRpZmljYXRlXCJcbiMgICAgZmlyc3RfbmFtZTogXCJGaXJzdCBOYW1lXCJcbiMgICAgbGFzdF9pbml0aWFsOiBcIkxhc3QgSW5pdGlhbFwiXG4jICAgIHRlYWNoZXJfZW1haWw6IFwiVGVhY2hlcidzIGVtYWlsIGFkZHJlc3NcIlxuXG4jICBzY2hvb2xfYWRtaW5pc3RyYXRvcjpcbiMgICAgdGl0bGU6IFwiU2Nob29sIEFkbWluaXN0cmF0b3IgRGFzaGJvYXJkXCJcbiMgICAgbXlfdGVhY2hlcnM6IFwiTXkgVGVhY2hlcnNcIlxuIyAgICBsYXN0X2xvZ2luOiBcIkxhc3QgTG9naW5cIlxuIyAgICBsaWNlbnNlc191c2VkOiBcImxpY2Vuc2VzIHVzZWRcIlxuIyAgICB0b3RhbF9zdHVkZW50czogXCJ0b3RhbCBzdHVkZW50c1wiXG4jICAgIGFjdGl2ZV9zdHVkZW50czogXCJhY3RpdmUgc3R1ZGVudHNcIlxuIyAgICBwcm9qZWN0c19jcmVhdGVkOiBcInByb2plY3RzIGNyZWF0ZWRcIlxuIyAgICBvdGhlcjogXCJPdGhlclwiXG4jICAgIG5vdGljZTogXCJUaGUgZm9sbG93aW5nIHNjaG9vbCBhZG1pbmlzdHJhdG9ycyBoYXZlIHZpZXctb25seSBhY2Nlc3MgdG8geW91ciBjbGFzc3Jvb20gZGF0YTpcIlxuIyAgICBhZGRfYWRkaXRpb25hbF90ZWFjaGVyOiBcIk5lZWQgdG8gYWRkIGFuIGFkZGl0aW9uYWwgdGVhY2hlcj8gQ29udGFjdCB5b3VyIENvZGVDb21iYXQgQWNjb3VudCBNYW5hZ2VyIG9yIGVtYWlsIHN1cHBvcnRAY29kZWNvbWJhdC5jb20uIFwiXG4jICAgIGxpY2Vuc2Vfc3RhdF9kZXNjcmlwdGlvbjogXCJMaWNlbnNlcyBhdmFpbGFibGUgYWNjb3VudHMgZm9yIHRoZSB0b3RhbCBudW1iZXIgb2YgbGljZW5zZXMgYXZhaWxhYmxlIHRvIHRoZSB0ZWFjaGVyLCBpbmNsdWRpbmcgU2hhcmVkIExpY2Vuc2VzLlwiXG4jICAgIHN0dWRlbnRzX3N0YXRfZGVzY3JpcHRpb246IFwiVG90YWwgc3R1ZGVudHMgYWNjb3VudHMgZm9yIGFsbCBzdHVkZW50cyBhY3Jvc3MgYWxsIGNsYXNzcm9vbXMsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGV5IGhhdmUgbGljZW5zZXMgYXBwbGllZC5cIlxuIyAgICBhY3RpdmVfc3R1ZGVudHNfc3RhdF9kZXNjcmlwdGlvbjogXCJBY3RpdmUgc3R1ZGVudHMgY291bnRzIHRoZSBudW1iZXIgb2Ygc3R1ZGVudHMgdGhhdCBoYXZlIGxvZ2dlZCBpbnRvIENvZGVDb21iYXQgaW4gdGhlIGxhc3QgNjAgZGF5cy5cIlxuIyAgICBwcm9qZWN0X3N0YXRfZGVzY3JpcHRpb246IFwiUHJvamVjdHMgY3JlYXRlZCBjb3VudHMgdGhlIHRvdGFsIG51bWJlciBvZiBHYW1lIGFuZCBXZWIgZGV2ZWxvcG1lbnQgcHJvamVjdHMgdGhhdCBoYXZlIGJlZW4gY3JlYXRlZC5cIlxuIyAgICBub190ZWFjaGVyczogXCJZb3UgYXJlIG5vdCBhZG1pbmlzdHJhdGluZyBhbnkgdGVhY2hlcnMuXCJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9sb2NhbGUvcHQtUFQuY29mZmVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1076\n");

/***/ })

});