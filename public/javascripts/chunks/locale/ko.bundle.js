/*! hash:345dfe6c0e434e9c7378, chunkhash:af2cc364641da5f8489e, name:locale/ko, filebase:ko.bundle.js, query:, file:javascripts/chunks/locale/ko.bundle.js */
webpackJsonp([46],{

/***/ 1062:
/***/ (function(module, exports) {

eval("module.exports = {\n  nativeDescription: \"한국어\",\n  englishDescription: \"Korean\",\n  translation: {\n    new_home: {\n      slogan: \"코딩을 배우는 가장 매력적인 방법!\",\n      learn_to_code: \"코딩 배우기:\",\n      play_now: \"지금 시작하기\",\n      im_a_teacher: \"선생님입니다\",\n      im_a_student: \"학생입니다\",\n      learn_more: \"더 알아보기\",\n      from_the_first_level: \"첫 번째 레벨부터\",\n      educator_resources: \"교육자 자료들\",\n      course_guides: \"그리고 코스 가이드\",\n      teaching_computer_science: \"우리는 어떤 배경을 가진 교육자라도 지원하는 도구를 가지고 있기 때문에, 컴퓨터 공학을 가르치는 것은 비싼 학위를 필요로하지 않습니다.\",\n      everyone: \"모두\",\n      motivating: \"동기부여\",\n      not_tedious: \"지루하지 않습니다.\",\n      request_demo_title: \"오늘 학생들이 시작할 수 있도록 하세요!\",\n      request_demo_subtitle: \"학생들이 한시간 이내에 시작할 수 있도록 데모를 요청하세요.\",\n      get_started_title: \"오늘 수업을 준비해보세요\",\n      get_started_subtitle: \"수업을 준비하고, 학생을 추가하고, 학생들의 컴퓨터 공학 실력 향상을 관찰해보세요.\",\n      request_demo: \"데모 요청하기\",\n      setup_a_class: \"수업 준비하기\",\n      have_an_account: \"계정이 있으십니까?\",\n      logged_in_as: \"당신은 다음 계정으로 로그인되어있습니다.\",\n      ffa: \"모든 학생들에게 무료\",\n      run_class: \"당신이 해야할 일은 오늘 학교에서 컴퓨터공학수업을 실행하는 것입니다. 어떠한 컴퓨터공학 배경지식도 필요하지 않습니다.\",\n      goto_classes: \"내 수업들 바로가기\",\n      view_profile: \"내 프로필 보기\",\n      view_progress: \"진행 상황 보기\",\n      want_coco: \"학교에서 코드컴뱃을 해 보고 싶나요?\"\n    },\n    nav: {\n      map: \"맵\",\n      play: \"레벨\",\n      community: \"커뮤니티\",\n      courses: \"코스\",\n      blog: \"블로그\",\n      forum: \"포럼\",\n      account: \"계정\",\n      my_account: \"내 계정\",\n      profile: \"프로필\",\n      home: \"홈\",\n      contribute: \"참여하기\",\n      legal: \"법\",\n      privacy: \"프라이버시\",\n      about: \"소개\",\n      contact: \"문의\",\n      twitter_follow: \"팔로우\",\n      my_classrooms: \"나의 클래스\",\n      my_courses: \"나의 코스\",\n      careers: \"채용\",\n      facebook: \"페이스북\",\n      twitter: \"트위터\",\n      create_a_class: \"클래스 생성\",\n      learn_to_code: \"코드 학습하기!\",\n      schools: \"학교\",\n      open_source: \"오픈 소스 (GitHub)\",\n      support: \"지원\",\n      faqs: \"자주 묻는 질문\",\n      help_pref: \"도움이 필요하신가요? 이메일을 보내주세요.\",\n      help_suff: \"저희가 도와드리겠습니다.\"\n    },\n    modal: {\n      close: \"닫기\",\n      okay: \"확인\"\n    },\n    not_found: {\n      page_not_found: \"페이지를 찾을 수 없습니다\"\n    },\n    diplomat_suggestion: {\n      title: \"코드 컴뱃 번역을 도와주세요!\",\n      sub_heading: \"우리는 당신의 언어 능력이 필요합니다.\",\n      pitch_body: \"우리는 영어로 코드 컴뱃을 개발하기 시작했지만, 이미 전세계의 유저들이 코드 컴뱃을 이용하고 있습니다. 그 중 많은 사람들이 한국어로 플레이하기를 바랍니다. 혹시 당신이 영어/한국어에 모두 능숙하다면, 외교관(Diplomate)으로 코드 컴뱃에 참여해서 모든 레벨 뿐만 아니라 웹사이트를 한국어로 번역할 수 있습니다.\",\n      missing_translations: \"우리가 모든 내용을 한국어로 번역할 때까지 기본은 영어로 제공됩니다.\",\n      learn_more: \"외교관에 대해서 좀 더 자세히 알아보기\",\n      subscribe_as_diplomat: \"외교관을 위한 정기 구독\"\n    },\n    play: {\n      play_as: \"같이 플레이\",\n      compete: \"경쟁!\",\n      spectate: \"관중모드\",\n      players: \"플레이어\",\n      hours_played: \"플레이한 시간\",\n      items: \"아이템\",\n      unlock: \"해제\",\n      confirm: \"확인\",\n      owned: \"소지함\",\n      locked: \"잠김\",\n      available: \"가능\",\n      skills_granted: \"부여된 스킬\",\n      heroes: \"영웅들\",\n      achievements: \"성취한 목표\",\n      settings: \"설정\",\n      poll: \"투표\",\n      next: \"다음\",\n      change_hero: \"영웅 교체\",\n      buy_gems: \"젬 구매\",\n      subscribers_only: \"가입을 해야 합니다.\",\n      subscribe_unlock: \"해제하려면 가입을 해 주세요.\",\n      subscriber_heroes: \"오늘 구독하시면 Amara와 Hushbaum, Hattori가 즉시 해제됩니다!\",\n      subscriber_gems: \"보석으로 이 영웅을 구매하려면 오늘 구독하십시오!\",\n      anonymous: \"이름 없는 플레이어\",\n      level_difficulty: \"난이도: \",\n      awaiting_levels_adventurer_prefix: \"매주 새로운 레벨이 생깁니다.\",\n      awaiting_levels_adventurer: \"모험자로 등록 하세요!\",\n      awaiting_levels_adventurer_suffix: \"새로운 레벨을 가장 먼저 체험하세요!\",\n      adjust_volume: \"소리 조절\",\n      campaign_multiplayer: \"멀티 플레이어 전투장\",\n      campaign_multiplayer_description: \"... 이곳에서 당신은 다른 플레이어들(사람들)과 직접 결투할 수 있습니다.\",\n      brain_pop_done: \"이겼어요! 당신의 코드로 오우거를 물리쳤습니다!\",\n      brain_pop_challenge: \"다른 프로그래밍 언어로도 도전해 보세요!\",\n      replay: \"다시 하기\",\n      back_to_classroom: \"교실로 돌아가기\",\n      teacher_button: \"교사용\"\n    },\n    share_progress_modal: {\n      blurb: \"당신은 큰 진전을 보이고 있습니다! 당신이 코드컴뱃으로 얼마나 많이 배웠는지 부모님께 자랑하십시오.\",\n      email_invalid: \"이메일 주소가 올바르지 않습니다.\",\n      form_blurb: \"아래에 부모님의 이메일 주소를 입력하세요. 부모님께 보여드릴게요!\",\n      form_label: \"이메일 주소 입력\",\n      placeholder: \"이메일 주소 입력\",\n      title: \"잘 했어요!\"\n    },\n    login: {\n      sign_up: \"계정 생성\",\n      email_or_username: \"이메일 또는 사용자 이름\",\n      log_in: \"로그인\",\n      logging_in: \"로그인 중\",\n      log_out: \"로그아웃\",\n      forgot_password: \"비밀번호를 잊으셨나요?\",\n      finishing: \"완료중..\",\n      sign_in_with_facebook: \"페이스북으로 로그인\",\n      sign_in_with_gplus: \"G+로 로그인\",\n      signup_switch: \"새로운 계정을 만드세요.\"\n    },\n    signup: {\n      complete_subscription: \"구독 완료\",\n      create_student_header: \"학생 계정 생성\",\n      create_teacher_header: \"교사 계정 생성\",\n      create_individual_header: \"개인 계정 생성\",\n      email_announcements: \"안내 사항을 메일로 받겠습니다\",\n      sign_in_to_continue: \"계속하려면 로그인하거나 계정을 만드십시오.\",\n      teacher_email_announcements: \"새로운 교사 자료, 커리큘럼 및 코스를 계속 업데이트해주세요!\",\n      creating: \"계정을 생성 중입니다...\",\n      sign_up: \"계정 생성\",\n      log_in: \"비밀번호로 로그인\",\n      required: \"진행하기 전에 로그인이 필요합니다.\",\n      login_switch: \"이미 계정이 있으신가요?\",\n      optional: \"옵션\",\n      connected_gplus_header: \"Google+ 계정으로 연결되었습니다!\",\n      connected_facebook_header: \"페이스북 계정으로 연결되었습니다!\",\n      birthday: \"생일\",\n      checking: \"확인 중...\",\n      account_exists: \"이 이메일 주소는 누군가 사용 중입니다.\",\n      sign_in: \"로그인하기\",\n      email_good: \"올바른 이메일 주소네요!\",\n      name_taken: \"누군가가 사용 중인 Username입니다! {{suggestedName}}는 어때요?\",\n      name_available: \"사용 가능한 Username입니다!\",\n      name_is_email: \"Username은 이메일 주소로 할 수 없습니다.\",\n      choose_type: \" 계정 유형을 선택하세요:\",\n      teacher_type_1: \"Codecombat을 이용하여 프로그래밍을 가르치세요!\",\n      teacher_type_2: \" 클래스를 설정해주세요.\",\n      teacher_type_3: \" 가이드 보기\",\n      teacher_type_4: \" 학생들의 진행 상황보기\",\n      signup_as_teacher: \" 교사용 계정 생성 \",\n      student_type_1: \" 재미있는 게임을 통해 프로그래밍을 배우세요!\",\n      student_type_2: \" 당신의 클래스와 게임하세요.\",\n      student_type_3: \" 아레나에서 경쟁하기.\",\n      student_type_4: \"영웅을 선택하세요!\",\n      student_type_5: \" 클래스 코드가 준비 되어있습니다!\",\n      signup_as_student: \" 학생용 계정 생성.\",\n      individuals_or_parents: \" 개인 & 부모 \",\n      individual_type: \" 클래스를 이용하지않고 이용하실 겨우에는 부모님이 계정을 먼저 만드세요.\",\n      signup_as_individual: \" 개인 계정을 생성 \",\n      enter_class_code: \" 클래스 코드를 입력하세요.\",\n      enter_birthdate: \" 생일을 입력하세요:\",\n      parent_use_birthdate: \" 부모님의 생일을 적어주세요.\",\n      ask_teacher_1: \" 선생님께 클래스를 물어보세요.\",\n      ask_teacher_2: \" 클래스가 없으십니까? 클래스를 만드세요. \",\n      ask_teacher_3: \" 개인 계정 \",\n      ask_teacher_4: \"  대신 \",\n      about_to_join: \" 가입 가능합니다:\",\n      enter_parent_email: \" 부모님의 이메일 주소를 입력하세요:\",\n      parent_email_error: \" 이메일 보내는 과정에서 오류가 발생했습니다. 이메일 주소를 다시 확인해주세요.\",\n      parent_email_sent: \" 계정 만드는 법과 함께 이메일을 보냈습니다. 부모님 이메일을 확인하세요. \",\n      account_created: \" 계정 생성 성공!\",\n      confirm_student_blurb: \" 까먹지 않기 위해 당신의 정보를 적어 놓으세요. 선생님도 비밀번호 초기화를 언제든지 해줄 수 있습니다.\",\n      confirm_individual_blurb: \"나중에 필요할 수 도 있기 떄문에 로그인 정보를 적어두세요. 나중에 아이디나 비밀번호를 까먹을 수 있기 떄문에 이메일 인증을 받으세요. 수신함을 확인하세요!\",\n      write_this_down: \" 이 정보를 적어두세요:\",\n      start_playing: \"게임을 시작하세요!\",\n      sso_connected: \"성공적으로 연결 되었습니다:\",\n      select_your_starting_hero: \"처음 게임 할 영웅을 고르세요:\",\n      you_can_always_change_your_hero_later: \"언제든지 영웅을 바꾸실 수 있습니다.\",\n      finish: \"완료\",\n      teacher_ready_to_create_class: \"첫 클래스를 생성 할 준비가 다 되어있습니다!\",\n      teacher_students_can_start_now: \"당신의 학생들은 첫 수업 '전산학 개론'을 바로 진행할 수 있습니다.\",\n      teacher_list_create_class: \"다음 화면에선 새로운 클래스를 만듭니다.\",\n      teacher_list_add_students: \"View Class link를 눌러 학생들은 클래스에 등록하세요. 그 다음 학생들에게 클래스 코드 혹은 URL을 보내세요. 이메일 주소로도 학생들을 등록시킬 수 있습니다.\",\n      teacher_list_resource_hub_1: \"확인하세요.\",\n      teacher_list_resource_hub_2: \"게임 가이드.\",\n      teacher_list_resource_hub_3: \"모든 레벨에 대한 답은, 그리고\",\n      teacher_list_resource_hub_4: \"자원 중심지\",\n      teacher_list_resource_hub_5: \"커리큘럼 가이드, 활동, 더 많은정보를 알 수 있습니다.\",\n      teacher_additional_questions: \"끝났습니다! 혹시 다른 문제는 도움이 필요하신다면, \\\"support email\\\"을 통해 물어보세요.\",\n      dont_use_our_email_silly: \"학생의 이메일을 쓰지 마세요! 부모님의 이메일을 쓰세요.\",\n      want_codecombat_in_school: \"CodeCombat을 언제든지 하고 싶으신가요?\",\n      eu_confirmation: \"나는 내 정보들을 CodeCombat이 미국 서버에 저장하는 것을 허용한다.\",\n      eu_confirmation_place_of_processing: \"Learn more about the possible risks 다른 위험에 대해 알아봅시다.\",\n      eu_confirmation_student: \"확실하지 않다면, 선생님께 물어보세요.\",\n      eu_confirmation_individual: \"자신의 정보가 미국 서버에 저장되는게 싫으시다면, 언제든지 익명으로 게임하시면 됩니다.\"\n    },\n    recover: {\n      recover_account_title: \"계정 복구\",\n      send_password: \"복구 비밀번호 전송\",\n      recovery_sent: \"메일 전송 완료\"\n    },\n    items: {\n      primary: \"주 장비\",\n      secondary: \"보조 장비\",\n      armor: \"갑옷\",\n      accessories: \"액세서리\",\n      misc: \"잡동사니\",\n      books: \"책\"\n    },\n    common: {\n      back: \"뒤로가기\",\n      coming_soon: \"개발 중!\",\n      \"continue\": \"계속\",\n      next: \"다음\",\n      default_code: \"기본 코드\",\n      loading: \"로딩중입니다...\",\n      solution: \"해결책\",\n      saving: \"저장중입니다...\",\n      sending: \"보내는 중입니다...\",\n      send: \"전송\",\n      sent: \"전송됨\",\n      cancel: \"취소\",\n      save: \"저장\",\n      publish: \"내보내기\",\n      create: \"생성\",\n      fork: \"포크\",\n      play: \"시작\",\n      retry: \"재시도\",\n      actions: \"행동\",\n      info: \"정보\",\n      help: \"도움말\",\n      watch: \"보기\",\n      unwatch: \"보기 해제\",\n      submit_patch: \"패치 제출\",\n      submit_changes: \"변경사항 제출\",\n      save_changes: \"변경사항 저장\",\n      required_field: \"필수\"\n    },\n    general: {\n      and: \"그리고\",\n      name: \"이름\",\n      date: \"날짜\",\n      body: \"구성\",\n      version: \"버전\",\n      pending: \"적용중\",\n      accepted: \"적용됨\",\n      rejected: \"거부됨\",\n      withdrawn: \"취소됨\",\n      accept: \"승인\",\n      reject: \"보류\",\n      withdraw: \"철수\",\n      submitter: \"제출자\",\n      submitted: \"제출됨\",\n      commit_msg: \"커밋 메세지\",\n      version_history: \"버전 히스토리\",\n      version_history_for: \"버전 히스토리 : \",\n      select_changes: \"차이를 보기위해 두 가지 사항을 변경하도록 선택합니다.\",\n      undo_prefix: \"되돌리기\",\n      undo_shortcut: \"(Ctrl+Z)\",\n      redo_prefix: \"다시하기\",\n      redo_shortcut: \"(Ctrl+Shift+Z)\",\n      play_preview: \"현재 레벨의 미리보기 재생\",\n      result: \"결과\",\n      results: \"결과들\",\n      description: \"설명\",\n      or: \"또는\",\n      subject: \"제목\",\n      email: \"이메일\",\n      password: \"비밀번호\",\n      confirm_password: \"비밀번호 확인\",\n      message: \"메시지\",\n      code: \"코드\",\n      ladder: \"레더\",\n      when: \"언제\",\n      opponent: \"상대\",\n      rank: \"랭크\",\n      score: \"점수\",\n      win: \"승\",\n      loss: \"패\",\n      tie: \"무승부\",\n      easy: \"초급\",\n      medium: \"중급\",\n      hard: \"상급\",\n      player: \"플레이어\",\n      player_level: \"플레이어 레벨\",\n      warrior: \"전사\",\n      ranger: \"레인저\",\n      wizard: \"마법사\",\n      first_name: \"이름\",\n      last_name: \"성\",\n      username: \"사용자 이름\",\n      close_window: \"창 닫기\",\n      learn_more: \"더 배우기\"\n    },\n    units: {\n      second: \"초\",\n      seconds: \"초\",\n      sec: \"초\",\n      minute: \"분\",\n      minutes: \"분\",\n      hour: \"시간\",\n      hours: \"시간\",\n      day: \"일\",\n      days: \"일\",\n      week: \"주\",\n      weeks: \"주\",\n      month: \"개월\",\n      months: \"개월\",\n      year: \"년\",\n      years: \"년\"\n    },\n    play_level: {\n      back_to_map: \"맵으로 돌아가기\",\n      level_complete: \"레벨 완료\",\n      completed_level: \"완료된 레벨:\",\n      course: \"코스:\",\n      done: \"완료\",\n      next_level: \"다음 레벨\",\n      combo_challenge: \"도전 레벨(콤보)\",\n      concept_challenge: \"도전 레벨(개념 이해)\",\n      challenge_unlocked: \"도전 레벨 잠금 해제됨\",\n      combo_challenge_unlocked: \"도전 레벨(콤보) 잠금 해제됨\",\n      concept_challenge_unlocked: \"도전 레벨(개념 이해) 잠금 해제됨\",\n      concept_challenge_complete: \"도전 성공!\",\n      combo_challenge_complete: \"도전 성공\",\n      combo_challenge_complete_body: \"잘 했어요! __concept__에 대해 잘 이해하고 있는 것 같군요!\",\n      replay_level: \"레벨 다시 플레이하기\",\n      start_challenge: \"도전하기!\",\n      next_game: \"다음 게임\",\n      languages: \"언어\",\n      programming_language: \"프로그래밍 언어\",\n      show_menu: \"게임 메뉴 보이기\",\n      home: \"홈\",\n      level: \"레벨\",\n      skip: \"넘어가기\",\n      game_menu: \"게임 메뉴\",\n      restart: \"재시작\",\n      goals: \"목표들\",\n      goal: \"목표\",\n      challenge_level_goals: \"도전 레벨의 목표들\",\n      challenge_level_goal: \"도전 레벨의 목표\",\n      concept_challenge_goals: \"도전 레벨(개념 이해)의 목표들\",\n      combo_challenge_goals: \"도전 레벨(콤보)의 목표\",\n      concept_challenge_goal: \"도전 레벨(개념 이해)의 목표들\",\n      combo_challenge_goal: \"도전 레벨(콤보)의 목표\",\n      running: \"실행중...\",\n      success: \"성공!\",\n      incomplete: \"목표 미완료\",\n      timed_out: \"제한 시간 초과\",\n      failing: \"다시 한번 더 도전해보세요.\",\n      reload: \"새로고침\",\n      reload_title: \"코드를 초기화할까요?\",\n      reload_really: \"정말로 이 레벨의 코드를 처음 상태로 되돌리겠습니까?\",\n      reload_confirm: \"코드 초기화\",\n      victory: \"승리\",\n      victory_title_prefix: \"\",\n      victory_title_suffix: \" 완료\",\n      victory_sign_up: \"진행사항을 저장하려면 가입하세요\",\n      victory_sign_up_poke: \"코드를 저장하고 싶으세요? 지금 계정을 만들어 보세요!\",\n      victory_rate_the_level: \"이번 레벨 평가: \",\n      victory_return_to_ladder: \"레더로 돌아가기\",\n      victory_saving_progress: \"저장하기\",\n      victory_go_home: \"홈으로\",\n      victory_review: \"리뷰를 남겨주세요\",\n      victory_review_placeholder: \"이 레벨 어땠어요?\",\n      victory_hour_of_code_done: \"정말 종료합니까?\",\n      victory_hour_of_code_done_yes: \"네 내 Hour of Code™ 완료했습니다!\",\n      victory_experience_gained: \"획득한 경험치\",\n      victory_gems_gained: \"획득한 젬\",\n      victory_new_item: \"새로운 아이템 획득\",\n      victory_new_hero: \"새로운 영웅\",\n      victory_viking_code_school: \"맙소사, 방금 당신이 클리어한 레벨은 정말 어려운 레벨이었어요! 혹시 소프트웨어 개발자인가요? 아직 아니라면, 개발자가 되어 보세요! 바이킹 코드 스쿨에서 14주 동안 전문적인 웹 개발자 교육을 받을 수 있어요.\",\n      victory_become_a_viking: \"바이킹이 되기!\",\n      victory_no_progress_for_teachers: \"교사 계정으로는 진행상황이 저장되지 않습니다. 하지만, 당신이 사용할 학생 계정을 하나 추가할 수는 있지요.\",\n      tome_cast_button_run: \"실행\",\n      tome_cast_button_running: \"실행중\",\n      tome_cast_button_ran: \"실행됨\",\n      tome_submit_button: \"적용\",\n      tome_reload_method: \"원본 코드를 불러와 레벨 다시 시작하기\",\n      tome_available_spells: \"사용 가능한 마법\",\n      tome_your_skills: \"당신의 스킬\",\n      hints: \"힌트\",\n      hints_title: \"힌트 {{number}}\",\n      code_saved: \"코드가 저장됨\",\n      skip_tutorial: \"넘기기 (esc)\",\n      keyboard_shortcuts: \"단축키\",\n      loading_start: \"레벨 시작\",\n      loading_start_combo: \"도전 레벨(콤보) 시작\",\n      loading_start_concept: \"도전 레벨(개념 이해) 시작\",\n      problem_alert_title: \"코드를 수정하세요\",\n      time_current: \"현재:\",\n      time_total: \"최대:\",\n      time_goto: \"가기:\",\n      non_user_code_problem_title: \"레벨을 로드할 수 없습니다\",\n      infinite_loop_title: \"무한 루프 감지됨\",\n      infinite_loop_description: \"코드 실행이 끝나지 않고 있습니다. 코드가 매우 느리거나 무한 루프에 빠진 것 같습니다. 어쩌면 버그일 수도 있습니다. 이 코드를 다시 실행하거나 초기 상태로 리셋해 보세요. 그래도 해결되지 않으면, 저희에게 알려 주시기 바랍니다.\",\n      check_dev_console: \"또한 잘못 갈 수를 알기 위해 개발자 콘솔을 열 수 있습니다.\",\n      check_dev_console_link: \"(명령어)\",\n      infinite_loop_try_again: \"다시 시도해보세요.\",\n      infinite_loop_reset_level: \"레벨 리셋\",\n      infinite_loop_comment_out: \"내 코드를 일시적 주석처리하기\",\n      tip_toggle_play: \"Ctrl+P로 실행을 계속하거나 멈출수 있어요\",\n      tip_scrub_shortcut: \"Ctrl+[, Ctrl+] 를 이용해 실행 속도를 빠르게 할 수 있어요\",\n      tip_guide_exists: \"화면 상단의 가이드를 클릭해보세요. 유용한 정보를 얻을 수 있습니다.\",\n      tip_open_source: \"코드 컴뱃은 100% 오픈 소스 기반입니다!\",\n      tip_tell_friends: \"코드 컴뱃을 즐기셨나요? 친구에게 알려주십시오\",\n      tip_beta_launch: \"코드 컴뱃은 2013년 10월에 베타 서비스를 출시했습니다.\",\n      tip_think_solution: \"해결 방법을 고민해보세요, 문제를 고민하지 말구요\",\n      tip_theory_practice: \"이론적으로, 이론과 실제 사이의 차이가 없습니다. 그러나 연습은, 실전입니다 - 요기 베라\",\n      tip_error_free: \"오류이거나-자유로운 프로그램을 작성하는 두가지 길이 있습니다만; 오직 세번째의 한 작업입니다. - 엘랜 펄리스\",\n      tip_debugging_program: \"만약 디버깅이 버그를 잡는 작업이라면, 프로그래밍은 반드시 바른 진행이여야 할것입니다. - Edsger W. Dijkstra\",\n      tip_forums: \"포럼을 통해서 우리를 어떻게 생각하는지 말해요!\",\n      tip_baby_coders: \"앞으로는, 아기도 얼음마법사가 될 것 입니다.\",\n      tip_morale_improves: \"사기가 향상 될 때까지 로딩은 계속됩니다.\",\n      tip_all_species: \"우리는 모든 생물이 동등하게 프로그래밍을 배울 기회가 있어야 한다고 생각합니다.\",\n      tip_reticulating: \"그물모양의 돌기.\",\n      tip_harry: \"한 마법사, \",\n      tip_great_responsibility: \"좋은 코딩 기술은 큰 디버그 책임을 몰고옵니다.\",\n      tip_munchkin: \"만약 당신이 야채를 먹지않는다면, 난쟁이가 당신이 자고 있을때 찾아갑니다.\",\n      tip_binary: \"오직 사람들이 있는 세계는 10가지이다: 이진을 이해하는 사람들과 그렇지 않은 사람들.\",\n      tip_commitment_yoda: \"프로그래머가 깊은 헌신이 있어야한다는것은, 가장 심각한것이다. ~ 요다\",\n      tip_no_try: \"하든가 하지 말든가. 시도같은 건 없어. - 요다\",\n      tip_patience: \"반드시 인내심을 가져야한단다, 어린 파다완. - 요다\",\n      tip_documented_bug: \"문서화 된 버그는 버그가 아닙니다 ; 그것은 기능입니다.\",\n      tip_impossible: \"성공하기 전까진 불가능해 보이는 법이죠. - Nelson Mandela\",\n      tip_talk_is_cheap: \"떠드는 건 가치가 없어요. 코드를 보여줘봐요. - Linus Torvalds\",\n      tip_first_language: \"만약 당신이 배울 수있는 가장 최악의 일은 첫 번째 프로그래밍 언어을 배우는것입니다. - 엘랜 케이\",\n      tip_hardware_problem: \"Q: 많은 프로그래머는 전구를 가는데 얼마나 걸립니까?  A: 아니오, 이것은 하드웨어 문제입니다.\",\n      tip_hofstadters_law: \"호프스태터 의 법칙: 당신은 항상 예상보다 오래 걸립니다, 계정 호프스태터의 법칙을 고려하더라도 .\",\n      tip_premature_optimization: \"초기의 최적화는 모든 악의 뿌리입니다 . - 도날드 크누스\",\n      tip_brute_force: \"의심할때, 무력을 사용하게 됩니다. - 켄 톰프손\",\n      tip_extrapolation: \"사람은 두 가지 종류가 있습니다: 불완전한 데이터으로부터 유추할 수있는가...\",\n      tip_superpower: \"코딩은 우리가 강대국에 있는 가장 가까운 것입니다.\",\n      tip_control_destiny: \"진짜 오픈 소스는, 당신이 우리의 운명을 올바로 조작할 수 있습니다. - 리눅스 토발츠\",\n      tip_no_code: \"코드가 없는것보다 빠른것은 없습니다.\",\n      tip_code_never_lies: \"코드는 절대로 거짓말을 하지 않는다. 주석은 가끔 하지만.  — Ron Jeffries\",\n      tip_reusable_software: \"소프트웨어를 재사용하기전에 먼저 사용할 수 있습니다.\",\n      tip_optimization_operator: \"모든 언어는 최적화된 운영을 합니다. 대부분의 언어가 운영 ‘//’\",\n      tip_lines_of_code: \"코드 라인에 의해 프로그램의 진행 상황을 측정하는 것은 중량 항공기의 건축 진행 상황을 측정하는 것과 같다. — 빌 게이츠\",\n      tip_source_code: \"나는 세계를 바꾸고싶어도 그들은 나에게 소스코드를 주지 않습니다\",\n      tip_javascript_java: \"자바는 자바스크립트이고 차(카)는 카펫입니다. - 크리스 헤일만\",\n      tip_move_forward: \"당신이 무엇이든간에 , 계속 전진하십시오. - 마틴 러터킹 주니어.\",\n      tip_google: \"문제가 너무 어렵다구요? 구글로 검색해보세요!\",\n      tip_adding_evil: \"악마의 핀치를 추가하는중.\",\n      tip_hate_computers: \"즉, 그들은 컴퓨터를 싫어한다고 생각하는 사람들이며. 그들이 정말로 싫어 하는 것은 형편없는 프로그래머 입니다 . - 래리 리븐\",\n      tip_open_source_contribute: \"코드컴뱃을 향상하는데 도와주십시오!\",\n      tip_recurse: \"인간은 반복하고,신은 다시 돌아온다 - L. 피터 대치\",\n      tip_free_your_mind: \"모두 가자고할때 생기는 새로움으로인한. 두려움, 의심과 불신. 자유로운 생각을 가져라. - 모페어스\",\n      tip_strong_opponents: \"심지어 강한 상대의 항상 약점을 가지고있다. - 이타치 우치하\",\n      tip_paper_and_pen: \"코딩을 하기전에, 당신은 항상 종이와 펜으로 계획을 지니고 있어야합니다.\",\n      tip_solve_then_write: \"먼저, 문제를 해결하세요. 그러고, 코드를 쓰는겁니다. - 존 즌슨\",\n      tip_compiler_ignores_comments: \"가끔은 컴파일러가 나의 커멘트를 무시하는 것 같아.\",\n      tip_understand_recursion: \"재귀함수를 이해하는 유일한 방법은 재귀함수를 이해하는 것이다.\",\n      tip_life_and_polymorphism: \"오픈 소스에서는 어떠한 타입도 환영받는다.\",\n      tip_mistakes_proof_of_trying: \"당신의 코드에 존재하는 실수는 당신이 노력하고 있다는 증명이다.\",\n      tip_adding_orgres: \"오우거를 모으는 중.\",\n      tip_sharpening_swords: \"칼을 가는 중.\",\n      tip_ratatouille: \"다른 사람들이 너의 출신으로 너의 한계를 정의하지 말게하라. 너의 유일한 한계는 너의 영혼이다. - 셰프 구스토, 영화 라따뚜이에서\",\n      tip_nemo: \"인생이 너를 저버릴 때, 뭘 해야하는 아니? 그냥 헤엄치는 것이야. 헤엄쳐. - 도리, 영화 네모를 찾아서에서\",\n      tip_internet_weather: \"그냥 인터넷으로 이사 오지 그래. 참 좋은 곳인데 말이지. 인류는 항상 좋은 날씨에서 살고 싶어하잖아. - 존 그린\",\n      tip_nerds: \"바보들은 뭔가를 좋아하도록 허가되었지, 마치 의자에 앉아서 다리떠는 듯이 말이야. - 존 그린\",\n      tip_self_taught: \"난 나에게 내가 공부한 것의 90%를 가르쳤지. 그게 정상이거든! - 행크 그린\",\n      tip_luna_lovegood: \"걱정하지 마, 넌 나와 같은 부류야. - 루나 러브굿\",\n      tip_good_idea: \"좋은 생각을 떠올리게 하는 가장 좋은 방법은 아주 많은 생각을 떠오르게 하는 것이지. - 리누스 폴링\",\n      tip_programming_not_about_computers: \"컴퓨터 공학에 대하여 컴퓨터란, 천문학에 대하여 망원경과도 같지. - 에스커 다익스트라\",\n      tip_mulan: \"너 자신이 가능하다고 믿어, 그러면 그렇게 될거야. - 목란\",\n      project_complete: \"프로젝트 완성!\",\n      share_this_project: \"이 프로젝트를 친구와 가족에게 보여주자:\",\n      ready_to_share: \"프로젝트를 출시할 준비가 되었나요?\",\n      click_publish: \" \\\"Publish\\\"을 클릭해서 클래스 갤러리에서 보이게 하세요. 그리고 같은 반 학생들의 성과도 구경해보세요! 언제든지 돌아와서 이 프로젝트를 완성시킬 수 있습니다. 변경점들은 자동으로 저장되어 다른 사람들에게 공유할 수 있습니다.\",\n      already_published_prefix: \"변경점들이 클래스 캘러리에 공유되었습니다.\",\n      already_published_suffix: \"계속 새로운 시도를 해보고 이 프로젝트를 완성시켜보세요. 혹은 다른 사람들의 성과를 살펴보기도 하세요! 변경점들은 자동으로 저장되어 다른 사람들에게 공유할 수 있습니다.\",\n      view_gallery: \"갤러리 보기\",\n      project_published_noty: \"당신의 레벨이 공유되었습니다!\",\n      keep_editing: \"편집 중\"\n    },\n    apis: {\n      methods: \"Methods\",\n      events: \"Events\",\n      handlers: \"Handlers\",\n      properties: \"Properties\",\n      snippets: \"Snippets\",\n      spawnable: \"Spawnable\",\n      html: \"HTML\",\n      math: \"Math\",\n      array: \"Array\",\n      object: \"Object\",\n      string: \"String\",\n      \"function\": \"Function\",\n      vector: \"Vector\",\n      date: \"Date\",\n      jquery: \"jQuery\",\n      json: \"JSON\",\n      number: \"Number\",\n      webjavascript: \"JavaScript\"\n    },\n    game_menu: {\n      inventory_tab: \"인벤토리\",\n      save_load_tab: \"저장하기/불러오기\",\n      options_tab: \"옵션\",\n      guide_tab: \"가이드\",\n      guide_video_tutorial: \"영상 튜토리얼\",\n      guide_tips: \"팁들\",\n      multiplayer_tab: \"멀티 플레이\",\n      auth_tab: \"가입하기\",\n      inventory_caption: \"장비 장착\",\n      choose_hero_caption: \"영웅 및 언어 선택 \",\n      options_caption: \"설정들을 바꾸기\",\n      guide_caption: \"문서들과 팁들\",\n      multiplayer_caption: \"친구들과 플레이 하세요!\",\n      auth_caption: \"진행사항을 저장하세요\"\n    },\n    leaderboard: {\n      view_other_solutions: \"리더보드 보기\",\n      scores: \"점수\",\n      top_players: \"상위 플레이어\",\n      day: \"오늘\",\n      week: \"이번 주\",\n      all: \"모든-시간\",\n      latest: \"최근\",\n      time: \"시간\",\n      damage_taken: \"데미지 정도\",\n      damage_dealt: \"죽음을 맞은 데미지\",\n      difficulty: \"난이도\",\n      gold_collected: \"수집된 골드\"\n    },\n    inventory: {\n      equipped_item: \"장착됨\",\n      required_purchase_title: \"구매 필요\",\n      available_item: \"사용 가능\",\n      restricted_title: \"사용 불가\",\n      should_equip: \"(장착하려면 더블클릭)\",\n      equipped: \"(장착됨)\",\n      locked: \"(잠김)\",\n      restricted: \"(이 레벨에서는 사용불가)\",\n      equip: \"장착\",\n      unequip: \"해제\"\n    },\n    buy_gems: {\n      few_gems: \"gem 몇개\",\n      pile_gems: \"gem 묶음\",\n      chest_gems: \"gem 상자\",\n      purchasing: \"구매중...\",\n      declined: \"귀하의 카드가 거부되었습니다\",\n      retrying: \"서버에러, 다시 시도하세요.\",\n      prompt_title: \"gem 부족\",\n      prompt_body: \"gem이 더 필요하신가요?\",\n      prompt_button: \"샵 앤터\",\n      recovered: \"gem 구매후 브라우져를 새로고침 하세요.\",\n      price: \"x{{gems}} / 한달\",\n      buy_premium: \"프리미엄 구입\",\n      purchase: \"구매하기\",\n      purchased: \"구매함\"\n    },\n    earn_gems: {\n      prompt_title: \"젬이 충분하지 않습니다.\",\n      prompt_body: \"더 얻기 위해 계속 플레이 하세요.\"\n    },\n    subscribe: {\n      comparison_blurb: \"코드컴뱃을 구독하셔서 당신의 스킬을 날카롭게하십시오!\",\n      must_be_logged: \"로그인부터 먼저 하셔야합니다.메뉴에서 계정을 만들거나 로그인해주세요.\",\n      subscribe_title: \"구독\",\n      unsubscribe: \"구독 해제\",\n      confirm_unsubscribe: \"구독 해제 확인\",\n      never_mind: \"결코, 난 여전히 당신을 사랑합니다\",\n      thank_you_months_prefix: \"우리의 마지막까지 지원해주셔서 감사합니다.\",\n      thank_you_months_suffix: \"매 달.\",\n      thank_you: \"CodeCombat을 도와주셔서 감사합니다.\",\n      sorry_to_see_you_go: \"당신이 떠나서 미안합니다! 우리가 잘 할수 있는 방법을 알려 주시기 바랍니다.\",\n      unsubscribe_feedback_placeholder: \"어, 우리는 무슨 짓을 한거죠?\",\n      stripe_description: \"월간 구독\",\n      buy_now: \"지금 \",\n      subscription_required_to_play: \"당신은 아마 이 레벨을 플레이하려면 구독이 필요합니다.\",\n      unlock_help_videos: \"모든 비디오 튜토리얼의 잠금을 해제하려면 구독 .\",\n      personal_sub: \"개인 구독\",\n      loading_info: \"구독 정보를 불러오는중...\",\n      managed_by: \"에 의해 관리됩니다\",\n      will_be_cancelled: \"에 취소됩니다\",\n      currently_free: \"현재 무료 구독입니다\",\n      currently_free_until: \"현재 가입된 상태입니다\",\n      was_free_until: \"당신은 현재까지 무료로 가입 했습니다\",\n      managed_subs: \"관리 구독\",\n      subscribing: \"구독중...\",\n      current_recipients: \"현재 받는 사람\",\n      unsubscribing: \"구독해제중\",\n      subscribe_prepaid: \"선불 코드를 사용하여 구독 클릭\",\n      using_prepaid: \"매달 구독 선불 코드를 사용\"\n    },\n    announcement: {\n      now_available: \"이제 구독자에게 제공됩니다.\",\n      subscriber: \"구독자\",\n      cuddly_companions: \"사랑스러운 친구들!\",\n      kindling_name: \"불의 정령\",\n      kindling_description: \"불의 정령들은 밤과 낮, 항상 따뜻하게 당신을 지키고 싶어합니다.\",\n      griffin_name: \"아기 그리핀 \",\n      griffin_description: \"사랑스러운 그리핀은 반은 독수리이고 반은 사자입니다..\",\n      raven_name: \"레이븐\",\n      raven_description: \"레이븐은 당신의 체력을 채우기 위해 반짝이는 병을 잘 모읍니다.\",\n      mimic_name: \"미믹\",\n      mimic_description: \"미믹은 동전을 가져옵니다. 미믹을 동전 위로 이동시켜 골드 수급량을 늘리세요. \",\n      cougar_name: \"쿠거\",\n      cougar_description: \"쿠거는 Purring Happily Daily에서 박사학위를 받고싶어 합니다. \",\n      fox_name: \"푸른 여우\",\n      fox_description: \"푸른 여우는 아주 여일하며 흙과 눈을 파는 것을 좋아합니다! \",\n      pugicorn_name: \"푸기콘\",\n      pugicorn_description: \"푸기콘은 아주 희귀한 생물이며 마법을 사용할 수 있습니다!\",\n      wolf_name: \"늑대개\",\n      wolf_description: \"늑대개는 사냥, 단체행동, 그리고 숨바꼭질 게임에 탁월합니다! \",\n      ball_name: \"빨간색 삐걱 거리는 공\",\n      ball_description: \"ball.squeak()\",\n      collect_pets: \"영웅을 위한 애완 동물을 모으십시요!\",\n      each_pet: \"애완 동물마다 독특한 도우미 능력이 있습니다!\",\n      upgrade_to_premium: \"{{구독자}} 애완 동물을 준비하십시요.\",\n      play_second_kithmaze: \" {{두 번째_kithmaze}}를 실행하여 Wolf Pup의 잠금을 해제하십시요!\",\n      the_second_kithmaze: \"두 번째 Kithmaze\",\n      keep_playing: \"첫 번째 애완 동물을 계속 찾으세요!\",\n      coming_soon: \"커밍 쑨\",\n      ritic: \"강추위\",\n      ritic_description: \"추위를 발생시켜라. 수없이 많은 세월 동안 켈빈타프 빙하에 갇혔지만, 마침내 자유로 워졌다. 그리고 감옥옥에 있는 그는 오우거들에게 갈 준비가 되었다. \",\n      ice_block: \"얼음 덩어리\",\n      ice_description: \"내부에 갇혀있는 것 같습니다…\",\n      blink_name: \"깜박임\",\n      blink_description: \"라이트는 사라지고 눈 깜빡 할 사이에 다시 나타나 그림자만 남습니다.\",\n      shadowStep_name: \"그림자 단계\",\n      shadowStep_description: \"마스터 암살범은 그림자 사이를 걸어다니는 법을 알고 있습니다.\",\n      tornado_name: \"토네이도\",\n      tornado_description: \"표지가 날 때 리셋 버튼이 있는 것이 좋습니다..\",\n      wallOfDarkness_name: \"암흑의 벽\",\n      wallOfDarkness_description: \"눈길을 피하기 위해 그림자 벽 뒤에 숨어 있습니다.\"\n    },\n    premium_features: {\n      get_premium: \"코드 컴뱃 프리미엄을 받으세요\",\n      master_coder: \"오늘 구독하여 마스터 코더가 되세요!\",\n      paypal_redirect: \"가입 절차를 마치면 PayPal로 이동합니다..\",\n      subscribe_now: \"지금 구독하세요\",\n      hero_blurb_1: \"구독자 전용 영웅을 사용하세요! Okar Stompfoot의 힘과 진귀한 Narahd의 잎사귀 또는 Nalfar Cryptor의 \\\"사랑스러운\\\" 해골을 소환하세요.\",\n      hero_blurb_2: \"Warcry, Stomp 및 Hurl Enemy와 같은 놀라운 무술 기술의 잠금을 해제하거나 스텔스와 활을 사용하여 레인저로 게임을 하고 칼을 던지며 함정을 빠져 나가십시오! 강력한 코딩 마법사로서 원시, 네크로 매틱 또는 엘리멘탈 매직의 기술을 배우고 구현하십시오.\",\n      hero_caption: \"신나는 새로운 영웅!\",\n      pet_blurb_1: \"애완동물은 사랑스로운 동반자가 아니며 독창적인 기능과 해결책을 제공합니다. 아기 그리핀은 공중을 통해 유닛을 옮길 수 있고, 늑대개는 적의 화살을 잡을 수 있으며, 쿠거는 주변의 오거를 쫓습니다. 그리고 미믹은 자적처럼 동전을 끌어당십니다!\",\n      pet_blurb_2: \"모든 팻을 모아 자신의 고유 능력을 발견하세요!\",\n      pet_caption: \"영웅과 함께할 팻을 입양하세요!\",\n      game_dev_blurb: \"게임을 배우고 친구들과 공유할 새로운 레벨을 만드세요! 원하는 항목을 배치하고, 기본 논리 및 동작에 대한 코드를 작성하고, 친구들이 레벨을 능가 할 수 있는지 확인하세요! \",\n      game_dev_caption: \"친구에게 도전할 나만의 게임을 만드세요! \",\n      everything_in_premium: \"코드컴뱃 프리미엄만의 혜택: \",\n      list_gems: \"장비, 팻 및 영웅을 구매하는 보너스 젬.\",\n      list_levels: \"더욱 많은 레벨\",\n      list_heroes: \"레인저나 마법사를 포함한 많은 영웅 사용 \",\n      list_game_dev: \"친구들과 게임 제작 및 공유\",\n      list_web_dev: \"웹 사이트 및 대화형 앱 제작\",\n      list_items: \"팻과 같은 프리미언 전용 아이템\",\n      list_support: \"어려운 코드를 디버그하는데 도움이 되는 프리미엄 지원.\",\n      list_clans: \"친구를 초대하고 그룹 리더 보드에서 경쟁하는 개인 클랜 만들기.\"\n    },\n    choose_hero: {\n      choose_hero: \"영웅을 선택하세요\",\n      programming_language: \"프로그래밍 언어\",\n      programming_language_description: \"어떤 프로그래밍 언어를 사용하실건가요?\",\n      \"default\": \"기본\",\n      experimental: \"고급\",\n      python_blurb: \"간단하지만 강력합니다.\",\n      javascript_blurb: \"웹을 위한 언어.\",\n      coffeescript_blurb: \"향상된 자바스크립트 문법.\",\n      lua_blurb: \"게임 스크립팅 언어\",\n      status: \"상태\",\n      weapons: \"무기\",\n      weapons_warrior: \"검 - 짧은 거리, 마법 불가\",\n      weapons_ranger: \"화살, 총 - 긴 거리, 마법 불가\",\n      weapons_wizard: \"마법봉, 지팡이 - 긴 거리, 마법 가능\",\n      attack: \"공격력\",\n      health: \"체력\",\n      speed: \"속도\",\n      regeneration: \"리젠\",\n      range: \"거리\",\n      blocks: \"블럭\",\n      backstab: \"백스탭\",\n      skills: \"스킬\",\n      attack_1: \"타격\",\n      attack_2: \"정렬됨\",\n      attack_3: \"무기 피해.\",\n      health_1: \"획득\",\n      health_2: \"정렬됨\",\n      health_3: \"갑옷 체력.\",\n      speed_1: \"에 이동\",\n      speed_2: \"초당 미터.\",\n      available_for_purchase: \"구매 가능\",\n      level_to_unlock: \"레벨 해금:\",\n      restricted_to_certain_heroes: \"특정 영웅만이 이 레벨을 플레이할 수 있습니다.\"\n    },\n    skill_docs: {\n      method: \"메소드\",\n      number: \"숫자\",\n      array: \"배열\",\n      object: \"객체\",\n      string: \"문자열\",\n      writable: \"쓰기\",\n      read_only: \"리드-온리\",\n      action: \"행동\",\n      spell: \"마법\",\n      action_name: \"이름\",\n      action_cooldown: \"받는 상태\",\n      action_specific_cooldown: \"쿨다운\",\n      action_damage: \"데미지\",\n      action_range: \"사거리\",\n      action_radius: \"반지름\",\n      action_duration: \"지속\",\n      example: \"예제\",\n      ex: \"예시\",\n      current_value: \"현재 값\",\n      default_value: \"기본 값\",\n      parameters: \"매개 변수\",\n      returns: \"뒤로가기\",\n      granted_by: \"부여\"\n    },\n    save_load: {\n      granularity_saved_games: \"저장됨\",\n      granularity_change_history: \"기록\"\n    },\n    options: {\n      general_options: \"일반 옵션\",\n      volume_label: \"볼륨\",\n      music_label: \"음악\",\n      music_description: \"배경음악 ON/OFF\",\n      editor_config_title: \"에디터 설정\",\n      editor_config_livecompletion_label: \"자동완성 활성화\",\n      editor_config_livecompletion_description: \"입력하는 동안 자동완성 기능을 사용합니다.\",\n      editor_config_invisibles_label: \"투명 설정\",\n      editor_config_invisibles_description: \"스페이스, 탭 설정\",\n      editor_config_indentguides_label: \"들여쓰기 가이드 보기\",\n      editor_config_indentguides_description: \"들여쓰기 보조용 세로줄 표시하기.\",\n      editor_config_behaviors_label: \"자동 기능\",\n      editor_config_behaviors_description: \"괄호, 인용부호, 따옴표 자동 완성.\"\n    },\n    about: {\n      main_title: \"프로그래밍을 배우고 싶다면 많은 코드를 작성해 보아야 합니다.\",\n      main_description: \"CodeCombat에서 우리의 임무는 당신이 미소를 짓고 있는지 확인하는 것입니다.\",\n      mission_link: \"미션\",\n      team_link: \"팀\",\n      story_link: \"스토리\",\n      nick_title: \"프로그래머\",\n      matt_title: \"프로그래머\",\n      cat_title: \"게임 디자이너\",\n      scott_title: \"프로그래머\",\n      maka_title: \"고객 옹호자\",\n      robin_title: \"UX 디자인 & 연구원\",\n      titles_csm: \"고객 성공 관리자\",\n      retrostyle_title: \"일러스트레이션\",\n      retrostyle_blurb: \"레트로스타일 게임\"\n    },\n    versions: {\n      save_version_title: \"새로운 버전을 저장합니다\",\n      new_major_version: \"신규 버전\",\n      submitting_patch: \"패치 적용중...\",\n      cla_prefix: \"변경사항을 저장하기 위해서는, 먼저 계약사항에 동의 하셔야 합니다.\",\n      cla_url: \"CLA\",\n      cla_suffix: \".\",\n      cla_agree: \"동의 합니다\",\n      owner_approve: \"변경 사항이 표시 되기 전에 소유자가 이를 승인 해야합니다.\"\n    },\n    contact: {\n      contact_us: \"코드컴뱃에 전할 말\",\n      welcome: \"언제든 의견을 보내주세요. 이 양식을 이메일에 사용해 주세요!\",\n      forum_prefix: \"공개적으로 논의할 사항이라면 우리 포럼에서 해주세요 : \",\n      forum_page: \"포럼\",\n      forum_suffix: \" 대신에.\",\n      faq_prefix: \"도 있습니다\",\n      faq: \"자주 묻는 질문\",\n      subscribe_prefix: \"도움이 필요한 경우 먼저 수준을 파악 하시기 바랍니다 \",\n      subscribe: \"코드컴뱃 구독을 구매\",\n      subscribe_suffix: \"우리는 코드와 함께 당신을 도울 수있을 것입니다.\",\n      subscriber_support: \"당신이 코드컴뱃 가입자에 있기 때문에,당신의 이메일은 우리의 우선 순위 지원을 받게됩니다.\",\n      screenshot_included: \"스크린샷 첨부됨.\",\n      where_reply: \"우리는 어디에서 대답 해야합니까?\",\n      send: \"의견 보내기\"\n    },\n    account_settings: {\n      title: \"계정 설정\",\n      not_logged_in: \"로그인하시거나 계정을 생성하세요.\",\n      me_tab: \"나\",\n      picture_tab: \"사진\",\n      delete_account_tab: \"계정 삭제\",\n      wrong_email: \"틀린 이메일\",\n      wrong_password: \"틀린 비밀번호\",\n      delete_this_account: \"영구적으로 계정 삭제\",\n      reset_progress_tab: \"모든 진행을 재설정\",\n      reset_your_progress: \"모든 진행 상황을 지우고 다시 시작\",\n      god_mode: \"하느님 모드\",\n      emails_tab: \"이메일\",\n      admin: \"관리자\",\n      manage_subscription: \"구독을 관리 하려면 여기를 클릭하십시오.\",\n      new_password: \"새 비밀번호\",\n      new_password_verify: \"확인(다시한번 입력해주세요)\",\n      type_in_email: \"계정 삭제를 확인하려면 이메일을 입력합니다.\",\n      type_in_email_progress: \"진행을 삭제하려면 확인할 이메일을 입력합니다.\",\n      type_in_password: \"또한 , 사용자의 암호를 입력합니다.\",\n      email_subscriptions: \"이메일 구독\",\n      email_subscriptions_none: \"이메일 구독 안 함\",\n      email_announcements: \"공지사항\",\n      email_announcements_description: \"코드 컴뱃의 개발 및 진행 상황을 이메일로 구독하세요\",\n      email_notifications: \"알람\",\n      email_notifications_summary: \"당신의 코드 컴뱃 활동과 관련된 자동 알림 메일을 설정할 수 있습니다.\",\n      email_any_notes: \"모든 알림 받기\",\n      email_any_notes_description: \"모든 알림 메일 받지 않기\",\n      email_news: \"뉴스\",\n      email_recruit_notes: \"구인 정보\",\n      email_recruit_notes_description: \"정말 실력이 좋으시다고 판단되면, 보다 좋은 구직 정보와 관련하여 연락드릴 수도 있습니다.\",\n      contributor_emails: \"조력자들 이메일\",\n      contribute_prefix: \"우리는 언제나 당신의 참여를 환영 합니다 : \",\n      contribute_page: \"참여하기 페이지\",\n      contribute_suffix: \"자세한 사항이 설명되어 있습니다.\",\n      email_toggle: \"모두 변경\",\n      error_saving: \"오류 저장\",\n      saved: \"변경사항 저장 완료\",\n      password_mismatch: \"비밀번호가 일치하지 않습니다.\",\n      password_repeat: \"비밀번호를 한번 더 입력해 주세요.\"\n    },\n    keyboard_shortcuts: {\n      keyboard_shortcuts: \"단축키\",\n      space: \"스페이스\",\n      enter: \"엔터\",\n      press_enter: \"엔터를 누르세요\",\n      escape: \"Esc\",\n      shift: \"Shift\",\n      run_code: \"현재 코드 실행\",\n      run_real_time: \"실시간 코드 실행\",\n      continue_script: \"이미 끝난 현재 스크립트를 진행합니다.\",\n      skip_scripts: \"모든 스킬할 스크립트를 지납니다.\",\n      toggle_playback: \"플레이/일시중지 전환.\",\n      scrub_playback: \"다시 스크럽을 통해 시간을 전달합니다.\",\n      single_scrub_playback: \"다시 스크럽을 통해 단일 프레임으로 시간을 전달합니다.\",\n      scrub_execution: \"현재 주문하는것을 통해 스크럽합니다.\",\n      toggle_debug: \"디버그 화면 전환.\",\n      toggle_grid: \"디버그 오버레이 전환\",\n      toggle_pathfinding: \"길 찾아주는 오버레이 전환.\",\n      beautify: \"서식을 표준화하여 코드를 아름답게합니다.\",\n      maximize_editor: \"코드 에디터 최대/최소.\"\n    },\n    community: {\n      main_title: \"코드 컴뱃 커뮤니티\",\n      introduction: \"아래에서 당신이 참여할 수있는 방법을 확인하고 가장 재미있어보이는것을 결정합니다. 우리는 당신과 함께 협력하는것을 기대합니다!\",\n      level_editor_prefix: \"코드컴뱃을 사용\",\n      level_editor_suffix: \"만들거나 수정하는 레벨입니다. 사용자들은 자신의 학급, 친구, 해커 톤, 학생, 형제 자매에 대한 수준을 만들어왔습니다. 만약 새로운 레벨 소리를 새로만들겠다면 우리중 하나를 포크해서 시작해도됩니다!\",\n      thang_editor_prefix: \"우리는 게임 내의 'thangs'을 유닛이라고 부릅니다.\",\n      thang_editor_suffix: \" CodeCombat 소스 작품을 수정하여 사용합니다.유닛들이 발사체를 던지는것을 허용하며, 애니메이션의 방향을 변경하고, 유닛의 타격지점을 변경하거나, 우리의 벡터 스프라이트를 업로드 할 수도 있습니다.\",\n      article_editor_prefix: \"우리의 문서가 틀린것을 보았나요? 자신의 작품에 대한 몇가지 지침을 원하십니까? 체크아웃을 하거나\",\n      article_editor_suffix: \"코드컴뱃 플레이어를 도와 자신의 플레이 시간을 최대한 활용하게해주십시오.\",\n      find_us: \"이 사이트에서 우리를 찾기\",\n      social_github: \"GitHub에서 우리의 모든 코드를 체크아웃하기\",\n      social_blog: \"Sett의 코드컴뱃 블로그 읽기\",\n      social_discource: \"토론 포럼에서 토론에 참여하기\",\n      social_facebook: \"Facebook에서 코드컴뱃 좋아요하기\",\n      social_twitter: \"Twitter에서 코드컴뱃 팔로우하기\",\n      social_gplus: \"Google+로 코드컴뱃 참여하기\",\n      contribute_to_the_project: \"프로젝트에 기여하기\"\n    },\n    clans: {\n      clan: \"클랜\",\n      clans: \"클랜들\",\n      new_name: \"새로운 클랜 이름\",\n      new_description: \"새로운 클랜 설명\",\n      make_private: \"클랜을 비공개로 만들기\",\n      subs_only: \"오직 구독자만\",\n      create_clan: \"새로운 클랜 만들기\",\n      private_preview: \"미리보기\",\n      private_clans: \"비공개 클랜\",\n      public_clans: \"공개 클랜들\",\n      my_clans: \"내가 속한 클랜\",\n      clan_name: \"클랜 이름\",\n      name: \"이름\",\n      chieftain: \"클랜장\",\n      edit_clan_name: \"클랜 이름 수정\",\n      edit_clan_description: \"클랜 설명 수정\",\n      edit_name: \"이름 변경\",\n      edit_description: \"설명 변경\",\n      \"private\": \"(비공개)\",\n      summary: \"요약\",\n      average_level: \"평균 레벨\",\n      average_achievements: \"평균 성취\",\n      delete_clan: \"클랜 삭제\",\n      leave_clan: \"클랜 탈퇴\",\n      join_clan: \"클랜 가입\",\n      invite_1: \"초대:\",\n      invite_2: \"*링크를 보내 클랜 초대하기\",\n      members: \"멤버들\",\n      progress: \"진행\",\n      not_started_1: \"시작되지않음\",\n      started_1: \"시작됨\",\n      complete_1: \"완료\",\n      exp_levels: \"레벨 확장\",\n      rem_hero: \"영웅 삭제\",\n      status: \"상태\",\n      complete_2: \"완료\",\n      started_2: \"시작됨\",\n      not_started_2: \"시작되지않음\",\n      view_solution: \"해결책을 보려면 클릭.\",\n      view_attempt: \"시도를 보려면 클릭.\",\n      latest_achievement: \"최신 도전과제\",\n      playtime: \"플레이타임\",\n      last_played: \"마지막으로 플레이한\",\n      leagues_explanation: \"이러한 멀티 분야인 경우에는 다른 클랜들에 대한 리그에서 플레이합니다.\",\n      track_concepts1: \"트랙 컨셉\",\n      track_concepts2a: \"학생으로부터 학습됨\",\n      track_concepts2b: \"맴버로부터 학습됨\",\n      track_concepts3a: \"각자 학생들로부터 트랙 레벨이 완료됨\",\n      track_concepts3b: \"각자 맴버들로부터 트랙 레벨이 완료됨\",\n      track_concepts4a: \"당신의 학생 보기'\",\n      track_concepts4b: \"당신의 맴버 보기'\",\n      track_concepts5: \"솔루션\",\n      track_concepts6a: \"이름이나 진행상황으로 정렬된 학생들\",\n      track_concepts6b: \"이름이나 진행상황으로 정렬된 맴버들\",\n      track_concepts7: \"초대장 필요\",\n      track_concepts8: \"으로 참여\",\n      private_require_sub: \"비공개 클랜을 만들거나 참여해서 구독하는것을 권장합니다.\"\n    },\n    courses: {\n      create_new_class: \"새로운 클래스 만들기\",\n      unnamed_class: \"이름없는 클래스\",\n      edit_settings1: \"클래스 세팅 수정\",\n      add_students: \"학생 추가\",\n      stats: \"통계\",\n      total_students: \"총 학생:\",\n      average_time: \"평균 수준의 플레이 시간:\",\n      total_time: \"총 플레이 시간:\",\n      average_levels: \"평균 레벨 달성:\",\n      total_levels: \"총 레벨 달성:\",\n      students: \"학생\",\n      concepts: \"개념\",\n      play_time: \"플레이 시간:\",\n      completed: \"완성:\",\n      enter_emails: \"각 이메일 주소를 행 혹은 쉼표로 분리시키세요.\",\n      send_invites: \"학생 초대발송\",\n      number_programming_students: \"프로그래밍 학생 수\",\n      number_total_students: \"학교에 있는 총 학생 수\",\n      enroll: \"등록\",\n      enroll_paid: \"지불한 수업에 학생 등록\",\n      get_enrollments: \"더 많은 라이센스를 얻기\",\n      change_language: \"수업 언어 변경\",\n      keep_using: \"계속 사용\",\n      switch_to: \"바꾸다\",\n      greetings: \"안녕하세요@\",\n      back_classrooms: \"내 교실로 돌아왔습니다!\",\n      back_classroom: \"교실로 돌아가기\",\n      student: \"학생\",\n      teacher: \"교사\",\n      arena: \"아레나\",\n      available_levels: \"가능한 레벨\",\n      started: \"시작\",\n      complete: \"완성\",\n      practice: \"연습\",\n      required: \"필수\",\n      remove_description1: \"학생들은 이 교실과 수업에 대한 액세스를 잃어버릴 것입니다. 하지만진행도와 게임 플레이는 잃지 않습니다. 그리고 학생들은 어느 때나 교실로 다시 초대 받을 수 있습니다. \",\n      remove_description2: \"활성화된 라이센스는 환불할 수 없습니다. \",\n      license_will_revoke: \"해당 학생의 라이선스는 폐지되고 다른 학생들에게 배정이 가능하게 됩니다.\",\n      keep_student: \"학생 유지\",\n      removing_user: \"유저 삭제\",\n      subtitle: \"수업 복습\",\n      changelog: \"수업의 레벨 최신 변경 보기\",\n      select_language: \"언어 선택 \",\n      select_level: \"레벨 선택\",\n      play_level: \"레벨 플레이\",\n      concepts_covered: \"수업 내용\",\n      view_guide_online: \"레벨 개요 및 해답\",\n      grants_lifetime_access: \"모든 수업에 대한 액세스 획득.\",\n      enrollment_credits_available: \"가능한 라이선스:\",\n      language_select: \"언어 선택\",\n      language_cannot_change: \"학생이 수업에 참가하면 언어 설정을 바꿀 수 없습니다.\",\n      avg_student_exp_label: \"학생의 평균 프로그래밍 경험\",\n      avg_student_exp_desc: \"이것으로 수업 내용을 더 적절하게 편성할 수 있습니다.\",\n      avg_student_exp_select: \"가장 알맞은 선택지를 고르세요 \",\n      avg_student_exp_none: \"경험 없음 - 경험, 지식 전무\",\n      avg_student_exp_beginner: \"초보자 – 약간의 코딩 경험\",\n      avg_student_exp_intermediate: \"중급자 – 코딩 경력이 있다\",\n      avg_student_exp_advanced: \"고급 – 대량의 코딩 경력\",\n      avg_student_exp_varied: \"각종 코딩 경력\",\n      student_age_range_label: \"학생 평균 연령\",\n      student_age_range_younger: \"6세 이하\",\n      student_age_range_older: \"18세 이상\",\n      student_age_range_to: \"에서 \",\n      create_class: \"반 생성\",\n      class_name: \"반 이름\",\n      teacher_account_restricted: \"당신의 계정은 선생님 계정입니다. 학생 컨텐츠에 액세스할 수 없습니다.\",\n      account_restricted: \"해당 페이지에 접속하기 위해 학생 계정이 필요합니다.\",\n      update_account_login_title: \"로그인해서 계정 업데이트하기\",\n      update_account_title: \"당신의 계정에 주의가 필요합니다!\",\n      update_account_blurb: \"반에 접속하기 전에 해당 계정의 사용 목적을 선택해주세요.\",\n      update_account_current_type: \"현재 계정 유형: \",\n      update_account_account_email: \"계정 이메일/이름: \",\n      update_account_am_teacher: \"선생님입니다 \",\n      update_account_keep_access: \"내가 생성한 반에 대한 접속 권한 유지하기\",\n      update_account_teachers_can: \"선생님 계정은 다음과 같은 권한이 있습니다:\",\n      update_account_teachers_can1: \"반 생성/관리/추가\",\n      update_account_teachers_can2: \"수업에 학생 추가하기\",\n      update_account_teachers_can3: \"테스트 목적으로 모든 수업 레벨을를 개방하기\",\n      update_account_teachers_can4: \"새로 출시된 교직원 전용 내용에 액세스하기\",\n      update_account_teachers_warning: \"경고: 현재 가입한 모든 반에서 떠나게 되고 학생 신분으로 활동이 불가하게 됩니다.\",\n      update_account_remain_teacher: \"교직원 유지 \",\n      update_account_update_teacher: \"교직원 계정으로 업데이트\",\n      update_account_am_student: \"학생입니다\",\n      update_account_remove_access: \"생성한 반에 대한 액세스 취소\",\n      update_account_students_can: \"학생 계정은 다음과 같은 권한을 가집니다: \",\n      update_account_students_can1: \"반 가입\",\n      update_account_students_can2: \"학생 신분으로 수업을 완료하고 자신의 진도를 확인\",\n      update_account_students_can3: \"다른 학생들과 겨루기\",\n      update_account_students_can4: \"새로 출시된 학생 전용 내용에 액세스하기\",\n      update_account_students_warning: \"경고: 더 이상 새로운 반을 생성하거나 이미 생성한 반을 관리할 수 없게 됩니다. \",\n      unsubscribe_warning: \"경고: 매달의 구독이 취소됩니다.\",\n      update_account_remain_student: \"학생 유지\",\n      update_account_update_student: \"학생으로 업데이트하기\",\n      need_a_class_code: \"가입하려는 반의 반 코드가 필요합니다:\",\n      update_account_not_sure: \"어느 것을 선택해야 할 지 모르겠나요? 이메일을 보내세요:\",\n      update_account_confirm_update_student: \"계정을 학생 계정으로 업데이트 하겠습니까? \",\n      update_account_confirm_update_student2: \"새로운 반을 생성하거나 이미 생성한 반을 관리할수 없게 됩니다. 코드 컴뱃에서 생성한 반은 제거되며 복구가 불가능하게 됩니다.\",\n      instructor: \"요청인: \",\n      youve_been_invited_1: \"당신은 새로운 가입 요청을 받았습니다: \",\n      youve_been_invited_2: \", 학습 내용: \",\n      youve_been_invited_3: \" with your classmates in CodeCombat.\",\n      by_joining_1: \"By joining \",\n      by_joining_2: \" 가입으로 비밀번호를 재설정할 수 있습니다. 또한 이메일 주소를 인증해서 자유롭게 변경이 가능합니다. \",\n      sent_verification: \"다음 이메일로 인증 메일을 보냈습니다: \",\n      you_can_edit: \"이메일을 아래 주소에서 변경할 수 있습니다: \",\n      account_settings: \"계정 설정\",\n      select_your_hero: \"영웅 선택\",\n      select_your_hero_description: \"수업 페이지에서 언제든지 영웅을 변경할 수 있습니다. \\\"영웅변경\\\"를 클릭하세요.\",\n      select_this_hero: \"이 영웅 선택하기\",\n      current_hero: \"현재 영웅:\",\n      current_hero_female: \"현재 영웅:\",\n      web_dev_language_transition: \"이번 수업에서는 HTML / JavaScript을 사용합니다. 이미 Python으로 학습한 반은 추가적인 JavaScript 튜토리얼 레벨을를 진행하는 것을 권장합니다. 이미 JavaScript로 수업을 진행한 반들은 해당 레벨을를 스킵하세요.\",\n      course_membership_required_to_play: \"수업에 참여하여 해당 레벨을를 플레이할 수 있습니다. \",\n      license_required_to_play: \"선생님에게 라이선스를 허가 받고 코드 컴뱃을 계속 하세요! \",\n      update_old_classroom: \"새로운 학년, 새로운 레벨!\",\n      update_old_classroom_detail: \"최신의 레벨을를 확인할 수 있기 위해, 본 학기에 새로운 반을 생성하는 것을 추천 드립니다. \",\n      teacher_dashboard: \"선생님 대쉬 보드 \",\n      update_old_classroom_detail_2: \"새로운 반 생성을 클릭하고 학생에게 새로운 반 코드를 보내주세요.\",\n      view_assessments: \"평가 보기\",\n      view_challenges: \"도전 레벨 보기\",\n      challenge: \"도전: \",\n      challenge_level: \"도전 레벨: \",\n      status: \"상태:\",\n      assessments: \"평가\",\n      challenges: \"도전\",\n      level_name: \"레벨 이름:\",\n      keep_trying: \"시도해보기\",\n      start_challenge: \"도전 시작\",\n      locked: \"잠김\",\n      concepts_used: \"사용된 내용: \",\n      show_change_log: \"해당 수업의 레벨 변화 표시\",\n      hide_change_log: \"해당 수업의 레벨 변화 숨김\"\n    },\n    classes: {\n      archmage_title: \"대마법사\",\n      archmage_title_description: \"(코더)\",\n      archmage_summary: \"당신이 만약 코딩 교육 게임에 관심있는 개발자라면, 코드컴뱃을 돕는 대마법사가 되어주십시오!\",\n      artisan_title: \"장인\",\n      artisan_title_description: \"(레벨 제작자)\",\n      artisan_summary: \"레벨을 만들거나 공유하여 당신과 친구들이 플레이합니다. 다른 프로그램을 가르치는 예술 장인이 되어보십시오!\",\n      adventurer_title: \"모험가\",\n      adventurer_title_description: \"(레벨 테스터)\",\n      adventurer_summary: \"우리의 새로운 레벨을 (심지어 구독자의 컨텐츠도) 일주일 먼저 무료로 얻을 수 있고 공개 릴리즈 전에 버그를 제보하여 우리를 도와주십시오.\",\n      scribe_title: \"작가\",\n      scribe_title_description: \"(기사 에디터)\",\n      scribe_summary: \"좋은 코드는 좋은 문서가 필요합니다. 쓰기, 편집하고, 전 세계의 수백만 플레이어에 의해 판독된 문서를 향상시킬 수 있습니다.\",\n      diplomat_title: \"외교관\",\n      diplomat_title_description: \"(번역가)\",\n      diplomat_summary: \"코드컴뱃은 Diplomats에 의해 45+ 언어로 지역화되었습니다. 우리를 도와 번역에 기여하십시오.\",\n      ambassador_title: \"대사\",\n      ambassador_title_description: \"(지원)\",\n      ambassador_summary: \"포럼 사용자를 관리하는것과 질문들에 대한 방향을 제공합니다. 우리의 대사는 세계에 코드컴뱃을 나타냅니다.\"\n    },\n    editor: {\n      main_title: \"코드 컴뱃 에디터들\",\n      article_title: \"기사 에디터들\",\n      thang_title: \"Thang 에디터\",\n      level_title: \"레벨 에디터\",\n      achievement_title: \"업적 에디터\",\n      poll_title: \"투표 에디터\",\n      back: \"뒤로\",\n      revert: \"되돌리기\",\n      revert_models: \"모델 되돌리기\",\n      pick_a_terrain: \"지형을 선택하세요.\",\n      dungeon: \"지하 감옥\",\n      indoor: \"내부\",\n      desert: \"사막\",\n      grassy: \"풀로 덮인\",\n      mountain: \"산\",\n      glacier: \"빙하\",\n      small: \"작게\",\n      large: \"크게\",\n      fork_title: \"새 버전 가져오기\",\n      fork_creating: \"포크 생성중...\",\n      generate_terrain: \"지형 생성\",\n      more: \"더 보기\",\n      wiki: \"위키\",\n      live_chat: \"실시간 채팅\",\n      thang_main: \"메인\",\n      thang_spritesheets: \"스프라이트시트\",\n      thang_colors: \"색갈\",\n      level_some_options: \"다른 옵션들?\",\n      level_tab_thangs: \"Thangs\",\n      level_tab_scripts: \"스크립트들\",\n      level_tab_components: \"요소들\",\n      level_tab_systems: \"시스템\",\n      level_tab_docs: \"문서\",\n      level_tab_thangs_title: \"현재 Thangs\",\n      level_tab_thangs_all: \"모두\",\n      level_tab_thangs_conditions: \"컨디션 시작\",\n      level_tab_thangs_add: \"Thangs 추가\",\n      level_tab_thangs_search: \"thangs 검색\",\n      add_components: \"구성요소 추가\",\n      component_configs: \"환경설정 구성요소\",\n      config_thang: \"thang을 설정하려면 더블클릭\",\n      \"delete\": \"삭제\",\n      duplicate: \"복제\",\n      stop_duplicate: \"복제 중지\",\n      rotate: \"회전\",\n      level_component_tab_title: \"현재 요소들\",\n      level_component_btn_new: \"새로운 요소들 생성\",\n      level_systems_tab_title: \"현재 시스템\",\n      level_systems_btn_new: \"새로운 시스템생성\",\n      level_systems_btn_add: \"새로운 시스템 추가\",\n      level_components_title: \"모든 Thang 들로 되돌아가기\",\n      level_components_type: \"타입\",\n      level_component_edit_title: \"요소 편집\",\n      level_component_config_schema: \"환경 설정\",\n      level_system_edit_title: \"시스템 편집\",\n      create_system_title: \"새로운 시스템 생성\",\n      new_component_title: \"새로운 요소들 생성\",\n      new_component_field_system: \"시스템\",\n      new_article_title: \"새로운 기사 작성\",\n      new_thang_title: \"새로운 Thang type 시작\",\n      new_level_title: \"새로운 레벨 시작\",\n      new_article_title_login: \"새 기사를 작성하시려면 로그인하세요.\",\n      new_level_title_login: \"새로운 레벨을 만드시려면 로그인하세요.\",\n      article_search_title: \"기사들은 여기에서 찾으세요\",\n      thang_search_title: \"Thang 타입들은 여기에서 찾으세요\",\n      level_search_title: \"레벨들은 여기에서 찾으세요\",\n      achievement_search_title: \"업적 검색\",\n      read_only_warning2: \"주의: 로그인하지 않으셨기 때문에 내용을 저장할 수 없습니다.\"\n    },\n    article: {\n      edit_btn_preview: \"미리보기\",\n      edit_article_title: \"기사 편집하기\"\n    },\n    polls: {\n      priority: \"우선도\"\n    },\n    contribute: {\n      page_title: \"공헌\",\n      intro_blurb: \"코드 컴뱃은 오픈소스 커뮤니티의 일부입니다! 수백명의 플레이어들이 저희들을 도와서 게임을 완성시켰습니다. 저희와 함께 코드 컴뱃의 새로운 코드를 가르칩시다!\",\n      alert_account_message_intro: \"안녕하세요!\",\n      alert_account_message: \"이메일 구독을 위해서 먼저 로그인이 필요합니다.\",\n      archmage_introduction: \"게임 개발 과정 중에서 가장 흥미로운 점은 다양한 요소들을 조합한다는 것입니다. 그래픽, 사운드, 실시간 네트워킹, 소셜 네트워킹, 그리고 당연히도 프로그래밍의 각 분야, 예를 들면 기초 데이터 베이스 관리, 서버 관리, 유저 인터페이스 등등. 만약에 프로그래밍에 경험이 풍부하시다면 이 직업을 선택하는 것이 좋습니다. 세계 최고의 코딩 게임을 위해 함께 노력합시다.\",\n      class_attributes: \"직업 설명\",\n      archmage_attribute_1_pref: \"충분한 이해도\",\n      archmage_attribute_1_suf: \", 혹은 높은 학구열. 우리의 대부분 코드는 이 언어로 코딩 되었습니다. 만약 Ruby 혹은 Python에 익숙하다면 별다른 어려움을 겪지 않을겁니다. 근본적으로 JavaScript이지만, 보다 편한 문법을 사용합니다.\",\n      archmage_attribute_2: \"약간의 프로그래밍 경험 밖에 없지만 열정을 가졌다면, 역시 우리의 도움을 받을 수 있습니다. 하지만 코딩 훈련에 과대한 시간을 소모할 수 없다는 점은 양해하시기 바랍니다.\",\n      how_to_join: \"참여 방법\",\n      join_desc_1: \"누구나 참여 가능합니다!\",\n      join_desc_2: \"먼저 아래 내용을 확인하시고 박스에서 아크메이지를 체크하세요. 그리고 최신 뉴스를 이메일로도 받을 수 있습니다. 더 나아가 우리의 프로젝트에 더 깊이 관여하고 싶은 생각이 들었나요?\",\n      join_desc_3: \"저희를 연락하세요.\",\n      join_desc_4: \"그러면 같이 이야기를 나눕시다!\",\n      join_url_email: \"이메일 보내기\",\n      join_url_slack: \"공공 Slack 채널\",\n      archmage_subscribe_desc: \"새로운 코딩 관련 기회와 공고를 이메일을 통해 받아보세요.\",\n      artisan_introduction_pref: \"저희는 게임의 새로운 스테이지를 만들어야합니다! 플레이어들은 새로운 컨텐츠를 위해 아우성을 지릅니다. 하지만 우리 만의 힘으로는 많은 요구를 충족시킬 수 없습니다. 아직은 1 스테이지 밖에 구현 안 된 상황입니다. 우리의 에디터는 겨우 기본 기능 만을 구현시킨 상태라서 저희마저 잘 사용하지 않는답니다. 때문에 사용 시 주의를 요합니다.만약 스테이지 설계 영감이 떠올랐다면, 아무리 간단한 내용이라도\",\n      artisan_introduction_suf: \"해당 직업에 도전해보는 것을 강력히 추천합니다.\"\n    },\n    ladder: {\n      my_matches: \"나의 경기들\",\n      simulate: \"시뮬레이션\",\n      simulation_explanation: \"시뮬레이션을 통해 더 빨리 랭킹 평가를 받을 수 있습니다.\",\n      simulate_games: \"시뮬레이션 실행!\",\n      games_simulated_by: \"내가 시뮬레이션한 게임 수:\",\n      games_simulated_for: \"다른 사람에 의해 시뮬레이션된 게임 수:\",\n      games_simulated: \"시뮬레이션 실행된 게임\",\n      games_played: \"플레이한 게임\",\n      ratio: \"비율\",\n      leaderboard: \"상위권 순위 차트\",\n      summary_your: \"당신의 \",\n      summary_wins: \" 승자들, \",\n      summary_losses: \" 패자들\",\n      rank_my_game: \"내 게임 순위 매기기!\",\n      rank_submitting: \"제출중...\",\n      rank_submitted: \"순위 매기기 제출\",\n      rank_failed: \"순위 매기기 실패\",\n      rank_last_submitted: \"제출 완료\",\n      select_your_language: \"언어를 고르세요!\",\n      tutorial_play: \"튜토리얼 보기\",\n      tutorial_recommended: \"전에 플레이해본 적이 없으시다면 튜토리얼을 보시는 걸 권장합니다.\",\n      tutorial_skip: \"튜토리얼 넘기기\",\n      tutorial_not_sure: \"어떻게 진행되는지 알고 싶은세요?\",\n      tutorial_play_first: \"튜토리얼을 먼저 플레이해보세요.\",\n      simple_ai: \"기초 인공지능\",\n      warmup: \"워밍업\",\n      friends_playing: \"친구들이 게임중\",\n      log_in_for_friends: \"로그인하시고 친구들과 게임을 즐기세요!\",\n      fight: \"전투 시작!\",\n      watch_victory: \"당신의 승리를 확인하세요\",\n      rules: \"규칙\",\n      winners: \"승리자\"\n    },\n    loading_error: {\n      could_not_load: \"서버로부터 로딩하는 데 문제가 발생했습니다.\",\n      connection_failure: \"연결 실패\",\n      unauthorized: \"로그인한 상태가 아닙니다. 혹시 쿠키를 사용하지 못하게 설정해놓으셨나요?\",\n      forbidden: \"권한이 필요합니다.\",\n      not_found: \"찾을 수 없습니다.\",\n      not_allowed: \"잘못된 접근입니다.\",\n      timeout: \"서버 타임아웃\",\n      conflict: \"리소스 충돌\",\n      server_error: \"서버 에러\",\n      unknown: \"알 수 없는 에러 발생\"\n    },\n    resources: {\n      level: \"레벨\",\n      system: \"시스템\"\n    },\n    legal: {\n      opensource_description_prefix: \"코드 컴뱃의\",\n      github_url: \"GitHub\",\n      opensource_description_center: \"를 확인해보세요. 그리고 원하신다면 함께 도와주세요! 코드 컴뱃은 수천 개의 오픈 소스 프로젝트를 기반으로 만들어졌고 저희는 이들에 대해 깊은 애정을 갖고 있습니다. 한번 \",\n      archmage_wiki_url: \"Archmage 위키\",\n      opensource_description_suffix: \"를 확인해보세요. 코드 컴뱃을 가능하게 만든 소프트웨어들을 찾아보실 수 있습니다.\",\n      privacy_title: \"프라이버시\",\n      email_title: \"이메일\",\n      email_settings_url: \"이메일 설정\",\n      art_music: \"뮤직\",\n      art_sound: \"사운드\",\n      art_artwork: \"원화\",\n      art_sprites: \"스프라이트\"\n    },\n    ladder_prizes: {\n      license: \"라이센스\"\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvbG9jYWxlL2tvLmNvZmZlZT85OTI4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCO0VBQUEsbUJBQW1CLEtBQW5CO0VBQTBCLG9CQUFvQixRQUE5QztFQUF3RCxhQUV2RTtJQUFBLFVBOEVFO01BQUEsUUFBUSxxQkFBUjtNQVNBLGVBQWUsU0FUZjtNQVVBLFVBQVUsU0FWVjtNQVlBLGNBQWMsUUFaZDtNQWFBLGNBQWMsT0FiZDtNQWNBLFlBQVksUUFkWjtNQXNCQSxzQkFBc0IsV0F0QnRCO01Bd0JBLG9CQUFvQixTQXhCcEI7TUF5QkEsZUFBZSxZQXpCZjtNQTBCQSwyQkFBMkIsNkVBMUIzQjtNQTRCQSxVQUFVLElBNUJWO01BdUNBLFlBQVksTUF2Q1o7TUF3Q0EsYUFBYSxZQXhDYjtNQWtEQSxvQkFBb0Isd0JBbERwQjtNQW1EQSx1QkFBdUIsbUNBbkR2QjtNQW9EQSxtQkFBbUIsZUFwRG5CO01BcURBLHNCQUFzQixnREFyRHRCO01Bc0RBLGNBQWMsU0F0RGQ7TUF3REEsZUFBZSxTQXhEZjtNQXlEQSxpQkFBaUIsWUF6RGpCO01BMERBLGNBQWMsd0JBMURkO01BNERBLEtBQUssYUE1REw7TUFpRUEsV0FBVyxtRUFqRVg7TUFrRUEsY0FBYyxZQWxFZDtNQW1FQSxjQUFjLFVBbkVkO01Bb0VBLGVBQWUsVUFwRWY7TUFzRUEsV0FBVyxzQkF0RVg7S0E5RUY7SUF3SkEsS0FJRTtNQUFBLEtBQUssR0FBTDtNQUNBLE1BQU0sSUFETjtNQUVBLFdBQVcsTUFGWDtNQUdBLFNBQVMsSUFIVDtNQUlBLE1BQU0sS0FKTjtNQUtBLE9BQU8sSUFMUDtNQU1BLFNBQVMsSUFOVDtNQU9BLFlBQVksTUFQWjtNQVFBLFNBQVMsS0FSVDtNQVNBLE1BQU0sR0FUTjtNQVVBLFlBQVksTUFWWjtNQVdBLE9BQU8sR0FYUDtNQVlBLFNBQVMsT0FaVDtNQWFBLE9BQU8sSUFiUDtNQWNBLFNBQVMsSUFkVDtNQWVB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ZUFpQkU7TUFBQSxTQUFTLE1BQVQ7S0Fsa0ZGO0dBRmUiLCJmaWxlIjoiMTA2Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gbmF0aXZlRGVzY3JpcHRpb246IFwi7ZWc6rWt7Ja0XCIsIGVuZ2xpc2hEZXNjcmlwdGlvbjogXCJLb3JlYW5cIiwgdHJhbnNsYXRpb246XG5cbiAgbmV3X2hvbWU6XG4jICAgIHRpdGxlOiBcIkNvZGVDb21iYXQgLSBDb2RpbmcgZ2FtZXMgdG8gbGVhcm4gUHl0aG9uIGFuZCBKYXZhU2NyaXB0XCJcbiMgICAgbWV0YV9kZXNjcmlwdGlvbjogXCJMZWFybiB0eXBlZCBjb2RlIHRocm91Z2ggYSBwcm9ncmFtbWluZyBnYW1lLiBMZWFybiBQeXRob24sIEphdmFTY3JpcHQsIGFuZCBIVE1MIGFzIHlvdSBzb2x2ZSBwdXp6bGVzIGFuZCBsZWFybiB0byBtYWtlIHlvdXIgb3duIGNvZGluZyBnYW1lcyBhbmQgd2Vic2l0ZXMuXCJcbiMgICAgYnVpbHRfZm9yX3RlYWNoZXJzX3RpdGxlOiBcIkEgQ29kaW5nIEdhbWUgQnVpbHQgd2l0aCBUZWFjaGVycyBpbiBNaW5kXCJcbiMgICAgYnVpbHRfZm9yX3RlYWNoZXJzX2JsdXJiOiBcIlRlYWNoaW5nIGtpZHMgdG8gY29kZSBjYW4gb2Z0ZW4gZmVlbCBvdmVyd2hlbG1pbmcuIENvZGVDb21iYXQgaGVscHMgYWxsIGVkdWNhdG9ycyB0ZWFjaCBzdHVkZW50cyBob3cgdG8gY29kZSBpbiBlaXRoZXIgSmF2YVNjcmlwdCBvciBQeXRob24sIHR3byBvZiB0aGUgbW9zdCBwb3B1bGFyIHByb2dyYW1taW5nIGxhbmd1YWdlcy4gV2l0aCBhIGNvbXByZWhlbnNpdmUgY3VycmljdWx1bSB0aGF0IGluY2x1ZGVzIHNpeCBjb21wdXRlciBzY2llbmNlIHVuaXRzIGFuZCByZWluZm9yY2VzIGxlYXJuaW5nIHRocm91Z2ggcHJvamVjdC1iYXNlZCBnYW1lIGRldmVsb3BtZW50IGFuZCB3ZWIgZGV2ZWxvcG1lbnQgdW5pdHMsIGtpZHMgd2lsbCBwcm9ncmVzcyBvbiBhIGpvdXJuZXkgZnJvbSBiYXNpYyBzeW50YXggdG8gcmVjdXJzaW9uIVwiXG4jICAgIGJ1aWx0X2Zvcl90ZWFjaGVyc19zdWJ0aXRsZTE6IFwiQ29tcHV0ZXIgU2NpZW5jZVwiXG4jICAgIGJ1aWx0X2Zvcl90ZWFjaGVyc19zdWJibHVyYjE6IFwiU3RhcnRpbmcgd2l0aCBvdXIgZnJlZSBJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZSBjb3Vyc2UsIHN0dWRlbnRzIG1hc3RlciBjb3JlIGNvZGluZyBjb25jZXB0cyBzdWNoIGFzIHdoaWxlL2ZvciBsb29wcywgZnVuY3Rpb25zLCBhbmQgYWxnb3JpdGhtcy5cIlxuIyAgICBidWlsdF9mb3JfdGVhY2hlcnNfc3VidGl0bGUyOiBcIkdhbWUgRGV2ZWxvcG1lbnRcIlxuIyAgICBidWlsdF9mb3JfdGVhY2hlcnNfc3ViYmx1cmIyOiBcIkxlYXJuZXJzIGNvbnN0cnVjdCBtYXplcyBhbmQgdXNlIGJhc2ljIGlucHV0IGhhbmRsaW5nIHRvIGNvZGUgdGhlaXIgb3duIGdhbWVzIHRoYXQgY2FuIGJlIHNoYXJlZCB3aXRoIGZyaWVuZHMgYW5kIGZhbWlseS5cIlxuIyAgICBidWlsdF9mb3JfdGVhY2hlcnNfc3VidGl0bGUzOiBcIldlYiBEZXZlbG9wbWVudFwiXG4jICAgIGJ1aWx0X2Zvcl90ZWFjaGVyc19zdWJibHVyYjM6IFwiVXNpbmcgSFRNTCwgQ1NTLCBhbmQgalF1ZXJ5LCBsZWFybmVycyBmbGV4IHRoZWlyIGNyZWF0aXZlIG11c2NsZXMgdG8gcHJvZ3JhbSB0aGVpciBvd24gd2VicGFnZXMgd2l0aCBhIGN1c3RvbSBVUkwgdG8gc2hhcmUgd2l0aCB0aGVpciBjbGFzc21hdGVzLlwiXG4jICAgIGNlbnR1cnlfc2tpbGxzX3RpdGxlOiBcIjIxc3QgQ2VudHVyeSBTa2lsbHNcIlxuIyAgICBjZW50dXJ5X3NraWxsc19ibHVyYjE6IFwiU3R1ZGVudHMgRG9uJ3QgSnVzdCBMZXZlbCBVcCBUaGVpciBIZXJvLCBUaGV5IExldmVsIFVwIFRoZW1zZWx2ZXNcIlxuIyAgICBjZW50dXJ5X3NraWxsc19xdW90ZTE6IFwiWW91IG1lc3MgdXDigKZzbyB0aGVuIHlvdSB0aGluayBhYm91dCBhbGwgb2YgdGhlIHBvc3NpYmxlIHdheXMgdG8gZml4IGl0LCBhbmQgdGhlbiB0cnkgYWdhaW4uIEkgd291bGRuJ3QgYmUgYWJsZSB0byBnZXQgaGVyZSB3aXRob3V0IHRyeWluZyBoYXJkLlwiXG4jICAgIGNlbnR1cnlfc2tpbGxzX3N1YnRpdGxlMTogXCJDcml0aWNhbCBUaGlua2luZ1wiXG4jICAgIGNlbnR1cnlfc2tpbGxzX3N1YmJsdXJiMTogXCJXaXRoIGNvZGluZyBwdXp6bGVzIHRoYXQgYXJlIG5hdHVyYWxseSBzY2FmZm9sZGVkIGludG8gaW5jcmVhc2luZ2x5IGNoYWxsZW5naW5nIGxldmVscywgQ29kZUNvbWJhdCdzIHByb2dyYW1taW5nIGdhbWUgZW5zdXJlcyBraWRzIGFyZSBhbHdheXMgcHJhY3RpY2luZyBjcml0aWNhbCB0aGlua2luZy5cIlxuIyAgICBjZW50dXJ5X3NraWxsc19xdW90ZTI6IFwiRXZlcnlvbmUgZWxzZSB3YXMgbWFraW5nIG1hemVzLCBzbyBJIHRob3VnaHQsIOKAmGNhcHR1cmUgdGhlIGZsYWfigJkgYW5kIHRoYXTigJlzIHdoYXQgSSBkaWQuXCJcbiMgICAgY2VudHVyeV9za2lsbHNfc3VidGl0bGUyOiBcIkNyZWF0aXZpdHlcIlxuIyAgICBjZW50dXJ5X3NraWxsc19zdWJibHVyYjI6IFwiQ29kZUNvbWJhdCBlbmNvdXJhZ2VzIHN0dWRlbnRzIHRvIHNob3djYXNlIHRoZWlyIGNyZWF0aXZpdHkgYnkgYnVpbGRpbmcgYW5kIHNoYXJpbmcgdGhlaXIgb3duIGdhbWVzIGFuZCB3ZWJwYWdlcy5cIlxuIyAgICBjZW50dXJ5X3NraWxsc19xdW90ZTM6IFwiSWYgSSBnb3Qgc3R1Y2sgb24gYSBsZXZlbC4gSSB3b3VsZCB3b3JrIHdpdGggcGVvcGxlIGFyb3VuZCBtZSB1bnRpbCB3ZSB3ZXJlIGFsbCBhYmxlIHRvIGZpZ3VyZSBpdCBvdXQuXCJcbiMgICAgY2VudHVyeV9za2lsbHNfc3VidGl0bGUzOiBcIkNvbGxhYm9yYXRpb25cIlxuIyAgICBjZW50dXJ5X3NraWxsc19zdWJibHVyYjM6IFwiVGhyb3VnaG91dCB0aGUgZ2FtZSwgdGhlcmUgYXJlIG9wcG9ydHVuaXRpZXMgZm9yIHN0dWRlbnRzIHRvIGNvbGxhYm9yYXRlIHdoZW4gdGhleSBnZXQgc3R1Y2sgYW5kIHRvIHdvcmsgdG9nZXRoZXIgdXNpbmcgb3VyIHBhaXIgcHJvZ3JhbW1pbmcgZ3VpZGUuXCJcbiMgICAgY2VudHVyeV9za2lsbHNfcXVvdGU0OiBcIknigJl2ZSBhbHdheXMgaGFkIGFzcGlyYXRpb25zIG9mIGRlc2lnbmluZyB2aWRlbyBnYW1lcyBhbmQgbGVhcm5pbmcgaG93IHRvIGNvZGUgLi4uIHRoaXMgaXMgZ2l2aW5nIG1lIGEgZ3JlYXQgc3RhcnRpbmcgcG9pbnQuXCJcbiMgICAgY2VudHVyeV9za2lsbHNfc3VidGl0bGU0OiBcIkNvbW11bmljYXRpb25cIlxuIyAgICBjZW50dXJ5X3NraWxsc19zdWJibHVyYjQ6IFwiQ29kaW5nIHJlcXVpcmVzIGtpZHMgdG8gcHJhY3RpY2UgbmV3IGZvcm1zIG9mIGNvbW11bmljYXRpb24sIGluY2x1ZGluZyBjb21tdW5pY2F0aW5nIHdpdGggdGhlIGNvbXB1dGVyIGl0c2VsZiBhbmQgY29udmV5aW5nIHRoZWlyIGlkZWFzIHVzaW5nIHRoZSBtb3N0IGVmZmljaWVudCBjb2RlLlwiXG4jICAgIGNsYXNzcm9vbV9pbl9ib3hfdGl0bGU6IFwiV2UgU3RyaXZlIFRvOlwiXG4jICAgIGNsYXNzcm9vbV9pbl9ib3hfYmx1cmIxOiBcIkVuZ2FnZSBldmVyeSBzdHVkZW50IHNvIHRoYXQgdGhleSBiZWxpZXZlIGNvZGluZyBpcyBmb3IgdGhlbS5cIlxuIyAgICBjbGFzc3Jvb21faW5fYm94X2JsdXJiMjogXCJFbXBvd2VyIGFueSBlZHVjYXRvciB0byBmZWVsIGNvbmZpZGVudCB3aGVuIHRlYWNoaW5nIGNvZGluZy5cIlxuIyAgICBjbGFzc3Jvb21faW5fYm94X2JsdXJiMzogXCJJbnNwaXJlIGFsbCBzY2hvb2wgbGVhZGVycyB0byBjcmVhdGUgYSB3b3JsZC1jbGFzcyBjb21wdXRlciBzY2llbmNlIHByb2dyYW0uXCJcbiMgICAgY3JlYXRpdml0eV9yaWdvcl90aXRsZTogXCJXaGVyZSBDcmVhdGl2aXR5IE1lZXRzIFJpZ29yXCJcbiMgICAgY3JlYXRpdml0eV9yaWdvcl9zdWJ0aXRsZTE6IFwiTWFrZSBjb2RpbmcgZnVuIGFuZCB0ZWFjaCByZWFsLXdvcmxkIHNraWxsc1wiXG4jICAgIGNyZWF0aXZpdHlfcmlnb3JfYmx1cmIxOiBcIlN0dWRlbnRzIHR5cGUgcmVhbCBQeXRob24gYW5kIEphdmFTY3JpcHQgd2hpbGUgcGxheWluZyBnYW1lcyB0aGF0IGVuY291cmFnZSB0cmlhbC1hbmQtZXJyb3IsIGNyaXRpY2FsIHRoaW5raW5nLCBhbmQgY3JlYXRpdml0eS4gU3R1ZGVudHMgdGhlbiBhcHBseSB0aGUgY29kaW5nIHNraWxscyB0aGV54oCZdmUgbGVhcm5lZCBieSBkZXZlbG9waW5nIHRoZWlyIG93biBnYW1lcyBhbmQgd2Vic2l0ZXMgaW4gcHJvamVjdC1iYXNlZCBjb3Vyc2VzLlwiXG4jICAgIGNyZWF0aXZpdHlfcmlnb3Jfc3VidGl0bGUyOiBcIlJlYWNoIHN0dWRlbnRzIGF0IHRoZWlyIGxldmVsXCJcbiMgICAgY3JlYXRpdml0eV9yaWdvcl9ibHVyYjI6IFwiRXZlcnkgQ29kZUNvbWJhdCBsZXZlbCBpcyBzY2FmZm9sZGVkIGJhc2VkIG9uIG1pbGxpb25zIG9mIGRhdGEgcG9pbnRzIGFuZCBvcHRpbWl6ZWQgdG8gYWRhcHQgdG8gZWFjaCBsZWFybmVyLiBQcmFjdGljZSBsZXZlbHMgYW5kIGhpbnRzIGhlbHAgc3R1ZGVudHMgd2hlbiB0aGV5IGdldCBzdHVjaywgYW5kIGNoYWxsZW5nZSBsZXZlbHMgYXNzZXNzIHN0dWRlbnRzJyBsZWFybmluZyB0aHJvdWdob3V0IHRoZSBnYW1lLlwiXG4jICAgIGNyZWF0aXZpdHlfcmlnb3Jfc3VidGl0bGUzOiBcIkJ1aWx0IGZvciBhbGwgdGVhY2hlcnMsIHJlZ2FyZGxlc3Mgb2YgZXhwZXJpZW5jZVwiXG4jICAgIGNyZWF0aXZpdHlfcmlnb3JfYmx1cmIzOiBcIkNvZGVDb21iYXTigJlzIHNlbGYtcGFjZWQsIHN0YW5kYXJkcy1hbGlnbmVkIGN1cnJpY3VsdW0gbWFrZXMgdGVhY2hpbmcgY29tcHV0ZXIgc2NpZW5jZSBwb3NzaWJsZSBmb3IgZXZlcnlvbmUuIENvZGVDb21iYXQgZXF1aXBzIHRlYWNoZXJzIHdpdGggdGhlIHRyYWluaW5nLCBpbnN0cnVjdGlvbmFsIHJlc291cmNlcywgYW5kIGRlZGljYXRlZCBzdXBwb3J0IHRvIGZlZWwgY29uZmlkZW50IGFuZCBzdWNjZXNzZnVsIGluIHRoZSBjbGFzc3Jvb20uXCJcbiMgICAgZmVhdHVyZWRfcGFydG5lcnNfdGl0bGUxOiBcIkZlYXR1cmVkIEluXCJcbiMgICAgZmVhdHVyZWRfcGFydG5lcnNfdGl0bGUyOiBcIkF3YXJkcyAmIFBhcnRuZXJzXCJcbiMgICAgZmVhdHVyZWRfcGFydG5lcnNfYmx1cmIxOiBcIkNvbGxlZ2VCb2FyZCBFbmRvcnNlZCBQcm92aWRlclwiXG4jICAgIGZlYXR1cmVkX3BhcnRuZXJzX2JsdXJiMjogXCJCZXN0IENyZWF0aXZpdHkgVG9vbCBmb3IgU3R1ZGVudHNcIlxuIyAgICBmZWF0dXJlZF9wYXJ0bmVyc19ibHVyYjM6IFwiVG9wIFBpY2sgZm9yIExlYXJuaW5nXCJcbiMgICAgZmVhdHVyZWRfcGFydG5lcnNfYmx1cmI0OiBcIkNvZGUub3JnIE9mZmljaWFsIFBhcnRuZXJcIlxuIyAgICBmZWF0dXJlZF9wYXJ0bmVyc19ibHVyYjU6IFwiQ1Nmb3JBbGwgT2ZmaWNpYWwgTWVtYmVyXCJcbiMgICAgZmVhdHVyZWRfcGFydG5lcnNfYmx1cmI2OiBcIkhvdXIgb2YgQ29kZSBBY3Rpdml0eSBQYXJ0bmVyXCJcbiMgICAgZm9yX2xlYWRlcnNfdGl0bGU6IFwiRm9yIFNjaG9vbCBMZWFkZXJzXCJcbiMgICAgZm9yX2xlYWRlcnNfYmx1cmI6IFwiQSBDb21wcmVoZW5zaXZlLCBTdGFuZGFyZHMtQWxpZ25lZCBDb21wdXRlciBTY2llbmNlIFByb2dyYW1cIlxuIyAgICBmb3JfbGVhZGVyc19zdWJ0aXRsZTE6IFwiRWFzeSBJbXBsZW1lbnRhdGlvblwiXG4jICAgIGZvcl9sZWFkZXJzX3N1YmJsdXJiMTogXCJBIHdlYi1iYXNlZCBwcm9ncmFtIHRoYXQgcmVxdWlyZXMgbm8gSVQgc3VwcG9ydC4gR2V0IHN0YXJ0ZWQgaW4gdW5kZXIgNSBtaW51dGVzIHVzaW5nIEdvb2dsZSBvciBDbGV2ZXIgU2luZ2xlIFNpZ24tT24gKFNTTykuXCJcbiMgICAgZm9yX2xlYWRlcnNfc3VidGl0bGUyOiBcIkZ1bGwgQ29kaW5nIEN1cnJpY3VsdW1cIlxuIyAgICBmb3JfbGVhZGVyc19zdWJibHVyYjI6IFwiQSBzdGFuZGFyZHMtYWxpZ25lZCBjdXJyaWN1bHVtIHdpdGggaW5zdHJ1Y3Rpb25hbCByZXNvdXJjZXMgYW5kIHByb2Zlc3Npb25hbCBkZXZlbG9wbWVudCB0byBlbmFibGUgYW55IHRlYWNoZXIgdG8gdGVhY2ggY29tcHV0ZXIgc2NpZW5jZS5cIlxuIyAgICBmb3JfbGVhZGVyc19zdWJ0aXRsZTM6IFwiRmxleGlibGUgVXNlIENhc2VzXCJcbiMgICAgZm9yX2xlYWRlcnNfc3ViYmx1cmIzOiBcIldoZXRoZXIgeW91IHdhbnQgdG8gYnVpbGQgYSBNaWRkbGUgU2Nob29sIGNvZGluZyBlbGVjdGl2ZSwgYSBDVEUgcGF0aHdheSwgb3IgYW4gQVAgQ29tcHV0ZXIgU2NpZW5jZSBQcmluY2lwbGVzIGNsYXNzLCBDb2RlQ29tYmF0IGlzIHRhaWxvcmVkIHRvIHN1aXQgeW91ciBuZWVkcy5cIlxuIyAgICBmb3JfbGVhZGVyc19zdWJ0aXRsZTQ6IFwiUmVhbC1Xb3JsZCBTa2lsbHNcIlxuIyAgICBmb3JfbGVhZGVyc19zdWJibHVyYjQ6IFwiU3R1ZGVudHMgYnVpbGQgZ3JpdCBhbmQgZGV2ZWxvcCBhIGdyb3d0aCBtaW5kc2V0IHRocm91Z2ggY29kaW5nIGNoYWxsZW5nZXMgdGhhdCBwcmVwYXJlIHRoZW0gZm9yIHRoZSA1MDBLKyBvcGVuIGNvbXB1dGluZyBqb2JzLlwiXG4jICAgIGZvcl90ZWFjaGVyc190aXRsZTogXCJGb3IgVGVhY2hlcnNcIlxuIyAgICBmb3JfdGVhY2hlcnNfYmx1cmI6IFwiVG9vbHMgdG8gVW5sb2NrIFN0dWRlbnQgUG90ZW50aWFsXCJcbiMgICAgZm9yX3RlYWNoZXJzX3N1YnRpdGxlMTogXCJQcm9qZWN0LUJhc2VkIExlYXJuaW5nXCJcbiMgICAgZm9yX3RlYWNoZXJzX3N1YmJsdXJiMTogXCJQcm9tb3RlIGNyZWF0aXZpdHksIHByb2JsZW0tc29sdmluZywgYW5kIGNvbmZpZGVuY2UgaW4gcHJvamVjdC1iYXNlZCBjb3Vyc2VzIHdoZXJlIHN0dWRlbnRzIGRldmVsb3AgdGhlaXIgb3duIGdhbWVzIGFuZCB3ZWJwYWdlcy5cIlxuIyAgICBmb3JfdGVhY2hlcnNfc3VidGl0bGUyOiBcIlRlYWNoZXIgRGFzaGJvYXJkXCJcbiMgICAgZm9yX3RlYWNoZXJzX3N1YmJsdXJiMjogXCJWaWV3IGRhdGEgb24gc3R1ZGVudCBwcm9ncmVzcywgZGlzY292ZXIgY3VycmljdWx1bSByZXNvdXJjZXMsIGFuZCBhY2Nlc3MgcmVhbC10aW1lIHN1cHBvcnQgdG8gZW1wb3dlciBzdHVkZW50IGxlYXJuaW5nLlwiXG4jICAgIGZvcl90ZWFjaGVyc19zdWJ0aXRsZTM6IFwiQnVpbHQtaW4gQXNzZXNzbWVudHNcIlxuIyAgICBmb3JfdGVhY2hlcnNfc3ViYmx1cmIzOiBcIlBlcnNvbmFsaXplIGluc3RydWN0aW9uIGFuZCBlbnN1cmUgc3R1ZGVudHMgdW5kZXJzdGFuZCBjb3JlIGNvbmNlcHRzIHdpdGggZm9ybWF0aXZlIGFuZCBzdW1tYXRpdmUgYXNzZXNzbWVudHMuXCJcbiMgICAgZm9yX3RlYWNoZXJzX3N1YnRpdGxlNDogXCJBdXRvbWF0aWMgRGlmZmVyZW50aWF0aW9uXCJcbiMgICAgZm9yX3RlYWNoZXJzX3N1YmJsdXJiNDogXCJFbmdhZ2UgYWxsIGxlYXJuZXJzIGluIGEgZGl2ZXJzZSBjbGFzc3Jvb20gd2l0aCBwcmFjdGljZSBsZXZlbHMgdGhhdCBhZGFwdCB0byBlYWNoIHN0dWRlbnQncyBsZWFybmluZyBuZWVkcy5cIlxuIyAgICBnYW1lX2Jhc2VkX2JsdXJiOiBcIkNvZGVDb21iYXQgaXMgYSBnYW1lLWJhc2VkIGNvbXB1dGVyIHNjaWVuY2UgcHJvZ3JhbSB3aGVyZSBzdHVkZW50cyB0eXBlIHJlYWwgY29kZSBhbmQgc2VlIHRoZWlyIGNoYXJhY3RlcnMgcmVhY3QgaW4gcmVhbCB0aW1lLlwiXG4jICAgIGdldF9zdGFydGVkOiBcIkdldCBzdGFydGVkXCJcbiMgICAgZ2xvYmFsX3RpdGxlOiBcIkpvaW4gT3VyIEdsb2JhbCBDb21tdW5pdHkgb2YgTGVhcm5lcnMgYW5kIEVkdWNhdG9yc1wiXG4jICAgIGdsb2JhbF9zdWJ0aXRsZTE6IFwiTGVhcm5lcnNcIlxuIyAgICBnbG9iYWxfc3VidGl0bGUyOiBcIkxpbmVzIG9mIENvZGVcIlxuIyAgICBnbG9iYWxfc3VidGl0bGUzOiBcIlRlYWNoZXJzXCJcbiMgICAgZ2xvYmFsX3N1YnRpdGxlNDogXCJDb3VudHJpZXNcIlxuIyAgICBnb190b19teV9jbGFzc2VzOiBcIkdvIHRvIG15IGNsYXNzZXNcIlxuIyAgICBnb190b19teV9jb3Vyc2VzOiBcIkdvIHRvIG15IGNvdXJzZXNcIlxuIyAgICBxdW90ZXNfcXVvdGUxOiBcIk5hbWUgYW55IHByb2dyYW0gb25saW5lLCBJ4oCZdmUgdHJpZWQgaXQuIE5vbmUgb2YgdGhlbSBtYXRjaCB1cCB0byBDb2RlQ29tYmF0LiBBbnkgdGVhY2hlciB3aG8gd2FudHMgdGhlaXIgc3R1ZGVudHMgdG8gbGVhcm4gaG93IHRvIGNvZGUuLi4gc3RhcnQgaGVyZSFcIlxuIyAgICBxdW90ZXNfcXVvdGUyOiBcIiBJIHdhcyBzdXJwcmlzZWQgYWJvdXQgaG93IGVhc3kgYW5kIGludHVpdGl2ZSBDb2RlQ29tYmF0IG1ha2VzIGxlYXJuaW5nIGNvbXB1dGVyIHNjaWVuY2UuIFRoZSBzY29yZXMgb24gdGhlIEFQIGV4YW0gd2VyZSBtdWNoIGhpZ2hlciB0aGFuIEkgZXhwZWN0ZWQgYW5kIEkgYmVsaWV2ZSBDb2RlQ29tYmF0IGlzIHRoZSByZWFzb24gd2h5IHRoaXMgd2FzIHRoZSBjYXNlLlwiXG4jICAgIHF1b3Rlc19xdW90ZTM6IFwiQ29kZUNvbWJhdCBoYXMgYmVlbiB0aGUgbW9zdCBiZW5lZmljaWFsIGZvciB0ZWFjaGluZyBteSBzdHVkZW50cyByZWFsLWxpZmUgY29kaW5nIGNhcGFiaWxpdGllcy4gTXkgaHVzYmFuZCBpcyBhIHNvZnR3YXJlIGVuZ2luZWVyIGFuZCBoZSBoYXMgdGVzdGVkIG91dCBhbGwgb2YgbXkgcHJvZ3JhbXMuIEhlIHB1dCB0aGlzIGFzIGhpcyB0b3AgY2hvaWNlLlwiXG4jICAgIHF1b3Rlc19xdW90ZTQ6IFwiVGhlIGZlZWRiYWNrIOKApiBoYXMgYmVlbiBzbyBwb3NpdGl2ZSB0aGF0IHdlIGFyZSBzdHJ1Y3R1cmluZyBhIGNvbXB1dGVyIHNjaWVuY2UgY2xhc3MgYXJvdW5kIENvZGVDb21iYXQuIFRoZSBwcm9ncmFtIHJlYWxseSBlbmdhZ2VzIHRoZSBzdHVkZW50cyB3aXRoIGEgZ2FtaW5nIHN0eWxlIHBsYXRmb3JtIHRoYXQgaXMgZW50ZXJ0YWluaW5nIGFuZCBpbnN0cnVjdGlvbmFsIGF0IHRoZSBzYW1lIHRpbWUuIEtlZXAgdXAgdGhlIGdvb2Qgd29yaywgQ29kZUNvbWJhdCFcIlxuIyAgICBzZWVfZXhhbXBsZTogXCJTZWUgZXhhbXBsZVwiXG4gICAgc2xvZ2FuOiBcIuy9lOuUqeydhCDrsLDsmrDripQg6rCA7J6lIOunpOugpeyggeyduCDrsKnrspUhXCIgIyB7Y2hhbmdlfVxuIyAgICB0ZWFjaF9jczFfZnJlZTogXCJUZWFjaCBDUzEgRnJlZVwiXG4jICAgIHRlYWNoZXJzX2xvdmVfY29kZWNvbWJhdF90aXRsZTogXCJUZWFjaGVycyBMb3ZlIENvZGVDb21iYXRcIlxuIyAgICB0ZWFjaGVyc19sb3ZlX2NvZGVjb21iYXRfYmx1cmIxOiBcIlJlcG9ydCB0aGF0IHRoZWlyIHN0dWRlbnRzIGVuam95IHVzaW5nIENvZGVDb21iYXQgdG8gbGVhcm4gaG93IHRvIGNvZGVcIlxuIyAgICB0ZWFjaGVyc19sb3ZlX2NvZGVjb21iYXRfYmx1cmIyOiBcIldvdWxkIHJlY29tbWVuZCBDb2RlQ29tYmF0IHRvIG90aGVyIGNvbXB1dGVyIHNjaWVuY2UgdGVhY2hlcnNcIlxuIyAgICB0ZWFjaGVyc19sb3ZlX2NvZGVjb21iYXRfYmx1cmIzOiBcIlNheSB0aGF0IENvZGVDb21iYXQgaGVscHMgdGhlbSBzdXBwb3J0IHN0dWRlbnRz4oCZIHByb2JsZW0gc29sdmluZyBhYmlsaXRpZXNcIlxuIyAgICB0ZWFjaGVyc19sb3ZlX2NvZGVjb21iYXRfc3ViYmx1cmI6IFwiSW4gcGFydG5lcnNoaXAgd2l0aCBNY1JFTCBJbnRlcm5hdGlvbmFsLCBhIGxlYWRlciBpbiByZXNlYXJjaC1iYXNlZCBndWlkYW5jZSBhbmQgZXZhbHVhdGlvbnMgb2YgZWR1Y2F0aW9uYWwgdGVjaG5vbG9neS5cIlxuIyAgICB0cnlfdGhlX2dhbWU6IFwiVHJ5IHRoZSBnYW1lXCJcbiMgICAgY2xhc3Nyb29tX2VkaXRpb246IFwiQ2xhc3Nyb29tIEVkaXRpb246XCJcbiAgICBsZWFybl90b19jb2RlOiBcIuy9lOuUqSDrsLDsmrDquLA6XCJcbiAgICBwbGF5X25vdzogXCLsp4DquIgg7Iuc7J6R7ZWY6riwXCJcbiMgICAgaW1fYW5fZWR1Y2F0b3I6IFwiSSdtIGFuIEVkdWNhdG9yXCJcbiAgICBpbV9hX3RlYWNoZXI6IFwi7ISg7IOd64uY7J6F64uI64ukXCJcbiAgICBpbV9hX3N0dWRlbnQ6IFwi7ZWZ7IOd7J6F64uI64ukXCJcbiAgICBsZWFybl9tb3JlOiBcIuuNlCDslYzslYTrs7TquLBcIlxuIyAgICBjbGFzc3Jvb21faW5fYV9ib3g6IFwiQSBjbGFzc3Jvb20gaW4tYS1ib3ggZm9yIHRlYWNoaW5nIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiMgICAgY29kZWNvbWJhdF9pczogXCJDb2RlQ29tYmF0IGlzIGEgcGxhdGZvcm0gPHN0cm9uZz5mb3Igc3R1ZGVudHM8L3N0cm9uZz4gdG8gbGVhcm4gY29tcHV0ZXIgc2NpZW5jZSB3aGlsZSBwbGF5aW5nIHRocm91Z2ggYSByZWFsIGdhbWUuXCJcbiMgICAgb3VyX2NvdXJzZXM6IFwiT3VyIGNvdXJzZXMgaGF2ZSBiZWVuIHNwZWNpZmljYWxseSBwbGF5dGVzdGVkIDxzdHJvbmc+dG8gZXhjZWwgaW4gdGhlIGNsYXNzcm9vbTwvc3Ryb25nPiwgZXZlbiBmb3IgdGVhY2hlcnMgd2l0aCBsaXR0bGUgdG8gbm8gcHJpb3IgcHJvZ3JhbW1pbmcgZXhwZXJpZW5jZS5cIlxuIyAgICB3YXRjaF9ob3c6IFwiV2F0Y2ggaG93IENvZGVDb21iYXQgaXMgdHJhbnNmb3JtaW5nIHRoZSB3YXkgcGVvcGxlIGxlYXJuIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiMgICAgdG9wX3NjcmVlbnNob3RzX2hpbnQ6IFwiU3R1ZGVudHMgd3JpdGUgY29kZSBhbmQgc2VlIHRoZWlyIGNoYW5nZXMgdXBkYXRlIGluIHJlYWwtdGltZVwiXG4jICAgIGRlc2lnbmVkX3dpdGg6IFwiRGVzaWduZWQgd2l0aCB0ZWFjaGVycyBpbiBtaW5kXCJcbiMgICAgcmVhbF9jb2RlOiBcIlJlYWwsIHR5cGVkIGNvZGVcIlxuICAgIGZyb21fdGhlX2ZpcnN0X2xldmVsOiBcIuyyqyDrsojsp7gg66CI67Ko67aA7YSwXCJcbiMgICAgZ2V0dGluZ19zdHVkZW50czogXCJHZXR0aW5nIHN0dWRlbnRzIHRvIHR5cGVkIGNvZGUgYXMgcXVpY2tseSBhcyBwb3NzaWJsZSBpcyBjcml0aWNhbCB0byBsZWFybmluZyBwcm9ncmFtbWluZyBzeW50YXggYW5kIHByb3BlciBzdHJ1Y3R1cmUuXCJcbiAgICBlZHVjYXRvcl9yZXNvdXJjZXM6IFwi6rWQ7Jyh7J6QIOyekOujjOuTpFwiXG4gICAgY291cnNlX2d1aWRlczogXCLqt7jrpqzqs6Ag7L2U7IqkIOqwgOydtOuTnFwiXG4gICAgdGVhY2hpbmdfY29tcHV0ZXJfc2NpZW5jZTogXCLsmrDrpqzripQg7Ja065akIOuwsOqyveydhCDqsIDsp4Qg6rWQ7Jyh7J6Q652864+EIOyngOybkO2VmOuKlCDrj4Tqtazrpbwg6rCA7KeA6rOgIOyeiOq4sCDrlYzrrLjsl5AsIOy7tO2TqO2EsCDqs7XtlZnsnYQg6rCA66W07LmY64qUIOqyg+ydgCDruYTsi7wg7ZWZ7JyE66W8IO2VhOyalOuhnO2VmOyngCDslYrsirXri4jri6QuXCJcbiMgICAgYWNjZXNzaWJsZV90bzogXCJBY2Nlc3NpYmxlIHRvXCJcbiAgICBldmVyeW9uZTogXCLrqqjrkZBcIlxuIyAgICBkZW1vY3JhdGl6aW5nOiBcIkRlbW9jcmF0aXppbmcgdGhlIHByb2Nlc3Mgb2YgbGVhcm5pbmcgY29kaW5nIGlzIGF0IHRoZSBjb3JlIG9mIG91ciBwaGlsb3NvcGh5LiBFdmVyeW9uZSBzaG91bGQgYmUgYWJsZSB0byBsZWFybiB0byBjb2RlLlwiXG4jICAgIGZvcmdvdF9sZWFybmluZzogXCJJIHRoaW5rIHRoZXkgYWN0dWFsbHkgZm9yZ290IHRoYXQgdGhleSB3ZXJlIGxlYXJuaW5nIHNvbWV0aGluZy5cIlxuIyAgICB3YW50ZWRfdG9fZG86IFwiIENvZGluZyBpcyBzb21ldGhpbmcgSSd2ZSBhbHdheXMgd2FudGVkIHRvIGRvLCBhbmQgSSBuZXZlciB0aG91Z2h0IEkgd291bGQgYmUgYWJsZSB0byBsZWFybiBpdCBpbiBzY2hvb2wuXCJcbiMgICAgYnVpbGRzX2NvbmNlcHRzX3VwOiBcIkkgbGlrZSBob3cgQ29kZUNvbWJhdCBidWlsZHMgdGhlIGNvbmNlcHRzIHVwLiBJdCdzIHJlYWxseSBlYXN5IHRvIHVuZGVyc3RhbmQgYW5kIGZ1biB0byBmaWd1cmUgaXQgb3V0LlwiXG4jICAgIHdoeV9nYW1lczogXCJXaHkgaXMgbGVhcm5pbmcgdGhyb3VnaCBnYW1lcyBpbXBvcnRhbnQ/XCJcbiMgICAgZ2FtZXNfcmV3YXJkOiBcIkdhbWVzIHJld2FyZCB0aGUgcHJvZHVjdGl2ZSBzdHJ1Z2dsZS5cIlxuIyAgICBlbmNvdXJhZ2U6IFwiR2FtaW5nIGlzIGEgbWVkaXVtIHRoYXQgZW5jb3VyYWdlcyBpbnRlcmFjdGlvbiwgZGlzY292ZXJ5LCBhbmQgdHJpYWwtYW5kLWVycm9yLiBBIGdvb2QgZ2FtZSBjaGFsbGVuZ2VzIHRoZSBwbGF5ZXIgdG8gbWFzdGVyIHNraWxscyBvdmVyIHRpbWUsIHdoaWNoIGlzIHRoZSBzYW1lIGNyaXRpY2FsIHByb2Nlc3Mgc3R1ZGVudHMgZ28gdGhyb3VnaCBhcyB0aGV5IGxlYXJuLlwiXG4jICAgIGV4Y2VsOiBcIkdhbWVzIGV4Y2VsIGF0IHJld2FyZGluZ1wiXG4jICAgIHN0cnVnZ2xlOiBcInByb2R1Y3RpdmUgc3RydWdnbGVcIlxuIyAgICBraW5kX29mX3N0cnVnZ2xlOiBcInRoZSBraW5kIG9mIHN0cnVnZ2xlIHRoYXQgcmVzdWx0cyBpbiBsZWFybmluZyB0aGF04oCZcyBlbmdhZ2luZyBhbmRcIlxuICAgIG1vdGl2YXRpbmc6IFwi64+Z6riw67aA7JesXCJcbiAgICBub3RfdGVkaW91czogXCLsp4Dro6jtlZjsp4Ag7JWK7Iq164uI64ukLlwiXG4jICAgIGdhbWluZ19pc19nb29kOiBcIlN0dWRpZXMgc3VnZ2VzdCBnYW1pbmcgaXMgZ29vZCBmb3IgY2hpbGRyZW7igJlzIGJyYWlucy4gKGl04oCZcyB0cnVlISlcIlxuIyAgICBnYW1lX2Jhc2VkOiBcIldoZW4gZ2FtZS1iYXNlZCBsZWFybmluZyBzeXN0ZW1zIGFyZVwiXG4jICAgIGNvbXBhcmVkOiBcImNvbXBhcmVkXCJcbiMgICAgY29udmVudGlvbmFsOiBcImFnYWluc3QgY29udmVudGlvbmFsIGFzc2Vzc21lbnQgbWV0aG9kcywgdGhlIGRpZmZlcmVuY2UgaXMgY2xlYXI6IGdhbWVzIGFyZSBiZXR0ZXIgYXQgaGVscGluZyBzdHVkZW50cyByZXRhaW4ga25vd2xlZGdlLCBjb25jZW50cmF0ZSBhbmRcIlxuIyAgICBwZXJmb3JtX2F0X2hpZ2hlcl9sZXZlbDogXCJwZXJmb3JtIGF0IGEgaGlnaGVyIGxldmVsIG9mIGFjaGlldmVtZW50XCJcbiMgICAgZmVlZGJhY2s6IFwiR2FtZXMgYWxzbyBwcm92aWRlIHJlYWwtdGltZSBmZWVkYmFjayB0aGF0IGFsbG93cyBzdHVkZW50cyB0byBhZGp1c3QgdGhlaXIgc29sdXRpb24gcGF0aCBhbmQgdW5kZXJzdGFuZCBjb25jZXB0cyBtb3JlIGhvbGlzdGljYWxseSwgaW5zdGVhZCBvZiBiZWluZyBsaW1pdGVkIHRvIGp1c3Qg4oCcY29ycmVjdOKAnSBvciDigJxpbmNvcnJlY3TigJ0gYW5zd2Vycy5cIlxuIyAgICByZWFsX2dhbWU6IFwiQSByZWFsIGdhbWUsIHBsYXllZCB3aXRoIHJlYWwgY29kaW5nLlwiXG4jICAgIGdyZWF0X2dhbWU6IFwiQSBncmVhdCBnYW1lIGlzIG1vcmUgdGhhbiBqdXN0IGJhZGdlcyBhbmQgYWNoaWV2ZW1lbnRzIC0gaXTigJlzIGFib3V0IGEgcGxheWVy4oCZcyBqb3VybmV5LCB3ZWxsLWRlc2lnbmVkIHB1enpsZXMsIGFuZCB0aGUgYWJpbGl0eSB0byB0YWNrbGUgY2hhbGxlbmdlcyB3aXRoIGFnZW5jeSBhbmQgY29uZmlkZW5jZS5cIlxuIyAgICBhZ2VuY3k6IFwiQ29kZUNvbWJhdCBpcyBhIGdhbWUgdGhhdCBnaXZlcyBwbGF5ZXJzIHRoYXQgYWdlbmN5IGFuZCBjb25maWRlbmNlIHdpdGggb3VyIHJvYnVzdCB0eXBlZCBjb2RlIGVuZ2luZSwgd2hpY2ggaGVscHMgYmVnaW5uZXIgYW5kIGFkdmFuY2VkIHN0dWRlbnRzIGFsaWtlIHdyaXRlIHByb3BlciwgdmFsaWQgY29kZS5cIlxuICAgIHJlcXVlc3RfZGVtb190aXRsZTogXCLsmKTripgg7ZWZ7IOd65Ok7J20IOyLnOyeke2VoCDsiJgg7J6I64+E66GdIO2VmOyEuOyalCFcIlxuICAgIHJlcXVlc3RfZGVtb19zdWJ0aXRsZTogXCLtlZnsg53rk6TsnbQg7ZWc7Iuc6rCEIOydtOuCtOyXkCDsi5zsnpHtlaAg7IiYIOyeiOuPhOuhnSDrjbDrqqjrpbwg7JqU7LKt7ZWY7IS47JqULlwiXG4gICAgZ2V0X3N0YXJ0ZWRfdGl0bGU6IFwi7Jik64qYIOyImOyXheydhCDspIDruYTtlbTrs7TshLjsmpRcIlxuICAgIGdldF9zdGFydGVkX3N1YnRpdGxlOiBcIuyImOyXheydhCDspIDruYTtlZjqs6AsIO2VmeyDneydhCDstpTqsIDtlZjqs6AsIO2VmeyDneuTpOydmCDsu7Ttk6jthLAg6rO17ZWZIOyLpOugpSDtlqXsg4HsnYQg6rSA7LCw7ZW067O07IS47JqULlwiXG4gICAgcmVxdWVzdF9kZW1vOiBcIuuNsOuqqCDsmpTssq3tlZjquLBcIlxuIyAgICByZXF1ZXN0X3F1b3RlOiBcIlJlcXVlc3QgYSBRdW90ZVwiXG4gICAgc2V0dXBfYV9jbGFzczogXCLsiJjsl4Ug7KSA67mE7ZWY6riwXCJcbiAgICBoYXZlX2FuX2FjY291bnQ6IFwi6rOE7KCV7J20IOyeiOycvOyLreuLiOq5jD9cIlxuICAgIGxvZ2dlZF9pbl9hczogXCLri7nsi6DsnYAg64uk7J2MIOqzhOygleycvOuhnCDroZzqt7jsnbjrkJjslrTsnojsirXri4jri6QuXCJcbiMgICAgY29tcHV0ZXJfc2NpZW5jZTogXCJPdXIgc2VsZi1wYWNlZCBjb3Vyc2VzIGNvdmVyIGJhc2ljIHN5bnRheCB0byBhZHZhbmNlZCBjb25jZXB0c1wiXG4gICAgZmZhOiBcIuuqqOuToCDtlZnsg53rk6Tsl5Dqsowg66y066OMXCJcbiMgICAgY29taW5nX3Nvb246IFwiTW9yZSBjb21pbmcgc29vbiFcIlxuIyAgICBjb3Vyc2VzX2F2YWlsYWJsZV9pbjogXCJDb3Vyc2VzIGFyZSBhdmFpbGFibGUgaW4gSmF2YVNjcmlwdCBhbmQgUHl0aG9uLiBXZWIgRGV2ZWxvcG1lbnQgY291cnNlcyB1dGlsaXplIEhUTUwsIENTUywgYW5kIGpRdWVyeS5cIlxuIyAgICBib2FzdDogXCJCb2FzdHMgcmlkZGxlcyB0aGF0IGFyZSBjb21wbGV4IGVub3VnaCB0byBmYXNjaW5hdGUgZ2FtZXJzIGFuZCBjb2RlcnMgYWxpa2UuXCJcbiMgICAgd2lubmluZzogXCJBIHdpbm5pbmcgY29tYmluYXRpb24gb2YgUlBHIGdhbWVwbGF5IGFuZCBwcm9ncmFtbWluZyBob21ld29yayB0aGF0IHB1bGxzIG9mZiBtYWtpbmcga2lkLWZyaWVuZGx5IGVkdWNhdGlvbiBsZWdpdGltYXRlbHkgZW5qb3lhYmxlLlwiXG4gICAgcnVuX2NsYXNzOiBcIuuLueyLoOydtCDtlbTslbztlaAg7J287J2AIOyYpOuKmCDtlZnqtZDsl5DshJwg7Lu07ZOo7YSw6rO17ZWZ7IiY7JeF7J2EIOyLpO2Wie2VmOuKlCDqsoPsnoXri4jri6QuIOyWtOuWoO2VnCDsu7Ttk6jthLDqs7XtlZkg67Cw6rK97KeA7Iud64+EIO2VhOyalO2VmOyngCDslYrsirXri4jri6QuXCJcbiAgICBnb3RvX2NsYXNzZXM6IFwi64K0IOyImOyXheuTpCDrsJTroZzqsIDquLBcIlxuICAgIHZpZXdfcHJvZmlsZTogXCLrgrQg7ZSE66Gc7ZWEIOuztOq4sFwiXG4gICAgdmlld19wcm9ncmVzczogXCLsp4Ttlokg7IOB7ZmpIOuztOq4sFwiXG4jICAgIGdvX3RvX2NvdXJzZXM6IFwiR28gdG8gTXkgQ291cnNlc1wiXG4gICAgd2FudF9jb2NvOiBcIu2Vmeq1kOyXkOyEnCDsvZTrk5zsu7TrsYPsnYQg7ZW0IOuztOqzoCDsi7brgpjsmpQ/XCJcbiMgICAgZWR1Y2F0b3I6IFwiRWR1Y2F0b3JcIlxuIyAgICBzdHVkZW50OiBcIlN0dWRlbnRcIlxuXG4gIG5hdjpcbiMgICAgZWR1Y2F0b3JzOiBcIkVkdWNhdG9yc1wiXG4jICAgIGZvbGxvd191czogXCJGb2xsb3cgVXNcIlxuIyAgICBnZW5lcmFsOiBcIkdlbmVyYWxcIlxuICAgIG1hcDogXCLrp7VcIlxuICAgIHBsYXk6IFwi66CI67KoXCIgIyBUaGUgdG9wIG5hdiBiYXIgZW50cnkgd2hlcmUgcGxheWVycyBjaG9vc2Ugd2hpY2ggbGV2ZWxzIHRvIHBsYXlcbiAgICBjb21tdW5pdHk6IFwi7Luk666k64uI7YuwXCJcbiAgICBjb3Vyc2VzOiBcIuy9lOyKpFwiXG4gICAgYmxvZzogXCLruJTroZzqt7hcIlxuICAgIGZvcnVtOiBcIu2PrOufvFwiXG4gICAgYWNjb3VudDogXCLqs4TsoJVcIlxuICAgIG15X2FjY291bnQ6IFwi64K0IOqzhOyglVwiXG4gICAgcHJvZmlsZTogXCLtlITroZztlYRcIlxuICAgIGhvbWU6IFwi7ZmIXCJcbiAgICBjb250cmlidXRlOiBcIuywuOyXrO2VmOq4sFwiXG4gICAgbGVnYWw6IFwi67KVXCJcbiAgICBwcml2YWN5OiBcIu2UhOudvOydtOuyhOyLnFwiXG4gICAgYWJvdXQ6IFwi7IaM6rCcXCJcbiAgICBjb250YWN0OiBcIuusuOydmFwiXG4gICAgdHdpdHRlcl9mb2xsb3c6IFwi7YyU66Gc7JqwXCJcbiAgICBteV9jbGFzc3Jvb21zOiBcIuuCmOydmCDtgbTrnpjsiqRcIlxuICAgIG15X2NvdXJzZXM6IFwi64KY7J2YIOy9lOyKpFwiXG4jICAgIG15X3RlYWNoZXJzOiBcIk15IFRlYWNoZXJzXCJcbiAgICBjYXJlZXJzOiBcIuyxhOyaqVwiXG4gICAgZmFjZWJvb2s6IFwi7Y6Y7J207Iqk67aBXCJcbiAgICB0d2l0dGVyOiBcIu2KuOychO2EsFwiXG4gICAgY3JlYXRlX2FfY2xhc3M6IFwi7YG0656Y7IqkIOyDneyEsVwiXG4jICAgIG90aGVyOiBcIk90aGVyXCJcbiAgICBsZWFybl90b19jb2RlOiBcIuy9lOuTnCDtlZnsirXtlZjquLAhXCJcbiMgICAgdG9nZ2xlX25hdjogXCJUb2dnbGUgbmF2aWdhdGlvblwiXG4gICAgc2Nob29sczogXCLtlZnqtZBcIlxuIyAgICBnZXRfaW52b2x2ZWQ6IFwiR2V0IEludm9sdmVkXCJcbiAgICBvcGVuX3NvdXJjZTogXCLsmKTtlIgg7IaM7IqkIChHaXRIdWIpXCJcbiAgICBzdXBwb3J0OiBcIuyngOybkFwiXG4gICAgZmFxczogXCLsnpDso7wg66y764qUIOyniOusuFwiXG4jICAgIGNvcHlyaWdodF9wcmVmaXg6IFwiQ29weXJpZ2h0XCJcbiMgICAgY29weXJpZ2h0X3N1ZmZpeDogXCJBbGwgUmlnaHRzIFJlc2VydmVkLlwiXG4gICAgaGVscF9wcmVmOiBcIuuPhOybgOydtCDtlYTsmpTtlZjsi6DqsIDsmpQ/IOydtOuplOydvOydhCDrs7TrgrTso7zshLjsmpQuXCJcbiAgICBoZWxwX3N1ZmY6IFwi7KCA7Z2s6rCAIOuPhOyZgOuTnOumrOqyoOyKteuLiOuLpC5cIlxuIyAgICByZXNvdXJjZV9odWI6IFwiUmVzb3VyY2UgSHViXCJcbiMgICAgYXBjc3A6IFwiQVAgQ1MgUHJpbmNpcGxlc1wiXG4jICAgIHBhcmVudDogXCJQYXJlbnRzXCJcblxuICBtb2RhbDpcbiAgICBjbG9zZTogXCLri6vquLBcIlxuICAgIG9rYXk6IFwi7ZmV7J24XCJcblxuICBub3RfZm91bmQ6XG4gICAgcGFnZV9ub3RfZm91bmQ6IFwi7Y6Y7J207KeA66W8IOywvuydhCDsiJgg7JeG7Iq164uI64ukXCJcblxuICBkaXBsb21hdF9zdWdnZXN0aW9uOlxuICAgIHRpdGxlOiBcIuy9lOuTnCDsu7TrsYMg67KI7Jet7J2EIOuPhOyZgOyjvOyEuOyalCFcIiAjIFRoaXMgc2hvd3MgdXAgd2hlbiBhIHBsYXllciBzd2l0Y2hlcyB0byBhIG5vbi1FbmdsaXNoIGxhbmd1YWdlIHVzaW5nIHRoZSBsYW5ndWFnZSBzZWxlY3Rvci5cbiAgICBzdWJfaGVhZGluZzogXCLsmrDrpqzripQg64u57Iug7J2YIOyWuOyWtCDriqXroKXsnbQg7ZWE7JqU7ZWp64uI64ukLlwiXG4gICAgcGl0Y2hfYm9keTogXCLsmrDrpqzripQg7JiB7Ja066GcIOy9lOuTnCDsu7TrsYPsnYQg6rCc67Cc7ZWY6riwIOyLnOyeke2WiOyngOunjCwg7J2066+4IOyghOyEuOqzhOydmCDsnKDsoIDrk6TsnbQg7L2U65OcIOy7tOuxg+ydhCDsnbTsmqntlZjqs6Ag7J6I7Iq164uI64ukLiDqt7gg7KSRIOunjuydgCDsgqzrnozrk6TsnbQg7ZWc6rWt7Ja066GcIO2UjOugiOydtO2VmOq4sOulvCDrsJTrno3ri4jri6QuIO2YueyLnCDri7nsi6DsnbQg7JiB7Ja0L+2VnOq1reyWtOyXkCDrqqjrkZAg64ql7IiZ7ZWY64uk66m0LCDsmbjqtZDqtIAoRGlwbG9tYXRlKeycvOuhnCDsvZTrk5wg7Lu067GD7JeQIOywuOyXrO2VtOyEnCDrqqjrk6Ag66CI67KoIOu/kOunjCDslYTri4jrnbwg7Ju57IKs7J207Yq466W8IO2VnOq1reyWtOuhnCDrsojsl63tlaAg7IiYIOyeiOyKteuLiOuLpC5cIlxuICAgIG1pc3NpbmdfdHJhbnNsYXRpb25zOiBcIuyasOumrOqwgCDrqqjrk6Ag64K07Jqp7J2EIO2VnOq1reyWtOuhnCDrsojsl63tlaAg65WM6rmM7KeAIOq4sOuzuOydgCDsmIHslrTroZwg7KCc6rO165Cp64uI64ukLlwiXG4gICAgbGVhcm5fbW9yZTogXCLsmbjqtZDqtIDsl5Ag64yA7ZW07IScIOyigCDrjZQg7J6Q7IS47Z6IIOyVjOyVhOuztOq4sFwiXG4gICAgc3Vic2NyaWJlX2FzX2RpcGxvbWF0OiBcIuyZuOq1kOq0gOydhCDsnITtlZwg7KCV6riwIOq1rOuPhVwiXG5cbiAgcGxheTpcbiMgICAgdGl0bGU6IFwiUGxheSBDb2RlQ29tYmF0IExldmVscyAtIExlYXJuIFB5dGhvbiwgSmF2YVNjcmlwdCwgYW5kIEhUTUxcIlxuIyAgICBtZXRhX2Rlc2NyaXB0aW9uOiBcIkxlYXJuIHByb2dyYW1taW5nIHdpdGggYSBjb2RpbmcgZ2FtZSBmb3IgYmVnaW5uZXJzLiBMZWFybiBQeXRob24gb3IgSmF2YVNjcmlwdCBhcyB5b3Ugc29sdmUgbWF6ZXMsIG1ha2UgeW91ciBvd24gZ2FtZXMsIGFuZCBsZXZlbCB1cC4gQ2hhbGxlbmdlIHlvdXIgZnJpZW5kcyBpbiBtdWx0aXBsYXllciBhcmVuYSBsZXZlbHMhXCJcbiMgICAgbGV2ZWxfdGl0bGU6IFwiX19sZXZlbF9fIC0gTGVhcm4gdG8gQ29kZSBpbiBQeXRob24sIEphdmFTY3JpcHQsIEhUTUxcIlxuIyAgICB2aWRlb190aXRsZTogXCJfX3ZpZGVvX18gfCBWaWRlbyBMZXZlbFwiXG4jICAgIGdhbWVfZGV2ZWxvcG1lbnRfdGl0bGU6IFwiX19sZXZlbF9fIHwgR2FtZSBEZXZlbG9wbWVudFwiXG4jICAgIHdlYl9kZXZlbG9wbWVudF90aXRsZTogXCJfX2xldmVsX18gfCBXZWIgRGV2ZWxvcG1lbnRcIlxuIyAgICBhbm9uX3NpZ251cF90aXRsZV8xOiBcIkNvZGVDb21iYXQgaGFzIGFcIlxuIyAgICBhbm9uX3NpZ251cF90aXRsZV8yOiBcIkNsYXNzcm9vbSBWZXJzaW9uIVwiXG4jICAgIGFub25fc2lnbnVwX2VudGVyX2NvZGU6IFwiRW50ZXIgQ2xhc3MgQ29kZTpcIlxuIyAgICBhbm9uX3NpZ251cF9hc2tfdGVhY2hlcjogXCJEb24ndCBoYXZlIG9uZT8gQXNrIHlvdXIgdGVhY2hlciFcIlxuIyAgICBhbm9uX3NpZ251cF9jcmVhdGVfY2xhc3M6IFwiV2FudCB0byBjcmVhdGUgYSBjbGFzcz9cIlxuIyAgICBhbm9uX3NpZ251cF9zZXR1cF9jbGFzczogXCJTZXQgdXAgYSBjbGFzcywgYWRkIHlvdXIgc3R1ZGVudHMsIGFuZCBtb25pdG9yIHByb2dyZXNzIVwiXG4jICAgIGFub25fc2lnbnVwX2NyZWF0ZV90ZWFjaGVyOiBcIkNyZWF0ZSBmcmVlIHRlYWNoZXIgYWNjb3VudFwiXG4gICAgcGxheV9hczogXCLqsJnsnbQg7ZSM66CI7J20XCIgIyBMYWRkZXIgcGFnZVxuIyAgICBnZXRfY291cnNlX2Zvcl9jbGFzczogXCJBc3NpZ24gR2FtZSBEZXZlbG9wbWVudCBhbmQgbW9yZSB0byB5b3VyIGNsYXNzZXMhXCJcbiMgICAgcmVxdWVzdF9saWNlbnNlczogXCJDb250YWN0IG91ciBzY2hvb2wgc3BlY2lhbGlzdHMgZm9yIGRldGFpbHMuXCJcbiAgICBjb21wZXRlOiBcIuqyveyfgSFcIiAjIENvdXJzZSBkZXRhaWxzIHBhZ2VcbiAgICBzcGVjdGF0ZTogXCLqtIDspJHrqqjrk5xcIiAjIExhZGRlciBwYWdlXG4gICAgcGxheWVyczogXCLtlIzroIjsnbTslrRcIiAjIEhvdmVyIG92ZXIgYSBsZXZlbCBvbiAvcGxheVxuICAgIGhvdXJzX3BsYXllZDogXCLtlIzroIjsnbTtlZwg7Iuc6rCEXCIgIyBIb3ZlciBvdmVyIGEgbGV2ZWwgb24gL3BsYXlcbiAgICBpdGVtczogXCLslYTsnbTthZxcIiAjIFRvb2x0aXAgb24gaXRlbSBzaG9wIGJ1dHRvbiBmcm9tIC9wbGF5XG4gICAgdW5sb2NrOiBcIu2VtOygnFwiICMgRm9yIHB1cmNoYXNpbmcgaXRlbXMgYW5kIGhlcm9lc1xuICAgIGNvbmZpcm06IFwi7ZmV7J24XCJcbiAgICBvd25lZDogXCLshozsp4DtlahcIiAjIEZvciBpdGVtcyB5b3Ugb3duXG4gICAgbG9ja2VkOiBcIuyeoOq5gFwiXG4gICAgYXZhaWxhYmxlOiBcIuqwgOuKpVwiXG4gICAgc2tpbGxzX2dyYW50ZWQ6IFwi67aA7Jes65CcIOyKpO2CrFwiICMgUHJvcGVydHkgZG9jdW1lbnRhdGlvbiBkZXRhaWxzXG4gICAgaGVyb2VzOiBcIuyYgeybheuTpFwiICMgVG9vbHRpcCBvbiBoZXJvIHNob3AgYnV0dG9uIGZyb20gL3BsYXlcbiAgICBhY2hpZXZlbWVudHM6IFwi7ISx7Leo7ZWcIOuqqe2RnFwiICMgVG9vbHRpcCBvbiBhY2hpZXZlbWVudCBsaXN0IGJ1dHRvbiBmcm9tIC9wbGF5XG4gICAgc2V0dGluZ3M6IFwi7ISk7KCVXCIgIyBUb29sdGlwIG9uIHNldHRpbmdzIGJ1dHRvbiBmcm9tIC9wbGF5XG4gICAgcG9sbDogXCLtiKztkZxcIiAjIFRvb2x0aXAgb24gcG9sbCBidXR0b24gZnJvbSAvcGxheVxuICAgIG5leHQ6IFwi64uk7J2MXCIgIyBHbyBmcm9tIGNob29zZSBoZXJvIHRvIGNob29zZSBpbnZlbnRvcnkgYmVmb3JlIHBsYXlpbmcgYSBsZXZlbFxuICAgIGNoYW5nZV9oZXJvOiBcIuyYgeybhSDqtZDssrRcIiAjIEdvIGJhY2sgZnJvbSBjaG9vc2UgaW52ZW50b3J5IHRvIGNob29zZSBoZXJvXG4jICAgIGNoYW5nZV9oZXJvX29yX2xhbmd1YWdlOiBcIkNoYW5nZSBIZXJvIG9yIExhbmd1YWdlXCJcbiAgICBidXlfZ2VtczogXCLsoKwg6rWs66ekXCJcbiAgICBzdWJzY3JpYmVyc19vbmx5OiBcIuqwgOyeheydhCDtlbTslbwg7ZWp64uI64ukLlwiXG4gICAgc3Vic2NyaWJlX3VubG9jazogXCLtlbTsoJztlZjroKTrqbQg6rCA7J6F7J2EIO2VtCDso7zshLjsmpQuXCJcbiAgICBzdWJzY3JpYmVyX2hlcm9lczogXCLsmKTripgg6rWs64+F7ZWY7Iuc66m0IEFtYXJh7JmAIEh1c2hiYXVtLCBIYXR0b3Jp6rCAIOymieyLnCDtlbTsoJzrkKnri4jri6QhXCJcbiAgICBzdWJzY3JpYmVyX2dlbXM6IFwi67O07ISd7Jy866GcIOydtCDsmIHsm4XsnYQg6rWs66ek7ZWY66Ck66m0IOyYpOuKmCDqtazrj4XtlZjsi63si5zsmKQhXCJcbiAgICBhbm9ueW1vdXM6IFwi7J2066aEIOyXhuuKlCDtlIzroIjsnbTslrRcIlxuICAgIGxldmVsX2RpZmZpY3VsdHk6IFwi64Kc7J2064+EOiBcIlxuICAgIGF3YWl0aW5nX2xldmVsc19hZHZlbnR1cmVyX3ByZWZpeDogXCLrp6Tso7wg7IOI66Gc7Jq0IOugiOuyqOydtCDsg53quYHri4jri6QuXCJcbiAgICBhd2FpdGluZ19sZXZlbHNfYWR2ZW50dXJlcjogXCLrqqjtl5jsnpDroZwg65Ox66GdIO2VmOyEuOyalCFcIlxuICAgIGF3YWl0aW5nX2xldmVsc19hZHZlbnR1cmVyX3N1ZmZpeDogXCLsg4jroZzsmrQg66CI67Ko7J2EIOqwgOyepSDrqLzsoIAg7LK07ZeY7ZWY7IS47JqUIVwiXG4gICAgYWRqdXN0X3ZvbHVtZTogXCLshozrpqwg7KGw7KCIXCJcbiAgICBjYW1wYWlnbl9tdWx0aXBsYXllcjogXCLrqYDti7Ag7ZSM66CI7J207Ja0IOyghO2IrOyepVwiXG4gICAgY2FtcGFpZ25fbXVsdGlwbGF5ZXJfZGVzY3JpcHRpb246IFwiLi4uIOydtOqzs+yXkOyEnCDri7nsi6DsnYAg64uk66W4IO2UjOugiOydtOyWtOuTpCjsgqzrnozrk6Qp6rO8IOyngeygkSDqsrDtiKztlaAg7IiYIOyeiOyKteuLiOuLpC5cIlxuICAgIGJyYWluX3BvcF9kb25lOiBcIuydtOqyvOyWtOyalCEg64u57Iug7J2YIOy9lOuTnOuhnCDsmKTsmrDqsbDrpbwg66y866as7LOk7Iq164uI64ukIVwiXG4gICAgYnJhaW5fcG9wX2NoYWxsZW5nZTogXCLri6Trpbgg7ZSE66Gc6re4656Y67CNIOyWuOyWtOuhnOuPhCDrj4TsoITtlbQg67O07IS47JqUIVwiXG4gICAgcmVwbGF5OiBcIuuLpOyLnCDtlZjquLBcIlxuICAgIGJhY2tfdG9fY2xhc3Nyb29tOiBcIuq1kOyLpOuhnCDrj4zslYTqsIDquLBcIlxuICAgIHRlYWNoZXJfYnV0dG9uOiBcIuq1kOyCrOyaqVwiXG4jICAgIGdldF9tb3JlX2NvZGVjb21iYXQ6IFwiR2V0IE1vcmUgQ29kZUNvbWJhdFwiXG5cbiMgIGNvZGU6XG4jICAgIGlmOiBcImlmXCIgIyBLZXl3b3Jkcy0tdGhlc2UgdHJhbnNsYXRpb25zIHNob3cgdXAgb24gaG92ZXIsIHNvIHBsZWFzZSB0cmFuc2xhdGUgdGhlbSBhbGwsIGV2ZW4gaWYgaXQncyBraW5kIG9mIGxvbmcuIChJbiB0aGUgY29kZSBlZGl0b3IsIHRoZXkgd2lsbCBzdGlsbCBiZSBpbiBFbmdsaXNoLilcbiMgICAgZWxzZTogXCJlbHNlXCJcbiMgICAgZWxpZjogXCJlbHNlIGlmXCJcbiMgICAgd2hpbGU6IFwid2hpbGVcIlxuIyAgICBsb29wOiBcImxvb3BcIlxuIyAgICBmb3I6IFwiZm9yXCJcbiMgICAgYnJlYWs6IFwiYnJlYWtcIlxuIyAgICBjb250aW51ZTogXCJjb250aW51ZVwiXG4jICAgIHBhc3M6IFwicGFzc1wiXG4jICAgIHJldHVybjogXCJyZXR1cm5cIlxuIyAgICB0aGVuOiBcInRoZW5cIlxuIyAgICBkbzogXCJkb1wiXG4jICAgIGVuZDogXCJlbmRcIlxuIyAgICBmdW5jdGlvbjogXCJmdW5jdGlvblwiXG4jICAgIGRlZjogXCJkZWZpbmVcIlxuIyAgICB2YXI6IFwidmFyaWFibGVcIlxuIyAgICBzZWxmOiBcInNlbGZcIlxuIyAgICBoZXJvOiBcImhlcm9cIlxuIyAgICB0aGlzOiBcInRoaXNcIlxuIyAgICBvcjogXCJvclwiXG4jICAgIFwifHxcIjogXCJvclwiXG4jICAgIGFuZDogXCJhbmRcIlxuIyAgICBcIiYmXCI6IFwiYW5kXCJcbiMgICAgbm90OiBcIm5vdFwiXG4jICAgIFwiIVwiOiBcIm5vdFwiXG4jICAgIFwiPVwiOiBcImFzc2lnblwiXG4jICAgIFwiPT1cIjogXCJlcXVhbHNcIlxuIyAgICBcIj09PVwiOiBcInN0cmljdGx5IGVxdWFsc1wiXG4jICAgIFwiIT1cIjogXCJkb2VzIG5vdCBlcXVhbFwiXG4jICAgIFwiIT09XCI6IFwiZG9lcyBub3Qgc3RyaWN0bHkgZXF1YWxcIlxuIyAgICBcIj5cIjogXCJpcyBncmVhdGVyIHRoYW5cIlxuIyAgICBcIj49XCI6IFwiaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsXCJcbiMgICAgXCI8XCI6IFwiaXMgbGVzcyB0aGFuXCJcbiMgICAgXCI8PVwiOiBcImlzIGxlc3MgdGhhbiBvciBlcXVhbFwiXG4jICAgIFwiKlwiOiBcIm11bHRpcGxpZWQgYnlcIlxuIyAgICBcIi9cIjogXCJkaXZpZGVkIGJ5XCJcbiMgICAgXCIrXCI6IFwicGx1c1wiXG4jICAgIFwiLVwiOiBcIm1pbnVzXCJcbiMgICAgXCIrPVwiOiBcImFkZCBhbmQgYXNzaWduXCJcbiMgICAgXCItPVwiOiBcInN1YnRyYWN0IGFuZCBhc3NpZ25cIlxuIyAgICBUcnVlOiBcIlRydWVcIlxuIyAgICB0cnVlOiBcInRydWVcIlxuIyAgICBGYWxzZTogXCJGYWxzZVwiXG4jICAgIGZhbHNlOiBcImZhbHNlXCJcbiMgICAgdW5kZWZpbmVkOiBcInVuZGVmaW5lZFwiXG4jICAgIG51bGw6IFwibnVsbFwiXG4jICAgIG5pbDogXCJuaWxcIlxuIyAgICBOb25lOiBcIk5vbmVcIlxuXG4gIHNoYXJlX3Byb2dyZXNzX21vZGFsOlxuICAgIGJsdXJiOiBcIuuLueyLoOydgCDtgbAg7KeE7KCE7J2EIOuztOydtOqzoCDsnojsirXri4jri6QhIOuLueyLoOydtCDsvZTrk5zsu7TrsYPsnLzroZwg7Ja866eI64KYIOunjuydtCDrsLDsm6DripTsp4Ag67aA66qo64uY6ruYIOyekOueke2VmOyLreyLnOyYpC5cIlxuICAgIGVtYWlsX2ludmFsaWQ6IFwi7J2066mU7J28IOyjvOyGjOqwgCDsmKzrsJTrpbTsp4Ag7JWK7Iq164uI64ukLlwiXG4gICAgZm9ybV9ibHVyYjogXCLslYTrnpjsl5Ag67aA66qo64uY7J2YIOydtOuplOydvCDso7zshozrpbwg7J6F66Cl7ZWY7IS47JqULiDrtoDrqqjri5jqu5gg67O07Jes65Oc66a06rKM7JqUIVwiXG4gICAgZm9ybV9sYWJlbDogXCLsnbTrqZTsnbwg7KO87IaMIOyeheugpVwiXG4gICAgcGxhY2Vob2xkZXI6IFwi7J2066mU7J28IOyjvOyGjCDsnoXroKVcIlxuICAgIHRpdGxlOiBcIuyemCDtlojslrTsmpQhXCJcblxuICBsb2dpbjpcbiAgICBzaWduX3VwOiBcIuqzhOyglSDsg53shLFcIlxuICAgIGVtYWlsX29yX3VzZXJuYW1lOiBcIuydtOuplOydvCDrmJDripQg7IKs7Jqp7J6QIOydtOumhFwiXG4gICAgbG9nX2luOiBcIuuhnOq3uOyduFwiXG4gICAgbG9nZ2luZ19pbjogXCLroZzqt7jsnbgg7KSRXCJcbiAgICBsb2dfb3V0OiBcIuuhnOq3uOyVhOybg1wiXG4gICAgZm9yZ290X3Bhc3N3b3JkOiBcIuu5hOuwgOuyiO2YuOulvCDsnorsnLzshajrgpjsmpQ/XCJcbiAgICBmaW5pc2hpbmc6IFwi7JmE66OM7KSRLi5cIlxuICAgIHNpZ25faW5fd2l0aF9mYWNlYm9vazogXCLtjpjsnbTsiqTrtoHsnLzroZwg66Gc6re47J24XCJcbiAgICBzaWduX2luX3dpdGhfZ3BsdXM6IFwiRyvroZwg66Gc6re47J24XCJcbiAgICBzaWdudXBfc3dpdGNoOiBcIuyDiOuhnOyatCDqs4TsoJXsnYQg66eM65Oc7IS47JqULlwiXG5cbiAgc2lnbnVwOlxuICAgIGNvbXBsZXRlX3N1YnNjcmlwdGlvbjogXCLqtazrj4Ug7JmE66OMXCJcbiAgICBjcmVhdGVfc3R1ZGVudF9oZWFkZXI6IFwi7ZWZ7IOdIOqzhOyglSDsg53shLFcIlxuICAgIGNyZWF0ZV90ZWFjaGVyX2hlYWRlcjogXCLqtZDsgqwg6rOE7KCVIOyDneyEsVwiXG4gICAgY3JlYXRlX2luZGl2aWR1YWxfaGVhZGVyOiBcIuqwnOyduCDqs4TsoJUg7IOd7ISxXCJcbiAgICBlbWFpbF9hbm5vdW5jZW1lbnRzOiBcIuyViOuCtCDsgqztla3snYQg66mU7J2866GcIOuwm+qyoOyKteuLiOuLpFwiICMge2NoYW5nZX1cbiAgICBzaWduX2luX3RvX2NvbnRpbnVlOiBcIuqzhOyGje2VmOugpOuptCDroZzqt7jsnbjtlZjqsbDrgpgg6rOE7KCV7J2EIOunjOuTnOyLreyLnOyYpC5cIlxuICAgIHRlYWNoZXJfZW1haWxfYW5ub3VuY2VtZW50czogXCLsg4jroZzsmrQg6rWQ7IKsIOyekOujjCwg7Luk66as7YGY65+8IOuwjyDsvZTsiqTrpbwg6rOE7IaNIOyXheuNsOydtO2KuO2VtOyjvOyEuOyalCFcIlxuICAgIGNyZWF0aW5nOiBcIuqzhOygleydhCDsg53shLEg7KSR7J6F64uI64ukLi4uXCJcbiAgICBzaWduX3VwOiBcIuqzhOyglSDsg53shLFcIlxuICAgIGxvZ19pbjogXCLruYTrsIDrsojtmLjroZwg66Gc6re47J24XCJcbiMgICAgbG9naW46IFwiTG9naW5cIlxuICAgIHJlcXVpcmVkOiBcIuynhO2Wie2VmOq4sCDsoITsl5Ag66Gc6re47J247J20IO2VhOyalO2VqeuLiOuLpC5cIlxuICAgIGxvZ2luX3N3aXRjaDogXCLsnbTrr7gg6rOE7KCV7J20IOyeiOycvOyLoOqwgOyalD9cIlxuICAgIG9wdGlvbmFsOiBcIuyYteyFmFwiXG4gICAgY29ubmVjdGVkX2dwbHVzX2hlYWRlcjogXCJHb29nbGUrIOqzhOygleycvOuhnCDsl7DqsrDrkJjsl4jsirXri4jri6QhXCJcbiMgICAgY29ubmVjdGVkX2dwbHVzX3A6IFwiRmluaXNoIHNpZ25pbmcgdXAgc28geW91IGNhbiBsb2cgaW4gd2l0aCB5b3VyIEdvb2dsZSsgYWNjb3VudC5cIlxuICAgIGNvbm5lY3RlZF9mYWNlYm9va19oZWFkZXI6IFwi7Y6Y7J207Iqk67aBIOqzhOygleycvOuhnCDsl7DqsrDrkJjsl4jsirXri4jri6QhXCJcbiMgICAgY29ubmVjdGVkX2ZhY2Vib29rX3A6IFwiRmluaXNoIHNpZ25pbmcgdXAgc28geW91IGNhbiBsb2cgaW4gd2l0aCB5b3VyIEZhY2Vib29rIGFjY291bnQuXCJcbiMgICAgaGV5X3N0dWRlbnRzOiBcIlN0dWRlbnRzLCBlbnRlciB0aGUgY2xhc3MgY29kZSBmcm9tIHlvdXIgdGVhY2hlci5cIlxuICAgIGJpcnRoZGF5OiBcIuyDneydvFwiXG4jICAgIHBhcmVudF9lbWFpbF9ibHVyYjogXCJXZSBrbm93IHlvdSBjYW4ndCB3YWl0IHRvIGxlYXJuIHByb2dyYW1taW5nICZtZGFzaDsgd2UncmUgZXhjaXRlZCB0b28hIFlvdXIgcGFyZW50cyB3aWxsIHJlY2VpdmUgYW4gZW1haWwgd2l0aCBmdXJ0aGVyIGluc3RydWN0aW9ucyBvbiBob3cgdG8gY3JlYXRlIGFuIGFjY291bnQgZm9yIHlvdS4gRW1haWwge3tlbWFpbF9saW5rfX0gaWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucy5cIlxuIyAgICBjbGFzc3Jvb21fbm90X2ZvdW5kOiBcIk5vIGNsYXNzZXMgZXhpc3Qgd2l0aCB0aGlzIENsYXNzIENvZGUuIENoZWNrIHlvdXIgc3BlbGxpbmcgb3IgYXNrIHlvdXIgdGVhY2hlciBmb3IgaGVscC5cIlxuICAgIGNoZWNraW5nOiBcIu2ZleyduCDspJEuLi5cIlxuICAgIGFjY291bnRfZXhpc3RzOiBcIuydtCDsnbTrqZTsnbwg7KO87IaM64qUIOuIhOq1sOqwgCDsgqzsmqkg7KSR7J6F64uI64ukLlwiXG4gICAgc2lnbl9pbjogXCLroZzqt7jsnbjtlZjquLBcIlxuICAgIGVtYWlsX2dvb2Q6IFwi7Jis67CU66W4IOydtOuplOydvCDso7zshozrhKTsmpQhXCJcbiAgICBuYW1lX3Rha2VuOiBcIuuIhOq1sOqwgOqwgCDsgqzsmqkg7KSR7J24IFVzZXJuYW1l7J6F64uI64ukISB7e3N1Z2dlc3RlZE5hbWV9feuKlCDslrTrlYzsmpQ/XCJcbiAgICBuYW1lX2F2YWlsYWJsZTogXCLsgqzsmqkg6rCA64ql7ZWcIFVzZXJuYW1l7J6F64uI64ukIVwiXG4gICAgbmFtZV9pc19lbWFpbDogXCJVc2VybmFtZeydgCDsnbTrqZTsnbwg7KO87IaM66GcIO2VoCDsiJgg7JeG7Iq164uI64ukLlwiXG4gICAgY2hvb3NlX3R5cGU6IFwiIOqzhOyglSDsnKDtmJXsnYQg7ISg7YOd7ZWY7IS47JqUOlwiXG4gICAgdGVhY2hlcl90eXBlXzE6IFwiQ29kZWNvbWJhdOydhCDsnbTsmqntlZjsl6wg7ZSE66Gc6re4656Y67CN7J2EIOqwgOultOy5mOyEuOyalCFcIlxuICAgIHRlYWNoZXJfdHlwZV8yOiBcIiDtgbTrnpjsiqTrpbwg7ISk7KCV7ZW07KO87IS47JqULlwiXG4gICAgdGVhY2hlcl90eXBlXzM6IFwiIOqwgOydtOuTnCDrs7TquLBcIlxuICAgIHRlYWNoZXJfdHlwZV80OiBcIiDtlZnsg53rk6TsnZgg7KeE7ZaJIOyDge2ZqeuztOq4sFwiXG4gICAgc2lnbnVwX2FzX3RlYWNoZXI6IFwiIOq1kOyCrOyaqSDqs4TsoJUg7IOd7ISxIFwiXG4gICAgc3R1ZGVudF90eXBlXzE6IFwiIOyerOuvuOyeiOuKlCDqsozsnoTsnYQg7Ya17ZW0IO2UhOuhnOq3uOuemOuwjeydhCDrsLDsmrDshLjsmpQhXCJcbiAgICBzdHVkZW50X3R5cGVfMjogXCIg64u57Iug7J2YIO2BtOuemOyKpOyZgCDqsozsnoTtlZjshLjsmpQuXCJcbiAgICBzdHVkZW50X3R5cGVfMzogXCIg7JWE66CI64KY7JeQ7IScIOqyveyfge2VmOq4sC5cIlxuICAgIHN0dWRlbnRfdHlwZV80OiBcIuyYgeybheydhCDshKDtg53tlZjshLjsmpQhXCJcbiAgICBzdHVkZW50X3R5cGVfNTogXCIg7YG0656Y7IqkIOy9lOuTnOqwgCDspIDruYQg65CY7Ja07J6I7Iq164uI64ukIVwiXG4gICAgc2lnbnVwX2FzX3N0dWRlbnQ6IFwiIO2VmeyDneyaqSDqs4TsoJUg7IOd7ISxLlwiXG4gICAgaW5kaXZpZHVhbHNfb3JfcGFyZW50czogXCIg6rCc7J24ICYg67aA66qoIFwiXG4gICAgaW5kaXZpZHVhbF90eXBlOiBcIiDtgbTrnpjsiqTrpbwg7J207Jqp7ZWY7KeA7JWK6rOgIOydtOyaqe2VmOyLpCDqsqjsmrDsl5DripQg67aA66qo64uY7J20IOqzhOygleydhCDrqLzsoIAg66eM65Oc7IS47JqULlwiXG4gICAgc2lnbnVwX2FzX2luZGl2aWR1YWw6IFwiIOqwnOyduCDqs4TsoJXsnYQg7IOd7ISxIFwiXG4gICAgZW50ZXJfY2xhc3NfY29kZTogXCIg7YG0656Y7IqkIOy9lOuTnOulvCDsnoXroKXtlZjshLjsmpQuXCJcbiAgICBlbnRlcl9iaXJ0aGRhdGU6IFwiIOyDneydvOydhCDsnoXroKXtlZjshLjsmpQ6XCJcbiAgICBwYXJlbnRfdXNlX2JpcnRoZGF0ZTogXCIg67aA66qo64uY7J2YIOyDneydvOydhCDsoIHslrTso7zshLjsmpQuXCJcbiAgICBhc2tfdGVhY2hlcl8xOiBcIiDshKDsg53ri5jqu5gg7YG0656Y7Iqk66W8IOusvOyWtOuztOyEuOyalC5cIlxuICAgIGFza190ZWFjaGVyXzI6IFwiIO2BtOuemOyKpOqwgCDsl4bsnLzsi63ri4jquYw/IO2BtOuemOyKpOulvCDrp4zrk5zshLjsmpQuIFwiXG4gICAgYXNrX3RlYWNoZXJfMzogXCIg6rCc7J24IOqzhOyglSBcIlxuICAgIGFza190ZWFjaGVyXzQ6IFwiICDrjIDsi6AgXCJcbiAgICBhYm91dF90b19qb2luOiBcIiDqsIDsnoUg6rCA64ql7ZWp64uI64ukOlwiXG4gICAgZW50ZXJfcGFyZW50X2VtYWlsOiBcIiDrtoDrqqjri5jsnZgg7J2066mU7J28IOyjvOyGjOulvCDsnoXroKXtlZjshLjsmpQ6XCJcbiAgICBwYXJlbnRfZW1haWxfZXJyb3I6IFwiIOydtOuplOydvCDrs7TrgrTripQg6rO87KCV7JeQ7IScIOyYpOulmOqwgCDrsJzsg53tlojsirXri4jri6QuIOydtOuplOydvCDso7zshozrpbwg64uk7IucIO2ZleyduO2VtOyjvOyEuOyalC5cIlxuICAgIHBhcmVudF9lbWFpbF9zZW50OiBcIiDqs4TsoJUg66eM65Oc64qUIOuyleqzvCDtlajqu5gg7J2066mU7J287J2EIOuztOuDiOyKteuLiOuLpC4g67aA66qo64uYIOydtOuplOydvOydhCDtmZXsnbjtlZjshLjsmpQuIFwiXG4gICAgYWNjb3VudF9jcmVhdGVkOiBcIiDqs4TsoJUg7IOd7ISxIOyEseqztSFcIlxuICAgIGNvbmZpcm1fc3R1ZGVudF9ibHVyYjogXCIg6rmM66i57KeAIOyViuq4sCDsnITtlbQg64u57Iug7J2YIOygleuztOulvCDsoIHslrQg64aT7Jy87IS47JqULiDshKDsg53ri5jrj4Qg67mE67CA67KI7Zi4IOy0iOq4sO2ZlOulvCDslrjsoJzrk6Dsp4Ag7ZW07KSEIOyImCDsnojsirXri4jri6QuXCJcbiAgICBjb25maXJtX2luZGl2aWR1YWxfYmx1cmI6IFwi64KY7KSR7JeQIO2VhOyalO2VoCDsiJgg64+EIOyeiOq4sCDrloTrrLjsl5Ag66Gc6re47J24IOygleuztOulvCDsoIHslrTrkZDshLjsmpQuIOuCmOykkeyXkCDslYTsnbTrlJTrgpgg67mE67CA67KI7Zi466W8IOq5jOuoueydhCDsiJgg7J6I6riwIOuWhOusuOyXkCDsnbTrqZTsnbwg7J247Kad7J2EIOuwm+ycvOyEuOyalC4g7IiY7Iug7ZWo7J2EIO2ZleyduO2VmOyEuOyalCFcIlxuICAgIHdyaXRlX3RoaXNfZG93bjogXCIg7J20IOygleuztOulvCDsoIHslrTrkZDshLjsmpQ6XCJcbiAgICBzdGFydF9wbGF5aW5nOiBcIuqyjOyehOydhCDsi5zsnpHtlZjshLjsmpQhXCJcbiAgICBzc29fY29ubmVjdGVkOiBcIuyEseqzteyggeycvOuhnCDsl7DqsrAg65CY7JeI7Iq164uI64ukOlwiXG4gICAgc2VsZWN0X3lvdXJfc3RhcnRpbmdfaGVybzogXCLsspjsnYwg6rKM7J6EIO2VoCDsmIHsm4XsnYQg6rOg66W07IS47JqUOlwiXG4gICAgeW91X2Nhbl9hbHdheXNfY2hhbmdlX3lvdXJfaGVyb19sYXRlcjogXCLslrjsoJzrk6Dsp4Ag7JiB7JuF7J2EIOuwlOq+uOyLpCDsiJgg7J6I7Iq164uI64ukLlwiXG4gICAgZmluaXNoOiBcIuyZhOujjFwiXG4gICAgdGVhY2hlcl9yZWFkeV90b19jcmVhdGVfY2xhc3M6IFwi7LKrIO2BtOuemOyKpOulvCDsg53shLEg7ZWgIOykgOu5hOqwgCDri6Qg65CY7Ja07J6I7Iq164uI64ukIVwiXG4gICAgdGVhY2hlcl9zdHVkZW50c19jYW5fc3RhcnRfbm93OiBcIuuLueyLoOydmCDtlZnsg53rk6TsnYAg7LKrIOyImOyXhSAn7KCE7IKw7ZWZIOqwnOuhoCfsnYQg67CU66GcIOynhO2Wie2VoCDsiJgg7J6I7Iq164uI64ukLlwiXG4gICAgdGVhY2hlcl9saXN0X2NyZWF0ZV9jbGFzczogXCLri6TsnYwg7ZmU66m07JeQ7ISgIOyDiOuhnOyatCDtgbTrnpjsiqTrpbwg66eM65Ot64uI64ukLlwiXG4gICAgdGVhY2hlcl9saXN0X2FkZF9zdHVkZW50czogXCJWaWV3IENsYXNzIGxpbmvrpbwg64iM65+sIO2VmeyDneuTpOydgCDtgbTrnpjsiqTsl5Ag65Ox66Gd7ZWY7IS47JqULiDqt7gg64uk7J2MIO2VmeyDneuTpOyXkOqyjCDtgbTrnpjsiqQg7L2U65OcIO2YueydgCBVUkzsnYQg67O064K07IS47JqULiDsnbTrqZTsnbwg7KO87IaM66Gc64+EIO2VmeyDneuTpOydhCDrk7HroZ3si5ztgqwg7IiYIOyeiOyKteuLiOuLpC5cIlxuICAgIHRlYWNoZXJfbGlzdF9yZXNvdXJjZV9odWJfMTogXCLtmZXsnbjtlZjshLjsmpQuXCJcbiAgICB0ZWFjaGVyX2xpc3RfcmVzb3VyY2VfaHViXzI6IFwi6rKM7J6EIOqwgOydtOuTnC5cIlxuICAgIHRlYWNoZXJfbGlzdF9yZXNvdXJjZV9odWJfMzogXCLrqqjrk6Ag66CI67Ko7JeQIOuMgO2VnCDri7XsnYAsIOq3uOumrOqzoFwiXG4gICAgdGVhY2hlcl9saXN0X3Jlc291cmNlX2h1Yl80OiBcIuyekOybkCDspJHsi6zsp4BcIlxuICAgIHRlYWNoZXJfbGlzdF9yZXNvdXJjZV9odWJfNTogXCLsu6TrpqztgZjrn7wg6rCA7J2065OcLCDtmZzrj5ksIOuNlCDrp47snYDsoJXrs7Trpbwg7JWMIOyImCDsnojsirXri4jri6QuXCJcbiAgICB0ZWFjaGVyX2FkZGl0aW9uYWxfcXVlc3Rpb25zOiBcIuuBneuCrOyKteuLiOuLpCEg7Zi57IucIOuLpOuluCDrrLjsoJzripQg64+E7JuA7J20IO2VhOyalO2VmOyLoOuLpOuptCwgXFxcInN1cHBvcnQgZW1haWxcXFwi7J2EIO2Gte2VtCDrrLzslrTrs7TshLjsmpQuXCJcbiAgICBkb250X3VzZV9vdXJfZW1haWxfc2lsbHk6IFwi7ZWZ7IOd7J2YIOydtOuplOydvOydhCDsk7Dsp4Ag66eI7IS47JqUISDrtoDrqqjri5jsnZgg7J2066mU7J287J2EIOyTsOyEuOyalC5cIlxuICAgIHdhbnRfY29kZWNvbWJhdF9pbl9zY2hvb2w6IFwiQ29kZUNvbWJhdOydhCDslrjsoJzrk6Dsp4Ag7ZWY6rOgIOyLtuycvOyLoOqwgOyalD9cIlxuICAgIGV1X2NvbmZpcm1hdGlvbjogXCLrgpjripQg64K0IOygleuztOuTpOydhCBDb2RlQ29tYmF07J20IOuvuOq1rSDshJzrsoTsl5Ag7KCA7J6l7ZWY64qUIOqyg+ydhCDtl4jsmqntlZzri6QuXCJcbiAgICBldV9jb25maXJtYXRpb25fcGxhY2Vfb2ZfcHJvY2Vzc2luZzogXCJMZWFybiBtb3JlIGFib3V0IHRoZSBwb3NzaWJsZSByaXNrcyDri6Trpbgg7JyE7ZeY7JeQIOuMgO2VtCDslYzslYTrtIXsi5zri6QuXCJcbiAgICBldV9jb25maXJtYXRpb25fc3R1ZGVudDogXCLtmZXsi6TtlZjsp4Ag7JWK64uk66m0LCDshKDsg53ri5jqu5gg66y87Ja067O07IS47JqULlwiXG4gICAgZXVfY29uZmlybWF0aW9uX2luZGl2aWR1YWw6IFwi7J6Q7Iug7J2YIOygleuztOqwgCDrr7jqta0g7ISc67KE7JeQIOyggOyepeuQmOuKlOqyjCDsi6vsnLzsi5zri6TrqbQsIOyWuOygnOuToOyngCDsnbXrqoXsnLzroZwg6rKM7J6E7ZWY7Iuc66m0IOuQqeuLiOuLpC5cIlxuXG4gIHJlY292ZXI6XG4gICAgcmVjb3Zlcl9hY2NvdW50X3RpdGxlOiBcIuqzhOyglSDrs7XqtaxcIlxuICAgIHNlbmRfcGFzc3dvcmQ6IFwi67O16rWsIOu5hOuwgOuyiO2YuCDsoITshqFcIlxuICAgIHJlY292ZXJ5X3NlbnQ6IFwi66mU7J28IOyghOyGoSDsmYTro4xcIlxuXG4gIGl0ZW1zOlxuICAgIHByaW1hcnk6IFwi7KO8IOyepeu5hFwiXG4gICAgc2Vjb25kYXJ5OiBcIuuztOyhsCDsnqXruYRcIlxuICAgIGFybW9yOiBcIuqwkeyYt1wiXG4gICAgYWNjZXNzb3JpZXM6IFwi7JWh7IS47ISc66asXCJcbiAgICBtaXNjOiBcIuyeoeuPmeyCrOuLiFwiXG4gICAgYm9va3M6IFwi7LGFXCJcblxuICBjb21tb246XG4jICAgIGRlZmF1bHRfdGl0bGU6IFwiQ29kZUNvbWJhdCAtIENvZGluZyBnYW1lcyB0byBsZWFybiBQeXRob24gYW5kIEphdmFTY3JpcHRcIlxuIyAgICBkZWZhdWx0X21ldGFfZGVzY3JpcHRpb246IFwiTGVhcm4gdHlwZWQgY29kZSB0aHJvdWdoIGEgcHJvZ3JhbW1pbmcgZ2FtZS4gTGVhcm4gUHl0aG9uLCBKYXZhU2NyaXB0LCBhbmQgSFRNTCBhcyB5b3Ugc29sdmUgcHV6emxlcyBhbmQgbGVhcm4gdG8gbWFrZSB5b3VyIG93biBjb2RpbmcgZ2FtZXMgYW5kIHdlYnNpdGVzLlwiXG4gICAgYmFjazogXCLrkqTroZzqsIDquLBcIiAjIFdoZW4gdXNlZCBhcyBhbiBhY3Rpb24gdmVyYiwgbGlrZSBcIk5hdmlnYXRlIGJhY2t3YXJkXCJcbiAgICBjb21pbmdfc29vbjogXCLqsJzrsJwg7KSRIVwiXG4gICAgY29udGludWU6IFwi6rOE7IaNXCIgIyBXaGVuIHVzZWQgYXMgYW4gYWN0aW9uIHZlcmIsIGxpa2UgXCJDb250aW51ZSBmb3J3YXJkXCJcbiAgICBuZXh0OiBcIuuLpOydjFwiXG4gICAgZGVmYXVsdF9jb2RlOiBcIuq4sOuzuCDsvZTrk5xcIlxuICAgIGxvYWRpbmc6IFwi66Gc65Sp7KSR7J6F64uI64ukLi4uXCJcbiMgICAgb3ZlcnZpZXc6IFwiT3ZlcnZpZXdcIlxuIyAgICBwcm9jZXNzaW5nOiBcIlByb2Nlc3NpbmcuLi5cIlxuICAgIHNvbHV0aW9uOiBcIu2VtOqysOyxhVwiXG4jICAgIHRhYmxlX29mX2NvbnRlbnRzOiBcIlRhYmxlIG9mIENvbnRlbnRzXCJcbiMgICAgaW50cm86IFwiSW50cm9cIlxuICAgIHNhdmluZzogXCLsoIDsnqXspJHsnoXri4jri6QuLi5cIlxuICAgIHNlbmRpbmc6IFwi67O064K064qUIOykkeyeheuLiOuLpC4uLlwiXG4gICAgc2VuZDogXCLsoITshqFcIlxuICAgIHNlbnQ6IFwi7KCE7Iah65CoXCJcbiAgICBjYW5jZWw6IFwi7Leo7IaMXCJcbiAgICBzYXZlOiBcIuyggOyepVwiXG4gICAgcHVibGlzaDogXCLrgrTrs7TrgrTquLBcIlxuICAgIGNyZWF0ZTogXCLsg53shLFcIlxuICAgIGZvcms6IFwi7Y+s7YGsXCJcbiAgICBwbGF5OiBcIuyLnOyekVwiICMgV2hlbiB1c2VkIGFzIGFuIGFjdGlvbiB2ZXJiLCBsaWtlIFwiUGxheSBuZXh0IGxldmVsXCJcbiAgICByZXRyeTogXCLsnqzsi5zrj4RcIlxuICAgIGFjdGlvbnM6IFwi7ZaJ64+ZXCJcbiAgICBpbmZvOiBcIuygleuztFwiXG4gICAgaGVscDogXCLrj4Tsm4Drp5BcIlxuICAgIHdhdGNoOiBcIuuztOq4sFwiXG4gICAgdW53YXRjaDogXCLrs7TquLAg7ZW07KCcXCJcbiAgICBzdWJtaXRfcGF0Y2g6IFwi7Yyo7LmYIOygnOy2nFwiXG4gICAgc3VibWl0X2NoYW5nZXM6IFwi67OA6rK97IKs7ZWtIOygnOy2nFwiXG4gICAgc2F2ZV9jaGFuZ2VzOiBcIuuzgOqyveyCrO2VrSDsoIDsnqVcIlxuICAgIHJlcXVpcmVkX2ZpZWxkOiBcIu2VhOyImFwiXG5cbiAgZ2VuZXJhbDpcbiAgICBhbmQ6IFwi6re466as6rOgXCJcbiAgICBuYW1lOiBcIuydtOumhFwiXG4gICAgZGF0ZTogXCLrgqDsp5xcIlxuICAgIGJvZHk6IFwi6rWs7ISxXCJcbiAgICB2ZXJzaW9uOiBcIuuyhOyghFwiXG4gICAgcGVuZGluZzogXCLsoIHsmqnspJFcIlxuICAgIGFjY2VwdGVkOiBcIuyggeyaqeuQqFwiXG4gICAgcmVqZWN0ZWQ6IFwi6rGw67aA65CoXCJcbiAgICB3aXRoZHJhd246IFwi7Leo7IaM65CoXCJcbiAgICBhY2NlcHQ6IFwi7Iq57J24XCJcbiMgICAgYWNjZXB0X2FuZF9zYXZlOiBcIkFjY2VwdCZTYXZlXCJcbiAgICByZWplY3Q6IFwi67O066WYXCJcbiAgICB3aXRoZHJhdzogXCLssqDsiJhcIlxuICAgIHN1Ym1pdHRlcjogXCLsoJzstpzsnpBcIlxuICAgIHN1Ym1pdHRlZDogXCLsoJzstpzrkKhcIlxuICAgIGNvbW1pdF9tc2c6IFwi7Luk67CLIOuplOyEuOyngFwiXG4gICAgdmVyc2lvbl9oaXN0b3J5OiBcIuuyhOyghCDtnojsiqTthqDrpqxcIlxuICAgIHZlcnNpb25faGlzdG9yeV9mb3I6IFwi67KE7KCEIO2eiOyKpO2GoOumrCA6IFwiXG4gICAgc2VsZWN0X2NoYW5nZXM6IFwi7LCo7J2066W8IOuztOq4sOychO2VtCDrkZAg6rCA7KeAIOyCrO2VreydhCDrs4Dqsr3tlZjrj4TroZ0g7ISg7YOd7ZWp64uI64ukLlwiXG4gICAgdW5kb19wcmVmaXg6IFwi65CY64+M66as6riwXCJcbiAgICB1bmRvX3Nob3J0Y3V0OiBcIihDdHJsK1opXCJcbiAgICByZWRvX3ByZWZpeDogXCLri6Tsi5ztlZjquLBcIlxuICAgIHJlZG9fc2hvcnRjdXQ6IFwiKEN0cmwrU2hpZnQrWilcIlxuICAgIHBsYXlfcHJldmlldzogXCLtmITsnqwg66CI67Ko7J2YIOuvuOumrOuztOq4sCDsnqzsg51cIlxuICAgIHJlc3VsdDogXCLqsrDqs7xcIlxuICAgIHJlc3VsdHM6IFwi6rKw6rO865OkXCJcbiAgICBkZXNjcmlwdGlvbjogXCLshKTrqoVcIlxuICAgIG9yOiBcIuuYkOuKlFwiXG4gICAgc3ViamVjdDogXCLsoJzrqqlcIlxuICAgIGVtYWlsOiBcIuydtOuplOydvFwiXG4gICAgcGFzc3dvcmQ6IFwi67mE67CA67KI7Zi4XCJcbiAgICBjb25maXJtX3Bhc3N3b3JkOiBcIuu5hOuwgOuyiO2YuCDtmZXsnbhcIlxuICAgIG1lc3NhZ2U6IFwi66mU7Iuc7KeAXCJcbiAgICBjb2RlOiBcIuy9lOuTnFwiXG4gICAgbGFkZGVyOiBcIuugiOuNlFwiXG4gICAgd2hlbjogXCLslrjsoJxcIlxuICAgIG9wcG9uZW50OiBcIuyDgeuMgFwiXG4gICAgcmFuazogXCLrnq3tgaxcIlxuICAgIHNjb3JlOiBcIuygkOyImFwiXG4gICAgd2luOiBcIuyKuVwiXG4gICAgbG9zczogXCLtjKhcIlxuICAgIHRpZTogXCLrrLTsirnrtoBcIlxuICAgIGVhc3k6IFwi7LSI6riJXCJcbiAgICBtZWRpdW06IFwi7KSR6riJXCJcbiAgICBoYXJkOiBcIuyDgeq4iVwiXG4gICAgcGxheWVyOiBcIu2UjOugiOydtOyWtFwiXG4gICAgcGxheWVyX2xldmVsOiBcIu2UjOugiOydtOyWtCDroIjrsqhcIiAjIExpa2UgcGxheWVyIGxldmVsIDUsIG5vdCBsaWtlIGxldmVsOiBEdW5nZW9ucyBvZiBLaXRoZ2FyZFxuICAgIHdhcnJpb3I6IFwi7KCE7IKsXCJcbiAgICByYW5nZXI6IFwi66CI7J247KCAXCJcbiAgICB3aXphcmQ6IFwi66eI67KV7IKsXCJcbiAgICBmaXJzdF9uYW1lOiBcIuydtOumhFwiXG4gICAgbGFzdF9uYW1lOiBcIuyEsVwiXG4jICAgIGxhc3RfaW5pdGlhbDogXCJMYXN0IEluaXRpYWxcIlxuICAgIHVzZXJuYW1lOiBcIuyCrOyaqeyekCDsnbTrpoRcIlxuIyAgICBjb250YWN0X3VzOiBcIkNvbnRhY3QgVXNcIlxuICAgIGNsb3NlX3dpbmRvdzogXCLssL0g64ur6riwXCJcbiAgICBsZWFybl9tb3JlOiBcIuuNlCDrsLDsmrDquLBcIlxuIyAgICBtb3JlOiBcIk1vcmVcIlxuIyAgICBmZXdlcjogXCJGZXdlclwiXG4jICAgIHdpdGg6IFwid2l0aFwiXG5cbiAgdW5pdHM6XG4gICAgc2Vjb25kOiBcIuy0iFwiXG4gICAgc2Vjb25kczogXCLstIhcIlxuICAgIHNlYzogXCLstIhcIlxuICAgIG1pbnV0ZTogXCLrtoRcIlxuICAgIG1pbnV0ZXM6IFwi67aEXCJcbiAgICBob3VyOiBcIuyLnOqwhFwiXG4gICAgaG91cnM6IFwi7Iuc6rCEXCJcbiAgICBkYXk6IFwi7J28XCJcbiAgICBkYXlzOiBcIuydvFwiXG4gICAgd2VlazogXCLso7xcIlxuICAgIHdlZWtzOiBcIuyjvFwiXG4gICAgbW9udGg6IFwi6rCc7JuUXCJcbiAgICBtb250aHM6IFwi6rCc7JuUXCJcbiAgICB5ZWFyOiBcIuuFhFwiXG4gICAgeWVhcnM6IFwi64WEXCJcblxuICBwbGF5X2xldmVsOlxuICAgIGJhY2tfdG9fbWFwOiBcIuunteycvOuhnCDrj4zslYTqsIDquLBcIlxuIyAgICBkaXJlY3Rpb25zOiBcIkRpcmVjdGlvbnNcIlxuIyAgICBlZGl0X2xldmVsOiBcIkVkaXQgTGV2ZWxcIlxuIyAgICBrZWVwX2xlYXJuaW5nOiBcIktlZXAgTGVhcm5pbmdcIlxuIyAgICBleHBsb3JlX2NvZGVjb21iYXQ6IFwiRXhwbG9yZSBDb2RlQ29tYmF0XCJcbiMgICAgZmluaXNoZWRfaG9jOiBcIkknbSBmaW5pc2hlZCB3aXRoIG15IEhvdXIgb2YgQ29kZVwiXG4jICAgIGdldF9jZXJ0aWZpY2F0ZTogXCJHZXQgeW91ciBjZXJ0aWZpY2F0ZSFcIlxuICAgIGxldmVsX2NvbXBsZXRlOiBcIuugiOuyqCDsmYTro4xcIlxuICAgIGNvbXBsZXRlZF9sZXZlbDogXCLsmYTro4zrkJwg66CI67KoOlwiXG4gICAgY291cnNlOiBcIuy9lOyKpDpcIlxuICAgIGRvbmU6IFwi7JmE66OMXCJcbiAgICBuZXh0X2xldmVsOiBcIuuLpOydjCDroIjrsqhcIlxuICAgIGNvbWJvX2NoYWxsZW5nZTogXCLrj4TsoIQg66CI67KoKOy9pOuztClcIlxuICAgIGNvbmNlcHRfY2hhbGxlbmdlOiBcIuuPhOyghCDroIjrsqgo6rCc64WQIOydtO2VtClcIlxuICAgIGNoYWxsZW5nZV91bmxvY2tlZDogXCLrj4TsoIQg66CI67KoIOyeoOq4iCDtlbTsoJzrkKhcIlxuICAgIGNvbWJvX2NoYWxsZW5nZV91bmxvY2tlZDogXCLrj4TsoIQg66CI67KoKOy9pOuztCkg7J6g6riIIO2VtOygnOuQqFwiXG4gICAgY29uY2VwdF9jaGFsbGVuZ2VfdW5sb2NrZWQ6IFwi64+E7KCEIOugiOuyqCjqsJzrhZAg7J207ZW0KSDsnqDquIgg7ZW07KCc65CoXCJcbiAgICBjb25jZXB0X2NoYWxsZW5nZV9jb21wbGV0ZTogXCLrj4TsoIQg7ISx6rO1IVwiXG4gICAgY29tYm9fY2hhbGxlbmdlX2NvbXBsZXRlOiBcIuuPhOyghCDshLHqs7VcIlxuICAgIGNvbWJvX2NoYWxsZW5nZV9jb21wbGV0ZV9ib2R5OiBcIuyemCDtlojslrTsmpQhIF9fY29uY2VwdF9f7JeQIOuMgO2VtCDsnpgg7J207ZW07ZWY6rOgIOyeiOuKlCDqsoMg6rCZ6rWw7JqUIVwiXG4gICAgcmVwbGF5X2xldmVsOiBcIuugiOuyqCDri6Tsi5wg7ZSM66CI7J207ZWY6riwXCJcbiMgICAgY29tYm9fY29uY2VwdHNfdXNlZDogXCJfX2NvbXBsZXRlX18vX190b3RhbF9fIENvbmNlcHRzIFVzZWRcIlxuIyAgICBjb21ib19hbGxfY29uY2VwdHNfdXNlZDogXCJZb3UgdXNlZCBhbGwgY29uY2VwdHMgcG9zc2libGUgdG8gc29sdmUgdGhlIGNoYWxsZW5nZS4gR3JlYXQgam9iIVwiXG4jICAgIGNvbWJvX25vdF9hbGxfY29uY2VwdHNfdXNlZDogXCJZb3UgdXNlZCBfX2NvbXBsZXRlX18gb3V0IG9mIHRoZSBfX3RvdGFsX18gY29uY2VwdHMgcG9zc2libGUgdG8gc29sdmUgdGhlIGNoYWxsZW5nZS4gVHJ5IHRvIGdldCBhbGwgX190b3RhbF9fIGNvbmNlcHRzIG5leHQgdGltZSFcIlxuICAgIHN0YXJ0X2NoYWxsZW5nZTogXCLrj4TsoITtlZjquLAhXCJcbiAgICBuZXh0X2dhbWU6IFwi64uk7J2MIOqyjOyehFwiXG4gICAgbGFuZ3VhZ2VzOiBcIuyWuOyWtFwiXG4gICAgcHJvZ3JhbW1pbmdfbGFuZ3VhZ2U6IFwi7ZSE66Gc6re4656Y67CNIOyWuOyWtFwiXG4gICAgc2hvd19tZW51OiBcIuqyjOyehCDrqZTribQg67O07J206riwXCJcbiAgICBob21lOiBcIu2ZiFwiICMgTm90IHVzZWQgYW55IG1vcmUsIHdpbGwgYmUgcmVtb3ZlZCBzb29uLlxuICAgIGxldmVsOiBcIuugiOuyqFwiICMgTGlrZSBcIkxldmVsOiBEdW5nZW9ucyBvZiBLaXRoZ2FyZFwiXG4gICAgc2tpcDogXCLrhJjslrTqsIDquLBcIlxuICAgIGdhbWVfbWVudTogXCLqsozsnoQg66mU64m0XCJcbiAgICByZXN0YXJ0OiBcIuyerOyLnOyekVwiXG4gICAgZ29hbHM6IFwi66qp7ZGc65OkXCJcbiAgICBnb2FsOiBcIuuqqe2RnFwiXG4gICAgY2hhbGxlbmdlX2xldmVsX2dvYWxzOiBcIuuPhOyghCDroIjrsqjsnZgg66qp7ZGc65OkXCJcbiAgICBjaGFsbGVuZ2VfbGV2ZWxfZ29hbDogXCLrj4TsoIQg66CI67Ko7J2YIOuqqe2RnFwiXG4gICAgY29uY2VwdF9jaGFsbGVuZ2VfZ29hbHM6IFwi64+E7KCEIOugiOuyqCjqsJzrhZAg7J207ZW0KeydmCDrqqntkZzrk6RcIlxuICAgIGNvbWJvX2NoYWxsZW5nZV9nb2FsczogXCLrj4TsoIQg66CI67KoKOy9pOuztCnsnZgg66qp7ZGcXCJcbiAgICBjb25jZXB0X2NoYWxsZW5nZV9nb2FsOiBcIuuPhOyghCDroIjrsqgo6rCc64WQIOydtO2VtCnsnZgg66qp7ZGc65OkXCJcbiAgICBjb21ib19jaGFsbGVuZ2VfZ29hbDogXCLrj4TsoIQg66CI67KoKOy9pOuztCnsnZgg66qp7ZGcXCJcbiAgICBydW5uaW5nOiBcIuyLpO2WieykkS4uLlwiXG4gICAgc3VjY2VzczogXCLshLHqs7UhXCJcbiAgICBpbmNvbXBsZXRlOiBcIuuqqe2RnCDrr7jsmYTro4xcIlxuICAgIHRpbWVkX291dDogXCLsoJztlZwg7Iuc6rCEIOy0iOqzvFwiXG4gICAgZmFpbGluZzogXCLri6Tsi5wg7ZWc67KIIOuNlCDrj4TsoITtlbTrs7TshLjsmpQuXCJcbiAgICByZWxvYWQ6IFwi7IOI66Gc6rOg7LmoXCJcbiAgICByZWxvYWRfdGl0bGU6IFwi7L2U65Oc66W8IOy0iOq4sO2ZlO2VoOq5jOyalD9cIlxuICAgIHJlbG9hZF9yZWFsbHk6IFwi7KCV66eQ66GcIOydtCDroIjrsqjsnZgg7L2U65Oc66W8IOyymOydjCDsg4Htg5zroZwg65CY64+M66as6rKg7Iq164uI6rmMP1wiXG4gICAgcmVsb2FkX2NvbmZpcm06IFwi7L2U65OcIOy0iOq4sO2ZlFwiXG4jICAgIHRlc3RfbGV2ZWw6IFwiVGVzdCBMZXZlbFwiXG4gICAgdmljdG9yeTogXCLsirnrpqxcIlxuICAgIHZpY3RvcnlfdGl0bGVfcHJlZml4OiBcIlwiXG4gICAgdmljdG9yeV90aXRsZV9zdWZmaXg6IFwiIOyZhOujjFwiXG4gICAgdmljdG9yeV9zaWduX3VwOiBcIuynhO2WieyCrO2VreydhCDsoIDsnqXtlZjroKTrqbQg6rCA7J6F7ZWY7IS47JqUXCJcbiAgICB2aWN0b3J5X3NpZ25fdXBfcG9rZTogXCLsvZTrk5zrpbwg7KCA7J6l7ZWY6rOgIOyLtuycvOyEuOyalD8g7KeA6riIIOqzhOygleydhCDrp4zrk6TslrQg67O07IS47JqUIVwiXG4gICAgdmljdG9yeV9yYXRlX3RoZV9sZXZlbDogXCLsnbTrsogg66CI67KoIO2PieqwgDogXCIgIyB7Y2hhbmdlfVxuICAgIHZpY3RvcnlfcmV0dXJuX3RvX2xhZGRlcjogXCLroIjrjZTroZwg64+M7JWE6rCA6riwXCJcbiAgICB2aWN0b3J5X3NhdmluZ19wcm9ncmVzczogXCLsoIDsnqXtlZjquLBcIlxuICAgIHZpY3RvcnlfZ29faG9tZTogXCLtmYjsnLzroZxcIlxuICAgIHZpY3RvcnlfcmV2aWV3OiBcIuumrOu3sOulvCDrgqjqsqjso7zshLjsmpRcIlxuICAgIHZpY3RvcnlfcmV2aWV3X3BsYWNlaG9sZGVyOiBcIuydtCDroIjrsqgg7Ja065Wg7Ja07JqUP1wiXG4gICAgdmljdG9yeV9ob3VyX29mX2NvZGVfZG9uZTogXCLsoJXrp5Ag7KKF66OM7ZWp64uI6rmMP1wiXG4gICAgdmljdG9yeV9ob3VyX29mX2NvZGVfZG9uZV95ZXM6IFwi64SkIOuCtCBIb3VyIG9mIENvZGXihKIg7JmE66OM7ZaI7Iq164uI64ukIVwiXG4gICAgdmljdG9yeV9leHBlcmllbmNlX2dhaW5lZDogXCLtmo3rk53tlZwg6rK97ZeY7LmYXCJcbiAgICB2aWN0b3J5X2dlbXNfZ2FpbmVkOiBcIu2ajeuTne2VnCDsoKxcIlxuICAgIHZpY3RvcnlfbmV3X2l0ZW06IFwi7IOI66Gc7Jq0IOyVhOydtO2FnCDtmo3rk51cIlxuICAgIHZpY3RvcnlfbmV3X2hlcm86IFwi7IOI66Gc7Jq0IOyYgeybhVwiXG4gICAgdmljdG9yeV92aWtpbmdfY29kZV9zY2hvb2w6IFwi66eZ7IaM7IKsLCDrsKnquIgg64u57Iug7J20IO2BtOumrOyWtO2VnCDroIjrsqjsnYAg7KCV66eQIOyWtOugpOyatCDroIjrsqjsnbTsl4jslrTsmpQhIO2YueyLnCDshoztlITtirjsm6jslrQg6rCc67Cc7J6Q7J246rCA7JqUPyDslYTsp4Eg7JWE64uI652866m0LCDqsJzrsJzsnpDqsIAg65CY7Ja0IOuztOyEuOyalCEg67CU7J207YK5IOy9lOuTnCDsiqTsv6jsl5DshJwgMTTso7wg64+Z7JWIIOyghOusuOyggeyduCDsm7kg6rCc67Cc7J6QIOq1kOycoeydhCDrsJvsnYQg7IiYIOyeiOyWtOyalC5cIlxuICAgIHZpY3RvcnlfYmVjb21lX2FfdmlraW5nOiBcIuuwlOydtO2CueydtCDrkJjquLAhXCJcbiAgICB2aWN0b3J5X25vX3Byb2dyZXNzX2Zvcl90ZWFjaGVyczogXCLqtZDsgqwg6rOE7KCV7Jy866Gc64qUIOynhO2WieyDge2ZqeydtCDsoIDsnqXrkJjsp4Ag7JWK7Iq164uI64ukLiDtlZjsp4Drp4wsIOuLueyLoOydtCDsgqzsmqntlaAg7ZWZ7IOdIOqzhOygleydhCDtlZjrgpgg7LaU6rCA7ZWgIOyImOuKlCDsnojsp4DsmpQuXCJcbiAgICB0b21lX2Nhc3RfYnV0dG9uX3J1bjogXCLsi6TtlolcIlxuICAgIHRvbWVfY2FzdF9idXR0b25fcnVubmluZzogXCLsi6TtlonspJFcIlxuICAgIHRvbWVfY2FzdF9idXR0b25fcmFuOiBcIuyLpO2WieuQqFwiXG4gICAgdG9tZV9zdWJtaXRfYnV0dG9uOiBcIuyggeyaqVwiXG4gICAgdG9tZV9yZWxvYWRfbWV0aG9kOiBcIuybkOuzuCDsvZTrk5zrpbwg67aI65+s7JmAIOugiOuyqCDri6Tsi5wg7Iuc7J6R7ZWY6riwXCIgIyB7Y2hhbmdlfVxuICAgIHRvbWVfYXZhaWxhYmxlX3NwZWxsczogXCLsgqzsmqkg6rCA64ql7ZWcIOuniOuylVwiXG4gICAgdG9tZV95b3VyX3NraWxsczogXCLri7nsi6DsnZgg7Iqk7YKsXCJcbiAgICBoaW50czogXCLtnoztirhcIlxuIyAgICB2aWRlb3M6IFwiVmlkZW9zXCJcbiAgICBoaW50c190aXRsZTogXCLtnoztirgge3tudW1iZXJ9fVwiXG4gICAgY29kZV9zYXZlZDogXCLsvZTrk5zqsIAg7KCA7J6l65CoXCJcbiAgICBza2lwX3R1dG9yaWFsOiBcIuuEmOq4sOq4sCAoZXNjKVwiXG4gICAga2V5Ym9hcmRfc2hvcnRjdXRzOiBcIuuLqOy2le2CpFwiXG4gICAgbG9hZGluZ19zdGFydDogXCLroIjrsqgg7Iuc7J6RXCJcbiAgICBsb2FkaW5nX3N0YXJ0X2NvbWJvOiBcIuuPhOyghCDroIjrsqgo7L2k67O0KSDsi5zsnpFcIlxuICAgIGxvYWRpbmdfc3RhcnRfY29uY2VwdDogXCLrj4TsoIQg66CI67KoKOqwnOuFkCDsnbTtlbQpIOyLnOyekVwiXG4gICAgcHJvYmxlbV9hbGVydF90aXRsZTogXCLsvZTrk5zrpbwg7IiY7KCV7ZWY7IS47JqUXCJcbiAgICB0aW1lX2N1cnJlbnQ6IFwi7ZiE7J6sOlwiXG4gICAgdGltZV90b3RhbDogXCLstZzrjIA6XCJcbiAgICB0aW1lX2dvdG86IFwi6rCA6riwOlwiXG4gICAgbm9uX3VzZXJfY29kZV9wcm9ibGVtX3RpdGxlOiBcIuugiOuyqOydhCDroZzrk5ztlaAg7IiYIOyXhuyKteuLiOuLpFwiXG4gICAgaW5maW5pdGVfbG9vcF90aXRsZTogXCLrrLTtlZwg66Oo7ZSEIOqwkOyngOuQqFwiXG4gICAgaW5maW5pdGVfbG9vcF9kZXNjcmlwdGlvbjogXCLsvZTrk5wg7Iuk7ZaJ7J20IOuBneuCmOyngCDslYrqs6Ag7J6I7Iq164uI64ukLiDsvZTrk5zqsIAg66ek7JqwIOuKkOumrOqxsOuCmCDrrLTtlZwg66Oo7ZSE7JeQIOu5oOynhCDqsoMg6rCZ7Iq164uI64ukLiDslrTsqYzrqbQg67KE6re47J28IOyImOuPhCDsnojsirXri4jri6QuIOydtCDsvZTrk5zrpbwg64uk7IucIOyLpO2Wie2VmOqxsOuCmCDstIjquLAg7IOB7YOc66GcIOumrOyFi+2VtCDrs7TshLjsmpQuIOq3uOuemOuPhCDtlbTqsrDrkJjsp4Ag7JWK7Jy866m0LCDsoIDtnazsl5Dqsowg7JWM66CkIOyjvOyLnOq4sCDrsJTrno3ri4jri6QuXCJcbiAgICBjaGVja19kZXZfY29uc29sZTogXCLrmJDtlZwg7J6Y66q7IOqwiCDsiJjrpbwg7JWM6riwIOychO2VtCDqsJzrsJzsnpAg7L2Y7IaU7J2EIOyXtCDsiJgg7J6I7Iq164uI64ukLlwiXG4gICAgY2hlY2tfZGV2X2NvbnNvbGVfbGluazogXCIo66qF66C57Ja0KVwiXG4gICAgaW5maW5pdGVfbG9vcF90cnlfYWdhaW46IFwi64uk7IucIOyLnOuPhO2VtOuztOyEuOyalC5cIlxuICAgIGluZmluaXRlX2xvb3BfcmVzZXRfbGV2ZWw6IFwi66CI67KoIOumrOyFi1wiXG4gICAgaW5maW5pdGVfbG9vcF9jb21tZW50X291dDogXCLrgrQg7L2U65Oc66W8IOydvOyLnOyggSDso7zshJ3sspjrpqztlZjquLBcIlxuICAgIHRpcF90b2dnbGVfcGxheTogXCJDdHJsK1DroZwg7Iuk7ZaJ7J2EIOqzhOyGje2VmOqxsOuCmCDrqYjstpzsiJgg7J6I7Ja07JqUXCJcbiAgICB0aXBfc2NydWJfc2hvcnRjdXQ6IFwiQ3RybCtbLCBDdHJsK10g66W8IOydtOyaqe2VtCDsi6Ttlokg7IaN64+E66W8IOu5oOultOqyjCDtlaAg7IiYIOyeiOyWtOyalFwiXG4gICAgdGlwX2d1aWRlX2V4aXN0czogXCLtmZTrqbQg7IOB64uo7J2YIOqwgOydtOuTnOulvCDtgbTrpq3tlbTrs7TshLjsmpQuIOycoOyaqe2VnCDsoJXrs7Trpbwg7Ja77J2EIOyImCDsnojsirXri4jri6QuXCJcbiAgICB0aXBfb3Blbl9zb3VyY2U6IFwi7L2U65OcIOy7tOuxg+ydgCAxMDAlIOyYpO2UiCDshozsiqQg6riw67CY7J6F64uI64ukIVwiICMge2NoYW5nZX1cbiAgICB0aXBfdGVsbF9mcmllbmRzOiBcIuy9lOuTnCDsu7TrsYPsnYQg7KaQ6riw7IWo64KY7JqUPyDsuZzqtazsl5Dqsowg7JWM66Ck7KO87Iut7Iuc7JikXCJcbiAgICB0aXBfYmV0YV9sYXVuY2g6IFwi7L2U65OcIOy7tOuxg+ydgCAyMDEz64WEIDEw7JuU7JeQIOuyoO2DgCDshJzruYTsiqTrpbwg7Lac7Iuc7ZaI7Iq164uI64ukLlwiXG4gICAgdGlwX3RoaW5rX3NvbHV0aW9uOiBcIu2VtOqysCDrsKnrspXsnYQg6rOg66+87ZW067O07IS47JqULCDrrLjsoJzrpbwg6rOg66+87ZWY7KeAIOunkOq1rOyalFwiXG4gICAgdGlwX3RoZW9yeV9wcmFjdGljZTogXCLsnbTroaDsoIHsnLzroZwsIOydtOuhoOqzvCDsi6TsoJwg7IKs7J207J2YIOywqOydtOqwgCDsl4bsirXri4jri6QuIOq3uOufrOuCmCDsl7DsirXsnYAsIOyLpOyghOyeheuLiOuLpCAtIOyalOq4sCDrsqDrnbxcIlxuICAgIHRpcF9lcnJvcl9mcmVlOiBcIuyYpOulmOydtOqxsOuCmC3snpDsnKDroZzsmrQg7ZSE66Gc6re4656o7J2EIOyekeyEse2VmOuKlCDrkZDqsIDsp4Ag6ri47J20IOyeiOyKteuLiOuLpOunjDsg7Jik7KeBIOyEuOuyiOynuOydmCDtlZwg7J6R7JeF7J6F64uI64ukLiAtIOyXmOuenCDtjoTrpqzsiqRcIlxuICAgIHRpcF9kZWJ1Z2dpbmdfcHJvZ3JhbTogXCLrp4zslb0g65SU67KE6rmF7J20IOuyhOq3uOulvCDsnqHripQg7J6R7JeF7J20652866m0LCDtlITroZzqt7jrnpjrsI3snYAg67CY65Oc7IucIOuwlOuluCDsp4TtlonsnbTsl6zslbwg7ZWg6rKD7J6F64uI64ukLiAtIEVkc2dlciBXLiBEaWprc3RyYVwiXG4gICAgdGlwX2ZvcnVtczogXCLtj6zrn7zsnYQg7Ya17ZW07IScIOyasOumrOulvCDslrTrlrvqsowg7IOd6rCB7ZWY64qU7KeAIOunkO2VtOyalCFcIlxuICAgIHRpcF9iYWJ5X2NvZGVyczogXCLslZ7snLzroZzripQsIOyVhOq4sOuPhCDslrzsnYzrp4jrspXsgqzqsIAg65CgIOqygyDsnoXri4jri6QuXCJcbiAgICB0aXBfbW9yYWxlX2ltcHJvdmVzOiBcIuyCrOq4sOqwgCDtlqXsg4Eg65CgIOuVjOq5jOyngCDroZzrlKnsnYAg6rOE7IaN65Cp64uI64ukLlwiXG4gICAgdGlwX2FsbF9zcGVjaWVzOiBcIuyasOumrOuKlCDrqqjrk6Ag7IOd66y87J20IOuPmeuTse2VmOqyjCDtlITroZzqt7jrnpjrsI3snYQg67Cw7Jq4IOq4sO2ajOqwgCDsnojslrTslbwg7ZWc64uk6rOgIOyDneqwge2VqeuLiOuLpC5cIlxuICAgIHRpcF9yZXRpY3VsYXRpbmc6IFwi6re466y866qo7JaR7J2YIOuPjOq4sC5cIlxuICAgIHRpcF9oYXJyeTogXCLtlZwg66eI67KV7IKsLCBcIlxuICAgIHRpcF9ncmVhdF9yZXNwb25zaWJpbGl0eTogXCLsoovsnYAg7L2U65SpIOq4sOyIoOydgCDtgbAg65SU67KE6re4IOyxheyehOydhCDrqrDqs6DsmLXri4jri6QuXCJcbiAgICB0aXBfbXVuY2hraW46IFwi66eM7JW9IOuLueyLoOydtCDslbzssYTrpbwg66i57KeA7JWK64qU64uk66m0LCDrgpzsn4HsnbTqsIAg64u57Iug7J20IOyekOqzoCDsnojsnYTrlYwg7LC+7JWE6rCR64uI64ukLlwiXG4gICAgdGlwX2JpbmFyeTogXCLsmKTsp4Eg7IKs656M65Ok7J20IOyeiOuKlCDshLjqs4TripQgMTDqsIDsp4DsnbTri6Q6IOydtOynhOydhCDsnbTtlbTtlZjripQg7IKs656M65Ok6rO8IOq3uOugh+yngCDslYrsnYAg7IKs656M65OkLlwiXG4gICAgdGlwX2NvbW1pdG1lbnRfeW9kYTogXCLtlITroZzqt7jrnpjrqLjqsIAg6rmK7J2AIO2XjOyLoOydtCDsnojslrTslbztlZzri6TripTqsoPsnYAsIOqwgOyepSDsi6zqsIHtlZzqsoPsnbTri6QuIH4g7JqU64ukXCJcbiAgICB0aXBfbm9fdHJ5OiBcIu2VmOuToOqwgCDtlZjsp4Ag66eQ65Og6rCALiDsi5zrj4TqsJnsnYAg6rG0IOyXhuyWtC4gLSDsmpTri6RcIlxuICAgIHRpcF9wYXRpZW5jZTogXCLrsJjrk5zsi5wg7J2464K07Ius7J2EIOqwgOyguOyVvO2VnOuLqOuLpCwg7Ja066awIO2MjOuLpOyZhC4gLSDsmpTri6RcIlxuICAgIHRpcF9kb2N1bWVudGVkX2J1ZzogXCLrrLjshJztmZQg65CcIOuyhOq3uOuKlCDrsoTqt7jqsIAg7JWE64uZ64uI64ukIDsg6re46rKD7J2AIOq4sOuKpeyeheuLiOuLpC5cIlxuICAgIHRpcF9pbXBvc3NpYmxlOiBcIuyEseqzte2VmOq4sCDsoITquYzsp4Qg67aI6rCA64ql7ZW0IOuztOydtOuKlCDrspXsnbTso6AuIC0gTmVsc29uIE1hbmRlbGFcIlxuICAgIHRpcF90YWxrX2lzX2NoZWFwOiBcIuuWoOuTnOuKlCDqsbQg6rCA7LmY6rCAIOyXhuyWtOyalC4g7L2U65Oc66W8IOuztOyXrOykmOu0kOyalC4gLSBMaW51cyBUb3J2YWxkc1wiXG4gICAgdGlwX2ZpcnN0X2xhbmd1YWdlOiBcIuunjOyVvSDri7nsi6DsnbQg67Cw7Jq4IOyImOyeiOuKlCDqsIDsnqUg7LWc7JWF7J2YIOydvOydgCDssqsg67KI7Ke4IO2UhOuhnOq3uOuemOuwjSDslrjslrTsnYQg67Cw7Jqw64qU6rKD7J6F64uI64ukLiAtIOyXmOuenCDsvIDsnbRcIlxuICAgIHRpcF9oYXJkd2FyZV9wcm9ibGVtOiBcIlE6IOunjuydgCDtlITroZzqt7jrnpjrqLjripQg7KCE6rWs66W8IOqwgOuKlOuNsCDslrzrp4jrgpgg6rG466a964uI6rmMPyAgQTog7JWE64uI7JikLCDsnbTqsoPsnYAg7ZWY65Oc7Juo7Ja0IOusuOygnOyeheuLiOuLpC5cIlxuICAgIHRpcF9ob2ZzdGFkdGVyc19sYXc6IFwi7Zi47ZSE7Iqk7YOc7YSwIOydmCDrspXsuZk6IOuLueyLoOydgCDtla3sg4Eg7JiI7IOB67O064ukIOyYpOuemCDqsbjrpr3ri4jri6QsIOqzhOyglSDtmLjtlITsiqTtg5zthLDsnZgg67KV7LmZ7J2EIOqzoOugpO2VmOuNlOudvOuPhCAuXCJcbiAgICB0aXBfcHJlbWF0dXJlX29wdGltaXphdGlvbjogXCLstIjquLDsnZgg7LWc7KCB7ZmU64qUIOuqqOuToCDslYXsnZgg67+M66as7J6F64uI64ukIC4gLSDrj4TrgqDrk5wg7YGs64iE7IqkXCJcbiAgICB0aXBfYnJ1dGVfZm9yY2U6IFwi7J2Y7Ius7ZWg65WMLCDrrLTroKXsnYQg7IKs7Jqp7ZWY6rKMIOuQqeuLiOuLpC4gLSDsvIQg7Yaw7ZSE7IaQXCJcbiAgICB0aXBfZXh0cmFwb2xhdGlvbjogXCLsgqzrnozsnYAg65GQIOqwgOyngCDsooXrpZjqsIAg7J6I7Iq164uI64ukOiDrtojsmYTsoITtlZwg642w7J207YSw7Jy866Gc67aA7YSwIOycoOy2lO2VoCDsiJjsnojripTqsIAuLi5cIlxuICAgIHRpcF9zdXBlcnBvd2VyOiBcIuy9lOuUqeydgCDsmrDrpqzqsIAg6rCV64yA6rWt7JeQIOyeiOuKlCDqsIDsnqUg6rCA6rmM7Jq0IOqyg+yeheuLiOuLpC5cIlxuICAgIHRpcF9jb250cm9sX2Rlc3Rpbnk6IFwi7KeE7KecIOyYpO2UiCDshozsiqTripQsIOuLueyLoOydtCDsmrDrpqzsnZgg7Jq066qF7J2EIOyYrOuwlOuhnCDsobDsnpHtlaAg7IiYIOyeiOyKteuLiOuLpC4gLSDrpqzriIXsiqQg7Yag67Cc7LigXCJcbiAgICB0aXBfbm9fY29kZTogXCLsvZTrk5zqsIAg7JeG64qU6rKD67O064ukIOu5oOuluOqyg+ydgCDsl4bsirXri4jri6QuXCJcbiAgICB0aXBfY29kZV9uZXZlcl9saWVzOiBcIuy9lOuTnOuKlCDsoIjrjIDroZwg6rGw7KeT66eQ7J2EIO2VmOyngCDslYrripTri6QuIOyjvOyEneydgCDqsIDrgZQg7ZWY7KeA66eMLiAg4oCUIFJvbiBKZWZmcmllc1wiXG4gICAgdGlwX3JldXNhYmxlX3NvZnR3YXJlOiBcIuyGjO2UhO2KuOybqOyWtOulvCDsnqzsgqzsmqntlZjquLDsoITsl5Ag66i87KCAIOyCrOyaqe2VoCDsiJgg7J6I7Iq164uI64ukLlwiXG4gICAgdGlwX29wdGltaXphdGlvbl9vcGVyYXRvcjogXCLrqqjrk6Ag7Ja47Ja064qUIOy1nOygge2ZlOuQnCDsmrTsmIHsnYQg7ZWp64uI64ukLiDrjIDrtoDrtoTsnZgg7Ja47Ja06rCAIOyatOyYgSDigJgvL+KAmVwiXG4gICAgdGlwX2xpbmVzX29mX2NvZGU6IFwi7L2U65OcIOudvOyduOyXkCDsnZjtlbQg7ZSE66Gc6re4656o7J2YIOynhO2WiSDsg4HtmansnYQg7Lih7KCV7ZWY64qUIOqyg+ydgCDspJHrn4kg7ZWt6rO16riw7J2YIOqxtOy2lSDsp4Ttlokg7IOB7Zmp7J2EIOy4oeygle2VmOuKlCDqsoPqs7wg6rCZ64ukLiDigJQg67mMIOqyjOydtOy4oFwiXG4gICAgdGlwX3NvdXJjZV9jb2RlOiBcIuuCmOuKlCDshLjqs4Trpbwg67CU6r646rOg7Iu27Ja064+EIOq3uOuTpOydgCDrgpjsl5Dqsowg7IaM7Iqk7L2U65Oc66W8IOyjvOyngCDslYrsirXri4jri6RcIlxuICAgIHRpcF9qYXZhc2NyaXB0X2phdmE6IFwi7J6Q67CU64qUIOyekOuwlOyKpO2BrOumve2KuOydtOqzoCDssKgo7Lm0KeuKlCDsubTtjqvsnoXri4jri6QuIC0g7YGs66as7IqkIO2XpOydvOunjFwiXG4gICAgdGlwX21vdmVfZm9yd2FyZDogXCLri7nsi6DsnbQg66y07JeH7J2065Og6rCE7JeQICwg6rOE7IaNIOyghOynhO2VmOyLreyLnOyYpC4gLSDrp4jti7Qg65+s7YSw7YK5IOyjvOuLiOyWtC5cIlxuICAgIHRpcF9nb29nbGU6IFwi66y47KCc6rCAIOuEiOustCDslrTroLXri6TqtazsmpQ/IOq1rOq4gOuhnCDqsoDsg4ntlbTrs7TshLjsmpQhXCJcbiAgICB0aXBfYWRkaW5nX2V2aWw6IFwi7JWF66eI7J2YIO2VgOy5mOulvCDstpTqsIDtlZjripTspJEuXCJcbiAgICB0aXBfaGF0ZV9jb21wdXRlcnM6IFwi7KaJLCDqt7jrk6TsnYAg7Lu07ZOo7YSw66W8IOyLq+yWtO2VnOuLpOqzoCDsg53qsIHtlZjripQg7IKs656M65Ok7J2066mwLiDqt7jrk6TsnbQg7KCV66eQ66GcIOyLq+yWtCDtlZjripQg6rKD7J2AIO2Yle2OuOyXhuuKlCDtlITroZzqt7jrnpjrqLgg7J6F64uI64ukIC4gLSDrnpjrpqwg66as67iQXCJcbiAgICB0aXBfb3Blbl9zb3VyY2VfY29udHJpYnV0ZTogXCLsvZTrk5zsu7TrsYPsnYQg7Zal7IOB7ZWY64qU642wIOuPhOyZgOyjvOyLreyLnOyYpCFcIlxuICAgIHRpcF9yZWN1cnNlOiBcIuyduOqwhOydgCDrsJjrs7XtlZjqs6As7Iug7J2AIOuLpOyLnCDrj4zslYTsmKjri6QgLSBMLiDtlLzthLAg64yA7LmYXCJcbiAgICB0aXBfZnJlZV95b3VyX21pbmQ6IFwi66qo65GQIOqwgOyekOqzoO2VoOuVjCDsg53quLDripQg7IOI66Gc7JuA7Jy866Gc7J247ZWcLiDrkZDroKTsm4AsIOydmOyLrOqzvCDrtojsi6AuIOyekOycoOuhnOyatCDsg53qsIHsnYQg6rCA7KC46528LiAtIOuqqO2OmOyWtOyKpFwiXG4gICAgdGlwX3N0cm9uZ19vcHBvbmVudHM6IFwi7Ius7KeA7Ja0IOqwle2VnCDsg4HrjIDsnZgg7ZWt7IOBIOyVveygkOydhCDqsIDsp4Dqs6Dsnojri6QuIC0g7J207YOA7LmYIOyasOy5mO2VmFwiXG4gICAgdGlwX3BhcGVyX2FuZF9wZW46IFwi7L2U65Sp7J2EIO2VmOq4sOyghOyXkCwg64u57Iug7J2AIO2VreyDgSDsooXsnbTsmYAg7Y6c7Jy866GcIOqzhO2ajeydhCDsp4Dri4jqs6Ag7J6I7Ja07JW87ZWp64uI64ukLlwiXG4gICAgdGlwX3NvbHZlX3RoZW5fd3JpdGU6IFwi66i87KCALCDrrLjsoJzrpbwg7ZW06rKw7ZWY7IS47JqULiDqt7jrn6zqs6AsIOy9lOuTnOulvCDsk7DripTqsoHri4jri6QuIC0g7KG0IOymjOyKqFwiXG4gICAgdGlwX2NvbXBpbGVyX2lnbm9yZXNfY29tbWVudHM6IFwi6rCA64GU7J2AIOy7tO2MjOydvOufrOqwgCDrgpjsnZgg7Luk66mY7Yq466W8IOustOyLnO2VmOuKlCDqsoMg6rCZ7JWELlwiXG4gICAgdGlwX3VuZGVyc3RhbmRfcmVjdXJzaW9uOiBcIuyerOq3gO2VqOyImOulvCDsnbTtlbTtlZjripQg7Jyg7J287ZWcIOuwqeuyleydgCDsnqzqt4DtlajsiJjrpbwg7J207ZW07ZWY64qUIOqyg+ydtOuLpC5cIlxuICAgIHRpcF9saWZlX2FuZF9wb2x5bW9ycGhpc206IFwi7Jik7ZSIIOyGjOyKpOyXkOyEnOuKlCDslrTrlqDtlZwg7YOA7J6F64+EIO2ZmOyYgeuwm+uKlOuLpC5cIlxuICAgIHRpcF9taXN0YWtlc19wcm9vZl9vZl90cnlpbmc6IFwi64u57Iug7J2YIOy9lOuTnOyXkCDsobTsnqztlZjripQg7Iuk7IiY64qUIOuLueyLoOydtCDrhbjroKXtlZjqs6Ag7J6I64uk64qUIOymneuqheydtOuLpC5cIlxuICAgIHRpcF9hZGRpbmdfb3JncmVzOiBcIuyYpOyasOqxsOulvCDrqqjsnLzripQg7KSRLlwiXG4gICAgdGlwX3NoYXJwZW5pbmdfc3dvcmRzOiBcIuy5vOydhCDqsIDripQg7KSRLlwiXG4gICAgdGlwX3JhdGF0b3VpbGxlOiBcIuuLpOuluCDsgqzrnozrk6TsnbQg64SI7J2YIOy2nOyLoOycvOuhnCDrhIjsnZgg7ZWc6rOE66W8IOygleydmO2VmOyngCDrp5DqsoztlZjrnbwuIOuEiOydmCDsnKDsnbztlZwg7ZWc6rOE64qUIOuEiOydmCDsmIHtmLzsnbTri6QuIC0g7IWw7ZSEIOq1rOyKpO2GoCwg7JiB7ZmUIOudvOuUsOuanOydtOyXkOyEnFwiXG4gICAgdGlwX25lbW86IFwi7J247IOd7J20IOuEiOulvCDsoIDrsoTrprQg65WMLCDrrZgg7ZW07JW87ZWY64qUIOyVhOuLiD8g6re464OlIO2XpOyXhOy5mOuKlCDqsoPsnbTslbwuIO2XpOyXhOyzkC4gLSDrj4TrpqwsIOyYge2ZlCDrhKTrqqjrpbwg7LC+7JWE7ISc7JeQ7IScXCJcbiAgICB0aXBfaW50ZXJuZXRfd2VhdGhlcjogXCLqt7jrg6Ug7J247YSw64S37Jy866GcIOydtOyCrCDsmKTsp4Ag6re4656YLiDssLgg7KKL7J2AIOqzs+yduOuNsCDrp5DsnbTsp4AuIOyduOulmOuKlCDtla3sg4Eg7KKL7J2AIOuCoOyUqOyXkOyEnCDsgrTqs6Ag7Iu27Ja07ZWY7J6W7JWELiAtIOyhtCDqt7jrprBcIlxuICAgIHRpcF9uZXJkczogXCLrsJTrs7Trk6TsnYAg662U6rCA66W8IOyii+yVhO2VmOuPhOuhnSDtl4jqsIDrkJjsl4jsp4AsIOuniOy5mCDsnZjsnpDsl5Ag7JWJ7JWE7IScIOuLpOumrOuWoOuKlCDrk6/snbQg66eQ7J207JW8LiAtIOyhtCDqt7jrprBcIlxuICAgIHRpcF9zZWxmX3RhdWdodDogXCLrgpwg64KY7JeQ6rKMIOuCtOqwgCDqs7XrtoDtlZwg6rKD7J2YIDkwJeulvCDqsIDrpbTss6Tsp4AuIOq3uOqyjCDsoJXsg4HsnbTqsbDrk6AhIC0g7ZaJ7YGsIOq3uOumsFwiXG4gICAgdGlwX2x1bmFfbG92ZWdvb2Q6IFwi6rGx7KCV7ZWY7KeAIOuniCwg64SMIOuCmOyZgCDqsJnsnYAg67aA66WY7JW8LiAtIOujqOuCmCDrn6zruIzqtb9cIlxuICAgIHRpcF9nb29kX2lkZWE6IFwi7KKL7J2AIOyDneqwgeydhCDrlqDsmKzrpqzqsowg7ZWY64qUIOqwgOyepSDsoovsnYAg67Cp67KV7J2AIOyVhOyjvCDrp47snYAg7IOd6rCB7J2EIOuWoOyYpOultOqyjCDtlZjripQg6rKD7J207KeALiAtIOumrOuIhOyKpCDtj7Trp4FcIlxuICAgIHRpcF9wcm9ncmFtbWluZ19ub3RfYWJvdXRfY29tcHV0ZXJzOiBcIuy7tO2TqO2EsCDqs7XtlZnsl5Ag64yA7ZWY7JesIOy7tO2TqO2EsOuegCwg7LKc66y47ZWZ7JeQIOuMgO2VmOyXrCDrp53sm5Dqsr3qs7zrj4Qg6rCZ7KeALiAtIOyXkOyKpOy7pCDri6TsnbXsiqTtirjrnbxcIlxuICAgIHRpcF9tdWxhbjogXCLrhIgg7J6Q7Iug7J20IOqwgOuKpe2VmOuLpOqzoCDrr7/slrQsIOq3uOufrOuptCDqt7jroIfqsowg65Cg6rGw7JW8LiAtIOuqqeuegFwiXG4gICAgcHJvamVjdF9jb21wbGV0ZTogXCLtlITroZzsoJ3tirgg7JmE7ISxIVwiXG4gICAgc2hhcmVfdGhpc19wcm9qZWN0OiBcIuydtCDtlITroZzsoJ3tirjrpbwg7Lmc6rWs7JmAIOqwgOyhseyXkOqyjCDrs7Tsl6zso7zsnpA6XCJcbiAgICByZWFkeV90b19zaGFyZTogXCLtlITroZzsoJ3tirjrpbwg7Lac7Iuc7ZWgIOykgOu5hOqwgCDrkJjsl4jrgpjsmpQ/XCJcbiAgICBjbGlja19wdWJsaXNoOiBcIiBcXFwiUHVibGlzaFxcXCLsnYQg7YG066at7ZW07IScIO2BtOuemOyKpCDqsKTrn6zrpqzsl5DshJwg67O07J206rKMIO2VmOyEuOyalC4g6re466as6rOgIOqwmeydgCDrsJgg7ZWZ7IOd65Ok7J2YIOyEseqzvOuPhCDqtazqsr3tlbTrs7TshLjsmpQhIOyWuOygnOuToOyngCDrj4zslYTsmYDshJwg7J20IO2UhOuhnOygne2KuOulvCDsmYTshLHsi5ztgqwg7IiYIOyeiOyKteuLiOuLpC4g67OA6rK97KCQ65Ok7J2AIOyekOuPmeycvOuhnCDsoIDsnqXrkJjslrQg64uk66W4IOyCrOuejOuTpOyXkOqyjCDqs7XsnKDtlaAg7IiYIOyeiOyKteuLiOuLpC5cIlxuICAgIGFscmVhZHlfcHVibGlzaGVkX3ByZWZpeDogXCLrs4Dqsr3soJDrk6TsnbQg7YG0656Y7IqkIOy6mOufrOumrOyXkCDqs7XsnKDrkJjsl4jsirXri4jri6QuXCJcbiAgICBhbHJlYWR5X3B1Ymxpc2hlZF9zdWZmaXg6IFwi6rOE7IaNIOyDiOuhnOyatCDsi5zrj4Trpbwg7ZW067O06rOgIOydtCDtlITroZzsoJ3tirjrpbwg7JmE7ISx7Iuc7Lyc67O07IS47JqULiDtmLnsnYAg64uk66W4IOyCrOuejOuTpOydmCDshLHqs7zrpbwg7IK07Y6067O06riw64+EIO2VmOyEuOyalCEg67OA6rK97KCQ65Ok7J2AIOyekOuPmeycvOuhnCDsoIDsnqXrkJjslrQg64uk66W4IOyCrOuejOuTpOyXkOqyjCDqs7XsnKDtlaAg7IiYIOyeiOyKteuLiOuLpC5cIlxuICAgIHZpZXdfZ2FsbGVyeTogXCLqsKTrn6zrpqwg67O06riwXCJcbiAgICBwcm9qZWN0X3B1Ymxpc2hlZF9ub3R5OiBcIuuLueyLoOydmCDroIjrsqjsnbQg6rO17Jyg65CY7JeI7Iq164uI64ukIVwiXG4gICAga2VlcF9lZGl0aW5nOiBcIu2OuOynkSDspJFcIlxuIyAgICBsZWFybl9uZXdfY29uY2VwdHM6IFwiTGVhcm4gbmV3IGNvbmNlcHRzXCJcbiMgICAgd2F0Y2hfYV92aWRlbzogXCJXYXRjaCBhIHZpZGVvIG9uIF9fY29uY2VwdF9uYW1lX19cIlxuIyAgICBjb25jZXB0X3VubG9ja2VkOiBcIkNvbmNlcHQgVW5sb2NrZWRcIlxuIyAgICB1c2VfYXRfbGVhc3Rfb25lX2NvbmNlcHQ6IFwiVXNlIGF0IGxlYXN0IG9uZSBjb25jZXB0OiBcIlxuXG4gIGFwaXM6XG4gICAgbWV0aG9kczogXCJNZXRob2RzXCJcbiAgICBldmVudHM6IFwiRXZlbnRzXCJcbiAgICBoYW5kbGVyczogXCJIYW5kbGVyc1wiXG4gICAgcHJvcGVydGllczogXCJQcm9wZXJ0aWVzXCJcbiAgICBzbmlwcGV0czogXCJTbmlwcGV0c1wiXG4gICAgc3Bhd25hYmxlOiBcIlNwYXduYWJsZVwiXG4gICAgaHRtbDogXCJIVE1MXCJcbiAgICBtYXRoOiBcIk1hdGhcIlxuICAgIGFycmF5OiBcIkFycmF5XCJcbiAgICBvYmplY3Q6IFwiT2JqZWN0XCJcbiAgICBzdHJpbmc6IFwiU3RyaW5nXCJcbiAgICBmdW5jdGlvbjogXCJGdW5jdGlvblwiXG4gICAgdmVjdG9yOiBcIlZlY3RvclwiXG4gICAgZGF0ZTogXCJEYXRlXCJcbiAgICBqcXVlcnk6IFwialF1ZXJ5XCJcbiAgICBqc29uOiBcIkpTT05cIlxuICAgIG51bWJlcjogXCJOdW1iZXJcIlxuICAgIHdlYmphdmFzY3JpcHQ6IFwiSmF2YVNjcmlwdFwiXG5cbiMgIGFtYXpvbl9ob2M6XG4jICAgIHRpdGxlOiBcIktlZXAgTGVhcm5pbmcgd2l0aCBBbWF6b24hXCJcbiMgICAgY29uZ3JhdHM6IFwiQ29uZ3JhdHVsYXRpb25zIG9uIGNvbnF1ZXJpbmcgdGhhdCBjaGFsbGVuZ2luZyBIb3VyIG9mIENvZGUhXCJcbiMgICAgZWR1Y2F0ZV8xOiBcIk5vdywga2VlcCBsZWFybmluZyBhYm91dCBjb2RpbmcgYW5kIGNsb3VkIGNvbXB1dGluZyB3aXRoIEFXUyBFZHVjYXRlLCBhbiBleGNpdGluZywgZnJlZSBwcm9ncmFtIGZyb20gQW1hem9uIGZvciBib3RoIHN0dWRlbnRzIGFuZCB0ZWFjaGVycy4gV2l0aCBBV1MgRWR1Y2F0ZSwgeW91IGNhbiBlYXJuIGNvb2wgYmFkZ2VzIGFzIHlvdSBsZWFybiBhYm91dCB0aGUgYmFzaWNzIG9mIHRoZSBjbG91ZCBhbmQgY3V0dGluZy1lZGdlIHRlY2hub2xvZ2llcyBzdWNoIGFzIGdhbWluZywgdmlydHVhbCByZWFsaXR5LCBhbmQgQWxleGEuXCJcbiMgICAgZWR1Y2F0ZV8yOiBcIkxlYXJuIG1vcmUgYW5kIHNpZ24gdXAgaGVyZVwiXG4jICAgIGZ1dHVyZV9lbmdfMTogXCJZb3UgY2FuIGFsc28gdHJ5IHRvIGJ1aWxkIHlvdXIgb3duIHNjaG9vbCBmYWN0cyBza2lsbCBmb3IgQWxleGFcIlxuIyAgICBmdXR1cmVfZW5nXzI6IFwiaGVyZVwiXG4jICAgIGZ1dHVyZV9lbmdfMzogXCIoZGV2aWNlIGlzIG5vdCByZXF1aXJlZCkuIFRoaXMgQWxleGEgYWN0aXZpdHkgaXMgYnJvdWdodCB0byB5b3UgYnkgdGhlXCJcbiMgICAgZnV0dXJlX2VuZ180OiBcIkFtYXpvbiBGdXR1cmUgRW5naW5lZXJcIlxuIyAgICBmdXR1cmVfZW5nXzU6IFwicHJvZ3JhbSB3aGljaCBjcmVhdGVzIGxlYXJuaW5nIGFuZCB3b3JrIG9wcG9ydHVuaXRpZXMgZm9yIGFsbCBLLTEyIHN0dWRlbnRzIGluIHRoZSBVbml0ZWQgU3RhdGVzIHdobyB3aXNoIHRvIHB1cnN1ZSBjb21wdXRlciBzY2llbmNlLlwiXG5cbiMgIHBsYXlfZ2FtZV9kZXZfbGV2ZWw6XG4jICAgIGNyZWF0ZWRfYnk6IFwiQ3JlYXRlZCBieSB7e25hbWV9fVwiXG4jICAgIGNyZWF0ZWRfZHVyaW5nX2hvYzogXCJDcmVhdGVkIGR1cmluZyBIb3VyIG9mIENvZGVcIlxuIyAgICByZXN0YXJ0OiBcIlJlc3RhcnQgTGV2ZWxcIlxuIyAgICBwbGF5OiBcIlBsYXkgTGV2ZWxcIlxuIyAgICBwbGF5X21vcmVfY29kZWNvbWJhdDogXCJQbGF5IE1vcmUgQ29kZUNvbWJhdFwiXG4jICAgIGRlZmF1bHRfc3R1ZGVudF9pbnN0cnVjdGlvbnM6IFwiQ2xpY2sgdG8gY29udHJvbCB5b3VyIGhlcm8gYW5kIHdpbiB5b3VyIGdhbWUhXCJcbiMgICAgZ29hbF9zdXJ2aXZlOiBcIlN1cnZpdmUuXCJcbiMgICAgZ29hbF9zdXJ2aXZlX3RpbWU6IFwiU3Vydml2ZSBmb3IgX19zZWNvbmRzX18gc2Vjb25kcy5cIlxuIyAgICBnb2FsX2RlZmVhdDogXCJEZWZlYXQgYWxsIGVuZW1pZXMuXCJcbiMgICAgZ29hbF9kZWZlYXRfYW1vdW50OiBcIkRlZmVhdCBfX2Ftb3VudF9fIGVuZW1pZXMuXCJcbiMgICAgZ29hbF9tb3ZlOiBcIk1vdmUgdG8gYWxsIHRoZSByZWQgWCBtYXJrcy5cIlxuIyAgICBnb2FsX2NvbGxlY3Q6IFwiQ29sbGVjdCBhbGwgdGhlIGl0ZW1zLlwiXG4jICAgIGdvYWxfY29sbGVjdF9hbW91bnQ6IFwiQ29sbGVjdCBfX2Ftb3VudF9fIGl0ZW1zLlwiXG5cbiAgZ2FtZV9tZW51OlxuICAgIGludmVudG9yeV90YWI6IFwi7J2467Kk7Yag66asXCJcbiAgICBzYXZlX2xvYWRfdGFiOiBcIuyggOyepe2VmOq4sC/rtojrn6zsmKTquLBcIlxuICAgIG9wdGlvbnNfdGFiOiBcIuyYteyFmFwiXG4gICAgZ3VpZGVfdGFiOiBcIuqwgOydtOuTnFwiXG4gICAgZ3VpZGVfdmlkZW9fdHV0b3JpYWw6IFwi7JiB7IOBIO2KnO2GoOumrOyWvFwiXG4gICAgZ3VpZGVfdGlwczogXCLtjIHrk6RcIlxuICAgIG11bHRpcGxheWVyX3RhYjogXCLrqYDti7Ag7ZSM66CI7J20XCJcbiAgICBhdXRoX3RhYjogXCLqsIDsnoXtlZjquLBcIlxuICAgIGludmVudG9yeV9jYXB0aW9uOiBcIuyepeu5hCDsnqXssKlcIlxuICAgIGNob29zZV9oZXJvX2NhcHRpb246IFwi7JiB7JuFIOuwjyDslrjslrQg7ISg7YOdIFwiXG4gICAgb3B0aW9uc19jYXB0aW9uOiBcIuyEpOygleuTpOydhCDrsJTqvrjquLBcIlxuICAgIGd1aWRlX2NhcHRpb246IFwi66y47ISc65Ok6rO8IO2MgeuTpFwiXG4gICAgbXVsdGlwbGF5ZXJfY2FwdGlvbjogXCLsuZzqtazrk6Tqs7wg7ZSM66CI7J20IO2VmOyEuOyalCFcIlxuICAgIGF1dGhfY2FwdGlvbjogXCLsp4Ttlonsgqztla3snYQg7KCA7J6l7ZWY7IS47JqUXCJcblxuICBsZWFkZXJib2FyZDpcbiAgICB2aWV3X290aGVyX3NvbHV0aW9uczogXCLrpqzrjZTrs7Trk5wg67O06riwXCJcbiAgICBzY29yZXM6IFwi7KCQ7IiYXCJcbiAgICB0b3BfcGxheWVyczogXCLsg4HsnIQg7ZSM66CI7J207Ja0XCJcbiAgICBkYXk6IFwi7Jik64qYXCJcbiAgICB3ZWVrOiBcIuydtOuyiCDso7xcIlxuICAgIGFsbDogXCLrqqjrk6At7Iuc6rCEXCJcbiAgICBsYXRlc3Q6IFwi7LWc6re8XCJcbiAgICB0aW1lOiBcIuyLnOqwhFwiXG4gICAgZGFtYWdlX3Rha2VuOiBcIuuNsOuvuOyngCDsoJXrj4RcIlxuICAgIGRhbWFnZV9kZWFsdDogXCLso73snYzsnYQg66ee7J2AIOuNsOuvuOyngFwiXG4gICAgZGlmZmljdWx0eTogXCLrgpzsnbTrj4RcIlxuICAgIGdvbGRfY29sbGVjdGVkOiBcIuyImOynkeuQnCDqs6jrk5xcIlxuIyAgICBzdXJ2aXZhbF90aW1lOiBcIlN1cnZpdmVkXCJcbiMgICAgZGVmZWF0ZWQ6IFwiRW5lbWllcyBEZWZlYXRlZFwiXG4jICAgIGNvZGVfbGVuZ3RoOiBcIkxpbmVzIG9mIENvZGVcIlxuIyAgICBzY29yZV9kaXNwbGF5OiBcIl9fc2NvcmVUeXBlX186IF9fc2NvcmVfX1wiXG5cbiAgaW52ZW50b3J5OlxuICAgIGVxdWlwcGVkX2l0ZW06IFwi7J6l7LCp65CoXCJcbiAgICByZXF1aXJlZF9wdXJjaGFzZV90aXRsZTogXCLqtazrp6Qg7ZWE7JqUXCJcbiAgICBhdmFpbGFibGVfaXRlbTogXCLsgqzsmqkg6rCA64qlXCJcbiAgICByZXN0cmljdGVkX3RpdGxlOiBcIuyCrOyaqSDrtojqsIBcIlxuICAgIHNob3VsZF9lcXVpcDogXCIo7J6l7LCp7ZWY66Ck66m0IOuNlOu4lO2BtOumrSlcIlxuICAgIGVxdWlwcGVkOiBcIijsnqXssKnrkKgpXCJcbiAgICBsb2NrZWQ6IFwiKOyeoOq5gClcIlxuICAgIHJlc3RyaWN0ZWQ6IFwiKOydtCDroIjrsqjsl5DshJzripQg7IKs7Jqp67aI6rCAKVwiXG4gICAgZXF1aXA6IFwi7J6l7LCpXCJcbiAgICB1bmVxdWlwOiBcIu2VtOygnFwiXG4jICAgIHdhcnJpb3Jfb25seTogXCJXYXJyaW9yIE9ubHlcIlxuIyAgICByYW5nZXJfb25seTogXCJSYW5nZXIgT25seVwiXG4jICAgIHdpemFyZF9vbmx5OiBcIldpemFyZCBPbmx5XCJcblxuICBidXlfZ2VtczpcbiAgICBmZXdfZ2VtczogXCJnZW0g66qH6rCcXCJcbiAgICBwaWxlX2dlbXM6IFwiZ2VtIOustuydjFwiXG4gICAgY2hlc3RfZ2VtczogXCJnZW0g7IOB7J6QXCJcbiAgICBwdXJjaGFzaW5nOiBcIuq1rOunpOykkS4uLlwiXG4gICAgZGVjbGluZWQ6IFwi6reA7ZWY7J2YIOy5tOuTnOqwgCDqsbDrtoDrkJjsl4jsirXri4jri6RcIlxuICAgIHJldHJ5aW5nOiBcIuyEnOuyhOyXkOufrCwg64uk7IucIOyLnOuPhO2VmOyEuOyalC5cIlxuICAgIHByb21wdF90aXRsZTogXCJnZW0g67aA7KGxXCJcbiAgICBwcm9tcHRfYm9keTogXCJnZW3snbQg642UIO2VhOyalO2VmOyLoOqwgOyalD9cIlxuICAgIHByb21wdF9idXR0b246IFwi7IO1IOyVpO2EsFwiXG4gICAgcmVjb3ZlcmVkOiBcImdlbSDqtazrp6Ttm4Qg67iM65287Jqw7KC466W8IOyDiOuhnOqzoOy5qCDtlZjshLjsmpQuXCJcbiAgICBwcmljZTogXCJ4e3tnZW1zfX0gLyDtlZzri6xcIlxuICAgIGJ1eV9wcmVtaXVtOiBcIu2UhOumrOuvuOyXhCDqtazsnoVcIlxuICAgIHB1cmNoYXNlOiBcIuq1rOunpO2VmOq4sFwiXG4gICAgcHVyY2hhc2VkOiBcIuq1rOunpO2VqFwiXG5cbiMgIHN1YnNjcmliZV9mb3JfZ2VtczpcbiMgICAgcHJvbXB0X3RpdGxlOiBcIk5vdCBFbm91Z2ggR2VtcyFcIlxuIyAgICBwcm9tcHRfYm9keTogXCJTdWJzY3JpYmUgdG8gUHJlbWl1bSB0byBnZXQgZ2VtcyBhbmQgYWNjZXNzIHRvIGV2ZW4gbW9yZSBsZXZlbHMhXCJcblxuICBlYXJuX2dlbXM6XG4gICAgcHJvbXB0X3RpdGxlOiBcIuygrOydtCDstqnrtoTtlZjsp4Ag7JWK7Iq164uI64ukLlwiXG4gICAgcHJvbXB0X2JvZHk6IFwi642UIOyWu+q4sCDsnITtlbQg6rOE7IaNIO2UjOugiOydtCDtlZjshLjsmpQuXCJcblxuICBzdWJzY3JpYmU6XG4jICAgIGJlc3RfZGVhbDogXCJCZXN0IERlYWwhXCJcbiMgICAgY29uZmlybWF0aW9uOiBcIkNvbmdyYXR1bGF0aW9ucyEgWW91IG5vdyBoYXZlIGEgQ29kZUNvbWJhdCBQcmVtaXVtIFN1YnNjcmlwdGlvbiFcIlxuIyAgICBwcmVtaXVtX2FscmVhZHlfc3Vic2NyaWJlZDogXCJZb3UncmUgYWxyZWFkeSBzdWJzY3JpYmVkIHRvIFByZW1pdW0hXCJcbiMgICAgc3Vic2NyaWJlX21vZGFsX3RpdGxlOiBcIkNvZGVDb21iYXQgUHJlbWl1bVwiXG4gICAgY29tcGFyaXNvbl9ibHVyYjogXCLsvZTrk5zsu7TrsYPsnYQg6rWs64+F7ZWY7IWU7IScIOuLueyLoOydmCDsiqTtgqzsnYQg64Kg7Lm066Gt6rKM7ZWY7Iut7Iuc7JikIVwiICMge2NoYW5nZX1cbiAgICBtdXN0X2JlX2xvZ2dlZDogXCLroZzqt7jsnbjrtoDthLAg66i87KCAIO2VmOyFlOyVvO2VqeuLiOuLpC7rqZTribTsl5DshJwg6rOE7KCV7J2EIOunjOuTpOqxsOuCmCDroZzqt7jsnbjtlbTso7zshLjsmpQuXCJcbiAgICBzdWJzY3JpYmVfdGl0bGU6IFwi6rWs64+FXCIgIyBBY3R1YWxseSB1c2VkIGluIHN1YnNjcmliZSBidXR0b25zLCB0b29cbiAgICB1bnN1YnNjcmliZTogXCLqtazrj4Ug7ZW07KCcXCJcbiAgICBjb25maXJtX3Vuc3Vic2NyaWJlOiBcIuq1rOuPhSDtlbTsoJwg7ZmV7J24XCJcbiAgICBuZXZlcl9taW5kOiBcIuqysOy9lCwg64KcIOyXrOyghO2eiCDri7nsi6DsnYQg7IKs656R7ZWp64uI64ukXCJcbiAgICB0aGFua195b3VfbW9udGhzX3ByZWZpeDogXCLsmrDrpqzsnZgg66eI7KeA66eJ6rmM7KeAIOyngOybkO2VtOyjvOyFlOyEnCDqsJDsgqztlanri4jri6QuXCJcbiAgICB0aGFua195b3VfbW9udGhzX3N1ZmZpeDogXCLrp6Qg64usLlwiXG4gICAgdGhhbmtfeW91OiBcIkNvZGVDb21iYXTsnYQg64+E7JmA7KO87IWU7IScIOqwkOyCrO2VqeuLiOuLpC5cIlxuICAgIHNvcnJ5X3RvX3NlZV95b3VfZ286IFwi64u57Iug7J20IOuWoOuCmOyEnCDrr7jslYjtlanri4jri6QhIOyasOumrOqwgCDsnpgg7ZWg7IiYIOyeiOuKlCDrsKnrspXsnYQg7JWM66CkIOyjvOyLnOq4sCDrsJTrno3ri4jri6QuXCJcbiAgICB1bnN1YnNjcmliZV9mZWVkYmFja19wbGFjZWhvbGRlcjogXCLslrQsIOyasOumrOuKlCDrrLTsiqgg7KeT7J2EIO2VnOqxsOyjoD9cIlxuICAgIHN0cmlwZV9kZXNjcmlwdGlvbjogXCLsm5TqsIQg6rWs64+FXCJcbiAgICBidXlfbm93OiBcIuyngOq4iCBcIlxuICAgIHN1YnNjcmlwdGlvbl9yZXF1aXJlZF90b19wbGF5OiBcIuuLueyLoOydgCDslYTrp4gg7J20IOugiOuyqOydhCDtlIzroIjsnbTtlZjroKTrqbQg6rWs64+F7J20IO2VhOyalO2VqeuLiOuLpC5cIlxuICAgIHVubG9ja19oZWxwX3ZpZGVvczogXCLrqqjrk6Ag67mE65SU7JikIO2KnO2GoOumrOyWvOydmCDsnqDquIjsnYQg7ZW07KCc7ZWY66Ck66m0IOq1rOuPhSAuXCJcbiAgICBwZXJzb25hbF9zdWI6IFwi6rCc7J24IOq1rOuPhVwiICMgQWNjb3VudHMgU3Vic2NyaXB0aW9uIFZpZXcgYmVsb3dcbiAgICBsb2FkaW5nX2luZm86IFwi6rWs64+FIOygleuztOulvCDrtojrn6zsmKTripTspJEuLi5cIlxuICAgIG1hbmFnZWRfYnk6IFwi7JeQIOydmO2VtCDqtIDrpqzrkKnri4jri6RcIlxuICAgIHdpbGxfYmVfY2FuY2VsbGVkOiBcIuyXkCDst6jshozrkKnri4jri6RcIlxuICAgIGN1cnJlbnRseV9mcmVlOiBcIu2YhOyerCDrrLTro4wg6rWs64+F7J6F64uI64ukXCJcbiAgICBjdXJyZW50bHlfZnJlZV91bnRpbDogXCLtmITsnqwg6rCA7J6F65CcIOyDge2DnOyeheuLiOuLpFwiXG4jICAgIGZyZWVfc3Vic2NyaXB0aW9uOiBcIkZyZWUgc3Vic2NyaXB0aW9uXCJcbiAgICB3YXNfZnJlZV91bnRpbDogXCLri7nsi6DsnYAg7ZiE7J6s6rmM7KeAIOustOujjOuhnCDqsIDsnoUg7ZaI7Iq164uI64ukXCJcbiAgICBtYW5hZ2VkX3N1YnM6IFwi6rSA66asIOq1rOuPhVwiXG4gICAgc3Vic2NyaWJpbmc6IFwi6rWs64+F7KSRLi4uXCJcbiAgICBjdXJyZW50X3JlY2lwaWVudHM6IFwi7ZiE7J6sIOuwm+uKlCDsgqzrnoxcIlxuICAgIHVuc3Vic2NyaWJpbmc6IFwi6rWs64+F7ZW07KCc7KSRXCJcbiAgICBzdWJzY3JpYmVfcHJlcGFpZDogXCLshKDrtogg7L2U65Oc66W8IOyCrOyaqe2VmOyXrCDqtazrj4Ug7YG066atXCJcbiAgICB1c2luZ19wcmVwYWlkOiBcIuunpOuLrCDqtazrj4Ug7ISg67aIIOy9lOuTnOulvCDsgqzsmqlcIlxuIyAgICBmZWF0dXJlX2xldmVsX2FjY2VzczogXCJBY2Nlc3MgMzAwKyBsZXZlbHMgYXZhaWxhYmxlXCJcbiMgICAgZmVhdHVyZV9oZXJvZXM6IFwiVW5sb2NrIGV4Y2x1c2l2ZSBoZXJvZXMgYW5kIHBldHNcIlxuIyAgICBmZWF0dXJlX2xlYXJuOiBcIkxlYXJuIHRvIG1ha2UgZ2FtZXMgYW5kIHdlYnNpdGVzXCJcbiMgICAgbW9udGhfcHJpY2U6IFwiJF9fcHJpY2VfX1wiXG4jICAgIGZpcnN0X21vbnRoX3ByaWNlOiBcIk9ubHkgJF9fcHJpY2VfXyBmb3IgeW91ciBmaXJzdCBtb250aCFcIlxuIyAgICBsaWZldGltZTogXCJMaWZldGltZSBBY2Nlc3NcIlxuIyAgICBsaWZldGltZV9wcmljZTogXCIkX19wcmljZV9fXCJcbiMgICAgeWVhcl9zdWJzY3JpcHRpb246IFwiWWVhcmx5IFN1YnNjcmlwdGlvblwiXG4jICAgIHllYXJfcHJpY2U6IFwiJF9fcHJpY2VfXy95ZWFyXCJcbiMgICAgc3VwcG9ydF9wYXJ0MTogXCJOZWVkIGhlbHAgd2l0aCBwYXltZW50IG9yIHByZWZlciBQYXlQYWw/IEVtYWlsXCJcbiMgICAgc3VwcG9ydF9wYXJ0MjogXCJzdXBwb3J0QGNvZGVjb21iYXQuY29tXCJcblxuICBhbm5vdW5jZW1lbnQ6XG4gICAgbm93X2F2YWlsYWJsZTogXCLsnbTsoJwg6rWs64+F7J6Q7JeQ6rKMIOygnOqzteuQqeuLiOuLpC5cIlxuICAgIHN1YnNjcmliZXI6IFwi6rWs64+F7J6QXCJcbiAgICBjdWRkbHlfY29tcGFuaW9uczogXCLsgqzrnpHsiqTrn6zsmrQg7Lmc6rWs65OkIVwiICMgUGV0IEFubm91bmNlbWVudCBNb2RhbFxuICAgIGtpbmRsaW5nX25hbWU6IFwi67aI7J2YIOygleuguVwiXG4gICAga2luZGxpbmdfZGVzY3JpcHRpb246IFwi67aI7J2YIOygleugueuTpOydgCDrsKTqs7wg64KuLCDtla3sg4Eg65Sw65y77ZWY6rKMIOuLueyLoOydhCDsp4DtgqTqs6Ag7Iu27Ja07ZWp64uI64ukLlwiXG4gICAgZ3JpZmZpbl9uYW1lOiBcIuyVhOq4sCDqt7jrpqztlYAgXCJcbiAgICBncmlmZmluX2Rlc2NyaXB0aW9uOiBcIuyCrOuekeyKpOufrOyatCDqt7jrpqztlYDsnYAg67CY7J2AIOuPheyImOumrOydtOqzoCDrsJjsnYAg7IKs7J6Q7J6F64uI64ukLi5cIlxuICAgIHJhdmVuX25hbWU6IFwi66CI7J2067iQXCJcbiAgICByYXZlbl9kZXNjcmlwdGlvbjogXCLroIjsnbTruJDsnYAg64u57Iug7J2YIOyytOugpeydhCDssYTsmrDquLAg7JyE7ZW0IOuwmOynneydtOuKlCDrs5HsnYQg7J6YIOuqqOydjeuLiOuLpC5cIlxuICAgIG1pbWljX25hbWU6IFwi66+466+5XCJcbiAgICBtaW1pY19kZXNjcmlwdGlvbjogXCLrr7jrr7nsnYAg64+Z7KCE7J2EIOqwgOyguOyYteuLiOuLpC4g66+466+57J2EIOuPmeyghCDsnITroZwg7J2064+Z7Iuc7LycIOqzqOuTnCDsiJjquInrn4nsnYQg64qY66as7IS47JqULiBcIlxuICAgIGNvdWdhcl9uYW1lOiBcIuy/oOqxsFwiXG4gICAgY291Z2FyX2Rlc2NyaXB0aW9uOiBcIuy/oOqxsOuKlCBQdXJyaW5nIEhhcHBpbHkgRGFpbHnsl5DshJwg67CV7IKs7ZWZ7JyE66W8IOuwm+qzoOyLtuyWtCDtlanri4jri6QuIFwiXG4gICAgZm94X25hbWU6IFwi7ZG466W4IOyXrOyasFwiXG4gICAgZm94X2Rlc2NyaXB0aW9uOiBcIu2RuOuluCDsl6zsmrDripQg7JWE7KO8IOyXrOydvO2VmOupsCDtnZnqs7wg64iI7J2EIO2MjOuKlCDqsoPsnYQg7KKL7JWE7ZWp64uI64ukISBcIlxuICAgIHB1Z2ljb3JuX25hbWU6IFwi7ZG46riw7L2YXCJcbiAgICBwdWdpY29ybl9kZXNjcmlwdGlvbjogXCLtkbjquLDsvZjsnYAg7JWE7KO8IO2drOq3gO2VnCDsg53rrLzsnbTrqbAg66eI67KV7J2EIOyCrOyaqe2VoCDsiJgg7J6I7Iq164uI64ukIVwiXG4gICAgd29sZl9uYW1lOiBcIuuKkeuMgOqwnFwiXG4gICAgd29sZl9kZXNjcmlwdGlvbjogXCLripHrjIDqsJzripQg7IKs64OlLCDri6jssrTtlonrj5ksIOq3uOumrOqzoCDsiKjrsJTqvK3sp4gg6rKM7J6E7JeQIO2DgeyblO2VqeuLiOuLpCEgXCJcbiAgICBiYWxsX25hbWU6IFwi67mo6rCE7IOJIOyCkOqxsSDqsbDrpqzripQg6rO1XCJcbiAgICBiYWxsX2Rlc2NyaXB0aW9uOiBcImJhbGwuc3F1ZWFrKClcIlxuICAgIGNvbGxlY3RfcGV0czogXCLsmIHsm4XsnYQg7JyE7ZWcIOyVoOyZhCDrj5nrrLzsnYQg66qo7Jy87Iut7Iuc7JqUIVwiXG4gICAgZWFjaF9wZXQ6IFwi7JWg7JmEIOuPmeusvOuniOuLpCDrj4XtirntlZwg64+E7Jqw66+4IOuKpeugpeydtCDsnojsirXri4jri6QhXCJcbiAgICB1cGdyYWRlX3RvX3ByZW1pdW06IFwie3vqtazrj4XsnpB9fSDslaDsmYQg64+Z66y87J2EIOykgOu5hO2VmOyLreyLnOyalC5cIlxuICAgIHBsYXlfc2Vjb25kX2tpdGhtYXplOiBcIiB7e+uRkCDrsojsp7hfa2l0aG1hemV9feulvCDsi6TtlontlZjsl6wgV29sZiBQdXDsnZgg7J6g6riI7J2EIO2VtOygnO2VmOyLreyLnOyalCFcIlxuICAgIHRoZV9zZWNvbmRfa2l0aG1hemU6IFwi65GQIOuyiOynuCBLaXRobWF6ZVwiXG4gICAga2VlcF9wbGF5aW5nOiBcIuyyqyDrsojsp7gg7JWg7JmEIOuPmeusvOydhCDqs4Tsho0g7LC+7Jy87IS47JqUIVwiXG4gICAgY29taW5nX3Nvb246IFwi7Luk67CNIOyRqFwiXG4gICAgcml0aWM6IFwi6rCV7LaU7JyEXCIgIyBSaXRpYyBBbm5vdW5jZW1lbnQgTW9kYWxcbiAgICByaXRpY19kZXNjcmlwdGlvbjogXCLstpTsnITrpbwg67Cc7IOd7Iuc7Lyc6528LiDsiJjsl4bsnbQg66eO7J2AIOyEuOyblCDrj5nslYgg7LyI67mI7YOA7ZSEIOu5me2VmOyXkCDqsIftmJTsp4Drp4wsIOuniOy5qOuCtCDsnpDsnKDroZwg7JuM7KGM64ukLiDqt7jrpqzqs6Ag6rCQ7Jil7Jil7JeQIOyeiOuKlCDqt7jripQg7Jik7Jqw6rGw65Ok7JeQ6rKMIOqwiCDspIDruYTqsIAg65CY7JeI64ukLiBcIlxuICAgIGljZV9ibG9jazogXCLslrzsnYwg642p7Ja066asXCJcbiAgICBpY2VfZGVzY3JpcHRpb246IFwi64K067aA7JeQIOqwh+2YgOyeiOuKlCDqsoMg6rCZ7Iq164uI64uk4oCmXCJcbiAgICBibGlua19uYW1lOiBcIuq5nOuwleyehFwiXG4gICAgYmxpbmtfZGVzY3JpcHRpb246IFwi65287J207Yq464qUIOyCrOudvOyngOqzoCDriIgg6rmc67mhIO2VoCDsgqzsnbTsl5Ag64uk7IucIOuCmO2DgOuCmCDqt7jrprzsnpDrp4wg64Ko7Iq164uI64ukLlwiXG4gICAgc2hhZG93U3RlcF9uYW1lOiBcIuq3uOumvOyekCDri6jqs4RcIlxuICAgIHNoYWRvd1N0ZXBfZGVzY3JpcHRpb246IFwi66eI7Iqk7YSwIOyVlOyCtOuylOydgCDqt7jrprzsnpAg7IKs7J2066W8IOqxuOyWtOuLpOuLiOuKlCDrspXsnYQg7JWM6rOgIOyeiOyKteuLiOuLpC5cIlxuICAgIHRvcm5hZG9fbmFtZTogXCLthqDrhKTsnbTrj4RcIlxuICAgIHRvcm5hZG9fZGVzY3JpcHRpb246IFwi7ZGc7KeA6rCAIOuCoCDrlYwg66as7IWLIOuyhO2KvOydtCDsnojripQg6rKD7J20IOyii+yKteuLiOuLpC4uXCJcbiAgICB3YWxsT2ZEYXJrbmVzc19uYW1lOiBcIuyVlO2dkeydmCDrsr1cIlxuICAgIHdhbGxPZkRhcmtuZXNzX2Rlc2NyaXB0aW9uOiBcIuuIiOq4uOydhCDtlLztlZjquLAg7JyE7ZW0IOq3uOumvOyekCDrsr0g65Kk7JeQIOyIqOyWtCDsnojsirXri4jri6QuXCJcblxuICBwcmVtaXVtX2ZlYXR1cmVzOlxuICAgIGdldF9wcmVtaXVtOiBcIuy9lOuTnCDsu7TrsYMg7ZSE66as66+47JeE7J2EIOuwm+ycvOyEuOyalFwiICMgRml0IGludG8gdGhlIGJhbm5lciBvbiB0aGUgL2ZlYXR1cmVzIHBhZ2VcbiAgICBtYXN0ZXJfY29kZXI6IFwi7Jik64qYIOq1rOuPhe2VmOyXrCDrp4jsiqTthLAg7L2U642U6rCAIOuQmOyEuOyalCFcIlxuICAgIHBheXBhbF9yZWRpcmVjdDogXCLqsIDsnoUg7KCI7LCo66W8IOuniOy5mOuptCBQYXlQYWzroZwg7J2064+Z7ZWp64uI64ukLi5cIlxuICAgIHN1YnNjcmliZV9ub3c6IFwi7KeA6riIIOq1rOuPhe2VmOyEuOyalFwiXG4gICAgaGVyb19ibHVyYl8xOiBcIuq1rOuPheyekCDsoITsmqkg7JiB7JuF7J2EIOyCrOyaqe2VmOyEuOyalCEgT2thciBTdG9tcGZvb3TsnZgg7Z6Y6rO8IOynhOq3gO2VnCBOYXJhaGTsnZgg7J6O7IKs6reAIOuYkOuKlCBOYWxmYXIgQ3J5cHRvcuydmCBcXFwi7IKs656R7Iqk65+s7Jq0XFxcIiDtlbTqs6jsnYQg7IaM7ZmY7ZWY7IS47JqULlwiXG4gICAgaGVyb19ibHVyYl8yOiBcIldhcmNyeSwgU3RvbXAg67CPIEh1cmwgRW5lbXnsmYAg6rCZ7J2AIOuGgOudvOyatCDrrLTsiKAg6riw7Iig7J2YIOyeoOq4iOydhCDtlbTsoJztlZjqsbDrgpgg7Iqk7YWU7Iqk7JmAIO2ZnOydhCDsgqzsmqntlZjsl6wg66CI7J247KCA66GcIOqyjOyehOydhCDtlZjqs6Ag7Lm87J2EIOuNmOyngOupsCDtlajsoJXsnYQg67mg7KC4IOuCmOqwgOyLreyLnOyYpCEg6rCV66Cl7ZWcIOy9lOuUqSDrp4jrspXsgqzroZzshJwg7JuQ7IucLCDrhKTtgazroZwg66ek7YuxIOuYkOuKlCDsl5jrpqzrqZjtg4gg66ek7KeB7J2YIOq4sOyIoOydhCDrsLDsmrDqs6Ag6rWs7ZiE7ZWY7Iut7Iuc7JikLlwiXG4gICAgaGVyb19jYXB0aW9uOiBcIuyLoOuCmOuKlCDsg4jroZzsmrQg7JiB7JuFIVwiXG4gICAgcGV0X2JsdXJiXzE6IFwi7JWg7JmE64+Z66y87J2AIOyCrOuekeyKpOuhnOyatCDrj5nrsJjsnpDqsIAg7JWE64uI66mwIOuPheywveyggeyduCDquLDriqXqs7wg7ZW06rKw7LGF7J2EIOygnOqzte2VqeuLiOuLpC4g7JWE6riwIOq3uOumrO2VgOydgCDqs7XspJHsnYQg7Ya17ZW0IOycoOuLm+ydhCDsmK7quLgg7IiYIOyeiOqzoCwg64qR64yA6rCc64qUIOyggeydmCDtmZTsgrTsnYQg7J6h7J2EIOyImCDsnojsnLzrqbAsIOy/oOqxsOuKlCDso7zrs4DsnZgg7Jik6rGw66W8IOyrk+yKteuLiOuLpC4g6re466as6rOgIOuvuOuvueydgCDsnpDsoIHsspjrn7wg64+Z7KCE7J2EIOuBjOyWtOuLueyLreuLiOuLpCFcIlxuICAgIHBldF9ibHVyYl8yOiBcIuuqqOuToCDtjLvsnYQg66qo7JWEIOyekOyLoOydmCDqs6DsnKAg64ql66Cl7J2EIOuwnOqyrO2VmOyEuOyalCFcIlxuICAgIHBldF9jYXB0aW9uOiBcIuyYgeybheqzvCDtlajqu5jtlaAg7Yy77J2EIOyeheyWke2VmOyEuOyalCFcIlxuICAgIGdhbWVfZGV2X2JsdXJiOiBcIuqyjOyehOydhCDrsLDsmrDqs6Ag7Lmc6rWs65Ok6rO8IOqzteycoO2VoCDsg4jroZzsmrQg66CI67Ko7J2EIOunjOuTnOyEuOyalCEg7JuQ7ZWY64qUIO2VreuqqeydhCDrsLDsuZjtlZjqs6AsIOq4sOuzuCDrhbzrpqwg67CPIOuPmeyekeyXkCDrjIDtlZwg7L2U65Oc66W8IOyekeyEse2VmOqzoCwg7Lmc6rWs65Ok7J20IOugiOuyqOydhCDriqXqsIAg7ZWgIOyImCDsnojripTsp4Ag7ZmV7J247ZWY7IS47JqUISBcIlxuICAgIGdhbWVfZGV2X2NhcHRpb246IFwi7Lmc6rWs7JeQ6rKMIOuPhOyghO2VoCDrgpjrp4zsnZgg6rKM7J6E7J2EIOunjOuTnOyEuOyalCEgXCJcbiAgICBldmVyeXRoaW5nX2luX3ByZW1pdW06IFwi7L2U65Oc7Lu067GDIO2UhOumrOuvuOyXhOunjOydmCDtmJztg506IFwiXG4gICAgbGlzdF9nZW1zOiBcIuyepeu5hCwg7Yy7IOuwjyDsmIHsm4XsnYQg6rWs66ek7ZWY64qUIOuztOuEiOyKpCDsoKwuXCJcbiAgICBsaXN0X2xldmVsczogXCLrjZTsmrEg66eO7J2AIOugiOuyqFwiXG4gICAgbGlzdF9oZXJvZXM6IFwi66CI7J247KCA64KYIOuniOuyleyCrOulvCDtj6ztlajtlZwg66eO7J2AIOyYgeybhSDsgqzsmqkgXCJcbiAgICBsaXN0X2dhbWVfZGV2OiBcIuy5nOq1rOuTpOqzvCDqsozsnoQg7KCc7J6RIOuwjyDqs7XsnKBcIlxuICAgIGxpc3Rfd2ViX2RldjogXCLsm7kg7IKs7J207Yq4IOuwjyDrjIDtmZTtmJUg7JWxIOygnOyekVwiXG4gICAgbGlzdF9pdGVtczogXCLtjLvqs7wg6rCZ7J2AIO2UhOumrOuvuOyWuCDsoITsmqkg7JWE7J207YWcXCJcbiAgICBsaXN0X3N1cHBvcnQ6IFwi7Ja066Ck7Jq0IOy9lOuTnOulvCDrlJTrsoTqt7jtlZjripTrjbAg64+E7JuA7J20IOuQmOuKlCDtlITrpqzrr7jsl4Qg7KeA7JuQLlwiXG4gICAgbGlzdF9jbGFuczogXCLsuZzqtazrpbwg7LSI64yA7ZWY6rOgIOq3uOujuSDrpqzrjZQg67O065Oc7JeQ7IScIOqyveyfge2VmOuKlCDqsJzsnbgg7YG0656cIOunjOuTpOq4sC5cIlxuXG4gIGNob29zZV9oZXJvOlxuICAgIGNob29zZV9oZXJvOiBcIuyYgeybheydhCDshKDtg53tlZjshLjsmpRcIlxuICAgIHByb2dyYW1taW5nX2xhbmd1YWdlOiBcIu2UhOuhnOq3uOuemOuwjSDslrjslrRcIlxuICAgIHByb2dyYW1taW5nX2xhbmd1YWdlX2Rlc2NyaXB0aW9uOiBcIuyWtOuWpCDtlITroZzqt7jrnpjrsI0g7Ja47Ja066W8IOyCrOyaqe2VmOyLpOqxtOqwgOyalD9cIlxuICAgIGRlZmF1bHQ6IFwi6riw67O4XCJcbiAgICBleHBlcmltZW50YWw6IFwi6rOg6riJXCJcbiAgICBweXRob25fYmx1cmI6IFwi6rCE64uo7ZWY7KeA66eMIOqwleugpe2VqeuLiOuLpC5cIlxuICAgIGphdmFzY3JpcHRfYmx1cmI6IFwi7Ju57J2EIOychO2VnCDslrjslrQuXCJcbiAgICBjb2ZmZWVzY3JpcHRfYmx1cmI6IFwi7Zal7IOB65CcIOyekOuwlOyKpO2BrOumve2KuCDrrLjrspUuXCJcbiAgICBsdWFfYmx1cmI6IFwi6rKM7J6EIOyKpO2BrOumve2MhSDslrjslrRcIlxuIyAgICBqYXZhX2JsdXJiOiBcIihTdWJzY3JpYmVyIE9ubHkpIEFuZHJvaWQgYW5kIGVudGVycHJpc2UuXCJcbiAgICBzdGF0dXM6IFwi7IOB7YOcXCJcbiAgICB3ZWFwb25zOiBcIuustOq4sFwiXG4gICAgd2VhcG9uc193YXJyaW9yOiBcIuqygCAtIOynp+ydgCDqsbDrpqwsIOuniOuylSDrtojqsIBcIlxuICAgIHdlYXBvbnNfcmFuZ2VyOiBcIu2ZlOyCtCwg7LSdIC0g6ri0IOqxsOumrCwg66eI67KVIOu2iOqwgFwiXG4gICAgd2VhcG9uc193aXphcmQ6IFwi66eI67KV67SJLCDsp4DtjKHsnbQgLSDquLQg6rGw66asLCDrp4jrspUg6rCA64qlXCJcbiAgICBhdHRhY2s6IFwi6rO16rKp66ClXCIgIyBDYW4gYWxzbyB0cmFuc2xhdGUgYXMgXCJBdHRhY2tcIlxuICAgIGhlYWx0aDogXCLssrTroKVcIlxuICAgIHNwZWVkOiBcIuyGjeuPhFwiXG4gICAgcmVnZW5lcmF0aW9uOiBcIuumrOygoFwiXG4gICAgcmFuZ2U6IFwi6rGw66asXCIgIyBBcyBpbiBcImF0dGFjayBvciB2aXN1YWwgcmFuZ2VcIlxuICAgIGJsb2NrczogXCLruJTrn61cIiAjIEFzIGluIFwidGhpcyBzaGllbGQgYmxvY2tzIHRoaXMgbXVjaCBkYW1hZ2VcIlxuICAgIGJhY2tzdGFiOiBcIuuwseyKpO2DrVwiICMgQXMgaW4gXCJ0aGlzIGRhZ2dlciBkb2VzIHRoaXMgbXVjaCBiYWNrc3RhYiBkYW1hZ2VcIlxuICAgIHNraWxsczogXCLsiqTtgqxcIlxuICAgIGF0dGFja18xOiBcIu2DgOqyqVwiXG4gICAgYXR0YWNrXzI6IFwi7KCV66Cs65CoXCJcbiAgICBhdHRhY2tfMzogXCLrrLTquLAg7ZS87ZW0LlwiXG4gICAgaGVhbHRoXzE6IFwi7ZqN65OdXCJcbiAgICBoZWFsdGhfMjogXCLsoJXroKzrkKhcIlxuICAgIGhlYWx0aF8zOiBcIuqwkeyYtyDssrTroKUuXCJcbiAgICBzcGVlZF8xOiBcIuyXkCDsnbTrj5lcIlxuICAgIHNwZWVkXzI6IFwi7LSI64u5IOuvuO2EsC5cIlxuICAgIGF2YWlsYWJsZV9mb3JfcHVyY2hhc2U6IFwi6rWs66ekIOqwgOuKpVwiICMgU2hvd3MgdXAgd2hlbiB5b3UgaGF2ZSB1bmxvY2tlZCwgYnV0IG5vdCBwdXJjaGFzZWQsIGEgaGVybyBpbiB0aGUgaGVybyBzdG9yZVxuICAgIGxldmVsX3RvX3VubG9jazogXCLroIjrsqgg7ZW06riIOlwiICMgTGFiZWwgZm9yIHdoaWNoIGxldmVsIHlvdSBoYXZlIHRvIGJlYXQgdG8gdW5sb2NrIGEgcGFydGljdWxhciBoZXJvIChjbGljayBhIGxvY2tlZCBoZXJvIGluIHRoZSBzdG9yZSB0byBzZWUpXG4gICAgcmVzdHJpY3RlZF90b19jZXJ0YWluX2hlcm9lczogXCLtirnsoJUg7JiB7JuF66eM7J20IOydtCDroIjrsqjsnYQg7ZSM66CI7J207ZWgIOyImCDsnojsirXri4jri6QuXCJcblxuICBza2lsbF9kb2NzOlxuIyAgICBmdW5jdGlvbjogXCJmdW5jdGlvblwiICMgc2tpbGwgdHlwZXNcbiAgICBtZXRob2Q6IFwi66mU7IaM65OcXCJcbiMgICAgc25pcHBldDogXCJzbmlwcGV0XCJcbiAgICBudW1iZXI6IFwi7Iir7J6QXCJcbiAgICBhcnJheTogXCLrsLDsl7RcIlxuICAgIG9iamVjdDogXCLqsJ3ssrRcIlxuICAgIHN0cmluZzogXCLrrLjsnpDsl7RcIlxuICAgIHdyaXRhYmxlOiBcIuyTsOq4sFwiICMgSG92ZXIgb3ZlciBcImF0dGFja1wiIGluIFlvdXIgU2tpbGxzIHdoaWxlIHBsYXlpbmcgYSBsZXZlbCB0byBzZWUgbW9zdCBvZiB0aGlzXG4gICAgcmVhZF9vbmx5OiBcIuumrOuTnC3smKjrpqxcIlxuICAgIGFjdGlvbjogXCLtlonrj5lcIlxuICAgIHNwZWxsOiBcIuuniOuylVwiXG4gICAgYWN0aW9uX25hbWU6IFwi7J2066aEXCJcbiAgICBhY3Rpb25fY29vbGRvd246IFwi67Cb64qUIOyDge2DnFwiXG4gICAgYWN0aW9uX3NwZWNpZmljX2Nvb2xkb3duOiBcIuy/qOuLpOyatFwiXG4gICAgYWN0aW9uX2RhbWFnZTogXCLrjbDrr7jsp4BcIlxuICAgIGFjdGlvbl9yYW5nZTogXCLsgqzqsbDrpqxcIlxuICAgIGFjdGlvbl9yYWRpdXM6IFwi67CY7KeA66aEXCJcbiAgICBhY3Rpb25fZHVyYXRpb246IFwi7KeA7IaNXCJcbiAgICBleGFtcGxlOiBcIuyYiOygnFwiXG4gICAgZXg6IFwi7JiI7IucXCIgIyBBYmJyZXZpYXRpb24gb2YgXCJleGFtcGxlXCJcbiAgICBjdXJyZW50X3ZhbHVlOiBcIu2YhOyerCDqsJJcIlxuICAgIGRlZmF1bHRfdmFsdWU6IFwi6riw67O4IOqwklwiXG4gICAgcGFyYW1ldGVyczogXCLrp6TqsJwg67OA7IiYXCJcbiMgICAgcmVxdWlyZWRfcGFyYW1ldGVyczogXCJSZXF1aXJlZCBQYXJhbWV0ZXJzXCJcbiMgICAgb3B0aW9uYWxfcGFyYW1ldGVyczogXCJPcHRpb25hbCBQYXJhbWV0ZXJzXCJcbiAgICByZXR1cm5zOiBcIuuSpOuhnOqwgOq4sFwiXG4gICAgZ3JhbnRlZF9ieTogXCLrtoDsl6xcIlxuXG4gIHNhdmVfbG9hZDpcbiAgICBncmFudWxhcml0eV9zYXZlZF9nYW1lczogXCLsoIDsnqXrkKhcIlxuICAgIGdyYW51bGFyaXR5X2NoYW5nZV9oaXN0b3J5OiBcIuq4sOuhnVwiXG5cbiAgb3B0aW9uczpcbiAgICBnZW5lcmFsX29wdGlvbnM6IFwi7J2867CYIOyYteyFmFwiICMgQ2hlY2sgb3V0IHRoZSBPcHRpb25zIHRhYiBpbiB0aGUgR2FtZSBNZW51IHdoaWxlIHBsYXlpbmcgYSBsZXZlbFxuICAgIHZvbHVtZV9sYWJlbDogXCLrs7zrpahcIlxuICAgIG11c2ljX2xhYmVsOiBcIuydjOyVhVwiXG4gICAgbXVzaWNfZGVzY3JpcHRpb246IFwi67Cw6rK97J2M7JWFIE9OL09GRlwiXG4gICAgZWRpdG9yX2NvbmZpZ190aXRsZTogXCLsl5DrlJTthLAg7ISk7KCVXCJcbiAgICBlZGl0b3JfY29uZmlnX2xpdmVjb21wbGV0aW9uX2xhYmVsOiBcIuyekOuPmeyZhOyEsSDtmZzshLHtmZRcIlxuICAgIGVkaXRvcl9jb25maWdfbGl2ZWNvbXBsZXRpb25fZGVzY3JpcHRpb246IFwi7J6F66Cl7ZWY64qUIOuPmeyViCDsnpDrj5nsmYTshLEg6riw64ql7J2EIOyCrOyaqe2VqeuLiOuLpC5cIlxuICAgIGVkaXRvcl9jb25maWdfaW52aXNpYmxlc19sYWJlbDogXCLtiKzrqoUg7ISk7KCVXCJcbiAgICBlZGl0b3JfY29uZmlnX2ludmlzaWJsZXNfZGVzY3JpcHRpb246IFwi7Iqk7Y6Y7J207IqkLCDtg60g7ISk7KCVXCJcbiAgICBlZGl0b3JfY29uZmlnX2luZGVudGd1aWRlc19sYWJlbDogXCLrk6Tsl6zsk7DquLAg6rCA7J2065OcIOuztOq4sFwiXG4gICAgZWRpdG9yX2NvbmZpZ19pbmRlbnRndWlkZXNfZGVzY3JpcHRpb246IFwi65Ok7Jes7JOw6riwIOuztOyhsOyaqSDshLjroZzspIQg7ZGc7Iuc7ZWY6riwLlwiXG4gICAgZWRpdG9yX2NvbmZpZ19iZWhhdmlvcnNfbGFiZWw6IFwi7J6Q64+ZIOq4sOuKpVwiXG4gICAgZWRpdG9yX2NvbmZpZ19iZWhhdmlvcnNfZGVzY3JpcHRpb246IFwi6rSE7Zi4LCDsnbjsmqnrtoDtmLgsIOuUsOyYtO2RnCDsnpDrj5kg7JmE7ISxLlwiXG5cbiAgYWJvdXQ6XG4jICAgIHRpdGxlOiBcIkFib3V0IENvZGVDb21iYXQgLSBFbmdhZ2luZyBTdHVkZW50cywgRW1wb3dlcmluZyBUZWFjaGVycywgSW5zcGlyaW5nIENyZWF0aW9uXCJcbiMgICAgbWV0YV9kZXNjcmlwdGlvbjogXCJPdXIgbWlzc2lvbiBpcyB0byBsZXZlbCBjb21wdXRlciBzY2llbmNlIHRocm91Z2ggZ2FtZS1iYXNlZCBsZWFybmluZyBhbmQgbWFrZSBjb2RpbmcgYWNjZXNzaWJsZSB0byBldmVyeSBsZWFybmVyLiBXZSBiZWxpZXZlIHByb2dyYW1taW5nIGlzIG1hZ2ljIGFuZCB3YW50IGxlYXJuZXJzIHRvIGJlIGVtcG93ZXJlZCB0byB0byBjcmVhdGUgdGhpbmdzIGZyb20gcHVyZSBpbWFnaW5hdGlvbi5cIlxuIyAgICBsZWFybl9tb3JlOiBcIkxlYXJuIE1vcmVcIlxuICAgIG1haW5fdGl0bGU6IFwi7ZSE66Gc6re4656Y67CN7J2EIOuwsOyasOqzoCDsi7bri6TrqbQg66eO7J2AIOy9lOuTnOulvCDsnpHshLHtlbQg67O07JWE7JW8IO2VqeuLiOuLpC5cIlxuICAgIG1haW5fZGVzY3JpcHRpb246IFwiQ29kZUNvbWJhdOyXkOyEnCDsmrDrpqzsnZgg7J6E66y064qUIOuLueyLoOydtCDrr7jshozrpbwg7KeT6rOgIOyeiOuKlOyngCDtmZXsnbjtlZjripQg6rKD7J6F64uI64ukLlwiXG4gICAgbWlzc2lvbl9saW5rOiBcIuuvuOyFmFwiXG4gICAgdGVhbV9saW5rOiBcIu2MgFwiXG4gICAgc3RvcnlfbGluazogXCLsiqTthqDrpqxcIlxuIyAgICBwcmVzc19saW5rOiBcIlByZXNzXCJcbiMgICAgbWlzc2lvbl90aXRsZTogXCJPdXIgbWlzc2lvbjogbWFrZSBwcm9ncmFtbWluZyBhY2Nlc3NpYmxlIHRvIGV2ZXJ5IHN0dWRlbnQgb24gRWFydGguXCJcbiMgICAgbWlzc2lvbl9kZXNjcmlwdGlvbl8xOiBcIjxzdHJvbmc+UHJvZ3JhbW1pbmcgaXMgbWFnaWM8L3N0cm9uZz4uIEl0J3MgdGhlIGFiaWxpdHkgdG8gY3JlYXRlIHRoaW5ncyBmcm9tIHB1cmUgaW1hZ2luYXRpb24uIFdlIHN0YXJ0ZWQgQ29kZUNvbWJhdCB0byBnaXZlIGxlYXJuZXJzIHRoZSBmZWVsaW5nIG9mIHdpemFyZGx5IHBvd2VyIGF0IHRoZWlyIGZpbmdlcnRpcHMgYnkgdXNpbmcgPHN0cm9uZz50eXBlZCBjb2RlPC9zdHJvbmc+LlwiXG4jICAgIG1pc3Npb25fZGVzY3JpcHRpb25fMjogXCJBcyBpdCB0dXJucyBvdXQsIHRoYXQgZW5hYmxlcyB0aGVtIHRvIGxlYXJuIGZhc3RlciB0b28uIFdBWSBmYXN0ZXIuIEl0J3MgbGlrZSBoYXZpbmcgYSBjb252ZXJzYXRpb24gaW5zdGVhZCBvZiByZWFkaW5nIGEgbWFudWFsLiBXZSB3YW50IHRvIGJyaW5nIHRoYXQgY29udmVyc2F0aW9uIHRvIGV2ZXJ5IHNjaG9vbCBhbmQgdG8gPHN0cm9uZz5ldmVyeSBzdHVkZW50PC9zdHJvbmc+LCBiZWNhdXNlIGV2ZXJ5b25lIHNob3VsZCBoYXZlIHRoZSBjaGFuY2UgdG8gbGVhcm4gdGhlIG1hZ2ljIG9mIHByb2dyYW1taW5nLlwiXG4jICAgIHRlYW1fdGl0bGU6IFwiTWVldCB0aGUgQ29kZUNvbWJhdCB0ZWFtXCJcbiMgICAgdGVhbV92YWx1ZXM6IFwiV2UgdmFsdWUgb3BlbiBhbmQgcmVzcGVjdGZ1bCBkaWFsb2csIHdoZXJlIHRoZSBiZXN0IGlkZWEgd2lucy4gT3VyIGRlY2lzaW9ucyBhcmUgZ3JvdW5kZWQgaW4gY3VzdG9tZXIgcmVzZWFyY2ggYW5kIG91ciBwcm9jZXNzIGlzIGZvY3VzZWQgb24gZGVsaXZlcmluZyB0YW5naWJsZSByZXN1bHRzIGZvciB0aGVtLiBFdmVyeW9uZSBpcyBoYW5kcy1vbiwgZnJvbSBvdXIgQ0VPIHRvIG91ciBHaXRIdWIgY29udHJpYnV0b3JzLCBiZWNhdXNlIHdlIHZhbHVlIGdyb3d0aCBhbmQgbGVhcm5pbmcgaW4gb3VyIHRlYW0uXCJcbiAgICBuaWNrX3RpdGxlOiBcIu2UhOuhnOq3uOuemOuouFwiICMge2NoYW5nZX1cbiAgICBtYXR0X3RpdGxlOiBcIu2UhOuhnOq3uOuemOuouFwiICMge2NoYW5nZX1cbiAgICBjYXRfdGl0bGU6IFwi6rKM7J6EIOuUlOyekOydtOuEiFwiXG4gICAgc2NvdHRfdGl0bGU6IFwi7ZSE66Gc6re4656Y66i4XCIgIyB7Y2hhbmdlfVxuICAgIG1ha2FfdGl0bGU6IFwi6rOg6rCdIOyYue2YuOyekFwiXG4gICAgcm9iaW5fdGl0bGU6IFwiVVgg65SU7J6Q7J24ICYg7Jew6rWs7JuQXCIgIyB7Y2hhbmdlfVxuIyAgICBub2xhbl90aXRsZTogXCJTYWxlcyBNYW5hZ2VyXCJcbiMgICAgZGF2aWRfdGl0bGU6IFwiTWFya2V0aW5nIExlYWRcIlxuICAgIHRpdGxlc19jc206IFwi6rOg6rCdIOyEseqztSDqtIDrpqzsnpBcIlxuIyAgICB0aXRsZXNfdGVycml0b3J5X21hbmFnZXI6IFwiVGVycml0b3J5IE1hbmFnZXJcIlxuIyAgICBsYXdyZW5jZV90aXRsZTogXCJDdXN0b21lciBTdWNjZXNzIE1hbmFnZXJcIlxuIyAgICBzZWFuX3RpdGxlOiBcIlNlbmlvciBBY2NvdW50IEV4ZWN1dGl2ZVwiXG4jICAgIGxpel90aXRsZTogXCJTZW5pb3IgQWNjb3VudCBFeGVjdXRpdmVcIlxuIyAgICBqYW5lX3RpdGxlOiBcIkFjY291bnQgRXhlY3V0aXZlXCJcbiMgICAgc2hhbl90aXRsZTogXCJQYXJ0bmVyc2hpcCBEZXZlbG9wbWVudCBMZWFkLCBDaGluYVwiXG4jICAgIHJ1bl90aXRsZTogXCJIZWFkIG9mIE9wZXJhdGlvbnMsIENoaW5hXCJcbiMgICAgbGFuY2VfdGl0bGU6IFwiU29mdHdhcmUgRW5naW5lZXIgSW50ZXJuLCBDaGluYVwiXG4jICAgIG1hdGlhc190aXRsZTogXCJTZW5pb3IgU29mdHdhcmUgRW5naW5lZXJcIlxuIyAgICByeWFuX3RpdGxlOiBcIkN1c3RvbWVyIFN1cHBvcnQgU3BlY2lhbGlzdFwiXG4jICAgIG1heWFfdGl0bGU6IFwiQ3VycmljdWx1bSBEZXZlbG9wZXJcIlxuIyAgICBiaWxsX3RpdGxlOiBcIkdlbmVyYWwgTWFuYWdlciwgQ2hpbmFcIlxuIyAgICBzaGFzaGFfdGl0bGU6IFwiUHJvZHVjdCBhbmQgVmlzdWFsIERlc2lnbmVyXCJcbiMgICAgZGFuaWVsYV90aXRsZTogXCJNYXJrZXRpbmcgTWFuYWdlclwiXG4jICAgIGNoZWxzZWFfdGl0bGU6IFwiT3BlcmF0aW9ucyBNYW5hZ2VyXCJcbiMgICAgY2xhaXJlX3RpdGxlOiBcIkV4ZWN1dGl2ZSBBc3Npc3RhbnRcIlxuIyAgICBib2JieV90aXRsZTogXCJTZW5pb3IgR2FtZSBEZXNpZ25lclwiXG4jICAgIGJyaWFuX3RpdGxlOiBcIkxlYWQgR2FtZSBEZXNpZ25lclwiXG4jICAgIGFuZHJld190aXRsZTogXCJTb2Z0d2FyZSBFbmdpbmVlclwiXG4jICAgIHN0ZXBoYW5pZV90aXRsZTogXCJDdXN0b21lciBTdXBwb3J0IFNwZWNpYWxpc3RcIlxuIyAgICByb2JfdGl0bGU6IFwiU2FsZXMgRGV2ZWxvcG1lbnQgUmVwcmVzZW50YXRpdmVcIlxuIyAgICBzaHViaGFuZ2lfdGl0bGU6IFwiU29mdHdhcmUgRW5naW5lZXJcIlxuIyAgICBicnl1a2hfdGl0bGU6IFwiR2FtZXBsYXkgRGV2ZWxvcGVyXCJcbiAgICByZXRyb3N0eWxlX3RpdGxlOiBcIuydvOufrOyKpO2KuOugiOydtOyFmFwiXG4gICAgcmV0cm9zdHlsZV9ibHVyYjogXCLroIjtirjroZzsiqTtg4Dsnbwg6rKM7J6EXCJcbiMgICAgYnJ5dWtoX2JsdXJiOiBcIkNvbnN0cnVjdHMgcHV6emxlc1wiXG4jICAgIGNvbW11bml0eV90aXRsZTogXCIuLi5hbmQgb3VyIG9wZW4tc291cmNlIGNvbW11bml0eVwiXG4jICAgIGNvbW11bml0eV9zdWJ0aXRsZTogXCJPdmVyIDUwMCBjb250cmlidXRvcnMgaGF2ZSBoZWxwZWQgYnVpbGQgQ29kZUNvbWJhdCwgd2l0aCBtb3JlIGpvaW5pbmcgZXZlcnkgd2VlayFcIlxuIyAgICBjb21tdW5pdHlfZGVzY3JpcHRpb25fMzogXCJDb2RlQ29tYmF0IGlzIGFcIlxuIyAgICBjb21tdW5pdHlfZGVzY3JpcHRpb25fbGlua18yOiBcImNvbW11bml0eSBwcm9qZWN0XCJcbiMgICAgY29tbXVuaXR5X2Rlc2NyaXB0aW9uXzE6IFwid2l0aCBodW5kcmVkcyBvZiBwbGF5ZXJzIHZvbHVudGVlcmluZyB0byBjcmVhdGUgbGV2ZWxzLCBjb250cmlidXRlIHRvIG91ciBjb2RlIHRvIGFkZCBmZWF0dXJlcywgZml4IGJ1Z3MsIHBsYXl0ZXN0LCBhbmQgZXZlbiB0cmFuc2xhdGUgdGhlIGdhbWUgaW50byA1MCBsYW5ndWFnZXMgc28gZmFyLiBFbXBsb3llZXMsIGNvbnRyaWJ1dG9ycyBhbmQgdGhlIHNpdGUgZ2FpbiBieSBzaGFyaW5nIGlkZWFzIGFuZCBwb29saW5nIGVmZm9ydCwgYXMgZG9lcyB0aGUgb3BlbiBzb3VyY2UgY29tbXVuaXR5IGluIGdlbmVyYWwuIFRoZSBzaXRlIGlzIGJ1aWx0IG9uIG51bWVyb3VzIG9wZW4gc291cmNlIHByb2plY3RzLCBhbmQgd2UgYXJlIG9wZW4gc291cmNlZCB0byBnaXZlIGJhY2sgdG8gdGhlIGNvbW11bml0eSBhbmQgcHJvdmlkZSBjb2RlLWN1cmlvdXMgcGxheWVycyBhIGZhbWlsaWFyIHByb2plY3QgdG8gZXhwbG9yZSBhbmQgZXhwZXJpbWVudCB3aXRoLiBBbnlvbmUgY2FuIGpvaW4gdGhlIENvZGVDb21iYXQgY29tbXVuaXR5ISBDaGVjayBvdXQgb3VyXCJcbiMgICAgY29tbXVuaXR5X2Rlc2NyaXB0aW9uX2xpbms6IFwiY29udHJpYnV0ZSBwYWdlXCJcbiMgICAgY29tbXVuaXR5X2Rlc2NyaXB0aW9uXzI6IFwiZm9yIG1vcmUgaW5mby5cIlxuIyAgICBudW1iZXJfY29udHJpYnV0b3JzOiBcIk92ZXIgNDUwIGNvbnRyaWJ1dG9ycyBoYXZlIGxlbnQgdGhlaXIgc3VwcG9ydCBhbmQgdGltZSB0byB0aGlzIHByb2plY3QuXCJcbiMgICAgc3RvcnlfdGl0bGU6IFwiT3VyIHN0b3J5IHNvIGZhclwiXG4jICAgIHN0b3J5X3N1YnRpdGxlOiBcIlNpbmNlIDIwMTMsIENvZGVDb21iYXQgaGFzIGdyb3duIGZyb20gYSBtZXJlIHNldCBvZiBza2V0Y2hlcyB0byBhIGxpdmluZywgdGhyaXZpbmcgZ2FtZS5cIlxuIyAgICBzdG9yeV9zdGF0aXN0aWNfMWE6IFwiNSwwMDAsMDAwK1wiXG4jICAgIHN0b3J5X3N0YXRpc3RpY18xYjogXCJ0b3RhbCBwbGF5ZXJzXCJcbiMgICAgc3Rvcnlfc3RhdGlzdGljXzFjOiBcImhhdmUgc3RhcnRlZCB0aGVpciBwcm9ncmFtbWluZyBqb3VybmV5IHRocm91Z2ggQ29kZUNvbWJhdFwiXG4jICAgIHN0b3J5X3N0YXRpc3RpY18yYTogXCJXZeKAmXZlIGJlZW4gdHJhbnNsYXRlZCBpbnRvIG92ZXIgNTAgbGFuZ3VhZ2VzIOKAlCBvdXIgcGxheWVycyBoYWlsIGZyb21cIlxuIyAgICBzdG9yeV9zdGF0aXN0aWNfMmI6IFwiMTkwKyBjb3VudHJpZXNcIlxuIyAgICBzdG9yeV9zdGF0aXN0aWNfM2E6IFwiVG9nZXRoZXIsIHRoZXkgaGF2ZSB3cml0dGVuXCJcbiMgICAgc3Rvcnlfc3RhdGlzdGljXzNiOiBcIjEgYmlsbGlvbiBsaW5lcyBvZiBjb2RlIGFuZCBjb3VudGluZ1wiXG4jICAgIHN0b3J5X3N0YXRpc3RpY18zYzogXCJhY3Jvc3MgbWFueSBkaWZmZXJlbnQgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzXCJcbiMgICAgc3RvcnlfbG9uZ193YXlfMTogXCJUaG91Z2ggd2UndmUgY29tZSBhIGxvbmcgd2F5Li4uXCJcbiMgICAgc3Rvcnlfc2tldGNoX2NhcHRpb246IFwiTmljaydzIHZlcnkgZmlyc3Qgc2tldGNoIGRlcGljdGluZyBhIHByb2dyYW1taW5nIGdhbWUgaW4gYWN0aW9uLlwiXG4jICAgIHN0b3J5X2xvbmdfd2F5XzI6IFwid2Ugc3RpbGwgaGF2ZSBtdWNoIHRvIGRvIGJlZm9yZSB3ZSBjb21wbGV0ZSBvdXIgcXVlc3QsIHNvLi4uXCJcbiMgICAgam9ic190aXRsZTogXCJDb21lIHdvcmsgd2l0aCB1cyBhbmQgaGVscCB3cml0ZSBDb2RlQ29tYmF0IGhpc3RvcnkhXCJcbiMgICAgam9ic19zdWJ0aXRsZTogXCJEb24ndCBzZWUgYSBnb29kIGZpdCBidXQgaW50ZXJlc3RlZCBpbiBrZWVwaW5nIGluIHRvdWNoPyBTZWUgb3VyIFxcXCJDcmVhdGUgWW91ciBPd25cXFwiIGxpc3RpbmcuXCJcbiMgICAgam9ic19iZW5lZml0czogXCJFbXBsb3llZSBCZW5lZml0c1wiXG4jICAgIGpvYnNfYmVuZWZpdF80OiBcIlVubGltaXRlZCB2YWNhdGlvblwiXG4jICAgIGpvYnNfYmVuZWZpdF81OiBcIlByb2Zlc3Npb25hbCBkZXZlbG9wbWVudCBhbmQgY29udGludWluZyBlZHVjYXRpb24gc3VwcG9ydCDigJMgZnJlZSBib29rcyBhbmQgZ2FtZXMhXCJcbiMgICAgam9ic19iZW5lZml0XzY6IFwiTWVkaWNhbCAoZ29sZCksIGRlbnRhbCwgdmlzaW9uLCBjb21tdXRlciwgNDAxS1wiXG4jICAgIGpvYnNfYmVuZWZpdF83OiBcIlNpdC1zdGFuZCBkZXNrcyBmb3IgYWxsXCJcbiMgICAgam9ic19iZW5lZml0Xzk6IFwiMTAteWVhciBvcHRpb24gZXhlcmNpc2Ugd2luZG93XCJcbiMgICAgam9ic19iZW5lZml0XzEwOiBcIk1hdGVybml0eSBsZWF2ZTogMTIgd2Vla3MgcGFpZCwgbmV4dCA2IEAgNTUlIHNhbGFyeVwiXG4jICAgIGpvYnNfYmVuZWZpdF8xMTogXCJQYXRlcm5pdHkgbGVhdmU6IDEyIHdlZWtzIHBhaWRcIlxuIyAgICBqb2JzX2N1c3RvbV90aXRsZTogXCJDcmVhdGUgWW91ciBPd25cIlxuIyAgICBqb2JzX2N1c3RvbV9kZXNjcmlwdGlvbjogXCJBcmUgeW91IHBhc3Npb25hdGUgYWJvdXQgQ29kZUNvbWJhdCBidXQgZG9uJ3Qgc2VlIGEgam9iIGxpc3RlZCB0aGF0IG1hdGNoZXMgeW91ciBxdWFsaWZpY2F0aW9ucz8gV3JpdGUgdXMgYW5kIHNob3cgaG93IHlvdSB0aGluayB5b3UgY2FuIGNvbnRyaWJ1dGUgdG8gb3VyIHRlYW0uIFdlJ2QgbG92ZSB0byBoZWFyIGZyb20geW91IVwiXG4jICAgIGpvYnNfY3VzdG9tX2NvbnRhY3RfMTogXCJTZW5kIHVzIGEgbm90ZSBhdFwiXG4jICAgIGpvYnNfY3VzdG9tX2NvbnRhY3RfMjogXCJpbnRyb2R1Y2luZyB5b3Vyc2VsZiBhbmQgd2UgbWlnaHQgZ2V0IGluIHRvdWNoIGluIHRoZSBmdXR1cmUhXCJcbiMgICAgY29udGFjdF90aXRsZTogXCJQcmVzcyAmIENvbnRhY3RcIlxuIyAgICBjb250YWN0X3N1YnRpdGxlOiBcIk5lZWQgbW9yZSBpbmZvcm1hdGlvbj8gR2V0IGluIHRvdWNoIHdpdGggdXMgYXRcIlxuIyAgICBzY3JlZW5zaG90c190aXRsZTogXCJHYW1lIFNjcmVlbnNob3RzXCJcbiMgICAgc2NyZWVuc2hvdHNfaGludDogXCIoY2xpY2sgdG8gdmlldyBmdWxsIHNpemUpXCJcbiMgICAgZG93bmxvYWRzX3RpdGxlOiBcIkRvd25sb2FkIEFzc2V0cyAmIEluZm9ybWF0aW9uXCJcbiMgICAgYWJvdXRfY29kZWNvbWJhdDogXCJBYm91dCBDb2RlQ29tYmF0XCJcbiMgICAgbG9nbzogXCJMb2dvXCJcbiMgICAgc2NyZWVuc2hvdHM6IFwiU2NyZWVuc2hvdHNcIlxuIyAgICBjaGFyYWN0ZXJfYXJ0OiBcIkNoYXJhY3RlciBBcnRcIlxuIyAgICBkb3dubG9hZF9hbGw6IFwiRG93bmxvYWQgQWxsXCJcbiMgICAgcHJldmlvdXM6IFwiUHJldmlvdXNcIlxuIyAgICBsb2NhdGlvbl90aXRsZTogXCJXZSdyZSBsb2NhdGVkIGluIGRvd250b3duIFNGOlwiXG5cbiMgIHRlYWNoZXJzOlxuIyAgICBsaWNlbnNlc19uZWVkZWQ6IFwiTGljZW5zZXMgbmVlZGVkXCJcblxuIyAgc3BlY2lhbF9vZmZlcjpcbiMgICAgc3BlY2lhbF9vZmZlcjogXCJTcGVjaWFsIE9mZmVyXCJcbiMgICAgcHJvamVjdF9iYXNlZF90aXRsZTogXCJQcm9qZWN0LUJhc2VkIENvdXJzZXNcIlxuIyAgICBwcm9qZWN0X2Jhc2VkX2Rlc2NyaXB0aW9uOiBcIldlYiBhbmQgR2FtZSBEZXZlbG9wbWVudCBjb3Vyc2VzIGZlYXR1cmUgc2hhcmVhYmxlIGZpbmFsIHByb2plY3RzLlwiXG4jICAgIGdyZWF0X2Zvcl9jbHVic190aXRsZTogXCJHcmVhdCBmb3IgY2x1YnMgYW5kIGVsZWN0aXZlc1wiXG4jICAgIGdyZWF0X2Zvcl9jbHVic19kZXNjcmlwdGlvbjogXCJUZWFjaGVycyBjYW4gcHVyY2hhc2UgdXAgdG8gX19tYXhRdWFudGl0eVN0YXJ0ZXJMaWNlbnNlc19fIFN0YXJ0ZXIgTGljZW5zZXMuXCJcbiMgICAgbG93X3ByaWNlX3RpdGxlOiBcIkp1c3QgX19zdGFydGVyTGljZW5zZVByaWNlX18gcGVyIHN0dWRlbnRcIlxuIyAgICBsb3dfcHJpY2VfZGVzY3JpcHRpb246IFwiU3RhcnRlciBMaWNlbnNlcyBhcmUgYWN0aXZlIGZvciBfX3N0YXJ0ZXJMaWNlbnNlTGVuZ3RoTW9udGhzX18gbW9udGhzIGZyb20gcHVyY2hhc2UuXCJcbiMgICAgdGhyZWVfZ3JlYXRfY291cnNlczogXCJUaHJlZSBncmVhdCBjb3Vyc2VzIGluY2x1ZGVkIGluIHRoZSBTdGFydGVyIExpY2Vuc2U6XCJcbiMgICAgbGljZW5zZV9saW1pdF9kZXNjcmlwdGlvbjogXCJUZWFjaGVycyBjYW4gcHVyY2hhc2UgdXAgdG8gX19tYXhRdWFudGl0eVN0YXJ0ZXJMaWNlbnNlc19fIFN0YXJ0ZXIgTGljZW5zZXMuIFlvdSBoYXZlIGFscmVhZHkgcHVyY2hhc2VkIF9fcXVhbnRpdHlBbHJlYWR5UHVyY2hhc2VkX18uIElmIHlvdSBuZWVkIG1vcmUsIGNvbnRhY3QgX19zdXBwb3J0RW1haWxfXy4gU3RhcnRlciBMaWNlbnNlcyBhcmUgdmFsaWQgZm9yIF9fc3RhcnRlckxpY2Vuc2VMZW5ndGhNb250aHNfXyBtb250aHMuXCJcbiMgICAgc3R1ZGVudF9zdGFydGVyX2xpY2Vuc2U6IFwiU3R1ZGVudCBTdGFydGVyIExpY2Vuc2VcIlxuIyAgICBwdXJjaGFzZV9zdGFydGVyX2xpY2Vuc2VzOiBcIlB1cmNoYXNlIFN0YXJ0ZXIgTGljZW5zZXNcIlxuIyAgICBwdXJjaGFzZV9zdGFydGVyX2xpY2Vuc2VzX3RvX2dyYW50OiBcIlB1cmNoYXNlIFN0YXJ0ZXIgTGljZW5zZXMgdG8gZ3JhbnQgYWNjZXNzIHRvIF9fc3RhcnRlckxpY2Vuc2VDb3Vyc2VMaXN0X19cIlxuIyAgICBzdGFydGVyX2xpY2Vuc2VzX2Nhbl9iZV91c2VkOiBcIlN0YXJ0ZXIgTGljZW5zZXMgY2FuIGJlIHVzZWQgdG8gYXNzaWduIGFkZGl0aW9uYWwgY291cnNlcyBpbW1lZGlhdGVseSBhZnRlciBwdXJjaGFzZS5cIlxuIyAgICBwYXlfbm93OiBcIlBheSBOb3dcIlxuIyAgICB3ZV9hY2NlcHRfYWxsX21ham9yX2NyZWRpdF9jYXJkczogXCJXZSBhY2NlcHQgYWxsIG1ham9yIGNyZWRpdCBjYXJkcy5cIlxuIyAgICBjczJfZGVzY3JpcHRpb246IFwiYnVpbGRzIG9uIHRoZSBmb3VuZGF0aW9uIGZyb20gSW50cm9kdWN0aW9uIHRvIENvbXB1dGVyIFNjaWVuY2UsIGRpdmluZyBpbnRvIGlmLXN0YXRlbWVudHMsIGZ1bmN0aW9ucywgZXZlbnRzIGFuZCBtb3JlLlwiXG4jICAgIHdkMV9kZXNjcmlwdGlvbjogXCJpbnRyb2R1Y2VzIHRoZSBiYXNpY3Mgb2YgSFRNTCBhbmQgQ1NTIHdoaWxlIHRlYWNoaW5nIHNraWxscyBuZWVkZWQgZm9yIHN0dWRlbnRzIHRvIGJ1aWxkIHRoZWlyIGZpcnN0IHdlYnBhZ2UuXCJcbiMgICAgZ2QxX2Rlc2NyaXB0aW9uOiBcInVzZXMgc3ludGF4IHN0dWRlbnRzIGFyZSBhbHJlYWR5IGZhbWlsaWFyIHdpdGggdG8gc2hvdyB0aGVtIGhvdyB0byBidWlsZCBhbmQgc2hhcmUgdGhlaXIgb3duIHBsYXlhYmxlIGdhbWUgbGV2ZWxzLlwiXG4jICAgIHNlZV9hbl9leGFtcGxlX3Byb2plY3Q6IFwic2VlIGFuIGV4YW1wbGUgcHJvamVjdFwiXG4jICAgIGdldF9zdGFydGVkX3RvZGF5OiBcIkdldCBzdGFydGVkIHRvZGF5IVwiXG4jICAgIHdhbnRfYWxsX3RoZV9jb3Vyc2VzOiBcIldhbnQgYWxsIHRoZSBjb3Vyc2VzPyBSZXF1ZXN0IGluZm9ybWF0aW9uIG9uIG91ciBGdWxsIExpY2Vuc2VzLlwiXG4jICAgIGNvbXBhcmVfbGljZW5zZV90eXBlczogXCJDb21wYXJlIExpY2Vuc2UgVHlwZXM6XCJcbiMgICAgY3M6IFwiQ29tcHV0ZXIgU2NpZW5jZVwiXG4jICAgIHdkOiBcIldlYiBEZXZlbG9wbWVudFwiXG4jICAgIHdkMTogXCJXZWIgRGV2ZWxvcG1lbnQgMVwiXG4jICAgIGdkOiBcIkdhbWUgRGV2ZWxvcG1lbnRcIlxuIyAgICBnZDE6IFwiR2FtZSBEZXZlbG9wbWVudCAxXCJcbiMgICAgbWF4aW11bV9zdHVkZW50czogXCJNYXhpbXVtICMgb2YgU3R1ZGVudHNcIlxuIyAgICB1bmxpbWl0ZWQ6IFwiVW5saW1pdGVkXCJcbiMgICAgcHJpb3JpdHlfc3VwcG9ydDogXCJQcmlvcml0eSBzdXBwb3J0XCJcbiMgICAgeWVzOiBcIlllc1wiXG4jICAgIHByaWNlX3Blcl9zdHVkZW50OiBcIl9fcHJpY2VfXyBwZXIgc3R1ZGVudFwiXG4jICAgIHByaWNpbmc6IFwiUHJpY2luZ1wiXG4jICAgIGZyZWU6IFwiRnJlZVwiXG4jICAgIHB1cmNoYXNlOiBcIlB1cmNoYXNlXCJcbiMgICAgY291cnNlc19wcmVmaXg6IFwiQ291cnNlc1wiXG4jICAgIGNvdXJzZXNfc3VmZml4OiBcIlwiXG4jICAgIGNvdXJzZV9wcmVmaXg6IFwiQ291cnNlXCJcbiMgICAgY291cnNlX3N1ZmZpeDogXCJcIlxuXG4jICB0ZWFjaGVyc19xdW90ZTpcbiMgICAgc3VidGl0bGU6IFwiR2V0IHlvdXIgc3R1ZGVudHMgc3RhcnRlZCBpbiBsZXNzIHRoYW4gYW4gaG91ci4gWW91J2xsIGJlIGFibGUgdG8gPHN0cm9uZz5jcmVhdGUgYSBjbGFzcywgYWRkIHN0dWRlbnRzLCBhbmQgbW9uaXRvciB0aGVpciBwcm9ncmVzczwvc3Ryb25nPiBhcyB0aGV5IGxlYXJuIGNvbXB1dGVyIHNjaWVuY2UuXCJcbiMgICAgZW1haWxfZXhpc3RzOiBcIlVzZXIgZXhpc3RzIHdpdGggdGhpcyBlbWFpbC5cIlxuIyAgICBwaG9uZV9udW1iZXI6IFwiUGhvbmUgbnVtYmVyXCJcbiMgICAgcGhvbmVfbnVtYmVyX2hlbHA6IFwiV2hhdCdzIHRoZSBiZXN0IG51bWJlciB0byByZWFjaCB5b3U/XCJcbiMgICAgcHJpbWFyeV9yb2xlX2xhYmVsOiBcIllvdXIgUHJpbWFyeSBSb2xlXCJcbiMgICAgcm9sZV9kZWZhdWx0OiBcIlNlbGVjdCBSb2xlXCJcbiMgICAgcHJpbWFyeV9yb2xlX2RlZmF1bHQ6IFwiU2VsZWN0IFByaW1hcnkgUm9sZVwiXG4jICAgIHB1cmNoYXNlcl9yb2xlX2RlZmF1bHQ6IFwiU2VsZWN0IFB1cmNoYXNlciBSb2xlXCJcbiMgICAgdGVjaF9jb29yZGluYXRvcjogXCJUZWNobm9sb2d5IGNvb3JkaW5hdG9yXCJcbiMgICAgYWR2aXNvcjogXCJDdXJyaWN1bHVtIFNwZWNpYWxpc3QvQWR2aXNvclwiXG4jICAgIHByaW5jaXBhbDogXCJQcmluY2lwYWxcIlxuIyAgICBzdXBlcmludGVuZGVudDogXCJTdXBlcmludGVuZGVudFwiXG4jICAgIHBhcmVudDogXCJQYXJlbnRcIlxuIyAgICBwdXJjaGFzZXJfcm9sZV9sYWJlbDogXCJZb3VyIFB1cmNoYXNlciBSb2xlXCJcbiMgICAgaW5mbHVlbmNlX2Fkdm9jYXRlOiBcIkluZmx1ZW5jZS9BZHZvY2F0ZVwiXG4jICAgIGV2YWx1YXRlX3JlY29tbWVuZDogXCJFdmFsdWF0ZS9SZWNvbW1lbmRcIlxuIyAgICBhcHByb3ZlX2Z1bmRzOiBcIkFwcHJvdmUgRnVuZHNcIlxuIyAgICBub19wdXJjaGFzZXJfcm9sZTogXCJObyByb2xlIGluIHB1cmNoYXNlIGRlY2lzaW9uc1wiXG4jICAgIGRpc3RyaWN0X2xhYmVsOiBcIkRpc3RyaWN0XCJcbiMgICAgZGlzdHJpY3RfbmFtZTogXCJEaXN0cmljdCBOYW1lXCJcbiMgICAgZGlzdHJpY3RfbmE6IFwiRW50ZXIgTi9BIGlmIG5vdCBhcHBsaWNhYmxlXCJcbiMgICAgb3JnYW5pemF0aW9uX2xhYmVsOiBcIlNjaG9vbFwiXG4jICAgIHNjaG9vbF9uYW1lOiBcIlNjaG9vbCBOYW1lXCJcbiMgICAgY2l0eTogXCJDaXR5XCJcbiMgICAgc3RhdGU6IFwiU3RhdGVcIlxuIyAgICBjb3VudHJ5OiBcIkNvdW50cnlcIlxuIyAgICBudW1fc3R1ZGVudHNfaGVscDogXCJIb3cgbWFueSBzdHVkZW50cyB3aWxsIHVzZSBDb2RlQ29tYmF0P1wiXG4jICAgIG51bV9zdHVkZW50c19kZWZhdWx0OiBcIlNlbGVjdCBSYW5nZVwiXG4jICAgIGVkdWNhdGlvbl9sZXZlbF9sYWJlbDogXCJFZHVjYXRpb24gTGV2ZWwgb2YgU3R1ZGVudHNcIlxuIyAgICBlZHVjYXRpb25fbGV2ZWxfaGVscDogXCJDaG9vc2UgYXMgbWFueSBhcyBhcHBseS5cIlxuIyAgICBlbGVtZW50YXJ5X3NjaG9vbDogXCJFbGVtZW50YXJ5IFNjaG9vbFwiXG4jICAgIGhpZ2hfc2Nob29sOiBcIkhpZ2ggU2Nob29sXCJcbiMgICAgcGxlYXNlX2V4cGxhaW46IFwiKHBsZWFzZSBleHBsYWluKVwiXG4jICAgIG1pZGRsZV9zY2hvb2w6IFwiTWlkZGxlIFNjaG9vbFwiXG4jICAgIGNvbGxlZ2VfcGx1czogXCJDb2xsZWdlIG9yIGhpZ2hlclwiXG4jICAgIHJlZmVycmVyOiBcIkhvdyBkaWQgeW91IGhlYXIgYWJvdXQgdXM/XCJcbiMgICAgcmVmZXJyZXJfaGVscDogXCJGb3IgZXhhbXBsZTogZnJvbSBhbm90aGVyIHRlYWNoZXIsIGEgY29uZmVyZW5jZSwgeW91ciBzdHVkZW50cywgQ29kZS5vcmcsIGV0Yy5cIlxuIyAgICByZWZlcnJlcl9kZWZhdWx0OiBcIlNlbGVjdCBPbmVcIlxuIyAgICByZWZlcnJlcl9jb25mZXJlbmNlOiBcIkNvbmZlcmVuY2UgKGUuZy4gSVNURSlcIlxuIyAgICByZWZlcnJlcl9ob2M6IFwiQ29kZS5vcmcvSG91ciBvZiBDb2RlXCJcbiMgICAgcmVmZXJyZXJfdGVhY2hlcjogXCJBIHRlYWNoZXJcIlxuIyAgICByZWZlcnJlcl9hZG1pbjogXCJBbiBhZG1pbmlzdHJhdG9yXCJcbiMgICAgcmVmZXJyZXJfc3R1ZGVudDogXCJBIHN0dWRlbnRcIlxuIyAgICByZWZlcnJlcl9wZDogXCJQcm9mZXNzaW9uYWwgdHJhaW5pbmdzL3dvcmtzaG9wc1wiXG4jICAgIHJlZmVycmVyX3dlYjogXCJHb29nbGVcIlxuIyAgICByZWZlcnJlcl9vdGhlcjogXCJPdGhlclwiXG4jICAgIGFueXRoaW5nX2Vsc2U6IFwiV2hhdCBraW5kIG9mIGNsYXNzIGRvIHlvdSBhbnRpY2lwYXRlIHVzaW5nIENvZGVDb21iYXQgZm9yP1wiXG4jICAgIHRoYW5rc19oZWFkZXI6IFwiUmVxdWVzdCBSZWNlaXZlZCFcIlxuIyAgICB0aGFua3Nfc3ViX2hlYWRlcjogXCJUaGFua3MgZm9yIGV4cHJlc3NpbmcgaW50ZXJlc3QgaW4gQ29kZUNvbWJhdCBmb3IgeW91ciBzY2hvb2wuXCJcbiMgICAgdGhhbmtzX3A6IFwiV2UnbGwgYmUgaW4gdG91Y2ggc29vbiEgSWYgeW91IG5lZWQgdG8gZ2V0IGluIGNvbnRhY3QsIHlvdSBjYW4gcmVhY2ggdXMgYXQ6XCJcbiMgICAgYmFja190b19jbGFzc2VzOiBcIkJhY2sgdG8gQ2xhc3Nlc1wiXG4jICAgIGZpbmlzaF9zaWdudXA6IFwiRmluaXNoIGNyZWF0aW5nIHlvdXIgdGVhY2hlciBhY2NvdW50OlwiXG4jICAgIGZpbmlzaF9zaWdudXBfcDogXCJDcmVhdGUgYW4gYWNjb3VudCB0byBzZXQgdXAgYSBjbGFzcywgYWRkIHlvdXIgc3R1ZGVudHMsIGFuZCBtb25pdG9yIHRoZWlyIHByb2dyZXNzIGFzIHRoZXkgbGVhcm4gY29tcHV0ZXIgc2NpZW5jZS5cIlxuIyAgICBzaWdudXBfd2l0aDogXCJTaWduIHVwIHdpdGg6XCJcbiMgICAgY29ubmVjdF93aXRoOiBcIkNvbm5lY3Qgd2l0aDpcIlxuIyAgICBjb252ZXJzaW9uX3dhcm5pbmc6IFwiV0FSTklORzogWW91ciBjdXJyZW50IGFjY291bnQgaXMgYSA8ZW0+U3R1ZGVudCBBY2NvdW50PC9lbT4uIE9uY2UgeW91IHN1Ym1pdCB0aGlzIGZvcm0sIHlvdXIgYWNjb3VudCB3aWxsIGJlIHVwZGF0ZWQgdG8gYSBUZWFjaGVyIEFjY291bnQuXCJcbiMgICAgbGVhcm5fbW9yZV9tb2RhbDogXCJUZWFjaGVyIGFjY291bnRzIG9uIENvZGVDb21iYXQgaGF2ZSB0aGUgYWJpbGl0eSB0byBtb25pdG9yIHN0dWRlbnQgcHJvZ3Jlc3MsIGFzc2lnbiBsaWNlbnNlcyBhbmQgbWFuYWdlIGNsYXNzcm9vbXMuIFRlYWNoZXIgYWNjb3VudHMgY2Fubm90IGJlIGEgcGFydCBvZiBhIGNsYXNzcm9vbSAtIGlmIHlvdSBhcmUgY3VycmVudGx5IGVucm9sbGVkIGluIGEgY2xhc3MgdXNpbmcgdGhpcyBhY2NvdW50LCB5b3Ugd2lsbCBubyBsb25nZXIgYmUgYWJsZSB0byBhY2Nlc3MgaXQgb25jZSB5b3UgdXBkYXRlIHRvIGEgVGVhY2hlciBBY2NvdW50LlwiXG4jICAgIGNyZWF0ZV9hY2NvdW50OiBcIkNyZWF0ZSBhIFRlYWNoZXIgQWNjb3VudFwiXG4jICAgIGNyZWF0ZV9hY2NvdW50X3N1YnRpdGxlOiBcIkdldCBhY2Nlc3MgdG8gdGVhY2hlci1vbmx5IHRvb2xzIGZvciB1c2luZyBDb2RlQ29tYmF0IGluIHRoZSBjbGFzc3Jvb20uICA8c3Ryb25nPlNldCB1cCBhIGNsYXNzPC9zdHJvbmc+LCBhZGQgeW91ciBzdHVkZW50cywgYW5kIDxzdHJvbmc+bW9uaXRvciB0aGVpciBwcm9ncmVzczwvc3Ryb25nPiFcIlxuIyAgICBjb252ZXJ0X2FjY291bnRfdGl0bGU6IFwiVXBkYXRlIHRvIFRlYWNoZXIgQWNjb3VudFwiXG4jICAgIG5vdDogXCJOb3RcIlxuXG4gIHZlcnNpb25zOlxuICAgIHNhdmVfdmVyc2lvbl90aXRsZTogXCLsg4jroZzsmrQg67KE7KCE7J2EIOyggOyepe2VqeuLiOuLpFwiXG4gICAgbmV3X21ham9yX3ZlcnNpb246IFwi7Iug6recIOuyhOyghFwiXG4gICAgc3VibWl0dGluZ19wYXRjaDogXCLtjKjsuZgg7KCB7Jqp7KSRLi4uXCJcbiAgICBjbGFfcHJlZml4OiBcIuuzgOqyveyCrO2VreydhCDsoIDsnqXtlZjquLAg7JyE7ZW07ISc64qULCDrqLzsoIAg6rOE7JW97IKs7ZWt7JeQIOuPmeydmCDtlZjshZTslbwg7ZWp64uI64ukLlwiXG4gICAgY2xhX3VybDogXCJDTEFcIlxuICAgIGNsYV9zdWZmaXg6IFwiLlwiXG4gICAgY2xhX2FncmVlOiBcIuuPmeydmCDtlanri4jri6RcIlxuICAgIG93bmVyX2FwcHJvdmU6IFwi67OA6rK9IOyCrO2VreydtCDtkZzsi5wg65CY6riwIOyghOyXkCDshozsnKDsnpDqsIAg7J2066W8IOyKueyduCDtlbTslbztlanri4jri6QuXCJcblxuICBjb250YWN0OlxuICAgIGNvbnRhY3RfdXM6IFwi7L2U65Oc7Lu067GD7JeQIOyghO2VoCDrp5BcIlxuICAgIHdlbGNvbWU6IFwi7Ja47KCc65OgIOydmOqyrOydhCDrs7TrgrTso7zshLjsmpQuIOydtCDslpHsi53snYQg7J2066mU7J287JeQIOyCrOyaqe2VtCDso7zshLjsmpQhXCJcbiAgICBmb3J1bV9wcmVmaXg6IFwi6rO16rCc7KCB7Jy866GcIOuFvOydmO2VoCDsgqztla3snbTrnbzrqbQg7Jqw66asIO2PrOufvOyXkOyEnCDtlbTso7zshLjsmpQgOiBcIlxuICAgIGZvcnVtX3BhZ2U6IFwi7Y+s65+8XCJcbiAgICBmb3J1bV9zdWZmaXg6IFwiIOuMgOyLoOyXkC5cIlxuICAgIGZhcV9wcmVmaXg6IFwi64+EIOyeiOyKteuLiOuLpFwiXG4gICAgZmFxOiBcIuyekOyjvCDrrLvripQg7KeI66y4XCJcbiAgICBzdWJzY3JpYmVfcHJlZml4OiBcIuuPhOybgOydtCDtlYTsmpTtlZwg6rK97JqwIOuovOyggCDsiJjspIDsnYQg7YyM7JWFIO2VmOyLnOq4sCDrsJTrno3ri4jri6QgXCJcbiAgICBzdWJzY3JpYmU6IFwi7L2U65Oc7Lu067GDIOq1rOuPheydhCDqtazrp6RcIlxuICAgIHN1YnNjcmliZV9zdWZmaXg6IFwi7Jqw66as64qUIOy9lOuTnOyZgCDtlajqu5gg64u57Iug7J2EIOuPhOyauCDsiJjsnojsnYQg6rKD7J6F64uI64ukLlwiXG4gICAgc3Vic2NyaWJlcl9zdXBwb3J0OiBcIuuLueyLoOydtCDsvZTrk5zsu7TrsYMg6rCA7J6F7J6Q7JeQIOyeiOq4sCDrlYzrrLjsl5As64u57Iug7J2YIOydtOuplOydvOydgCDsmrDrpqzsnZgg7Jqw7ISgIOyInOychCDsp4Dsm5DsnYQg67Cb6rKM65Cp64uI64ukLlwiXG4gICAgc2NyZWVuc2hvdF9pbmNsdWRlZDogXCLsiqTtgazrprDsg7cg7LKo67aA65CoLlwiXG4gICAgd2hlcmVfcmVwbHk6IFwi7Jqw66as64qUIOyWtOuUlOyXkOyEnCDrjIDri7Ug7ZW07JW87ZWp64uI6rmMP1wiXG4gICAgc2VuZDogXCLsnZjqsqwg67O064K06riwXCJcblxuICBhY2NvdW50X3NldHRpbmdzOlxuICAgIHRpdGxlOiBcIuqzhOyglSDshKTsoJVcIlxuICAgIG5vdF9sb2dnZWRfaW46IFwi66Gc6re47J247ZWY7Iuc6rGw64KYIOqzhOygleydhCDsg53shLHtlZjshLjsmpQuXCJcbiAgICBtZV90YWI6IFwi64KYXCJcbiAgICBwaWN0dXJlX3RhYjogXCLsgqzsp4RcIlxuICAgIGRlbGV0ZV9hY2NvdW50X3RhYjogXCLqs4TsoJUg7IKt7KCcXCJcbiAgICB3cm9uZ19lbWFpbDogXCLti4DrprAg7J2066mU7J28XCJcbiAgICB3cm9uZ19wYXNzd29yZDogXCLti4DrprAg67mE67CA67KI7Zi4XCJcbiAgICBkZWxldGVfdGhpc19hY2NvdW50OiBcIuyYgeq1rOyggeycvOuhnCDqs4TsoJUg7IKt7KCcXCJcbiAgICByZXNldF9wcm9ncmVzc190YWI6IFwi66qo65OgIOynhO2WieydhCDsnqzshKTsoJVcIlxuICAgIHJlc2V0X3lvdXJfcHJvZ3Jlc3M6IFwi66qo65OgIOynhO2WiSDsg4HtmansnYQg7KeA7Jqw6rOgIOuLpOyLnCDsi5zsnpFcIlxuICAgIGdvZF9tb2RlOiBcIu2VmOuKkOuLmCDrqqjrk5xcIlxuICAgIGVtYWlsc190YWI6IFwi7J2066mU7J28XCJcbiAgICBhZG1pbjogXCLqtIDrpqzsnpBcIlxuICAgIG1hbmFnZV9zdWJzY3JpcHRpb246IFwi6rWs64+F7J2EIOq0gOumrCDtlZjroKTrqbQg7Jes6riw66W8IO2BtOumre2VmOyLreyLnOyYpC5cIlxuICAgIG5ld19wYXNzd29yZDogXCLsg4gg67mE67CA67KI7Zi4XCJcbiAgICBuZXdfcGFzc3dvcmRfdmVyaWZ5OiBcIu2ZleyduCjri6Tsi5ztlZzrsogg7J6F66Cl7ZW07KO87IS47JqUKVwiXG4gICAgdHlwZV9pbl9lbWFpbDogXCLqs4TsoJUg7IKt7KCc66W8IO2ZleyduO2VmOugpOuptCDsnbTrqZTsnbzsnYQg7J6F66Cl7ZWp64uI64ukLlwiICMge2NoYW5nZX1cbiAgICB0eXBlX2luX2VtYWlsX3Byb2dyZXNzOiBcIuynhO2WieydhCDsgq3soJztlZjroKTrqbQg7ZmV7J247ZWgIOydtOuplOydvOydhCDsnoXroKXtlanri4jri6QuXCJcbiAgICB0eXBlX2luX3Bhc3N3b3JkOiBcIuuYkO2VnCAsIOyCrOyaqeyekOydmCDslZTtmLjrpbwg7J6F66Cl7ZWp64uI64ukLlwiXG4gICAgZW1haWxfc3Vic2NyaXB0aW9uczogXCLsnbTrqZTsnbwg6rWs64+FXCJcbiAgICBlbWFpbF9zdWJzY3JpcHRpb25zX25vbmU6IFwi7J2066mU7J28IOq1rOuPhSDslYgg7ZWoXCJcbiAgICBlbWFpbF9hbm5vdW5jZW1lbnRzOiBcIuqzteyngOyCrO2VrVwiXG4gICAgZW1haWxfYW5ub3VuY2VtZW50c19kZXNjcmlwdGlvbjogXCLsvZTrk5wg7Lu067GD7J2YIOqwnOuwnCDrsI8g7KeE7ZaJIOyDge2ZqeydhCDsnbTrqZTsnbzroZwg6rWs64+F7ZWY7IS47JqUXCJcbiAgICBlbWFpbF9ub3RpZmljYXRpb25zOiBcIuyVjOuejFwiXG4gICAgZW1haWxfbm90aWZpY2F0aW9uc19zdW1tYXJ5OiBcIuuLueyLoOydmCDsvZTrk5wg7Lu067GDIO2ZnOuPmeqzvCDqtIDroKjrkJwg7J6Q64+ZIOyVjOumvCDrqZTsnbzsnYQg7ISk7KCV7ZWgIOyImCDsnojsirXri4jri6QuXCJcbiAgICBlbWFpbF9hbnlfbm90ZXM6IFwi66qo65OgIOyVjOumvCDrsJvquLBcIlxuICAgIGVtYWlsX2FueV9ub3Rlc19kZXNjcmlwdGlvbjogXCLrqqjrk6Ag7JWM66a8IOuplOydvCDrsJvsp4Ag7JWK6riwXCJcbiAgICBlbWFpbF9uZXdzOiBcIuuJtOyKpFwiXG4gICAgZW1haWxfcmVjcnVpdF9ub3RlczogXCLqtazsnbgg7KCV67O0XCJcbiAgICBlbWFpbF9yZWNydWl0X25vdGVzX2Rlc2NyaXB0aW9uOiBcIuygleunkCDsi6TroKXsnbQg7KKL7Jy87Iuc64uk6rOgIO2MkOuLqOuQmOuptCwg67O064ukIOyii+ydgCDqtazsp4Eg7KCV67O07JmAIOq0gOugqO2VmOyXrCDsl7Drnb3rk5zrprQg7IiY64+EIOyeiOyKteuLiOuLpC5cIlxuICAgIGNvbnRyaWJ1dG9yX2VtYWlsczogXCLsobDroKXsnpDrk6Qg7J2066mU7J28XCJcbiAgICBjb250cmlidXRlX3ByZWZpeDogXCLsmrDrpqzripQg7Ja47KCc64KYIOuLueyLoOydmCDssLjsl6zrpbwg7ZmY7JiBIO2VqeuLiOuLpCA6IFwiXG4gICAgY29udHJpYnV0ZV9wYWdlOiBcIuywuOyXrO2VmOq4sCDtjpjsnbTsp4BcIlxuICAgIGNvbnRyaWJ1dGVfc3VmZml4OiBcIuyekOyEuO2VnCDsgqztla3snbQg7ISk66qF65CY7Ja0IOyeiOyKteuLiOuLpC5cIlxuICAgIGVtYWlsX3RvZ2dsZTogXCLrqqjrkZAg67OA6rK9XCJcbiAgICBlcnJvcl9zYXZpbmc6IFwi7Jik66WYIOyggOyepVwiXG4gICAgc2F2ZWQ6IFwi67OA6rK97IKs7ZWtIOyggOyepSDsmYTro4xcIlxuICAgIHBhc3N3b3JkX21pc21hdGNoOiBcIuu5hOuwgOuyiO2YuOqwgCDsnbzsuZjtlZjsp4Ag7JWK7Iq164uI64ukLlwiXG4gICAgcGFzc3dvcmRfcmVwZWF0OiBcIuu5hOuwgOuyiO2YuOulvCDtlZzrsogg642UIOyeheugpe2VtCDso7zshLjsmpQuXCJcblxuICBrZXlib2FyZF9zaG9ydGN1dHM6XG4gICAga2V5Ym9hcmRfc2hvcnRjdXRzOiBcIuuLqOy2le2CpFwiXG4gICAgc3BhY2U6IFwi7Iqk7Y6Y7J207IqkXCJcbiAgICBlbnRlcjogXCLsl5TthLBcIlxuICAgIHByZXNzX2VudGVyOiBcIuyXlO2EsOulvCDriITrpbTshLjsmpRcIlxuICAgIGVzY2FwZTogXCJFc2NcIlxuICAgIHNoaWZ0OiBcIlNoaWZ0XCJcbiAgICBydW5fY29kZTogXCLtmITsnqwg7L2U65OcIOyLpO2WiVwiXG4gICAgcnVuX3JlYWxfdGltZTogXCLsi6Tsi5zqsIQg7L2U65OcIOyLpO2WiVwiXG4gICAgY29udGludWVfc2NyaXB0OiBcIuydtOuvuCDrgZ3rgpwg7ZiE7J6sIOyKpO2BrOumve2KuOulvCDsp4Ttlontlanri4jri6QuXCJcbiAgICBza2lwX3NjcmlwdHM6IFwi66qo65OgIOyKpO2CrO2VoCDsiqTtgazrpr3tirjrpbwg7KeA64Kp64uI64ukLlwiXG4gICAgdG9nZ2xlX3BsYXliYWNrOiBcIu2UjOugiOydtC/snbzsi5zspJHsp4Ag7KCE7ZmYLlwiXG4gICAgc2NydWJfcGxheWJhY2s6IFwi64uk7IucIOyKpO2BrOufveydhCDthrXtlbQg7Iuc6rCE7J2EIOyghOuLrO2VqeuLiOuLpC5cIlxuICAgIHNpbmdsZV9zY3J1Yl9wbGF5YmFjazogXCLri6Tsi5wg7Iqk7YGs65+97J2EIO2Gte2VtCDri6jsnbwg7ZSE66CI7J6E7Jy866GcIOyLnOqwhOydhCDsoITri6ztlanri4jri6QuXCJcbiAgICBzY3J1Yl9leGVjdXRpb246IFwi7ZiE7J6sIOyjvOusuO2VmOuKlOqyg+ydhCDthrXtlbQg7Iqk7YGs65+97ZWp64uI64ukLlwiXG4gICAgdG9nZ2xlX2RlYnVnOiBcIuuUlOuyhOq3uCDtmZTrqbQg7KCE7ZmYLlwiXG4gICAgdG9nZ2xlX2dyaWQ6IFwi65SU67KE6re4IOyYpOuyhOugiOydtCDsoITtmZhcIlxuICAgIHRvZ2dsZV9wYXRoZmluZGluZzogXCLquLgg7LC+7JWE7KO864qUIOyYpOuyhOugiOydtCDsoITtmZguXCJcbiAgICBiZWF1dGlmeTogXCLshJzsi53snYQg7ZGc7KSA7ZmU7ZWY7JesIOy9lOuTnOulvCDslYTrpoTri7Xqsoztlanri4jri6QuXCJcbiAgICBtYXhpbWl6ZV9lZGl0b3I6IFwi7L2U65OcIOyXkOuUlO2EsCDstZzrjIAv7LWc7IaMLlwiXG5cbiAgY29tbXVuaXR5OlxuICAgIG1haW5fdGl0bGU6IFwi7L2U65OcIOy7tOuxgyDsu6TrrqTri4jti7BcIlxuICAgIGludHJvZHVjdGlvbjogXCLslYTrnpjsl5DshJwg64u57Iug7J20IOywuOyXrO2VoCDsiJjsnojripQg67Cp67KV7J2EIO2ZleyduO2VmOqzoCDqsIDsnqUg7J6s66+47J6I7Ja067O07J2064qU6rKD7J2EIOqysOygle2VqeuLiOuLpC4g7Jqw66as64qUIOuLueyLoOqzvCDtlajqu5gg7ZiR66Cl7ZWY64qU6rKD7J2EIOq4sOuMgO2VqeuLiOuLpCFcIlxuICAgIGxldmVsX2VkaXRvcl9wcmVmaXg6IFwi7L2U65Oc7Lu067GD7J2EIOyCrOyaqVwiXG4gICAgbGV2ZWxfZWRpdG9yX3N1ZmZpeDogXCLrp4zrk6TqsbDrgpgg7IiY7KCV7ZWY64qUIOugiOuyqOyeheuLiOuLpC4g7IKs7Jqp7J6Q65Ok7J2AIOyekOyLoOydmCDtlZnquIksIOy5nOq1rCwg7ZW07LukIO2GpCwg7ZWZ7IOdLCDtmJXsoJwg7J6Q66ek7JeQIOuMgO2VnCDsiJjspIDsnYQg66eM65Ok7Ja07JmU7Iq164uI64ukLiDrp4zslb0g7IOI66Gc7Jq0IOugiOuyqCDshozrpqzrpbwg7IOI66Gc66eM65Ok6rKg64uk66m0IOyasOumrOykkSDtlZjrgpjrpbwg7Y+s7YGs7ZW07IScIOyLnOyeke2VtOuPhOuQqeuLiOuLpCFcIlxuICAgIHRoYW5nX2VkaXRvcl9wcmVmaXg6IFwi7Jqw66as64qUIOqyjOyehCDrgrTsnZggJ3RoYW5ncyfsnYQg7Jyg64ub7J2065286rOgIOu2gOumheuLiOuLpC5cIlxuICAgIHRoYW5nX2VkaXRvcl9zdWZmaXg6IFwiIENvZGVDb21iYXQg7IaM7IqkIOyeke2SiOydhCDsiJjsoJXtlZjsl6wg7IKs7Jqp7ZWp64uI64ukLuycoOuLm+uTpOydtCDrsJzsgqzssrTrpbwg642Y7KeA64qU6rKD7J2EIO2XiOyaqe2VmOupsCwg7JWg64uI66mU7J207IWY7J2YIOuwqe2WpeydhCDrs4Dqsr3tlZjqs6AsIOycoOuLm+ydmCDtg4Dqsqnsp4DsoJDsnYQg67OA6rK97ZWY6rGw64KYLCDsmrDrpqzsnZgg67Kh7YSwIOyKpO2UhOudvOydtO2KuOulvCDsl4XroZzrk5wg7ZWgIOyImOuPhCDsnojsirXri4jri6QuXCJcbiAgICBhcnRpY2xlX2VkaXRvcl9wcmVmaXg6IFwi7Jqw66as7J2YIOusuOyEnOqwgCDti4DrprDqsoPsnYQg67O07JWY64KY7JqUPyDsnpDsi6DsnZgg7J6R7ZKI7JeQIOuMgO2VnCDrqofqsIDsp4Ag7KeA7Lmo7J2EIOybkO2VmOyLreuLiOq5jD8g7LK07YGs7JWE7JuD7J2EIO2VmOqxsOuCmFwiXG4gICAgYXJ0aWNsZV9lZGl0b3Jfc3VmZml4OiBcIuy9lOuTnOy7tOuxgyDtlIzroIjsnbTslrTrpbwg64+E7JmAIOyekOyLoOydmCDtlIzroIjsnbQg7Iuc6rCE7J2EIOy1nOuMgO2VnCDtmZzsmqntlZjqsoztlbTso7zsi63si5zsmKQuXCJcbiAgICBmaW5kX3VzOiBcIuydtCDsgqzsnbTtirjsl5DshJwg7Jqw66as66W8IOywvuq4sFwiXG4gICAgc29jaWFsX2dpdGh1YjogXCJHaXRIdWLsl5DshJwg7Jqw66as7J2YIOuqqOuToCDsvZTrk5zrpbwg7LK07YGs7JWE7JuD7ZWY6riwXCJcbiAgICBzb2NpYWxfYmxvZzogXCJTZXR07J2YIOy9lOuTnOy7tOuxgyDruJTroZzqt7gg7J296riwXCJcbiAgICBzb2NpYWxfZGlzY291cmNlOiBcIu2GoOuhoCDtj6zrn7zsl5DshJwg7Yag66Gg7JeQIOywuOyXrO2VmOq4sFwiXG4gICAgc29jaWFsX2ZhY2Vib29rOiBcIkZhY2Vib29r7JeQ7IScIOy9lOuTnOy7tOuxgyDsoovslYTsmpTtlZjquLBcIlxuICAgIHNvY2lhbF90d2l0dGVyOiBcIlR3aXR0ZXLsl5DshJwg7L2U65Oc7Lu067GDIO2MlOuhnOyasO2VmOq4sFwiXG4gICAgc29jaWFsX2dwbHVzOiBcIkdvb2dsZSvroZwg7L2U65Oc7Lu067GDIOywuOyXrO2VmOq4sFwiXG4jICAgIHNvY2lhbF9zbGFjazogXCJDaGF0IHdpdGggdXMgaW4gdGhlIHB1YmxpYyBDb2RlQ29tYmF0IFNsYWNrIGNoYW5uZWxcIlxuICAgIGNvbnRyaWJ1dGVfdG9fdGhlX3Byb2plY3Q6IFwi7ZSE66Gc7KCd7Yq47JeQIOq4sOyXrO2VmOq4sFwiXG5cbiAgY2xhbnM6XG4jICAgIHRpdGxlOiBcIkpvaW4gQ29kZUNvbWJhdCBDbGFucyAtIExlYXJuIHRvIENvZGUgaW4gUHl0aG9uLCBKYXZhU2NyaXB0LCBhbmQgSFRNTFwiXG4jICAgIGNsYW5fdGl0bGU6IFwiX19jbGFuX18gLSBKb2luIENvZGVDb21iYXQgQ2xhbnMgYW5kIExlYXJuIHRvIENvZGVcIlxuIyAgICBtZXRhX2Rlc2NyaXB0aW9uOiBcIkpvaW4gYSBDbGFuIG9yIGJ1aWxkIHlvdXIgb3duIGNvbW11bml0eSBvZiBjb2RlcnMuIFBsYXkgbXVsdGlwbGF5ZXIgYXJlbmEgbGV2ZWxzIGFuZCBsZXZlbCB1cCB5b3VyIGhlcm8gYW5kIHlvdXIgY29kaW5nIHNraWxscy5cIlxuICAgIGNsYW46IFwi7YG0656cXCJcbiAgICBjbGFuczogXCLtgbTrnpzrk6RcIlxuICAgIG5ld19uYW1lOiBcIuyDiOuhnOyatCDtgbTrnpwg7J2066aEXCJcbiAgICBuZXdfZGVzY3JpcHRpb246IFwi7IOI66Gc7Jq0IO2BtOuenCDshKTrqoVcIlxuICAgIG1ha2VfcHJpdmF0ZTogXCLtgbTrnpzsnYQg67mE6rO16rCc66GcIOunjOuTpOq4sFwiXG4gICAgc3Vic19vbmx5OiBcIuyYpOyngSDqtazrj4XsnpDrp4xcIlxuICAgIGNyZWF0ZV9jbGFuOiBcIuyDiOuhnOyatCDtgbTrnpwg66eM65Ok6riwXCJcbiAgICBwcml2YXRlX3ByZXZpZXc6IFwi66+466as67O06riwXCJcbiAgICBwcml2YXRlX2NsYW5zOiBcIuu5hOqzteqwnCDtgbTrnpxcIlxuICAgIHB1YmxpY19jbGFuczogXCLqs7XqsJwg7YG0656c65OkXCJcbiAgICBteV9jbGFuczogXCLrgrTqsIAg7IaN7ZWcIO2BtOuenFwiXG4gICAgY2xhbl9uYW1lOiBcIu2BtOuenCDsnbTrpoRcIlxuICAgIG5hbWU6IFwi7J2066aEXCJcbiAgICBjaGllZnRhaW46IFwi7YG0656c7J6lXCJcbiAgICBlZGl0X2NsYW5fbmFtZTogXCLtgbTrnpwg7J2066aEIOyImOyglVwiXG4gICAgZWRpdF9jbGFuX2Rlc2NyaXB0aW9uOiBcIu2BtOuenCDshKTrqoUg7IiY7KCVXCJcbiAgICBlZGl0X25hbWU6IFwi7J2066aEIOuzgOqyvVwiXG4gICAgZWRpdF9kZXNjcmlwdGlvbjogXCLshKTrqoUg67OA6rK9XCJcbiAgICBwcml2YXRlOiBcIijruYTqs7XqsJwpXCJcbiAgICBzdW1tYXJ5OiBcIuyalOyVvVwiXG4gICAgYXZlcmFnZV9sZXZlbDogXCLtj4nqt6Ag66CI67KoXCJcbiAgICBhdmVyYWdlX2FjaGlldmVtZW50czogXCLtj4nqt6Ag7ISx7LeoXCJcbiAgICBkZWxldGVfY2xhbjogXCLtgbTrnpwg7IKt7KCcXCJcbiAgICBsZWF2ZV9jbGFuOiBcIu2BtOuenCDtg4jth7RcIlxuICAgIGpvaW5fY2xhbjogXCLtgbTrnpwg6rCA7J6FXCJcbiAgICBpbnZpdGVfMTogXCLstIjrjIA6XCJcbiAgICBpbnZpdGVfMjogXCIq66eB7YGs66W8IOuztOuCtCDtgbTrnpwg7LSI64yA7ZWY6riwXCJcbiAgICBtZW1iZXJzOiBcIuuppOuyhOuTpFwiXG4gICAgcHJvZ3Jlc3M6IFwi7KeE7ZaJXCJcbiAgICBub3Rfc3RhcnRlZF8xOiBcIuyLnOyekeuQmOyngOyViuydjFwiXG4gICAgc3RhcnRlZF8xOiBcIuyLnOyekeuQqFwiXG4gICAgY29tcGxldGVfMTogXCLsmYTro4xcIlxuICAgIGV4cF9sZXZlbHM6IFwi66CI67KoIO2ZleyepVwiXG4gICAgcmVtX2hlcm86IFwi7JiB7JuFIOyCreygnFwiXG4gICAgc3RhdHVzOiBcIuyDge2DnFwiXG4gICAgY29tcGxldGVfMjogXCLsmYTro4xcIlxuICAgIHN0YXJ0ZWRfMjogXCLsi5zsnpHrkKhcIlxuICAgIG5vdF9zdGFydGVkXzI6IFwi7Iuc7J6R65CY7KeA7JWK7J2MXCJcbiAgICB2aWV3X3NvbHV0aW9uOiBcIu2VtOqysOyxheydhCDrs7TroKTrqbQg7YG066atLlwiXG4gICAgdmlld19hdHRlbXB0OiBcIuyLnOuPhOulvCDrs7TroKTrqbQg7YG066atLlwiXG4gICAgbGF0ZXN0X2FjaGlldmVtZW50OiBcIuy1nOyLoCDrj4TsoITqs7zsoJxcIlxuICAgIHBsYXl0aW1lOiBcIu2UjOugiOydtO2DgOyehFwiXG4gICAgbGFzdF9wbGF5ZWQ6IFwi66eI7KeA66eJ7Jy866GcIO2UjOugiOydtO2VnFwiXG4gICAgbGVhZ3Vlc19leHBsYW5hdGlvbjogXCLsnbTrn6ztlZwg66mA7YuwIOu2hOyVvOyduCDqsr3smrDsl5DripQg64uk66W4IO2BtOuenOuTpOyXkCDrjIDtlZwg66as6re47JeQ7IScIO2UjOugiOydtO2VqeuLiOuLpC5cIlxuICAgIHRyYWNrX2NvbmNlcHRzMTogXCLtirjrnpkg7Luo7IWJXCJcbiAgICB0cmFja19jb25jZXB0czJhOiBcIu2VmeyDneycvOuhnOu2gO2EsCDtlZnsirXrkKhcIlxuICAgIHRyYWNrX2NvbmNlcHRzMmI6IFwi66e067KE66Gc67aA7YSwIO2VmeyKteuQqFwiXG4gICAgdHJhY2tfY29uY2VwdHMzYTogXCLqsIHsnpAg7ZWZ7IOd65Ok66Gc67aA7YSwIO2KuOuemSDroIjrsqjsnbQg7JmE66OM65CoXCJcbiAgICB0cmFja19jb25jZXB0czNiOiBcIuqwgeyekCDrp7TrsoTrk6TroZzrtoDthLAg7Yq4656ZIOugiOuyqOydtCDsmYTro4zrkKhcIlxuICAgIHRyYWNrX2NvbmNlcHRzNGE6IFwi64u57Iug7J2YIO2VmeyDnSDrs7TquLAnXCJcbiAgICB0cmFja19jb25jZXB0czRiOiBcIuuLueyLoOydmCDrp7TrsoQg67O06riwJ1wiXG4gICAgdHJhY2tfY29uY2VwdHM1OiBcIuyGlOujqOyFmFwiXG4gICAgdHJhY2tfY29uY2VwdHM2YTogXCLsnbTrpoTsnbTrgpgg7KeE7ZaJ7IOB7Zmp7Jy866GcIOygleugrOuQnCDtlZnsg53rk6RcIlxuICAgIHRyYWNrX2NvbmNlcHRzNmI6IFwi7J2066aE7J2064KYIOynhO2WieyDge2ZqeycvOuhnCDsoJXroKzrkJwg66e067KE65OkXCJcbiAgICB0cmFja19jb25jZXB0czc6IFwi7LSI64yA7J6lIO2VhOyalFwiXG4gICAgdHJhY2tfY29uY2VwdHM4OiBcIuycvOuhnCDssLjsl6xcIlxuICAgIHByaXZhdGVfcmVxdWlyZV9zdWI6IFwi67mE6rO16rCcIO2BtOuenOydhCDrp4zrk6TqsbDrgpgg7LC47Jes7ZW07IScIOq1rOuPhe2VmOuKlOqyg+ydhCDqtozsnqXtlanri4jri6QuXCJcblxuICBjb3Vyc2VzOlxuICAgIGNyZWF0ZV9uZXdfY2xhc3M6IFwi7IOI66Gc7Jq0IO2BtOuemOyKpCDrp4zrk6TquLBcIlxuIyAgICBob2NfYmx1cmIxOiBcIlRyeSB0aGVcIlxuIyAgICBob2NfYmx1cmIyOiBcIkNvZGUsIFBsYXksIFNoYXJlXCJcbiMgICAgaG9jX2JsdXJiMzogXCJhY3Rpdml0eSEgQ29uc3RydWN0IGZvdXIgZGlmZmVyZW50IG1pbmlnYW1lcyB0byBsZWFybiB0aGUgYmFzaWNzIG9mIGdhbWUgZGV2ZWxvcG1lbnQsIHRoZW4gbWFrZSB5b3VyIG93biFcIlxuIyAgICBzb2x1dGlvbnNfcmVxdWlyZV9saWNlbnNlczogXCJMZXZlbCBzb2x1dGlvbnMgYXJlIGF2YWlsYWJsZSBmb3IgdGVhY2hlcnMgd2hvIGhhdmUgbGljZW5zZXMuXCJcbiAgICB1bm5hbWVkX2NsYXNzOiBcIuydtOumhOyXhuuKlCDtgbTrnpjsiqRcIlxuICAgIGVkaXRfc2V0dGluZ3MxOiBcIu2BtOuemOyKpCDshLjtjIUg7IiY7KCVXCJcbiAgICBhZGRfc3R1ZGVudHM6IFwi7ZWZ7IOdIOy2lOqwgFwiXG4gICAgc3RhdHM6IFwi7Ya16rOEXCJcbiMgICAgc3R1ZGVudF9lbWFpbF9pbnZpdGVfYmx1cmI6IFwiWW91ciBzdHVkZW50cyBjYW4gYWxzbyB1c2UgY2xhc3MgY29kZSA8c3Ryb25nPl9fY2xhc3NDb2RlX188L3N0cm9uZz4gd2hlbiBjcmVhdGluZyBhIFN0dWRlbnQgQWNjb3VudCwgbm8gZW1haWwgcmVxdWlyZWQuXCJcbiAgICB0b3RhbF9zdHVkZW50czogXCLstJ0g7ZWZ7IOdOlwiXG4gICAgYXZlcmFnZV90aW1lOiBcIu2Pieq3oCDsiJjspIDsnZgg7ZSM66CI7J20IOyLnOqwhDpcIlxuICAgIHRvdGFsX3RpbWU6IFwi7LSdIO2UjOugiOydtCDsi5zqsIQ6XCJcbiAgICBhdmVyYWdlX2xldmVsczogXCLtj4nqt6Ag66CI67KoIOuLrOyEsTpcIlxuICAgIHRvdGFsX2xldmVsczogXCLstJ0g66CI67KoIOuLrOyEsTpcIlxuICAgIHN0dWRlbnRzOiBcIu2VmeyDnVwiXG4gICAgY29uY2VwdHM6IFwi6rCc64WQXCJcbiAgICBwbGF5X3RpbWU6IFwi7ZSM66CI7J20IOyLnOqwhDpcIlxuICAgIGNvbXBsZXRlZDogXCLsmYTshLE6XCJcbiAgICBlbnRlcl9lbWFpbHM6IFwi6rCBIOydtOuplOydvCDso7zshozrpbwg7ZaJIO2YueydgCDsibztkZzroZwg67aE66as7Iuc7YKk7IS47JqULlwiXG4gICAgc2VuZF9pbnZpdGVzOiBcIu2VmeyDnSDstIjrjIDrsJzshqFcIlxuICAgIG51bWJlcl9wcm9ncmFtbWluZ19zdHVkZW50czogXCLtlITroZzqt7jrnpjrsI0g7ZWZ7IOdIOyImFwiXG4gICAgbnVtYmVyX3RvdGFsX3N0dWRlbnRzOiBcIu2Vmeq1kOyXkCDsnojripQg7LSdIO2VmeyDnSDsiJhcIlxuICAgIGVucm9sbDogXCLrk7HroZ1cIlxuICAgIGVucm9sbF9wYWlkOiBcIuyngOu2iO2VnCDsiJjsl4Xsl5Ag7ZWZ7IOdIOuTseuhnVwiXG4gICAgZ2V0X2Vucm9sbG1lbnRzOiBcIuuNlCDrp47snYAg65287J207IS87Iqk66W8IOyWu+q4sFwiXG4gICAgY2hhbmdlX2xhbmd1YWdlOiBcIuyImOyXhSDslrjslrQg67OA6rK9XCJcbiAgICBrZWVwX3VzaW5nOiBcIuqzhOyGjSDsgqzsmqlcIlxuICAgIHN3aXRjaF90bzogXCLrsJTqvrjri6RcIlxuICAgIGdyZWV0aW5nczogXCLslYjrhZXtlZjshLjsmpRAXCJcbiAgICBiYWNrX2NsYXNzcm9vbXM6IFwi64K0IOq1kOyLpOuhnCDrj4zslYTsmZTsirXri4jri6QhXCJcbiAgICBiYWNrX2NsYXNzcm9vbTogXCLqtZDsi6TroZwg64+M7JWE6rCA6riwXCJcbiMgICAgYmFja19jb3Vyc2VzOiBcIkJhY2sgdG8gbXkgY291cnNlc1wiXG4jICAgIGVkaXRfZGV0YWlsczogXCJFZGl0IGNsYXNzIGRldGFpbHNcIlxuIyAgICBwdXJjaGFzZV9lbnJvbGxtZW50czogXCJQdXJjaGFzZSBTdHVkZW50IExpY2Vuc2VzXCJcbiMgICAgcmVtb3ZlX3N0dWRlbnQ6IFwicmVtb3ZlIHN0dWRlbnRcIlxuIyAgICBhc3NpZ246IFwiQXNzaWduXCJcbiMgICAgdG9fYXNzaWduOiBcInRvIGFzc2lnbiBwYWlkIGNvdXJzZXMuXCJcbiAgICBzdHVkZW50OiBcIu2VmeyDnVwiXG4gICAgdGVhY2hlcjogXCLqtZDsgqxcIlxuICAgIGFyZW5hOiBcIuyVhOugiOuCmFwiXG4gICAgYXZhaWxhYmxlX2xldmVsczogXCLqsIDriqXtlZwg66CI67KoXCJcbiAgICBzdGFydGVkOiBcIuyLnOyekVwiXG4gICAgY29tcGxldGU6IFwi7JmE7ISxXCJcbiAgICBwcmFjdGljZTogXCLsl7DsirVcIlxuICAgIHJlcXVpcmVkOiBcIu2VhOyImFwiXG4jICAgIHdlbGNvbWVfdG9fY291cnNlczogXCJBZHZlbnR1cmVycywgd2VsY29tZSB0byBDb3Vyc2VzIVwiXG4jICAgIHJlYWR5X3RvX3BsYXk6IFwiUmVhZHkgdG8gcGxheT9cIlxuIyAgICBzdGFydF9uZXdfZ2FtZTogXCJTdGFydCBOZXcgR2FtZVwiXG4jICAgIHBsYXlfbm93X2xlYXJuX2hlYWRlcjogXCJQbGF5IG5vdyB0byBsZWFyblwiXG4jICAgIHBsYXlfbm93X2xlYXJuXzE6IFwiYmFzaWMgc3ludGF4IHRvIGNvbnRyb2wgeW91ciBjaGFyYWN0ZXJcIlxuIyAgICBwbGF5X25vd19sZWFybl8yOiBcIndoaWxlIGxvb3BzIHRvIHNvbHZlIHBlc2t5IHB1enpsZXNcIlxuIyAgICBwbGF5X25vd19sZWFybl8zOiBcInN0cmluZ3MgJiB2YXJpYWJsZXMgdG8gY3VzdG9taXplIGFjdGlvbnNcIlxuIyAgICBwbGF5X25vd19sZWFybl80OiBcImhvdyB0byBkZWZlYXQgYW4gb2dyZSAoaW1wb3J0YW50IGxpZmUgc2tpbGxzISlcIlxuIyAgICB3ZWxjb21lX3RvX3BhZ2U6IFwiTXkgU3R1ZGVudCBEYXNoYm9hcmRcIlxuIyAgICBteV9jbGFzc2VzOiBcIkN1cnJlbnQgQ2xhc3Nlc1wiXG4jICAgIGNsYXNzX2FkZGVkOiBcIkNsYXNzIHN1Y2Nlc3NmdWxseSBhZGRlZCFcIlxuIyAgICB2aWV3X21hcDogXCJ2aWV3IG1hcFwiXG4jICAgIHZpZXdfdmlkZW9zOiBcInZpZXcgdmlkZW9zXCJcbiMgICAgdmlld19wcm9qZWN0X2dhbGxlcnk6IFwidmlldyBteSBjbGFzc21hdGVzJyBwcm9qZWN0c1wiXG4jICAgIGpvaW5fY2xhc3M6IFwiSm9pbiBBIENsYXNzXCJcbiMgICAgam9pbl9jbGFzc18yOiBcIkpvaW4gY2xhc3NcIlxuIyAgICBhc2tfdGVhY2hlcl9mb3JfY29kZTogXCJBc2sgeW91ciB0ZWFjaGVyIGlmIHlvdSBoYXZlIGEgQ29kZUNvbWJhdCBjbGFzcyBjb2RlISBJZiBzbywgZW50ZXIgaXQgYmVsb3c6XCJcbiMgICAgZW50ZXJfY19jb2RlOiBcIjxFbnRlciBDbGFzcyBDb2RlPlwiXG4jICAgIGpvaW46IFwiSm9pblwiXG4jICAgIGpvaW5pbmc6IFwiSm9pbmluZyBjbGFzc1wiXG4jICAgIGNvdXJzZV9jb21wbGV0ZTogXCJDb3Vyc2UgQ29tcGxldGVcIlxuIyAgICBwbGF5X2FyZW5hOiBcIlBsYXkgQXJlbmFcIlxuIyAgICB2aWV3X3Byb2plY3Q6IFwiVmlldyBQcm9qZWN0XCJcbiMgICAgc3RhcnQ6IFwiU3RhcnRcIlxuIyAgICBsYXN0X2xldmVsOiBcIkxhc3QgbGV2ZWwgcGxheWVkXCJcbiMgICAgbm90X3lvdTogXCJOb3QgeW91P1wiXG4jICAgIGNvbnRpbnVlX3BsYXlpbmc6IFwiQ29udGludWUgUGxheWluZ1wiXG4jICAgIG9wdGlvbjFfaGVhZGVyOiBcIkludml0ZSBTdHVkZW50cyBieSBFbWFpbFwiXG4jICAgIHJlbW92ZV9zdHVkZW50MTogXCJSZW1vdmUgU3R1ZGVudFwiXG4jICAgIGFyZV95b3Vfc3VyZTogXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcmVtb3ZlIHRoaXMgc3R1ZGVudCBmcm9tIHRoaXMgY2xhc3M/XCJcbiAgICByZW1vdmVfZGVzY3JpcHRpb24xOiBcIu2VmeyDneuTpOydgCDsnbQg6rWQ7Iuk6rO8IOyImOyXheyXkCDrjIDtlZwg7JWh7IS47Iqk66W8IOyeg+yWtOuyhOumtCDqsoPsnoXri4jri6QuIO2VmOyngOunjOynhO2WieuPhOyZgCDqsozsnoQg7ZSM66CI7J2064qUIOyeg+yngCDslYrsirXri4jri6QuIOq3uOumrOqzoCDtlZnsg53rk6TsnYAg7Ja064qQIOuVjOuCmCDqtZDsi6TroZwg64uk7IucIOy0iOuMgCDrsJvsnYQg7IiYIOyeiOyKteuLiOuLpC4gXCJcbiAgICByZW1vdmVfZGVzY3JpcHRpb24yOiBcIu2ZnOyEse2ZlOuQnCDrnbzsnbTshLzsiqTripQg7ZmY67aI7ZWgIOyImCDsl4bsirXri4jri6QuIFwiXG4gICAgbGljZW5zZV93aWxsX3Jldm9rZTogXCLtlbTri7kg7ZWZ7IOd7J2YIOudvOydtOyEoOyKpOuKlCDtj5Dsp4DrkJjqs6Ag64uk66W4IO2VmeyDneuTpOyXkOqyjCDrsLDsoJXsnbQg6rCA64ql7ZWY6rKMIOuQqeuLiOuLpC5cIlxuICAgIGtlZXBfc3R1ZGVudDogXCLtlZnsg50g7Jyg7KeAXCJcbiAgICByZW1vdmluZ191c2VyOiBcIuycoOyggCDsgq3soJxcIlxuICAgIHN1YnRpdGxlOiBcIuyImOyXhSDrs7XsirVcIiAjIEZsYXQgc3R5bGUgcmVkZXNpZ25cbiAgICBjaGFuZ2Vsb2c6IFwi7IiY7JeF7J2YIOugiOuyqCDstZzsi6Ag67OA6rK9IOuztOq4sFwiXG4gICAgc2VsZWN0X2xhbmd1YWdlOiBcIuyWuOyWtCDshKDtg50gXCJcbiAgICBzZWxlY3RfbGV2ZWw6IFwi66CI67KoIOyEoO2DnVwiXG4gICAgcGxheV9sZXZlbDogXCLroIjrsqgg7ZSM66CI7J20XCJcbiAgICBjb25jZXB0c19jb3ZlcmVkOiBcIuyImOyXhSDrgrTsmqlcIlxuICAgIHZpZXdfZ3VpZGVfb25saW5lOiBcIuugiOuyqCDqsJzsmpQg67CPIO2VtOuLtVwiXG4gICAgZ3JhbnRzX2xpZmV0aW1lX2FjY2VzczogXCLrqqjrk6Ag7IiY7JeF7JeQIOuMgO2VnCDslaHshLjsiqQg7ZqN65OdLlwiXG4gICAgZW5yb2xsbWVudF9jcmVkaXRzX2F2YWlsYWJsZTogXCLqsIDriqXtlZwg65287J207ISg7IqkOlwiXG4gICAgbGFuZ3VhZ2Vfc2VsZWN0OiBcIuyWuOyWtCDshKDtg51cIiAjIENsYXNzcm9vbVNldHRpbmdzTW9kYWxcbiAgICBsYW5ndWFnZV9jYW5ub3RfY2hhbmdlOiBcIu2VmeyDneydtCDsiJjsl4Xsl5Ag7LC46rCA7ZWY66m0IOyWuOyWtCDshKTsoJXsnYQg67CU6r+AIOyImCDsl4bsirXri4jri6QuXCJcbiAgICBhdmdfc3R1ZGVudF9leHBfbGFiZWw6IFwi7ZWZ7IOd7J2YIO2Pieq3oCDtlITroZzqt7jrnpjrsI0g6rK97ZeYXCJcbiAgICBhdmdfc3R1ZGVudF9leHBfZGVzYzogXCLsnbTqsoPsnLzroZwg7IiY7JeFIOuCtOyaqeydhCDrjZQg7KCB7KCI7ZWY6rKMIO2OuOyEse2VoCDsiJgg7J6I7Iq164uI64ukLlwiXG4gICAgYXZnX3N0dWRlbnRfZXhwX3NlbGVjdDogXCLqsIDsnqUg7JWM66ee7J2AIOyEoO2DneyngOulvCDqs6DrpbTshLjsmpQgXCJcbiAgICBhdmdfc3R1ZGVudF9leHBfbm9uZTogXCLqsr3tl5gg7JeG7J2MIC0g6rK97ZeYLCDsp4Dsi50g7KCE66y0XCJcbiAgICBhdmdfc3R1ZGVudF9leHBfYmVnaW5uZXI6IFwi7LSI67O07J6QIOKAkyDslb3qsITsnZgg7L2U65SpIOqyve2XmFwiXG4gICAgYXZnX3N0dWRlbnRfZXhwX2ludGVybWVkaWF0ZTogXCLspJHquInsnpAg4oCTIOy9lOuUqSDqsr3roKXsnbQg7J6I64ukXCJcbiAgICBhdmdfc3R1ZGVudF9leHBfYWR2YW5jZWQ6IFwi6rOg6riJIOKAkyDrjIDrn4nsnZgg7L2U65SpIOqyveugpVwiXG4gICAgYXZnX3N0dWRlbnRfZXhwX3ZhcmllZDogXCLqsIHsooUg7L2U65SpIOqyveugpVwiXG4gICAgc3R1ZGVudF9hZ2VfcmFuZ2VfbGFiZWw6IFwi7ZWZ7IOdIO2Pieq3oCDsl7DroLlcIlxuICAgIHN0dWRlbnRfYWdlX3JhbmdlX3lvdW5nZXI6IFwiNuyEuCDsnbTtlZhcIlxuICAgIHN0dWRlbnRfYWdlX3JhbmdlX29sZGVyOiBcIjE47IS4IOydtOyDgVwiXG4gICAgc3R1ZGVudF9hZ2VfcmFuZ2VfdG86IFwi7JeQ7IScIFwiXG4jICAgIGVzdGltYXRlZF9jbGFzc19kYXRlc19sYWJlbDogXCJFc3RpbWF0ZWQgQ2xhc3MgRGF0ZXNcIlxuIyAgICBlc3RpbWF0ZWRfY2xhc3NfZnJlcXVlbmN5X2xhYmVsOiBcIkVzdGltYXRlZCBDbGFzcyBGcmVxdWVuY3lcIlxuIyAgICBjbGFzc2VzX3Blcl93ZWVrOiBcImNsYXNzZXMgcGVyIHdlZWtcIlxuIyAgICBtaW51dGVzX3Blcl9jbGFzczogXCJtaW51dGVzIHBlciBjbGFzc1wiXG4gICAgY3JlYXRlX2NsYXNzOiBcIuuwmCDsg53shLFcIlxuICAgIGNsYXNzX25hbWU6IFwi67CYIOydtOumhFwiXG4gICAgdGVhY2hlcl9hY2NvdW50X3Jlc3RyaWN0ZWQ6IFwi64u57Iug7J2YIOqzhOygleydgCDshKDsg53ri5gg6rOE7KCV7J6F64uI64ukLiDtlZnsg50g7Luo7YWQ7Lig7JeQIOyVoeyEuOyKpO2VoCDsiJgg7JeG7Iq164uI64ukLlwiXG4gICAgYWNjb3VudF9yZXN0cmljdGVkOiBcIu2VtOuLuSDtjpjsnbTsp4Dsl5Ag7KCR7IaN7ZWY6riwIOychO2VtCDtlZnsg50g6rOE7KCV7J20IO2VhOyalO2VqeuLiOuLpC5cIlxuICAgIHVwZGF0ZV9hY2NvdW50X2xvZ2luX3RpdGxlOiBcIuuhnOq3uOyduO2VtOyEnCDqs4TsoJUg7JeF642w7J207Yq47ZWY6riwXCJcbiAgICB1cGRhdGVfYWNjb3VudF90aXRsZTogXCLri7nsi6DsnZgg6rOE7KCV7JeQIOyjvOydmOqwgCDtlYTsmpTtlanri4jri6QhXCJcbiAgICB1cGRhdGVfYWNjb3VudF9ibHVyYjogXCLrsJjsl5Ag7KCR7IaN7ZWY6riwIOyghOyXkCDtlbTri7kg6rOE7KCV7J2YIOyCrOyaqSDrqqnsoIHsnYQg7ISg7YOd7ZW07KO87IS47JqULlwiXG4gICAgdXBkYXRlX2FjY291bnRfY3VycmVudF90eXBlOiBcIu2YhOyerCDqs4TsoJUg7Jyg7ZiVOiBcIlxuICAgIHVwZGF0ZV9hY2NvdW50X2FjY291bnRfZW1haWw6IFwi6rOE7KCVIOydtOuplOydvC/snbTrpoQ6IFwiXG4gICAgdXBkYXRlX2FjY291bnRfYW1fdGVhY2hlcjogXCLshKDsg53ri5jsnoXri4jri6QgXCJcbiAgICB1cGRhdGVfYWNjb3VudF9rZWVwX2FjY2VzczogXCLrgrTqsIAg7IOd7ISx7ZWcIOuwmOyXkCDrjIDtlZwg7KCR7IaNIOq2jO2VnCDsnKDsp4DtlZjquLBcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3RlYWNoZXJzX2NhbjogXCLshKDsg53ri5gg6rOE7KCV7J2AIOuLpOydjOqzvCDqsJnsnYAg6raM7ZWc7J20IOyeiOyKteuLiOuLpDpcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3RlYWNoZXJzX2NhbjE6IFwi67CYIOyDneyEsS/qtIDrpqwv7LaU6rCAXCJcbiAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc19jYW4yOiBcIuyImOyXheyXkCDtlZnsg50g7LaU6rCA7ZWY6riwXCJcbiAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc19jYW4zOiBcIu2FjOyKpO2KuCDrqqnsoIHsnLzroZwg66qo65OgIOyImOyXhSDroIjrsqjsnYTrpbwg6rCc67Cp7ZWY6riwXCJcbiAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc19jYW40OiBcIuyDiOuhnCDstpzsi5zrkJwg6rWQ7KeB7JuQIOyghOyaqSDrgrTsmqnsl5Ag7JWh7IS47Iqk7ZWY6riwXCJcbiAgICB1cGRhdGVfYWNjb3VudF90ZWFjaGVyc193YXJuaW5nOiBcIuqyveqzoDog7ZiE7J6sIOqwgOyehe2VnCDrqqjrk6Ag67CY7JeQ7IScIOuWoOuCmOqyjCDrkJjqs6Ag7ZWZ7IOdIOyLoOu2hOycvOuhnCDtmZzrj5nsnbQg67aI6rCA7ZWY6rKMIOuQqeuLiOuLpC5cIlxuICAgIHVwZGF0ZV9hY2NvdW50X3JlbWFpbl90ZWFjaGVyOiBcIuq1kOyngeybkCDsnKDsp4AgXCJcbiAgICB1cGRhdGVfYWNjb3VudF91cGRhdGVfdGVhY2hlcjogXCLqtZDsp4Hsm5Ag6rOE7KCV7Jy866GcIOyXheuNsOydtO2KuFwiXG4gICAgdXBkYXRlX2FjY291bnRfYW1fc3R1ZGVudDogXCLtlZnsg53snoXri4jri6RcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3JlbW92ZV9hY2Nlc3M6IFwi7IOd7ISx7ZWcIOuwmOyXkCDrjIDtlZwg7JWh7IS47IqkIOy3qOyGjFwiXG4gICAgdXBkYXRlX2FjY291bnRfc3R1ZGVudHNfY2FuOiBcIu2VmeyDnSDqs4TsoJXsnYAg64uk7J2M6rO8IOqwmeydgCDqtoztlZzsnYQg6rCA7KeR64uI64ukOiBcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjE6IFwi67CYIOqwgOyehVwiXG4gICAgdXBkYXRlX2FjY291bnRfc3R1ZGVudHNfY2FuMjogXCLtlZnsg50g7Iug67aE7Jy866GcIOyImOyXheydhCDsmYTro4ztlZjqs6Ag7J6Q7Iug7J2YIOynhOuPhOulvCDtmZXsnbhcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjM6IFwi64uk66W4IO2VmeyDneuTpOqzvCDqsqjro6jquLBcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX2NhbjQ6IFwi7IOI66GcIOy2nOyLnOuQnCDtlZnsg50g7KCE7JqpIOuCtOyaqeyXkCDslaHshLjsiqTtlZjquLBcIlxuICAgIHVwZGF0ZV9hY2NvdW50X3N0dWRlbnRzX3dhcm5pbmc6IFwi6rK96rOgOiDrjZQg7J207IOBIOyDiOuhnOyatCDrsJjsnYQg7IOd7ISx7ZWY6rGw64KYIOydtOuvuCDsg53shLHtlZwg67CY7J2EIOq0gOumrO2VoCDsiJgg7JeG6rKMIOuQqeuLiOuLpC4gXCJcbiAgICB1bnN1YnNjcmliZV93YXJuaW5nOiBcIuqyveqzoDog66ek64us7J2YIOq1rOuPheydtCDst6jshozrkKnri4jri6QuXCJcbiAgICB1cGRhdGVfYWNjb3VudF9yZW1haW5fc3R1ZGVudDogXCLtlZnsg50g7Jyg7KeAXCJcbiAgICB1cGRhdGVfYWNjb3VudF91cGRhdGVfc3R1ZGVudDogXCLtlZnsg53snLzroZwg7JeF642w7J207Yq47ZWY6riwXCJcbiAgICBuZWVkX2FfY2xhc3NfY29kZTogXCLqsIDsnoXtlZjroKTripQg67CY7J2YIOuwmCDsvZTrk5zqsIAg7ZWE7JqU7ZWp64uI64ukOlwiXG4gICAgdXBkYXRlX2FjY291bnRfbm90X3N1cmU6IFwi7Ja064qQIOqyg+ydhCDshKDtg53tlbTslbwg7ZWgIOyngCDrqqjrpbTqsqDrgpjsmpQ/IOydtOuplOydvOydhCDrs7TrgrTshLjsmpQ6XCJcbiAgICB1cGRhdGVfYWNjb3VudF9jb25maXJtX3VwZGF0ZV9zdHVkZW50OiBcIuqzhOygleydhCDtlZnsg50g6rOE7KCV7Jy866GcIOyXheuNsOydtO2KuCDtlZjqsqDsirXri4jquYw/IFwiXG4gICAgdXBkYXRlX2FjY291bnRfY29uZmlybV91cGRhdGVfc3R1ZGVudDI6IFwi7IOI66Gc7Jq0IOuwmOydhCDsg53shLHtlZjqsbDrgpgg7J2066+4IOyDneyEse2VnCDrsJjsnYQg6rSA66as7ZWg7IiYIOyXhuqyjCDrkKnri4jri6QuIOy9lOuTnCDsu7TrsYPsl5DshJwg7IOd7ISx7ZWcIOuwmOydgCDsoJzqsbDrkJjrqbAg67O16rWs6rCAIOu2iOqwgOuKpe2VmOqyjCDrkKnri4jri6QuXCJcbiAgICBpbnN0cnVjdG9yOiBcIuyalOyyreyduDogXCJcbiAgICB5b3V2ZV9iZWVuX2ludml0ZWRfMTogXCLri7nsi6DsnYAg7IOI66Gc7Jq0IOqwgOyehSDsmpTssq3snYQg67Cb7JWY7Iq164uI64ukOiBcIlxuICAgIHlvdXZlX2JlZW5faW52aXRlZF8yOiBcIiwg7ZWZ7Iq1IOuCtOyaqTogXCJcbiAgICB5b3V2ZV9iZWVuX2ludml0ZWRfMzogXCIgd2l0aCB5b3VyIGNsYXNzbWF0ZXMgaW4gQ29kZUNvbWJhdC5cIlxuICAgIGJ5X2pvaW5pbmdfMTogXCJCeSBqb2luaW5nIFwiXG4gICAgYnlfam9pbmluZ18yOiBcIiDqsIDsnoXsnLzroZwg67mE67CA67KI7Zi466W8IOyerOyEpOygle2VoCDsiJgg7J6I7Iq164uI64ukLiDrmJDtlZwg7J2066mU7J28IOyjvOyGjOulvCDsnbjspp3tlbTshJwg7J6Q7Jyg66Gt6rKMIOuzgOqyveydtCDqsIDriqXtlanri4jri6QuIFwiXG4gICAgc2VudF92ZXJpZmljYXRpb246IFwi64uk7J2MIOydtOuplOydvOuhnCDsnbjspp0g66mU7J287J2EIOuztOuDiOyKteuLiOuLpDogXCJcbiAgICB5b3VfY2FuX2VkaXQ6IFwi7J2066mU7J287J2EIOyVhOuemCDso7zshozsl5DshJwg67OA6rK97ZWgIOyImCDsnojsirXri4jri6Q6IFwiXG4gICAgYWNjb3VudF9zZXR0aW5nczogXCLqs4TsoJUg7ISk7KCVXCJcbiAgICBzZWxlY3RfeW91cl9oZXJvOiBcIuyYgeybhSDshKDtg51cIlxuICAgIHNlbGVjdF95b3VyX2hlcm9fZGVzY3JpcHRpb246IFwi7IiY7JeFIO2OmOydtOyngOyXkOyEnCDslrjsoJzrk6Dsp4Ag7JiB7JuF7J2EIOuzgOqyve2VoCDsiJgg7J6I7Iq164uI64ukLiBcXFwi7JiB7JuF67OA6rK9XFxcIuulvCDtgbTrpq3tlZjshLjsmpQuXCJcbiAgICBzZWxlY3RfdGhpc19oZXJvOiBcIuydtCDsmIHsm4Ug7ISg7YOd7ZWY6riwXCJcbiAgICBjdXJyZW50X2hlcm86IFwi7ZiE7J6sIOyYgeybhTpcIlxuICAgIGN1cnJlbnRfaGVyb19mZW1hbGU6IFwi7ZiE7J6sIOyYgeybhTpcIlxuICAgIHdlYl9kZXZfbGFuZ3VhZ2VfdHJhbnNpdGlvbjogXCLsnbTrsogg7IiY7JeF7JeQ7ISc64qUIEhUTUwgLyBKYXZhU2NyaXB07J2EIOyCrOyaqe2VqeuLiOuLpC4g7J2066+4IFB5dGhvbuycvOuhnCDtlZnsirXtlZwg67CY7J2AIOy2lOqwgOyggeyduCBKYXZhU2NyaXB0IO2KnO2GoOumrOyWvCDroIjrsqjsnYTrpbwg7KeE7ZaJ7ZWY64qUIOqyg+ydhCDqtozsnqXtlanri4jri6QuIOydtOuvuCBKYXZhU2NyaXB066GcIOyImOyXheydhCDsp4TtlontlZwg67CY65Ok7J2AIO2VtOuLuSDroIjrsqjsnYTrpbwg7Iqk7YK17ZWY7IS47JqULlwiXG4gICAgY291cnNlX21lbWJlcnNoaXBfcmVxdWlyZWRfdG9fcGxheTogXCLsiJjsl4Xsl5Ag7LC47Jes7ZWY7JesIO2VtOuLuSDroIjrsqjsnYTrpbwg7ZSM66CI7J207ZWgIOyImCDsnojsirXri4jri6QuIFwiXG4gICAgbGljZW5zZV9yZXF1aXJlZF90b19wbGF5OiBcIuyEoOyDneuLmOyXkOqyjCDrnbzsnbTshKDsiqTrpbwg7ZeI6rCAIOuwm+qzoCDsvZTrk5wg7Lu067GD7J2EIOqzhOyGjSDtlZjshLjsmpQhIFwiXG4gICAgdXBkYXRlX29sZF9jbGFzc3Jvb206IFwi7IOI66Gc7Jq0IO2VmeuFhCwg7IOI66Gc7Jq0IOugiOuyqCFcIlxuICAgIHVwZGF0ZV9vbGRfY2xhc3Nyb29tX2RldGFpbDogXCLstZzsi6DsnZgg66CI67Ko7J2E66W8IO2ZleyduO2VoCDsiJgg7J6I6riwIOychO2VtCwg67O4IO2Vmeq4sOyXkCDsg4jroZzsmrQg67CY7J2EIOyDneyEse2VmOuKlCDqsoPsnYQg7LaU7LKcIOuTnOumveuLiOuLpC4gXCJcbiAgICB0ZWFjaGVyX2Rhc2hib2FyZDogXCLshKDsg53ri5gg64yA7ImsIOuztOuTnCBcIlxuICAgIHVwZGF0ZV9vbGRfY2xhc3Nyb29tX2RldGFpbF8yOiBcIuyDiOuhnOyatCDrsJgg7IOd7ISx7J2EIO2BtOumre2VmOqzoCDtlZnsg53sl5Dqsowg7IOI66Gc7Jq0IOuwmCDsvZTrk5zrpbwg67O064K07KO87IS47JqULlwiXG4gICAgdmlld19hc3Nlc3NtZW50czogXCLtj4nqsIAg67O06riwXCJcbiAgICB2aWV3X2NoYWxsZW5nZXM6IFwi64+E7KCEIOugiOuyqCDrs7TquLBcIlxuIyAgICB2aWV3X3Jhbmtpbmc6IFwidmlldyByYW5raW5nXCJcbiMgICAgcmFua2luZ19wb3NpdGlvbjogXCJQb3NpdGlvblwiXG4jICAgIHJhbmtpbmdfcGxheWVyczogXCJQbGF5ZXJzXCJcbiMgICAgcmFua2luZ19jb21wbGV0ZWRfbGV2ZXM6IFwiQ29tcGxldGVkIGxldmVsc1wiXG4gICAgY2hhbGxlbmdlOiBcIuuPhOyghDogXCJcbiAgICBjaGFsbGVuZ2VfbGV2ZWw6IFwi64+E7KCEIOugiOuyqDogXCJcbiAgICBzdGF0dXM6IFwi7IOB7YOcOlwiXG4gICAgYXNzZXNzbWVudHM6IFwi7Y+J6rCAXCJcbiAgICBjaGFsbGVuZ2VzOiBcIuuPhOyghFwiXG4gICAgbGV2ZWxfbmFtZTogXCLroIjrsqgg7J2066aEOlwiXG4gICAga2VlcF90cnlpbmc6IFwi7Iuc64+E7ZW067O06riwXCJcbiAgICBzdGFydF9jaGFsbGVuZ2U6IFwi64+E7KCEIOyLnOyekVwiXG4gICAgbG9ja2VkOiBcIuyeoOq5gFwiXG4gICAgY29uY2VwdHNfdXNlZDogXCLsgqzsmqnrkJwg64K07JqpOiBcIlxuICAgIHNob3dfY2hhbmdlX2xvZzogXCLtlbTri7kg7IiY7JeF7J2YIOugiOuyqCDrs4DtmZQg7ZGc7IucXCJcbiAgICBoaWRlX2NoYW5nZV9sb2c6IFwi7ZW064u5IOyImOyXheydmCDroIjrsqgg67OA7ZmUIOyIqOq5gFwiXG4jICAgIGNvbmNlcHRfdmlkZW9zOiBcIkNvbmNlcHQgVmlkZW9zXCJcbiMgICAgY29uY2VwdDogXCJDb25jZXB0OlwiXG4jICAgIGJhc2ljX3N5bnRheDogXCJCYXNpYyBTeW50YXhcIlxuIyAgICB3aGlsZV9sb29wczogXCJXaGlsZSBMb29wc1wiXG4jICAgIHZhcmlhYmxlczogXCJWYXJpYWJsZXNcIlxuIyAgICBiYXNpY19zeW50YXhfZGVzYzogXCJTeW50YXggaXMgaG93IHdlIHdyaXRlIGNvZGUuIEp1c3QgYXMgc3BlbGxpbmcgYW5kIGdyYW1tYXIgYXJlIGltcG9ydGFudCBpbiB3cml0aW5nIG5hcnJhdGl2ZXMgYW5kIGVzc2F5cywgc3ludGF4IGlzIGltcG9ydGFudCB3aGVuIHdyaXRpbmcgY29kZS4gSHVtYW5zIGFyZSBnb29kIGF0IGZpZ3VyaW5nIG91dCB3aGF0IHNvbWV0aGluZyBtZWFucywgZXZlbiBpZiBpdCBpc24ndCBleGFjdGx5IGNvcnJlY3QsIGJ1dCBjb21wdXRlcnMgYXJlbid0IHRoYXQgc21hcnQsIGFuZCB0aGV5IG5lZWQgeW91IHRvIHdyaXRlIHZlcnkgcHJlY2lzZWx5LlwiXG4jICAgIHdoaWxlX2xvb3BzX2Rlc2M6IFwiQSBsb29wIGlzIGEgd2F5IG9mIHJlcGVhdGluZyBhY3Rpb25zIGluIGEgcHJvZ3JhbS4gWW91IGNhbiB1c2UgdGhlbSBzbyB5b3UgZG9uJ3QgaGF2ZSB0byBrZWVwIHdyaXRpbmcgcmVwZXRpdGl2ZSBjb2RlLCBhbmQgd2hlbiB5b3UgZG9uJ3Qga25vdyBleGFjdGx5IGhvdyBtYW55IHRpbWVzIGFuIGFjdGlvbiB3aWxsIG5lZWQgdG8gb2NjdXIgdG8gYWNjb21wbGlzaCBhIHRhc2suXCJcbiMgICAgdmFyaWFibGVzX2Rlc2M6IFwiV29ya2luZyB3aXRoIHZhcmlhYmxlcyBpcyBsaWtlIG9yZ2FuaXppbmcgdGhpbmdzIGluIHNob2Vib3hlcy4gWW91IGdpdmUgdGhlIHNob2Vib3ggYSBuYW1lLCBsaWtlIFxcXCJTY2hvb2wgU3VwcGxpZXNcXFwiLCBhbmQgdGhlbiB5b3UgcHV0IHRoaW5ncyBpbnNpZGUuIFRoZSBleGFjdCBjb250ZW50cyBvZiB0aGUgYm94IG1pZ2h0IGNoYW5nZSBvdmVyIHRpbWUsIGJ1dCB3aGF0ZXZlcidzIGluc2lkZSB3aWxsIGFsd2F5cyBiZSBjYWxsZWQgXFxcIlNjaG9vbCBTdXBwbGllc1xcXCIuIEluIHByb2dyYW1taW5nLCB2YXJpYWJsZXMgYXJlIHN5bWJvbHMgdXNlZCB0byBzdG9yZSBkYXRhIHRoYXQgd2lsbCBjaGFuZ2Ugb3ZlciB0aGUgY291cnNlIG9mIHRoZSBwcm9ncmFtLiBWYXJpYWJsZXMgY2FuIGhvbGQgYSB2YXJpZXR5IG9mIGRhdGEgdHlwZXMsIGluY2x1ZGluZyBudW1iZXJzIGFuZCBzdHJpbmdzLlwiXG4jICAgIGxvY2tlZF92aWRlb3NfZGVzYzogXCJLZWVwIHBsYXlpbmcgdGhlIGdhbWUgdG8gdW5sb2NrIHRoZSBfX2NvbmNlcHRfbmFtZV9fIGNvbmNlcHQgdmlkZW8uXCJcbiMgICAgdW5sb2NrZWRfdmlkZW9zX2Rlc2M6IFwiUmV2aWV3IHRoZSBfX2NvbmNlcHRfbmFtZV9fIGNvbmNlcHQgdmlkZW8uXCJcbiMgICAgdmlkZW9fc2hvd25fYmVmb3JlOiBcInNob3duIGJlZm9yZSBfX2xldmVsX19cIlxuIyAgICBsaW5rX2dvb2dsZV9jbGFzc3Jvb206IFwiTGluayBHb29nbGUgQ2xhc3Nyb29tXCJcbiMgICAgc2VsZWN0X3lvdXJfY2xhc3Nyb29tOiBcIlNlbGVjdCBZb3VyIENsYXNzcm9vbVwiXG4jICAgIG5vX2NsYXNzcm9vbXNfZm91bmQ6IFwiTm8gY2xhc3Nyb29tcyBmb3VuZFwiXG4jICAgIGNyZWF0ZV9jbGFzc3Jvb21fbWFudWFsbHk6IFwiQ3JlYXRlIGNsYXNzcm9vbSBtYW51YWxseVwiXG4jICAgIGNsYXNzZXM6IFwiQ2xhc3Nlc1wiXG4jICAgIGNlcnRpZmljYXRlX2J0bl9wcmludDogXCJQcmludFwiXG4jICAgIGNlcnRpZmljYXRlX2J0bl90b2dnbGU6IFwiVG9nZ2xlXCJcblxuIyAgcHJvamVjdF9nYWxsZXJ5OlxuIyAgICBub19wcm9qZWN0c19wdWJsaXNoZWQ6IFwiQmUgdGhlIGZpcnN0IHRvIHB1Ymxpc2ggYSBwcm9qZWN0IGluIHRoaXMgY291cnNlIVwiXG4jICAgIHZpZXdfcHJvamVjdDogXCJWaWV3IFByb2plY3RcIlxuIyAgICBlZGl0X3Byb2plY3Q6IFwiRWRpdCBQcm9qZWN0XCJcblxuIyAgdGVhY2hlcjpcbiMgICAgYXNzaWduaW5nX2NvdXJzZTogXCJBc3NpZ25pbmcgY291cnNlXCJcbiMgICAgYmFja190b190b3A6IFwiQmFjayB0byBUb3BcIlxuIyAgICBjbGlja19zdHVkZW50X2NvZGU6IFwiQ2xpY2sgb24gYW55IGxldmVsIHRoYXQgdGhlIHN0dWRlbnQgaGFzIHN0YXJ0ZWQgb3IgY29tcGxldGVkIGJlbG93IHRvIHZpZXcgdGhlIGNvZGUgdGhleSB3cm90ZS5cIlxuIyAgICBjb2RlOiBcIl9fbmFtZV9fJ3MgQ29kZVwiXG4jICAgIGNvbXBsZXRlX3NvbHV0aW9uOiBcIkNvbXBsZXRlIFNvbHV0aW9uXCJcbiMgICAgY291cnNlX25vdF9zdGFydGVkOiBcIlN0dWRlbnQgaGFzIG5vdCBzdGFydGVkIHRoaXMgY291cnNlIHlldC5cIlxuIyAgICBhcHByZWNpYXRpb25fd2Vla19ibHVyYjE6IFwiRm9yIDxzdHJvbmc+VGVhY2hlciBBcHByZWNpYXRpb24gV2VlayAyMDE5PC9zdHJvbmc+LCB3ZSBhcmUgb2ZmZXJpbmcgZnJlZSAxLXdlZWsgbGljZW5zZXMhPGJyIC8+RW1haWwgUm9iIEFyZXZhbG8gKDxhIGhyZWY9XFxcIm1haWx0bzpyb2JhcmV2QGNvZGVjb21iYXQuY29tP3N1YmplY3Q9VGVhY2hlciBBcHByZWNpYXRpb24gV2Vla1xcXCI+cm9iYXJldkBjb2RlY29tYmF0LmNvbTwvYT4pIHdpdGggc3ViamVjdCBsaW5lIFxcXCI8c3Ryb25nPlRlYWNoZXIgQXBwcmVjaWF0aW9uIFdlZWs8L3N0cm9uZz5cXFwiLCBhbmQgaW5jbHVkZTpcIlxuIyAgICBhcHByZWNpYXRpb25fd2Vla19ibHVyYjI6IFwidGhlIHF1YW50aXR5IG9mIDEtd2VlayBsaWNlbnNlcyB5b3UnZCBsaWtlICgxIHBlciBzdHVkZW50KVwiXG4jICAgIGFwcHJlY2lhdGlvbl93ZWVrX2JsdXJiMzogXCJ0aGUgZW1haWwgYWRkcmVzcyBvZiB5b3VyIENvZGVDb21iYXQgdGVhY2hlciBhY2NvdW50XCJcbiMgICAgYXBwcmVjaWF0aW9uX3dlZWtfYmx1cmI0OiBcIndoZXRoZXIgeW91J2QgbGlrZSBsaWNlbnNlcyBmb3IgV2VlayAxIChNYXkgNi0xMCkgb3IgV2VlayAyIChNYXkgMTMtMTcpXCJcbiMgICAgaG9jX2hhcHB5X2VkX3dlZWs6IFwiSGFwcHkgQ29tcHV0ZXIgU2NpZW5jZSBFZHVjYXRpb24gV2VlayFcIlxuIyAgICBob2NfYmx1cmIxOiBcIkxlYXJuIGFib3V0IHRoZSBmcmVlXCJcbiMgICAgaG9jX2JsdXJiMjogXCJDb2RlLCBQbGF5LCBTaGFyZVwiXG4jICAgIGhvY19ibHVyYjM6IFwiYWN0aXZpdHksIGRvd25sb2FkIGEgbmV3IHRlYWNoZXIgbGVzc29uIHBsYW4sIGFuZCB0ZWxsIHlvdXIgc3R1ZGVudHMgdG8gbG9nIGluIHRvIHBsYXkhXCJcbiMgICAgaG9jX2J1dHRvbl90ZXh0OiBcIlZpZXcgQWN0aXZpdHlcIlxuIyAgICBub19jb2RlX3lldDogXCJTdHVkZW50IGhhcyBub3Qgd3JpdHRlbiBhbnkgY29kZSBmb3IgdGhpcyBsZXZlbCB5ZXQuXCJcbiMgICAgb3Blbl9lbmRlZF9sZXZlbDogXCJPcGVuLUVuZGVkIExldmVsXCJcbiMgICAgcGFydGlhbF9zb2x1dGlvbjogXCJQYXJ0aWFsIFNvbHV0aW9uXCJcbiMgICAgcmVtb3ZpbmdfY291cnNlOiBcIlJlbW92aW5nIGNvdXJzZVwiXG4jICAgIHNvbHV0aW9uX2FyZW5hX2JsdXJiOiBcIlN0dWRlbnRzIGFyZSBlbmNvdXJhZ2VkIHRvIHNvbHZlIGFyZW5hIGxldmVscyBjcmVhdGl2ZWx5LiBUaGUgc29sdXRpb24gcHJvdmlkZWQgYmVsb3cgbWVldHMgdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgYXJlbmEgbGV2ZWwuXCJcbiMgICAgc29sdXRpb25fY2hhbGxlbmdlX2JsdXJiOiBcIlN0dWRlbnRzIGFyZSBlbmNvdXJhZ2VkIHRvIHNvbHZlIG9wZW4tZW5kZWQgY2hhbGxlbmdlIGxldmVscyBjcmVhdGl2ZWx5LiBPbmUgcG9zc2libGUgc29sdXRpb24gaXMgZGlzcGxheWVkIGJlbG93LlwiXG4jICAgIHNvbHV0aW9uX3Byb2plY3RfYmx1cmI6IFwiU3R1ZGVudHMgYXJlIGVuY291cmFnZWQgdG8gYnVpbGQgYSBjcmVhdGl2ZSBwcm9qZWN0IGluIHRoaXMgbGV2ZWwuIFBsZWFzZSByZWZlciB0byBjdXJyaWN1bHVtIGd1aWRlcyBpbiB0aGUgUmVzb3VyY2UgSHViIGZvciBpbmZvcm1hdGlvbiBvbiBob3cgdG8gZXZhbHVhdGUgdGhlc2UgcHJvamVjdHMuXCJcbiMgICAgc3R1ZGVudHNfY29kZV9ibHVyYjogXCJBIGNvcnJlY3Qgc29sdXRpb24gdG8gZWFjaCBsZXZlbCBpcyBwcm92aWRlZCB3aGVyZSBhcHByb3ByaWF0ZS4gSW4gc29tZSBjYXNlcywgaXTigJlzIHBvc3NpYmxlIGZvciBhIHN0dWRlbnQgdG8gc29sdmUgYSBsZXZlbCB1c2luZyBkaWZmZXJlbnQgY29kZS4gU29sdXRpb25zIGFyZSBub3Qgc2hvd24gZm9yIGxldmVscyB0aGUgc3R1ZGVudCBoYXMgbm90IHN0YXJ0ZWQuXCJcbiMgICAgY291cnNlX3NvbHV0aW9uOiBcIkNvdXJzZSBTb2x1dGlvblwiXG4jICAgIGxldmVsX292ZXJ2aWV3X3NvbHV0aW9uczogXCJMZXZlbCBPdmVydmlldyBhbmQgU29sdXRpb25zXCJcbiMgICAgbm9fc3R1ZGVudF9hc3NpZ25lZDogXCJObyBzdHVkZW50cyBoYXZlIGJlZW4gYXNzaWduZWQgdGhpcyBjb3Vyc2UuXCJcbiMgICAgcGFyZW5fbmV3OiBcIihuZXcpXCJcbiMgICAgc3R1ZGVudF9jb2RlOiBcIl9fbmFtZV9fJ3MgU3R1ZGVudCBDb2RlXCJcbiMgICAgdGVhY2hlcl9kYXNoYm9hcmQ6IFwiVGVhY2hlciBEYXNoYm9hcmRcIiAjIE5hdmJhclxuIyAgICBteV9jbGFzc2VzOiBcIk15IENsYXNzZXNcIlxuIyAgICBjb3Vyc2VzOiBcIkNvdXJzZSBHdWlkZXNcIlxuIyAgICBlbnJvbGxtZW50czogXCJTdHVkZW50IExpY2Vuc2VzXCJcbiMgICAgcmVzb3VyY2VzOiBcIlJlc291cmNlc1wiXG4jICAgIGhlbHA6IFwiSGVscFwiXG4jICAgIGxhbmd1YWdlOiBcIkxhbmd1YWdlXCJcbiMgICAgZWRpdF9jbGFzc19zZXR0aW5nczogXCJlZGl0IGNsYXNzIHNldHRpbmdzXCJcbiMgICAgYWNjZXNzX3Jlc3RyaWN0ZWQ6IFwiQWNjb3VudCBVcGRhdGUgUmVxdWlyZWRcIlxuIyAgICB0ZWFjaGVyX2FjY291bnRfcmVxdWlyZWQ6IFwiQSB0ZWFjaGVyIGFjY291bnQgaXMgcmVxdWlyZWQgdG8gYWNjZXNzIHRoaXMgY29udGVudC5cIlxuIyAgICBjcmVhdGVfdGVhY2hlcl9hY2NvdW50OiBcIkNyZWF0ZSBUZWFjaGVyIEFjY291bnRcIlxuIyAgICB3aGF0X2lzX2FfdGVhY2hlcl9hY2NvdW50OiBcIldoYXQncyBhIFRlYWNoZXIgQWNjb3VudD9cIlxuIyAgICB0ZWFjaGVyX2FjY291bnRfZXhwbGFuYXRpb246IFwiQSBDb2RlQ29tYmF0IFRlYWNoZXIgYWNjb3VudCBhbGxvd3MgeW91IHRvIHNldCB1cCBjbGFzc3Jvb21zLCBtb25pdG9yIHN0dWRlbnRz4oCZIHByb2dyZXNzIGFzIHRoZXkgd29yayB0aHJvdWdoIGNvdXJzZXMsIG1hbmFnZSBsaWNlbnNlcyBhbmQgYWNjZXNzIHJlc291cmNlcyB0byBhaWQgaW4geW91ciBjdXJyaWN1bHVtLWJ1aWxkaW5nLlwiXG4jICAgIGN1cnJlbnRfY2xhc3NlczogXCJDdXJyZW50IENsYXNzZXNcIlxuIyAgICBhcmNoaXZlZF9jbGFzc2VzOiBcIkFyY2hpdmVkIENsYXNzZXNcIlxuIyAgICBhcmNoaXZlZF9jbGFzc2VzX2JsdXJiOiBcIkNsYXNzZXMgY2FuIGJlIGFyY2hpdmVkIGZvciBmdXR1cmUgcmVmZXJlbmNlLiBVbmFyY2hpdmUgYSBjbGFzcyB0byB2aWV3IGl0IGluIHRoZSBDdXJyZW50IENsYXNzZXMgbGlzdCBhZ2Fpbi5cIlxuIyAgICB2aWV3X2NsYXNzOiBcInZpZXcgY2xhc3NcIlxuIyAgICBhcmNoaXZlX2NsYXNzOiBcImFyY2hpdmUgY2xhc3NcIlxuIyAgICB1bmFyY2hpdmVfY2xhc3M6IFwidW5hcmNoaXZlIGNsYXNzXCJcbiMgICAgdW5hcmNoaXZlX3RoaXNfY2xhc3M6IFwiVW5hcmNoaXZlIHRoaXMgY2xhc3NcIlxuIyAgICBub19zdHVkZW50c195ZXQ6IFwiVGhpcyBjbGFzcyBoYXMgbm8gc3R1ZGVudHMgeWV0LlwiXG4jICAgIG5vX3N0dWRlbnRzX3lldF92aWV3X2NsYXNzOiBcIlZpZXcgY2xhc3MgdG8gYWRkIHN0dWRlbnRzLlwiXG4jICAgIHRyeV9yZWZyZXNoaW5nOiBcIihZb3UgbWF5IG5lZWQgdG8gcmVmcmVzaCB0aGUgcGFnZSlcIlxuIyAgICBjcmVhdGVfbmV3X2NsYXNzOiBcIkNyZWF0ZSBhIE5ldyBDbGFzc1wiXG4jICAgIGNsYXNzX292ZXJ2aWV3OiBcIkNsYXNzIE92ZXJ2aWV3XCIgIyBWaWV3IENsYXNzIHBhZ2VcbiMgICAgYXZnX3BsYXl0aW1lOiBcIkF2ZXJhZ2UgbGV2ZWwgcGxheXRpbWVcIlxuIyAgICB0b3RhbF9wbGF5dGltZTogXCJUb3RhbCBwbGF5IHRpbWVcIlxuIyAgICBhdmdfY29tcGxldGVkOiBcIkF2ZXJhZ2UgbGV2ZWxzIGNvbXBsZXRlZFwiXG4jICAgIHRvdGFsX2NvbXBsZXRlZDogXCJUb3RhbCBsZXZlbHMgY29tcGxldGVkXCJcbiMgICAgY3JlYXRlZDogXCJDcmVhdGVkXCJcbiMgICAgY29uY2VwdHNfY292ZXJlZDogXCJDb25jZXB0cyBjb3ZlcmVkXCJcbiMgICAgZWFybGllc3RfaW5jb21wbGV0ZTogXCJFYXJsaWVzdCBpbmNvbXBsZXRlIGxldmVsXCJcbiMgICAgbGF0ZXN0X2NvbXBsZXRlOiBcIkxhdGVzdCBjb21wbGV0ZWQgbGV2ZWxcIlxuIyAgICBlbnJvbGxfc3R1ZGVudDogXCJFbnJvbGwgc3R1ZGVudFwiXG4jICAgIGFwcGx5X2xpY2Vuc2U6IFwiQXBwbHkgTGljZW5zZVwiXG4jICAgIHJldm9rZV9saWNlbnNlOiBcIlJldm9rZSBMaWNlbnNlXCJcbiMgICAgcmV2b2tlX2xpY2Vuc2VzOiBcIlJldm9rZSBBbGwgTGljZW5zZXNcIlxuIyAgICBjb3Vyc2VfcHJvZ3Jlc3M6IFwiQ291cnNlIFByb2dyZXNzXCJcbiMgICAgbm90X2FwcGxpY2FibGU6IFwiTi9BXCJcbiMgICAgZWRpdDogXCJlZGl0XCJcbiMgICAgZWRpdF8yOiBcIkVkaXRcIlxuIyAgICByZW1vdmU6IFwicmVtb3ZlXCJcbiMgICAgbGF0ZXN0X2NvbXBsZXRlZDogXCJMYXRlc3QgY29tcGxldGVkOlwiXG4jICAgIHNvcnRfYnk6IFwiU29ydCBieVwiXG4jICAgIHByb2dyZXNzOiBcIlByb2dyZXNzXCJcbiMgICAgY29uY2VwdHNfdXNlZDogXCJDb25jZXB0cyB1c2VkIGJ5IFN0dWRlbnQ6XCJcbiMgICAgY29uY2VwdF9jaGVja2VkOiBcIkNvbmNlcHQgY2hlY2tlZDpcIlxuIyAgICBjb21wbGV0ZWQ6IFwiQ29tcGxldGVkXCJcbiMgICAgcHJhY3RpY2U6IFwiUHJhY3RpY2VcIlxuIyAgICBzdGFydGVkOiBcIlN0YXJ0ZWRcIlxuIyAgICBub19wcm9ncmVzczogXCJObyBwcm9ncmVzc1wiXG4jICAgIG5vdF9yZXF1aXJlZDogXCJOb3QgcmVxdWlyZWRcIlxuIyAgICB2aWV3X3N0dWRlbnRfY29kZTogXCJDbGljayB0byB2aWV3IHN0dWRlbnQgY29kZVwiXG4jICAgIHNlbGVjdF9jb3Vyc2U6IFwiU2VsZWN0IGNvdXJzZSB0byB2aWV3XCJcbiMgICAgcHJvZ3Jlc3NfY29sb3Jfa2V5OiBcIlByb2dyZXNzIGNvbG9yIGtleTpcIlxuIyAgICBsZXZlbF9pbl9wcm9ncmVzczogXCJMZXZlbCBpbiBQcm9ncmVzc1wiXG4jICAgIGxldmVsX25vdF9zdGFydGVkOiBcIkxldmVsIE5vdCBTdGFydGVkXCJcbiMgICAgcHJvamVjdF9vcl9hcmVuYTogXCJQcm9qZWN0IG9yIEFyZW5hXCJcbiMgICAgc3R1ZGVudHNfbm90X2Fzc2lnbmVkOiBcIlN0dWRlbnRzIHdobyBoYXZlIG5vdCBiZWVuIGFzc2lnbmVkIHt7Y291cnNlTmFtZX19XCJcbiMgICAgY291cnNlX292ZXJ2aWV3OiBcIkNvdXJzZSBPdmVydmlld1wiXG4jICAgIGNvcHlfY2xhc3NfY29kZTogXCJDb3B5IENsYXNzIENvZGVcIlxuIyAgICBjbGFzc19jb2RlX2JsdXJiOiBcIlN0dWRlbnRzIGNhbiBqb2luIHlvdXIgY2xhc3MgdXNpbmcgdGhpcyBDbGFzcyBDb2RlLiBObyBlbWFpbCBhZGRyZXNzIGlzIHJlcXVpcmVkIHdoZW4gY3JlYXRpbmcgYSBTdHVkZW50IGFjY291bnQgd2l0aCB0aGlzIENsYXNzIENvZGUuXCJcbiMgICAgY29weV9jbGFzc191cmw6IFwiQ29weSBDbGFzcyBVUkxcIlxuIyAgICBjbGFzc19qb2luX3VybF9ibHVyYjogXCJZb3UgY2FuIGFsc28gcG9zdCB0aGlzIHVuaXF1ZSBjbGFzcyBVUkwgdG8gYSBzaGFyZWQgd2VicGFnZS5cIlxuIyAgICBhZGRfc3R1ZGVudHNfbWFudWFsbHk6IFwiSW52aXRlIFN0dWRlbnRzIGJ5IEVtYWlsXCJcbiMgICAgYnVsa19hc3NpZ246IFwiU2VsZWN0IGNvdXJzZVwiXG4jICAgIGFzc2lnbmVkX21zZ18xOiBcInt7bnVtYmVyQXNzaWduZWR9fSBzdHVkZW50cyB3ZXJlIGFzc2lnbmVkIHt7Y291cnNlTmFtZX19LlwiXG4jICAgIGFzc2lnbmVkX21zZ18yOiBcInt7bnVtYmVyRW5yb2xsZWR9fSBsaWNlbnNlcyB3ZXJlIGFwcGxpZWQuXCJcbiMgICAgYXNzaWduZWRfbXNnXzM6IFwiWW91IG5vdyBoYXZlIHt7cmVtYWluaW5nU3BvdHN9fSBhdmFpbGFibGUgbGljZW5zZXMgcmVtYWluaW5nLlwiXG4jICAgIGFzc2lnbl9jb3Vyc2U6IFwiQXNzaWduIENvdXJzZVwiXG4jICAgIHJlbW92ZWRfY291cnNlX21zZzogXCJ7e251bWJlclJlbW92ZWR9fSBzdHVkZW50cyB3ZXJlIHJlbW92ZWQgZnJvbSB7e2NvdXJzZU5hbWV9fS5cIlxuIyAgICByZW1vdmVfY291cnNlOiBcIlJlbW92ZSBDb3Vyc2VcIlxuIyAgICBub3RfYXNzaWduZWRfbW9kYWxfdGl0bGU6IFwiQ291cnNlcyB3ZXJlIG5vdCBhc3NpZ25lZFwiXG4jICAgIG5vdF9hc3NpZ25lZF9tb2RhbF9zdGFydGVyX2JvZHlfMTogXCJUaGlzIGNvdXJzZSByZXF1aXJlcyBhIFN0YXJ0ZXIgTGljZW5zZS4gWW91IGRvIG5vdCBoYXZlIGVub3VnaCBTdGFydGVyIExpY2Vuc2VzIGF2YWlsYWJsZSB0byBhc3NpZ24gdGhpcyBjb3Vyc2UgdG8gYWxsIF9fc2VsZWN0ZWRfXyBzZWxlY3RlZCBzdHVkZW50cy5cIlxuIyAgICBub3RfYXNzaWduZWRfbW9kYWxfc3RhcnRlcl9ib2R5XzI6IFwiUHVyY2hhc2UgU3RhcnRlciBMaWNlbnNlcyB0byBncmFudCBhY2Nlc3MgdG8gdGhpcyBjb3Vyc2UuXCJcbiMgICAgbm90X2Fzc2lnbmVkX21vZGFsX2Z1bGxfYm9keV8xOiBcIlRoaXMgY291cnNlIHJlcXVpcmVzIGEgRnVsbCBMaWNlbnNlLiBZb3UgZG8gbm90IGhhdmUgZW5vdWdoIEZ1bGwgTGljZW5zZXMgYXZhaWxhYmxlIHRvIGFzc2lnbiB0aGlzIGNvdXJzZSB0byBhbGwgX19zZWxlY3RlZF9fIHNlbGVjdGVkIHN0dWRlbnRzLlwiXG4jICAgIG5vdF9hc3NpZ25lZF9tb2RhbF9mdWxsX2JvZHlfMjogXCJZb3Ugb25seSBoYXZlIF9fbnVtRnVsbExpY2Vuc2VzQXZhaWxhYmxlX18gRnVsbCBMaWNlbnNlcyBhdmFpbGFibGUgKF9fbnVtU3R1ZGVudHNXaXRob3V0RnVsbExpY2Vuc2VzX18gc3R1ZGVudHMgZG8gbm90IGN1cnJlbnRseSBoYXZlIGEgRnVsbCBMaWNlbnNlIGFjdGl2ZSkuXCJcbiMgICAgbm90X2Fzc2lnbmVkX21vZGFsX2Z1bGxfYm9keV8zOiBcIlBsZWFzZSBzZWxlY3QgZmV3ZXIgc3R1ZGVudHMsIG9yIHJlYWNoIG91dCB0byBfX3N1cHBvcnRFbWFpbF9fIGZvciBhc3Npc3RhbmNlLlwiXG4jICAgIGFzc2lnbmVkOiBcIkFzc2lnbmVkXCJcbiMgICAgZW5yb2xsX3NlbGVjdGVkX3N0dWRlbnRzOiBcIkVucm9sbCBTZWxlY3RlZCBTdHVkZW50c1wiXG4jICAgIG5vX3N0dWRlbnRzX3NlbGVjdGVkOiBcIk5vIHN0dWRlbnRzIHdlcmUgc2VsZWN0ZWQuXCJcbiMgICAgc2hvd19zdHVkZW50c19mcm9tOiBcIlNob3cgc3R1ZGVudHMgZnJvbVwiICMgRW5yb2xsIHN0dWRlbnRzIG1vZGFsXG4jICAgIGFwcGx5X2xpY2Vuc2VzX3RvX3RoZV9mb2xsb3dpbmdfc3R1ZGVudHM6IFwiQXBwbHkgTGljZW5zZXMgdG8gdGhlIEZvbGxvd2luZyBTdHVkZW50c1wiXG4jICAgIHN0dWRlbnRzX2hhdmVfbGljZW5zZXM6IFwiVGhlIGZvbGxvd2luZyBzdHVkZW50cyBhbHJlYWR5IGhhdmUgbGljZW5zZXMgYXBwbGllZDpcIlxuIyAgICBhbGxfc3R1ZGVudHM6IFwiQWxsIFN0dWRlbnRzXCJcbiMgICAgYXBwbHlfbGljZW5zZXM6IFwiQXBwbHkgTGljZW5zZXNcIlxuIyAgICBub3RfZW5vdWdoX2Vucm9sbG1lbnRzOiBcIk5vdCBlbm91Z2ggbGljZW5zZXMgYXZhaWxhYmxlLlwiXG4jICAgIGVucm9sbG1lbnRzX2JsdXJiOiBcIlN0dWRlbnRzIGFyZSByZXF1aXJlZCB0byBoYXZlIGEgbGljZW5zZSB0byBhY2Nlc3MgYW55IGNvbnRlbnQgYWZ0ZXIgdGhlIGZpcnN0IGNvdXJzZS5cIlxuIyAgICBob3dfdG9fYXBwbHlfbGljZW5zZXM6IFwiSG93IHRvIEFwcGx5IExpY2Vuc2VzXCJcbiMgICAgZXhwb3J0X3N0dWRlbnRfcHJvZ3Jlc3M6IFwiRXhwb3J0IFN0dWRlbnQgUHJvZ3Jlc3MgKENTVilcIlxuIyAgICBzZW5kX2VtYWlsX3RvOiBcIlNlbmQgUmVjb3ZlciBQYXNzd29yZCBFbWFpbCB0bzpcIlxuIyAgICBlbWFpbF9zZW50OiBcIkVtYWlsIHNlbnRcIlxuIyAgICBzZW5kX3JlY292ZXJ5X2VtYWlsOiBcIlNlbmQgcmVjb3ZlcnkgZW1haWxcIlxuIyAgICBlbnRlcl9uZXdfcGFzc3dvcmRfYmVsb3c6IFwiRW50ZXIgbmV3IHBhc3N3b3JkIGJlbG93OlwiXG4jICAgIGNoYW5nZV9wYXNzd29yZDogXCJDaGFuZ2UgUGFzc3dvcmRcIlxuIyAgICBjaGFuZ2VkOiBcIkNoYW5nZWRcIlxuIyAgICBhdmFpbGFibGVfY3JlZGl0czogXCJBdmFpbGFibGUgTGljZW5zZXNcIlxuIyAgICBwZW5kaW5nX2NyZWRpdHM6IFwiUGVuZGluZyBMaWNlbnNlc1wiXG4jICAgIGVtcHR5X2NyZWRpdHM6IFwiRXhoYXVzdGVkIExpY2Vuc2VzXCJcbiMgICAgbGljZW5zZV9yZW1haW5pbmc6IFwibGljZW5zZSByZW1haW5pbmdcIlxuIyAgICBsaWNlbnNlc19yZW1haW5pbmc6IFwibGljZW5zZXMgcmVtYWluaW5nXCJcbiMgICAgb25lX2xpY2Vuc2VfdXNlZDogXCIxIG91dCBvZiBfX3RvdGFsTGljZW5zZXNfXyBsaWNlbnNlcyBoYXMgYmVlbiB1c2VkXCJcbiMgICAgbnVtX2xpY2Vuc2VzX3VzZWQ6IFwiX19udW1MaWNlbnNlc1VzZWRfXyBvdXQgb2YgX190b3RhbExpY2Vuc2VzX18gbGljZW5zZXMgaGF2ZSBiZWVuIHVzZWRcIlxuIyAgICBzdGFydGVyX2xpY2Vuc2VzOiBcInN0YXJ0ZXIgbGljZW5zZXNcIlxuIyAgICBzdGFydF9kYXRlOiBcInN0YXJ0IGRhdGU6XCJcbiMgICAgZW5kX2RhdGU6IFwiZW5kIGRhdGU6XCJcbiMgICAgZ2V0X2Vucm9sbG1lbnRzX2JsdXJiOiBcIiBXZSdsbCBoZWxwIHlvdSBidWlsZCBhIHNvbHV0aW9uIHRoYXQgbWVldHMgdGhlIG5lZWRzIG9mIHlvdXIgY2xhc3MsIHNjaG9vbCBvciBkaXN0cmljdC5cIlxuIyAgICBob3dfdG9fYXBwbHlfbGljZW5zZXNfYmx1cmJfMTogXCJXaGVuIGEgdGVhY2hlciBhc3NpZ25zIGEgY291cnNlIHRvIGEgc3R1ZGVudCBmb3IgdGhlIGZpcnN0IHRpbWUsIHdl4oCZbGwgYXV0b21hdGljYWxseSBhcHBseSBhIGxpY2Vuc2UuIFVzZSB0aGUgYnVsay1hc3NpZ24gZHJvcGRvd24gaW4geW91ciBjbGFzc3Jvb20gdG8gYXNzaWduIGEgY291cnNlIHRvIHNlbGVjdGVkIHN0dWRlbnRzOlwiXG4jICAgIGhvd190b19hcHBseV9saWNlbnNlc19ibHVyYl8yOiBcIkNhbiBJIHN0aWxsIGFwcGx5IGEgbGljZW5zZSB3aXRob3V0IGFzc2lnbmluZyBhIGNvdXJzZT9cIlxuIyAgICBob3dfdG9fYXBwbHlfbGljZW5zZXNfYmx1cmJfMzogXCJZZXMg4oCUIGdvIHRvIHRoZSBMaWNlbnNlIFN0YXR1cyB0YWIgaW4geW91ciBjbGFzc3Jvb20gYW5kIGNsaWNrIFxcXCJBcHBseSBMaWNlbnNlXFxcIiB0byBhbnkgc3R1ZGVudCB3aG8gZG9lcyBub3QgaGF2ZSBhbiBhY3RpdmUgbGljZW5zZS5cIlxuIyAgICByZXF1ZXN0X3NlbnQ6IFwiUmVxdWVzdCBTZW50IVwiXG4jICAgIGFzc2Vzc21lbnRzOiBcIkFzc2Vzc21lbnRzXCJcbiMgICAgbGljZW5zZV9zdGF0dXM6IFwiTGljZW5zZSBTdGF0dXNcIlxuIyAgICBzdGF0dXNfZXhwaXJlZDogXCJFeHBpcmVkIG9uIHt7ZGF0ZX19XCJcbiMgICAgc3RhdHVzX25vdF9lbnJvbGxlZDogXCJOb3QgRW5yb2xsZWRcIlxuIyAgICBzdGF0dXNfZW5yb2xsZWQ6IFwiRXhwaXJlcyBvbiB7e2RhdGV9fVwiXG4jICAgIHNlbGVjdF9hbGw6IFwiU2VsZWN0IEFsbFwiXG4jICAgIHByb2plY3Q6IFwiUHJvamVjdFwiXG4jICAgIHByb2plY3RfZ2FsbGVyeTogXCJQcm9qZWN0IEdhbGxlcnlcIlxuIyAgICB2aWV3X3Byb2plY3Q6IFwiVmlldyBQcm9qZWN0XCJcbiMgICAgdW5wdWJsaXNoZWQ6IFwiKHVucHVibGlzaGVkKVwiXG4jICAgIHZpZXdfYXJlbmFfbGFkZGVyOiBcIlZpZXcgQXJlbmEgTGFkZGVyXCJcbiMgICAgcmVzb3VyY2VfaHViOiBcIlJlc291cmNlIEh1YlwiXG4jICAgIHBhY2luZ19ndWlkZXM6IFwiQ2xhc3Nyb29tLWluLWEtQm94IFBhY2luZyBHdWlkZXNcIlxuIyAgICBwYWNpbmdfZ3VpZGVzX2Rlc2M6IFwiTGVhcm4gaG93IHRvIGluY29ycG9yYXRlIGFsbCBvZiBDb2RlQ29tYmF0J3MgcmVzb3VyY2VzIHRvIHBsYW4geW91ciBzY2hvb2wgeWVhciFcIlxuIyAgICBwYWNpbmdfZ3VpZGVzX2VsZW06IFwiRWxlbWVudGFyeSBTY2hvb2wgUGFjaW5nIEd1aWRlXCJcbiMgICAgcGFjaW5nX2d1aWRlc19taWRkbGU6IFwiTWlkZGxlIFNjaG9vbCBQYWNpbmcgR3VpZGVcIlxuIyAgICBwYWNpbmdfZ3VpZGVzX2hpZ2g6IFwiSGlnaCBTY2hvb2wgUGFjaW5nIEd1aWRlXCJcbiMgICAgZ2V0dGluZ19zdGFydGVkOiBcIkdldHRpbmcgU3RhcnRlZFwiXG4jICAgIGVkdWNhdG9yX2ZhcTogXCJFZHVjYXRvciBGQVFcIlxuIyAgICBlZHVjYXRvcl9mYXFfZGVzYzogXCJGcmVxdWVudGx5IGFza2VkIHF1ZXN0aW9ucyBhYm91dCB1c2luZyBDb2RlQ29tYmF0IGluIHlvdXIgY2xhc3Nyb29tIG9yIHNjaG9vbC5cIlxuIyAgICB0ZWFjaGVyX2dldHRpbmdfc3RhcnRlZDogXCJUZWFjaGVyIEdldHRpbmcgU3RhcnRlZCBHdWlkZVwiXG4jICAgIHRlYWNoZXJfZ2V0dGluZ19zdGFydGVkX2Rlc2M6IFwiTmV3IHRvIENvZGVDb21iYXQ/IERvd25sb2FkIHRoaXMgVGVhY2hlciBHZXR0aW5nIFN0YXJ0ZWQgR3VpZGUgdG8gc2V0IHVwIHlvdXIgYWNjb3VudCwgY3JlYXRlIHlvdXIgZmlyc3QgY2xhc3MsIGFuZCBpbnZpdGUgc3R1ZGVudHMgdG8gdGhlIGZpcnN0IGNvdXJzZS5cIlxuIyAgICBzdHVkZW50X2dldHRpbmdfc3RhcnRlZDogXCJTdHVkZW50IFF1aWNrIFN0YXJ0IEd1aWRlXCJcbiMgICAgc3R1ZGVudF9nZXR0aW5nX3N0YXJ0ZWRfZGVzYzogXCJZb3UgY2FuIGRpc3RyaWJ1dGUgdGhpcyBndWlkZSB0byB5b3VyIHN0dWRlbnRzIGJlZm9yZSBzdGFydGluZyBDb2RlQ29tYmF0IHNvIHRoYXQgdGhleSBjYW4gZmFtaWxpYXJpemUgdGhlbXNlbHZlcyB3aXRoIHRoZSBjb2RlIGVkaXRvci4gVGhpcyBndWlkZSBjYW4gYmUgdXNlZCBmb3IgYm90aCBQeXRob24gYW5kIEphdmFTY3JpcHQgY2xhc3Nyb29tcy5cIlxuIyAgICBhcF9jc19wcmluY2lwbGVzOiBcIkFQIENvbXB1dGVyIFNjaWVuY2UgUHJpbmNpcGxlc1wiXG4jICAgIGFwX2NzX3ByaW5jaXBsZXNfZGVzYzogXCJBUCBDb21wdXRlciBTY2llbmNlIFByaW5jaXBsZXMgZ2l2ZXMgc3R1ZGVudHMgYSBicm9hZCBpbnRyb2R1Y3Rpb24gdG8gdGhlIHBvd2VyLCBpbXBhY3QsIGFuZCBwb3NzaWJpbGl0aWVzIG9mIENvbXB1dGVyIFNjaWVuY2UuIFRoZSBjb3Vyc2UgZW1waGFzaXplcyBjb21wdXRhdGlvbmFsIHRoaW5raW5nIGFuZCBwcm9ibGVtIHNvbHZpbmcgd2hpbGUgYWxzbyB0ZWFjaGluZyB0aGUgYmFzaWNzIG9mIHByb2dyYW1taW5nLlwiXG4jICAgIGNzMTogXCJJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZVwiXG4jICAgIGNzMjogXCJDb21wdXRlciBTY2llbmNlIDJcIlxuIyAgICBjczM6IFwiQ29tcHV0ZXIgU2NpZW5jZSAzXCJcbiMgICAgY3M0OiBcIkNvbXB1dGVyIFNjaWVuY2UgNFwiXG4jICAgIGNzNTogXCJDb21wdXRlciBTY2llbmNlIDVcIlxuIyAgICBjczFfc3ludGF4X3B5dGhvbjogXCJDb3Vyc2UgMSBQeXRob24gU3ludGF4IEd1aWRlXCJcbiMgICAgY3MxX3N5bnRheF9weXRob25fZGVzYzogXCJDaGVhdHNoZWV0IHdpdGggcmVmZXJlbmNlcyB0byBjb21tb24gUHl0aG9uIHN5bnRheCB0aGF0IHN0dWRlbnRzIHdpbGwgbGVhcm4gaW4gSW50cm9kdWN0aW9uIHRvIENvbXB1dGVyIFNjaWVuY2UuXCJcbiMgICAgY3MxX3N5bnRheF9qYXZhc2NyaXB0OiBcIkNvdXJzZSAxIEphdmFTY3JpcHQgU3ludGF4IEd1aWRlXCJcbiMgICAgY3MxX3N5bnRheF9qYXZhc2NyaXB0X2Rlc2M6IFwiQ2hlYXRzaGVldCB3aXRoIHJlZmVyZW5jZXMgdG8gY29tbW9uIEphdmFTY3JpcHQgc3ludGF4IHRoYXQgc3R1ZGVudHMgd2lsbCBsZWFybiBpbiBJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZS5cIlxuIyAgICBjb21pbmdfc29vbjogXCJBZGRpdGlvbmFsIGd1aWRlcyBjb21pbmcgc29vbiFcIlxuIyAgICBlbmdpbmVlcmluZ19jeWNsZV93b3Jrc2hlZXQ6IFwiRW5naW5lZXJpbmcgQ3ljbGUgV29ya3NoZWV0XCJcbiMgICAgZW5naW5lZXJpbmdfY3ljbGVfd29ya3NoZWV0X2Rlc2M6IFwiVXNlIHRoaXMgd29ya3NoZWV0IHRvIHRlYWNoIHN0dWRlbnRzIHRoZSBiYXNpY3Mgb2YgdGhlIGVuZ2luZWVyaW5nIGN5Y2xlOiBBc3Nlc3MsIERlc2lnbiwgSW1wbGVtZW50IGFuZCBEZWJ1Zy4gUmVmZXIgdG8gdGhlIGNvbXBsZXRlZCBleGFtcGxlIHdvcmtzaGVldCBhcyBhIGd1aWRlLlwiXG4jICAgIGVuZ2luZWVyaW5nX2N5Y2xlX3dvcmtzaGVldF9saW5rOiBcIlZpZXcgZXhhbXBsZVwiXG4jICAgIHByb2dyZXNzX2pvdXJuYWw6IFwiUHJvZ3Jlc3MgSm91cm5hbFwiXG4jICAgIHByb2dyZXNzX2pvdXJuYWxfZGVzYzogXCJFbmNvdXJhZ2Ugc3R1ZGVudHMgdG8ga2VlcCB0cmFjayBvZiB0aGVpciBwcm9ncmVzcyB2aWEgYSBwcm9ncmVzcyBqb3VybmFsLlwiXG4jICAgIGNzMV9jdXJyaWN1bHVtOiBcIkludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIGNzMV9jdXJyaWN1bHVtX2Rlc2M6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMgYW5kIG1vcmUgZm9yIENvdXJzZSAxLlwiXG4jICAgIGFyZW5hc19jdXJyaWN1bHVtOiBcIkFyZW5hIExldmVscyAtIFRlYWNoZXIgR3VpZGVcIlxuIyAgICBhcmVuYXNfY3VycmljdWx1bV9kZXNjOiBcIkluc3RydWN0aW9ucyBvbiBob3cgdG8gcnVuIFdha2thIE1hdWwsIENyb3NzIEJvbmVzIGFuZCBQb3dlciBQZWFrIG11bHRpcGxheWVyIGFyZW5hcyB3aXRoIHlvdXIgY2xhc3MuXCJcbiMgICAgYXNzZXNzbWVudHNfY3VycmljdWx1bTogXCJBc3Nlc3NtZW50IExldmVscyAtIFRlYWNoZXIgR3VpZGVcIlxuIyAgICBhc3Nlc3NtZW50c19jdXJyaWN1bHVtX2Rlc2M6IFwiTGVhcm4gaG93IHRvIHVzZSBDaGFsbGVuZ2UgTGV2ZWxzIGFuZCBDb21ibyBDaGFsbGVuZ2UgbGV2ZWxzIHRvIGFzc2VzcyBzdHVkZW50cycgbGVhcm5pbmcgb3V0Y29tZXMuXCJcbiMgICAgY3MyX2N1cnJpY3VsdW06IFwiQ29tcHV0ZXIgU2NpZW5jZSAyIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIGNzMl9jdXJyaWN1bHVtX2Rlc2M6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMgYW5kIG1vcmUgZm9yIENvdXJzZSAyLlwiXG4jICAgIGNzM19jdXJyaWN1bHVtOiBcIkNvbXB1dGVyIFNjaWVuY2UgMyAtIEN1cnJpY3VsdW0gR3VpZGVcIlxuIyAgICBjczNfY3VycmljdWx1bV9kZXNjOiBcIlNjb3BlIGFuZCBzZXF1ZW5jZSwgbGVzc29uIHBsYW5zLCBhY3Rpdml0aWVzIGFuZCBtb3JlIGZvciBDb3Vyc2UgMy5cIlxuIyAgICBjczRfY3VycmljdWx1bTogXCJDb21wdXRlciBTY2llbmNlIDQgLSBDdXJyaWN1bHVtIEd1aWRlXCJcbiMgICAgY3M0X2N1cnJpY3VsdW1fZGVzYzogXCJTY29wZSBhbmQgc2VxdWVuY2UsIGxlc3NvbiBwbGFucywgYWN0aXZpdGllcyBhbmQgbW9yZSBmb3IgQ291cnNlIDQuXCJcbiMgICAgY3M1X2N1cnJpY3VsdW1fanM6IFwiQ29tcHV0ZXIgU2NpZW5jZSA1IC0gQ3VycmljdWx1bSBHdWlkZSAoSmF2YVNjcmlwdClcIlxuIyAgICBjczVfY3VycmljdWx1bV9kZXNjX2pzOiBcIlNjb3BlIGFuZCBzZXF1ZW5jZSwgbGVzc29uIHBsYW5zLCBhY3Rpdml0aWVzIGFuZCBtb3JlIGZvciBDb3Vyc2UgNSBjbGFzc2VzIHVzaW5nIEphdmFTY3JpcHQuXCJcbiMgICAgY3M1X2N1cnJpY3VsdW1fcHk6IFwiQ29tcHV0ZXIgU2NpZW5jZSA1IC0gQ3VycmljdWx1bSBHdWlkZSAoUHl0aG9uKVwiXG4jICAgIGNzNV9jdXJyaWN1bHVtX2Rlc2NfcHk6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMgYW5kIG1vcmUgZm9yIENvdXJzZSA1IGNsYXNzZXMgdXNpbmcgUHl0aG9uLlwiXG4jICAgIGNzMV9wYWlycHJvZ3JhbW1pbmc6IFwiUGFpciBQcm9ncmFtbWluZyBBY3Rpdml0eVwiXG4jICAgIGNzMV9wYWlycHJvZ3JhbW1pbmdfZGVzYzogXCJJbnRyb2R1Y2Ugc3R1ZGVudHMgdG8gYSBwYWlyIHByb2dyYW1taW5nIGV4ZXJjaXNlIHRoYXQgd2lsbCBoZWxwIHRoZW0gYmVjb21lIGJldHRlciBsaXN0ZW5lcnMgYW5kIGNvbW11bmljYXRvcnMuXCJcbiMgICAgZ2QxOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMVwiXG4jICAgIGdkMV9ndWlkZTogXCJHYW1lIERldmVsb3BtZW50IDEgLSBQcm9qZWN0IEd1aWRlXCJcbiMgICAgZ2QxX2d1aWRlX2Rlc2M6IFwiVXNlIHRoaXMgdG8gZ3VpZGUgeW91ciBzdHVkZW50cyBhcyB0aGV5IGNyZWF0ZSB0aGVpciBmaXJzdCBzaGFyZWFibGUgZ2FtZSBwcm9qZWN0IGluIDUgZGF5cy5cIlxuIyAgICBnZDFfcnVicmljOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMSAtIFByb2plY3QgUnVicmljXCJcbiMgICAgZ2QxX3J1YnJpY19kZXNjOiBcIlVzZSB0aGlzIHJ1YnJpYyB0byBhc3Nlc3Mgc3R1ZGVudCBwcm9qZWN0cyBhdCB0aGUgZW5kIG9mIEdhbWUgRGV2ZWxvcG1lbnQgMS5cIlxuIyAgICBnZDI6IFwiR2FtZSBEZXZlbG9wbWVudCAyXCJcbiMgICAgZ2QyX2N1cnJpY3VsdW06IFwiR2FtZSBEZXZlbG9wbWVudCAyIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIGdkMl9jdXJyaWN1bHVtX2Rlc2M6IFwiTGVzc29uIHBsYW5zIGZvciBHYW1lIERldmVsb3BtZW50IDIuXCJcbiMgICAgZ2QzOiBcIkdhbWUgRGV2ZWxvcG1lbnQgM1wiXG4jICAgIGdkM19jdXJyaWN1bHVtOiBcIkdhbWUgRGV2ZWxvcG1lbnQgMyAtIEN1cnJpY3VsdW0gR3VpZGVcIlxuIyAgICBnZDNfY3VycmljdWx1bV9kZXNjOiBcIkxlc3NvbiBwbGFucyBmb3IgR2FtZSBEZXZlbG9wbWVudCAzLlwiXG4jICAgIHdkMTogXCJXZWIgRGV2ZWxvcG1lbnQgMVwiXG4jICAgIHdkMV9jdXJyaWN1bHVtOiBcIldlYiBEZXZlbG9wbWVudCAxIC0gQ3VycmljdWx1bSBHdWlkZVwiXG4jICAgIHdkMV9jdXJyaWN1bHVtX2Rlc2M6IFwiU2NvcGUgYW5kIHNlcXVlbmNlLCBsZXNzb24gcGxhbnMsIGFjdGl2aXRpZXMsIGFuZCBtb3JlIGZvciBXZWIgRGV2ZWxvcG1lbnQgMS5cIlxuIyAgICB3ZDFfaGVhZGxpbmVzOiBcIkhlYWRsaW5lcyAmIEhlYWRlcnMgQWN0aXZpdHlcIlxuIyAgICB3ZDFfaGVhZGxpbmVzX2V4YW1wbGU6IFwiVmlldyBzYW1wbGUgc29sdXRpb25cIlxuIyAgICB3ZDFfaGVhZGxpbmVzX2Rlc2M6IFwiV2h5IGFyZSBwYXJhZ3JhcGggYW5kIGhlYWRlciB0YWdzIGltcG9ydGFudD8gVXNlIHRoaXMgYWN0aXZpdHkgdG8gc2hvdyBob3cgd2VsbC1jaG9zZW4gaGVhZGVycyBtYWtlIHdlYiBwYWdlcyBlYXNpZXIgdG8gcmVhZC4gVGhlcmUgYXJlIG1hbnkgY29ycmVjdCBzb2x1dGlvbnMgdG8gdGhpcyFcIlxuIyAgICB3ZDFfaHRtbF9zeW50YXg6IFwiSFRNTCBTeW50YXggR3VpZGVcIlxuIyAgICB3ZDFfaHRtbF9zeW50YXhfZGVzYzogXCJPbmUtcGFnZSByZWZlcmVuY2UgZm9yIHRoZSBIVE1MIHN0eWxlIHN0dWRlbnRzIHdpbGwgbGVhcm4gaW4gV2ViIERldmVsb3BtZW50IDEuXCJcbiMgICAgd2QxX2Nzc19zeW50YXg6IFwiQ1NTIFN5bnRheCBHdWlkZVwiXG4jICAgIHdkMV9jc3Nfc3ludGF4X2Rlc2M6IFwiT25lLXBhZ2UgcmVmZXJlbmNlIGZvciB0aGUgQ1NTIGFuZCBTdHlsZSBzeW50YXggc3R1ZGVudHMgd2lsbCBsZWFybiBpbiBXZWIgRGV2ZWxvcG1lbnQgMS5cIlxuIyAgICB3ZDI6IFwiV2ViIERldmVsb3BtZW50IDJcIlxuIyAgICB3ZDJfanF1ZXJ5X3N5bnRheDogXCJqUXVlcnkgRnVuY3Rpb25zIFN5bnRheCBHdWlkZVwiXG4jICAgIHdkMl9qcXVlcnlfc3ludGF4X2Rlc2M6IFwiT25lLXBhZ2UgcmVmZXJlbmNlIGZvciB0aGUgalF1ZXJ5IGZ1bmN0aW9ucyBzdHVkZW50cyB3aWxsIGxlYXJuIGluIFdlYiBEZXZlbG9wbWVudCAyLlwiXG4jICAgIHdkMl9xdWl6bGV0X3dvcmtzaGVldDogXCJRdWl6bGV0IFBsYW5uaW5nIFdvcmtzaGVldFwiXG4jICAgIHdkMl9xdWl6bGV0X3dvcmtzaGVldF9pbnN0cnVjdGlvbnM6IFwiVmlldyBpbnN0cnVjdGlvbnMgJiBleGFtcGxlc1wiXG4jICAgIHdkMl9xdWl6bGV0X3dvcmtzaGVldF9kZXNjOiBcIkJlZm9yZSB5b3VyIHN0dWRlbnRzIGJ1aWxkIHRoZWlyIHBlcnNvbmFsaXR5IHF1aXogcHJvamVjdCBhdCB0aGUgZW5kIG9mIFdlYiBEZXZlbG9wbWVudCAyLCB0aGV5IHNob3VsZCBwbGFuIG91dCB0aGVpciBxdWl6IHF1ZXN0aW9ucywgb3V0Y29tZXMgYW5kIHJlc3BvbnNlcyB1c2luZyB0aGlzIHdvcmtzaGVldC4gVGVhY2hlcnMgY2FuIGRpc3RyaWJ1dGUgdGhlIGluc3RydWN0aW9ucyBhbmQgZXhhbXBsZXMgZm9yIHN0dWRlbnRzIHRvIHJlZmVyIHRvLlwiXG4jICAgIHN0dWRlbnRfb3ZlcnZpZXc6IFwiT3ZlcnZpZXdcIlxuIyAgICBzdHVkZW50X2RldGFpbHM6IFwiU3R1ZGVudCBEZXRhaWxzXCJcbiMgICAgc3R1ZGVudF9uYW1lOiBcIlN0dWRlbnQgTmFtZVwiXG4jICAgIG5vX25hbWU6IFwiTm8gbmFtZSBwcm92aWRlZC5cIlxuIyAgICBub191c2VybmFtZTogXCJObyB1c2VybmFtZSBwcm92aWRlZC5cIlxuIyAgICBub19lbWFpbDogXCJTdHVkZW50IGhhcyBubyBlbWFpbCBhZGRyZXNzIHNldC5cIlxuIyAgICBzdHVkZW50X3Byb2ZpbGU6IFwiU3R1ZGVudCBQcm9maWxlXCJcbiMgICAgcGxheXRpbWVfZGV0YWlsOiBcIlBsYXl0aW1lIERldGFpbFwiXG4jICAgIHN0dWRlbnRfY29tcGxldGVkOiBcIlN0dWRlbnQgQ29tcGxldGVkXCJcbiMgICAgc3R1ZGVudF9pbl9wcm9ncmVzczogXCJTdHVkZW50IGluIFByb2dyZXNzXCJcbiMgICAgY2xhc3NfYXZlcmFnZTogXCJDbGFzcyBBdmVyYWdlXCJcbiMgICAgbm90X2Fzc2lnbmVkOiBcImhhcyBub3QgYmVlbiBhc3NpZ25lZCB0aGUgZm9sbG93aW5nIGNvdXJzZXNcIlxuIyAgICBwbGF5dGltZV9heGlzOiBcIlBsYXl0aW1lIGluIFNlY29uZHNcIlxuIyAgICBsZXZlbHNfYXhpczogXCJMZXZlbHMgaW5cIlxuIyAgICBzdHVkZW50X3N0YXRlOiBcIkhvdyBpc1wiXG4jICAgIHN0dWRlbnRfc3RhdGVfMjogXCJkb2luZz9cIlxuIyAgICBzdHVkZW50X2dvb2Q6IFwiaXMgZG9pbmcgd2VsbCBpblwiXG4jICAgIHN0dWRlbnRfZ29vZF9kZXRhaWw6IFwiVGhpcyBzdHVkZW50IGlzIGtlZXBpbmcgcGFjZSB3aXRoIHRoZSBjbGFzcy5cIlxuIyAgICBzdHVkZW50X3dhcm46IFwibWlnaHQgbmVlZCBzb21lIGhlbHAgaW5cIlxuIyAgICBzdHVkZW50X3dhcm5fZGV0YWlsOiBcIlRoaXMgc3R1ZGVudCBtaWdodCBuZWVkIHNvbWUgaGVscCB3aXRoIG5ldyBjb25jZXB0cyB0aGF0IGhhdmUgYmVlbiBpbnRyb2R1Y2VkIGluIHRoaXMgY291cnNlLlwiXG4jICAgIHN0dWRlbnRfZ3JlYXQ6IFwiaXMgZG9pbmcgZ3JlYXQgaW5cIlxuIyAgICBzdHVkZW50X2dyZWF0X2RldGFpbDogXCJUaGlzIHN0dWRlbnQgbWlnaHQgYmUgYSBnb29kIGNhbmRpZGF0ZSB0byBoZWxwIG90aGVyIHN0dWRlbnRzIHdvcmtpbmcgdGhyb3VnaCB0aGlzIGNvdXJzZS5cIlxuIyAgICBmdWxsX2xpY2Vuc2U6IFwiRnVsbCBMaWNlbnNlXCJcbiMgICAgc3RhcnRlcl9saWNlbnNlOiBcIlN0YXJ0ZXIgTGljZW5zZVwiXG4jICAgIHRyaWFsOiBcIlRyaWFsXCJcbiMgICAgaG9jX3dlbGNvbWU6IFwiSGFwcHkgQ29tcHV0ZXIgU2NpZW5jZSBFZHVjYXRpb24gV2Vla1wiXG4jICAgIGhvY190aXRsZTogXCJIb3VyIG9mIENvZGUgR2FtZXMgLSBGcmVlIEFjdGl2aXRpZXMgdG8gTGVhcm4gUmVhbCBDb2RpbmcgTGFuZ3VhZ2VzXCJcbiMgICAgaG9jX21ldGFfZGVzY3JpcHRpb246IFwiTWFrZSB5b3VyIG93biBnYW1lIG9yIGNvZGUgeW91ciB3YXkgb3V0IG9mIGEgZHVuZ2VvbiEgQ29kZUNvbWJhdCBoYXMgZm91ciBkaWZmZXJlbnQgSG91ciBvZiBDb2RlIGFjdGl2aXRpZXMgYW5kIG92ZXIgNjAgbGV2ZWxzIHRvIGxlYXJuIGNvZGUsIHBsYXksIGFuZCBjcmVhdGUuXCJcbiMgICAgaG9jX2ludHJvOiBcIlRoZXJlIGFyZSB0aHJlZSB3YXlzIGZvciB5b3VyIGNsYXNzIHRvIHBhcnRpY2lwYXRlIGluIEhvdXIgb2YgQ29kZSB3aXRoIENvZGVDb21iYXRcIlxuIyAgICBob2Nfc2VsZl9sZWQ6IFwiU2VsZi1MZWQgR2FtZXBsYXlcIlxuIyAgICBob2Nfc2VsZl9sZWRfZGVzYzogXCJTdHVkZW50cyBjYW4gcGxheSB0aHJvdWdoIHR3byBIb3VyIG9mIENvZGUgQ29kZUNvbWJhdCB0dXRvcmlhbHMgb24gdGhlaXIgb3duXCJcbiMgICAgaG9jX2dhbWVfZGV2OiBcIkdhbWUgRGV2ZWxvcG1lbnRcIlxuIyAgICBob2NfYW5kOiBcImFuZFwiXG4jICAgIGhvY19wcm9ncmFtbWluZzogXCJKYXZhU2NyaXB0L1B5dGhvbiBQcm9ncmFtbWluZ1wiXG4jICAgIGhvY190ZWFjaGVyX2xlZDogXCJUZWFjaGVyLUxlZCBMZXNzb25zXCJcbiMgICAgaG9jX3RlYWNoZXJfbGVkX2Rlc2MxOiBcIkRvd25sb2FkIG91clwiXG4jICAgIGhvY190ZWFjaGVyX2xlZF9saW5rOiBcIkludHJvZHVjdGlvbiB0byBDb21wdXRlciBTY2llbmNlIGxlc3NvbiBwbGFuc1wiXG4jICAgIGhvY190ZWFjaGVyX2xlZF9kZXNjMjogXCJ0byBpbnRyb2R1Y2UgeW91ciBzdHVkZW50cyB0byBwcm9ncmFtbWluZyBjb25jZXB0cyB1c2luZyBvZmZsaW5lIGFjdGl2aXRpZXNcIlxuIyAgICBob2NfZ3JvdXA6IFwiR3JvdXAgR2FtZXBsYXlcIlxuIyAgICBob2NfZ3JvdXBfZGVzY18xOiBcIlRlYWNoZXJzIGNhbiB1c2UgdGhlIGxlc3NvbnMgaW4gY29uanVuY3Rpb24gd2l0aCBvdXIgSW50cm9kdWN0aW9uIHRvIENvbXB1dGVyIFNjaWVuY2UgY291cnNlIHRvIHRyYWNrIHN0dWRlbnQgcHJvZ3Jlc3MuIFNlZSBvdXJcIlxuIyAgICBob2NfZ3JvdXBfbGluazogXCJHZXR0aW5nIFN0YXJ0ZWQgR3VpZGVcIlxuIyAgICBob2NfZ3JvdXBfZGVzY18yOiBcImZvciBtb3JlIGRldGFpbHNcIlxuIyAgICBob2NfYWRkaXRpb25hbF9kZXNjMTogXCJGb3IgYWRkaXRpb25hbCBDb2RlQ29tYmF0IHJlc291cmNlcyBhbmQgYWN0aXZpdGllcywgc2VlIG91clwiXG4jICAgIGhvY19hZGRpdGlvbmFsX2Rlc2MyOiBcIlF1ZXN0aW9uc1wiXG4jICAgIGhvY19hZGRpdGlvbmFsX2NvbnRhY3Q6IFwiR2V0IGluIHRvdWNoXCJcbiMgICAgcmV2b2tlX2NvbmZpcm06IFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJldm9rZSBhIEZ1bGwgTGljZW5zZSBmcm9tIHt7c3R1ZGVudF9uYW1lfX0/IFRoZSBsaWNlbnNlIHdpbGwgYmVjb21lIGF2YWlsYWJsZSB0byBhc3NpZ24gdG8gYW5vdGhlciBzdHVkZW50LlwiXG4jICAgIHJldm9rZV9hbGxfY29uZmlybTogXCJBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcmV2b2tlIEZ1bGwgTGljZW5zZXMgZnJvbSBhbGwgc3R1ZGVudHMgaW4gdGhpcyBjbGFzcz9cIlxuIyAgICByZXZva2luZzogXCJSZXZva2luZy4uLlwiXG4jICAgIHVudXNlZF9saWNlbnNlczogXCJZb3UgaGF2ZSB1bnVzZWQgTGljZW5zZXMgdGhhdCBhbGxvdyB5b3UgdG8gYXNzaWduIHN0dWRlbnRzIHBhaWQgY291cnNlcyB3aGVuIHRoZXkncmUgcmVhZHkgdG8gbGVhcm4gbW9yZSFcIlxuIyAgICByZW1lbWJlcl9uZXdfY291cnNlczogXCJSZW1lbWJlciB0byBhc3NpZ24gbmV3IGNvdXJzZXMhXCJcbiMgICAgbW9yZV9pbmZvOiBcIk1vcmUgSW5mb1wiXG4jICAgIGhvd190b19hc3NpZ25fY291cnNlczogXCJIb3cgdG8gQXNzaWduIENvdXJzZXNcIlxuIyAgICBzZWxlY3Rfc3R1ZGVudHM6IFwiU2VsZWN0IFN0dWRlbnRzXCJcbiMgICAgc2VsZWN0X2luc3RydWN0aW9uczogXCJDbGljayB0aGUgY2hlY2tib3ggbmV4dCB0byBlYWNoIHN0dWRlbnQgeW91IHdhbnQgdG8gYXNzaWduIGNvdXJzZXMgdG8uXCJcbiMgICAgY2hvb3NlX2NvdXJzZTogXCJDaG9vc2UgQ291cnNlXCJcbiMgICAgY2hvb3NlX2luc3RydWN0aW9uczogXCJTZWxlY3QgdGhlIGNvdXJzZSBmcm9tIHRoZSBkcm9wZG93biBtZW51IHlvdeKAmWQgbGlrZSB0byBhc3NpZ24sIHRoZW4gY2xpY2sg4oCcQXNzaWduIHRvIFNlbGVjdGVkIFN0dWRlbnRzLuKAnVwiXG4jICAgIHB1c2hfcHJvamVjdHM6IFwiV2UgcmVjb21tZW5kIGFzc2lnbmluZyBXZWIgRGV2ZWxvcG1lbnQgMSBvciBHYW1lIERldmVsb3BtZW50IDEgYWZ0ZXIgc3R1ZGVudHMgaGF2ZSBmaW5pc2hlZCBJbnRyb2R1Y3Rpb24gdG8gQ29tcHV0ZXIgU2NpZW5jZSEgU2VlIG91ciB7e3Jlc291cmNlX2h1Yn19IGZvciBtb3JlIGRldGFpbHMgb24gdGhvc2UgY291cnNlcy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0OiBcIlRlYWNoZXIncyBRdWVzdCBmb3IgU3VjY2Vzc1wiXG4jICAgIHF1ZXN0c19jb21wbGV0ZTogXCJRdWVzdHMgQ29tcGxldGVcIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2NyZWF0ZV9jbGFzc3Jvb206IFwiQ3JlYXRlIENsYXNzcm9vbVwiXG4jICAgIHRlYWNoZXJfcXVlc3RfYWRkX3N0dWRlbnRzOiBcIkFkZCBTdHVkZW50c1wiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbWV0aG9kczogXCJIZWxwIHlvdXIgc3R1ZGVudHMgbGVhcm4gaG93IHRvIGBjYWxsIG1ldGhvZHNgLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbWV0aG9kc19zdGVwMTogXCJHZXQgNzUlIG9mIGF0IGxlYXN0IG9uZSBjbGFzcyB0aHJvdWdoIHRoZSBmaXJzdCBsZXZlbCwgX19EdW5nZW9ucyBvZiBLaXRoZ2FyZF9fXCJcbiMgICAgdGVhY2hlcl9xdWVzdF90ZWFjaF9tZXRob2RzX3N0ZXAyOiBcIlByaW50IG91dCB0aGUgW1N0dWRlbnQgUXVpY2sgU3RhcnQgR3VpZGVdKGh0dHA6Ly9maWxlcy5jb2RlY29tYmF0LmNvbS9kb2NzL3Jlc291cmNlcy9TdHVkZW50UXVpY2tTdGFydEd1aWRlLnBkZikgaW4gdGhlIFJlc291cmNlIEh1Yi5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX3N0cmluZ3M6IFwiRG9uJ3Qgc3RyaW5nIHlvdXIgc3R1ZGVudHMgYWxvbmcsIHRlYWNoIHRoZW0gYHN0cmluZ3NgLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfc3RyaW5nc19zdGVwMTogXCJHZXQgNzUlIG9mIGF0IGxlYXN0IG9uZSBjbGFzcyB0aHJvdWdoIF9fVHJ1ZSBOYW1lc19fXCJcbiMgICAgdGVhY2hlcl9xdWVzdF90ZWFjaF9zdHJpbmdzX3N0ZXAyOiBcIlVzZSB0aGUgVGVhY2hlciBMZXZlbCBTZWxlY3RvciBvbiBbQ291cnNlIEd1aWRlc10oL3RlYWNoZXJzL2NvdXJzZXMpIHBhZ2UgdG8gcHJldmlldyBfX1RydWUgTmFtZXNfXy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3RlYWNoX2xvb3BzOiBcIktlZXAgeW91ciBzdHVkZW50cyBpbiB0aGUgbG9vcCBhYm91dCBgbG9vcHNgLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbG9vcHNfc3RlcDE6IFwiR2V0IDc1JSBvZiBhdCBsZWFzdCBvbmUgY2xhc3MgdGhyb3VnaCBfX0ZpcmUgRGFuY2luZ19fLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfbG9vcHNfc3RlcDI6IFwiVXNlIHRoZSBfX0xvb3BzIEFjdGl2aXR5X18gaW4gdGhlIFtDUzEgQ3VycmljdWx1bSBndWlkZV0oL3RlYWNoZXJzL3Jlc291cmNlcy9jczEpIHRvIHJlaW5mb3JjZSB0aGlzIGNvbmNlcHQuXCJcbiMgICAgdGVhY2hlcl9xdWVzdF90ZWFjaF92YXJpYWJsZXM6IFwiVmFyeSBpdCB1cCB3aXRoIGB2YXJpYWJsZXNgLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfdmFyaWFibGVzX3N0ZXAxOiBcIkdldCA3NSUgb2YgYXQgbGVhc3Qgb25lIGNsYXNzIHRocm91Z2ggX19Lbm93biBFbmVteV9fLlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfdGVhY2hfdmFyaWFibGVzX3N0ZXAyOiBcIkVuY291cmFnZSBjb2xsYWJvcmF0aW9uIGJ5IHVzaW5nIHRoZSBbUGFpciBQcm9ncmFtbWluZyBBY3Rpdml0eV0oL3RlYWNoZXJzL3Jlc291cmNlcy9wYWlyLXByb2dyYW1taW5nKS5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2tpdGhnYXJkX2dhdGVzXzEwMDogXCJFc2NhcGUgdGhlIEtpdGhnYXJkIEdhdGVzIHdpdGggeW91ciBjbGFzcy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2tpdGhnYXJkX2dhdGVzXzEwMF9zdGVwMTogXCJHZXQgNzUlIG9mIGF0IGxlYXN0IG9uZSBjbGFzcyB0aHJvdWdoIF9fS2l0aGdhcmQgR2F0ZXNfXy5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2tpdGhnYXJkX2dhdGVzXzEwMF9zdGVwMjogXCJHdWlkZSBzdHVkZW50cyB0byB0aGluayB0aHJvdWdoIGhhcmQgcHJvYmxlbXMgdXNpbmcgdGhlIFtFbmdpbmVlcmluZyBDeWNsZSBXb3Jrc2hlZXRdKGh0dHA6Ly9maWxlcy5jb2RlY29tYmF0LmNvbS9kb2NzL3Jlc291cmNlcy9FbmdpbmVlcmluZ0N5Y2xlV29ya3NoZWV0LnBkZikuXCJcbiMgICAgdGVhY2hlcl9xdWVzdF93YWtrYV9tYXVsXzEwMDogXCJQcmVwYXJlIHRvIGR1ZWwgaW4gV2Fra2EgTWF1bC5cIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X3dha2thX21hdWxfMTAwX3N0ZXAxOiBcIkdldCA3NSUgb2YgYXQgbGVhc3Qgb25lIGNsYXNzIHRvIF9fV2Fra2EgTWF1bF9fLlwiXG4jICAgIHRlYWNoZXJfcXVlc3Rfd2Fra2FfbWF1bF8xMDBfc3RlcDI6IFwiU2VlIHRoZSBbQXJlbmEgR3VpZGVdKC90ZWFjaGVycy9yZXNvdXJjZXMvYXJlbmFzKSBpbiB0aGUgW1Jlc291cmNlIEh1Yl0oL3RlYWNoZXJzL3Jlc291cmNlcykgZm9yIHRpcHMgb24gaG93IHRvIHJ1biBhIHN1Y2Nlc3NmdWwgYXJlbmEgZGF5LlwiXG4jICAgIHRlYWNoZXJfcXVlc3RfcmVhY2hfZ2FtZWRldjogXCJFeHBsb3JlIG5ldyB3b3JsZHMhXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9yZWFjaF9nYW1lZGV2X3N0ZXAxOiBcIltHZXQgbGljZW5zZXNdKC90ZWFjaGVycy9saWNlbnNlcykgc28gdGhhdCB5b3VyIHN0dWRlbnRzIGNhbiBleHBsb3JlIG5ldyB3b3JsZHMsIGxpa2UgR2FtZSBEZXZlbG9wbWVudCBhbmQgV2ViIERldmVsb3BtZW50IVwiXG4jICAgIHRlYWNoZXJfcXVlc3RfZG9uZTogXCJXYW50IHlvdXIgc3R1ZGVudHMgdG8gbGVhcm4gZXZlbiBtb3JlIGNvZGU/IEdldCBpbiB0b3VjaCB3aXRoIG91ciBbc2Nob29sIHNwZWNpYWxpc3RzXShtYWlsdG86c2Nob29sc0Bjb2RlY29tYmF0LmNvbSkgdG9kYXkhXCJcbiMgICAgdGVhY2hlcl9xdWVzdF9rZWVwX2dvaW5nOiBcIktlZXAgZ29pbmchIEhlcmUncyB3aGF0IHlvdSBjYW4gZG8gbmV4dDpcIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X21vcmU6IFwiU2VlIGFsbCBxdWVzdHNcIlxuIyAgICB0ZWFjaGVyX3F1ZXN0X2xlc3M6IFwiU2VlIGZld2VyIHF1ZXN0c1wiXG4jICAgIHJlZnJlc2hfdG9fdXBkYXRlOiBcIihyZWZyZXNoIHRoZSBwYWdlIHRvIHNlZSB1cGRhdGVzKVwiXG4jICAgIHZpZXdfcHJvamVjdF9nYWxsZXJ5OiBcIlZpZXcgUHJvamVjdCBHYWxsZXJ5XCJcbiMgICAgb2ZmaWNlX2hvdXJzOiBcIlRlYWNoZXIgV2ViaW5hcnNcIlxuIyAgICBvZmZpY2VfaG91cnNfZGV0YWlsOiBcIkxlYXJuIGhvdyB0byBrZWVwIHVwIHdpdGggd2l0aCB5b3VyIHN0dWRlbnRzIGFzIHRoZXkgY3JlYXRlIGdhbWVzIGFuZCBlbWJhcmsgb24gdGhlaXIgY29kaW5nIGpvdXJuZXkhIENvbWUgYW5kIGF0dGVuZCBvdXJcIlxuIyAgICBvZmZpY2VfaG91cnNfbGluazogXCJ0ZWFjaGVyIHdlYmluYXJcIlxuIyAgICBvZmZpY2VfaG91cnNfZGV0YWlsXzI6IFwic2Vzc2lvbnMuXCJcbiMgICAgc3VjY2VzczogXCJTdWNjZXNzXCJcbiMgICAgaW5fcHJvZ3Jlc3M6IFwiSW4gUHJvZ3Jlc3NcIlxuIyAgICBub3Rfc3RhcnRlZDogXCJOb3QgU3RhcnRlZFwiXG4jICAgIG1pZF9jb3Vyc2U6IFwiTWlkLUNvdXJzZVwiXG4jICAgIGVuZF9jb3Vyc2U6IFwiRW5kIG9mIENvdXJzZVwiXG4jICAgIG5vbmU6IFwiTm9uZSBkZXRlY3RlZCB5ZXRcIlxuIyAgICBleHBsYWluX29wZW5fZW5kZWQ6IFwiTm90ZTogU3R1ZGVudHMgYXJlIGVuY291cmFnZWQgdG8gc29sdmUgdGhpcyBsZXZlbCBjcmVhdGl2ZWx5IOKAlCBvbmUgcG9zc2libGUgc29sdXRpb24gaXMgcHJvdmlkZWQgYmVsb3cuXCJcbiMgICAgbGV2ZWxfbGFiZWw6IFwiTGV2ZWw6XCJcbiMgICAgdGltZV9wbGF5ZWRfbGFiZWw6IFwiVGltZSBQbGF5ZWQ6XCJcbiMgICAgYmFja190b19yZXNvdXJjZV9odWI6IFwiQmFjayB0byBSZXNvdXJjZSBIdWJcIlxuIyAgICBiYWNrX3RvX2NvdXJzZV9ndWlkZXM6IFwiQmFjayB0byBDb3Vyc2UgR3VpZGVzXCJcbiMgICAgcHJpbnRfZ3VpZGU6IFwiUHJpbnQgdGhpcyBndWlkZVwiXG4jICAgIGNvbWJvOiBcIkNvbWJvXCJcbiMgICAgY29tYm9fZXhwbGFuYXRpb246IFwiU3R1ZGVudHMgcGFzcyBDb21ibyBjaGFsbGVuZ2UgbGV2ZWxzIGJ5IHVzaW5nIGF0IGxlYXN0IG9uZSBsaXN0ZWQgY29uY2VwdC4gUmV2aWV3IHN0dWRlbnQgY29kZSBieSBjbGlja2luZyB0aGUgcHJvZ3Jlc3MgZG90LlwiXG4jICAgIGNvbmNlcHQ6IFwiQ29uY2VwdFwiXG4jICAgIHN5bmNfZ29vZ2xlX2NsYXNzcm9vbTogXCJTeW5jIEdvb2dsZSBDbGFzc3Jvb21cIlxuXG4jICBzaGFyZV9saWNlbnNlczpcbiMgICAgc2hhcmVfbGljZW5zZXM6IFwiU2hhcmUgTGljZW5zZXNcIlxuIyAgICBzaGFyZWRfYnk6IFwiU2hhcmVkIEJ5OlwiXG4jICAgIGFkZF90ZWFjaGVyX2xhYmVsOiBcIkVudGVyIGV4YWN0IHRlYWNoZXIgZW1haWw6XCJcbiMgICAgYWRkX3RlYWNoZXJfYnV0dG9uOiBcIkFkZCBUZWFjaGVyXCJcbiMgICAgc3ViaGVhZGVyOiBcIllvdSBjYW4gbWFrZSB5b3VyIGxpY2Vuc2VzIGF2YWlsYWJsZSB0byBvdGhlciB0ZWFjaGVycyBpbiB5b3VyIG9yZ2FuaXphdGlvbi4gRWFjaCBsaWNlbnNlIGNhbiBvbmx5IGJlIHVzZWQgZm9yIG9uZSBzdHVkZW50IGF0IGEgdGltZS5cIlxuIyAgICB0ZWFjaGVyX25vdF9mb3VuZDogXCJUZWFjaGVyIG5vdCBmb3VuZC4gUGxlYXNlIG1ha2Ugc3VyZSB0aGlzIHRlYWNoZXIgaGFzIGFscmVhZHkgY3JlYXRlZCBhIFRlYWNoZXIgQWNjb3VudC5cIlxuIyAgICB0ZWFjaGVyX25vdF92YWxpZDogXCJUaGlzIGlzIG5vdCBhIHZhbGlkIFRlYWNoZXIgQWNjb3VudC4gT25seSB0ZWFjaGVyIGFjY291bnRzIGNhbiBzaGFyZSBsaWNlbnNlcy5cIlxuIyAgICBhbHJlYWR5X3NoYXJlZDogXCJZb3UndmUgYWxyZWFkeSBzaGFyZWQgdGhlc2UgbGljZW5zZXMgd2l0aCB0aGF0IHRlYWNoZXIuXCJcbiMgICAgdGVhY2hlcnNfdXNpbmdfdGhlc2U6IFwiVGVhY2hlcnMgd2hvIGNhbiBhY2Nlc3MgdGhlc2UgbGljZW5zZXM6XCJcbiMgICAgZm9vdGVyOiBcIldoZW4gdGVhY2hlcnMgcmV2b2tlIGxpY2Vuc2VzIGZyb20gc3R1ZGVudHMsIHRoZSBsaWNlbnNlcyB3aWxsIGJlIHJldHVybmVkIHRvIHRoZSBzaGFyZWQgcG9vbCBmb3Igb3RoZXIgdGVhY2hlcnMgaW4gdGhpcyBncm91cCB0byB1c2UuXCJcbiMgICAgeW91OiBcIih5b3UpXCJcbiMgICAgb25lX2xpY2Vuc2VfdXNlZDogXCIoMSBsaWNlbnNlIHVzZWQpXCJcbiMgICAgbGljZW5zZXNfdXNlZDogXCIoX19saWNlbnNlc1VzZWRfXyBsaWNlbnNlcyB1c2VkKVwiXG4jICAgIG1vcmVfaW5mbzogXCJNb3JlIGluZm9cIlxuXG4jICBzaGFyaW5nOlxuIyAgICBnYW1lOiBcIkdhbWVcIlxuIyAgICB3ZWJwYWdlOiBcIldlYnBhZ2VcIlxuIyAgICB5b3VyX3N0dWRlbnRzX3ByZXZpZXc6IFwiWW91ciBzdHVkZW50cyB3aWxsIGNsaWNrIGhlcmUgdG8gc2VlIHRoZWlyIGZpbmlzaGVkIHByb2plY3RzISBVbmF2YWlsYWJsZSBpbiB0ZWFjaGVyIHByZXZpZXcuXCJcbiMgICAgdW5hdmFpbGFibGU6IFwiTGluayBzaGFyaW5nIG5vdCBhdmFpbGFibGUgaW4gdGVhY2hlciBwcmV2aWV3LlwiXG4jICAgIHNoYXJlX2dhbWU6IFwiU2hhcmUgVGhpcyBHYW1lXCJcbiMgICAgc2hhcmVfd2ViOiBcIlNoYXJlIFRoaXMgV2VicGFnZVwiXG4jICAgIHZpY3Rvcnlfc2hhcmVfcHJlZml4OiBcIlNoYXJlIHRoaXMgbGluayB0byBpbnZpdGUgeW91ciBmcmllbmRzICYgZmFtaWx5IHRvXCJcbiMgICAgdmljdG9yeV9zaGFyZV9wcmVmaXhfc2hvcnQ6IFwiSW52aXRlIHBlb3BsZSB0b1wiXG4jICAgIHZpY3Rvcnlfc2hhcmVfZ2FtZTogXCJwbGF5IHlvdXIgZ2FtZSBsZXZlbFwiXG4jICAgIHZpY3Rvcnlfc2hhcmVfd2ViOiBcInZpZXcgeW91ciB3ZWJwYWdlXCJcbiMgICAgdmljdG9yeV9zaGFyZV9zdWZmaXg6IFwiLlwiXG4jICAgIHZpY3RvcnlfY291cnNlX3NoYXJlX3ByZWZpeDogXCJUaGlzIGxpbmsgd2lsbCBsZXQgeW91ciBmcmllbmRzICYgZmFtaWx5XCJcbiMgICAgdmljdG9yeV9jb3Vyc2Vfc2hhcmVfZ2FtZTogXCJwbGF5IHRoZSBnYW1lXCJcbiMgICAgdmljdG9yeV9jb3Vyc2Vfc2hhcmVfd2ViOiBcInZpZXcgdGhlIHdlYnBhZ2VcIlxuIyAgICB2aWN0b3J5X2NvdXJzZV9zaGFyZV9zdWZmaXg6IFwieW91IGp1c3QgY3JlYXRlZC5cIlxuIyAgICBjb3B5X3VybDogXCJDb3B5IFVSTFwiXG4jICAgIHNoYXJlX3dpdGhfdGVhY2hlcl9lbWFpbDogXCJTZW5kIHRvIHlvdXIgdGVhY2hlclwiXG5cbiMgIGdhbWVfZGV2OlxuIyAgICBjcmVhdG9yOiBcIkNyZWF0b3JcIlxuXG4jICB3ZWJfZGV2OlxuIyAgICBpbWFnZV9nYWxsZXJ5X3RpdGxlOiBcIkltYWdlIEdhbGxlcnlcIlxuIyAgICBzZWxlY3RfYW5faW1hZ2U6IFwiU2VsZWN0IGFuIGltYWdlIHlvdSB3YW50IHRvIHVzZVwiXG4jICAgIHNjcm9sbF9kb3duX2Zvcl9tb3JlX2ltYWdlczogXCIoU2Nyb2xsIGRvd24gZm9yIG1vcmUgaW1hZ2VzKVwiXG4jICAgIGNvcHlfdGhlX3VybDogXCJDb3B5IHRoZSBVUkwgYmVsb3dcIlxuIyAgICBjb3B5X3RoZV91cmxfZGVzY3JpcHRpb246IFwiVXNlZnVsIGlmIHlvdSB3YW50IHRvIHJlcGxhY2UgYW4gZXhpc3RpbmcgaW1hZ2UuXCJcbiMgICAgY29weV90aGVfaW1nX3RhZzogXCJDb3B5IHRoZSA8aW1nPiB0YWdcIlxuIyAgICBjb3B5X3RoZV9pbWdfdGFnX2Rlc2NyaXB0aW9uOiBcIlVzZWZ1bCBpZiB5b3Ugd2FudCB0byBpbnNlcnQgYSBuZXcgaW1hZ2UuXCJcbiMgICAgY29weV91cmw6IFwiQ29weSBVUkxcIlxuIyAgICBjb3B5X2ltZzogXCJDb3B5IDxpbWc+XCJcbiMgICAgaG93X3RvX2NvcHlfcGFzdGU6IFwiSG93IHRvIENvcHkvUGFzdGVcIlxuIyAgICBjb3B5OiBcIkNvcHlcIlxuIyAgICBwYXN0ZTogXCJQYXN0ZVwiXG4jICAgIGJhY2tfdG9fZWRpdGluZzogXCJCYWNrIHRvIEVkaXRpbmdcIlxuXG4gIGNsYXNzZXM6XG4gICAgYXJjaG1hZ2VfdGl0bGU6IFwi64yA66eI67KV7IKsXCJcbiAgICBhcmNobWFnZV90aXRsZV9kZXNjcmlwdGlvbjogXCIo7L2U642UKVwiXG4gICAgYXJjaG1hZ2Vfc3VtbWFyeTogXCLri7nsi6DsnbQg66eM7JW9IOy9lOuUqSDqtZDsnKEg6rKM7J6E7JeQIOq0gOyLrOyeiOuKlCDqsJzrsJzsnpDrnbzrqbQsIOy9lOuTnOy7tOuxg+ydhCDrj5XripQg64yA66eI67KV7IKs6rCAIOuQmOyWtOyjvOyLreyLnOyYpCFcIlxuICAgIGFydGlzYW5fdGl0bGU6IFwi7J6l7J24XCJcbiAgICBhcnRpc2FuX3RpdGxlX2Rlc2NyaXB0aW9uOiBcIijroIjrsqgg7KCc7J6R7J6QKVwiXG4gICAgYXJ0aXNhbl9zdW1tYXJ5OiBcIuugiOuyqOydhCDrp4zrk6TqsbDrgpgg6rO17Jyg7ZWY7JesIOuLueyLoOqzvCDsuZzqtazrk6TsnbQg7ZSM66CI7J207ZWp64uI64ukLiDri6Trpbgg7ZSE66Gc6re4656o7J2EIOqwgOultOy5mOuKlCDsmIjsiKAg7J6l7J247J20IOuQmOyWtOuztOyLreyLnOyYpCFcIlxuICAgIGFkdmVudHVyZXJfdGl0bGU6IFwi66qo7ZeY6rCAXCJcbiAgICBhZHZlbnR1cmVyX3RpdGxlX2Rlc2NyaXB0aW9uOiBcIijroIjrsqgg7YWM7Iqk7YSwKVwiXG4gICAgYWR2ZW50dXJlcl9zdW1tYXJ5OiBcIuyasOumrOydmCDsg4jroZzsmrQg66CI67Ko7J2EICjsi6zsp4DslrQg6rWs64+F7J6Q7J2YIOy7qO2FkOy4oOuPhCkg7J287KO87J28IOuovOyggCDrrLTro4zroZwg7Ja77J2EIOyImCDsnojqs6Ag6rO16rCcIOumtOumrOymiCDsoITsl5Ag67KE6re466W8IOygnOuztO2VmOyXrCDsmrDrpqzrpbwg64+E7JmA7KO87Iut7Iuc7JikLlwiXG4gICAgc2NyaWJlX3RpdGxlOiBcIuyekeqwgFwiXG4gICAgc2NyaWJlX3RpdGxlX2Rlc2NyaXB0aW9uOiBcIijquLDsgqwg7JeQ65SU7YSwKVwiXG4gICAgc2NyaWJlX3N1bW1hcnk6IFwi7KKL7J2AIOy9lOuTnOuKlCDsoovsnYAg66y47ISc6rCAIO2VhOyalO2VqeuLiOuLpC4g7JOw6riwLCDtjrjsp5HtlZjqs6AsIOyghCDshLjqs4TsnZgg7IiY67Cx66eMIO2UjOugiOydtOyWtOyXkCDsnZjtlbQg7YyQ64+F65CcIOusuOyEnOulvCDtlqXsg4Hsi5ztgqwg7IiYIOyeiOyKteuLiOuLpC5cIlxuICAgIGRpcGxvbWF0X3RpdGxlOiBcIuyZuOq1kOq0gFwiXG4gICAgZGlwbG9tYXRfdGl0bGVfZGVzY3JpcHRpb246IFwiKOuyiOyXreqwgClcIlxuICAgIGRpcGxvbWF0X3N1bW1hcnk6IFwi7L2U65Oc7Lu067GD7J2AIERpcGxvbWF0c+yXkCDsnZjtlbQgNDUrIOyWuOyWtOuhnCDsp4Dsl63tmZTrkJjsl4jsirXri4jri6QuIOyasOumrOulvCDrj4TsmYAg67KI7Jet7JeQIOq4sOyXrO2VmOyLreyLnOyYpC5cIlxuICAgIGFtYmFzc2Fkb3JfdGl0bGU6IFwi64yA7IKsXCJcbiAgICBhbWJhc3NhZG9yX3RpdGxlX2Rlc2NyaXB0aW9uOiBcIijsp4Dsm5ApXCJcbiAgICBhbWJhc3NhZG9yX3N1bW1hcnk6IFwi7Y+s65+8IOyCrOyaqeyekOulvCDqtIDrpqztlZjripTqsoPqs7wg7KeI66y465Ok7JeQIOuMgO2VnCDrsKntlqXsnYQg7KCc6rO17ZWp64uI64ukLiDsmrDrpqzsnZgg64yA7IKs64qUIOyEuOqzhOyXkCDsvZTrk5zsu7TrsYPsnYQg64KY7YOA64OF64uI64ukLlwiXG4jICAgIHRlYWNoZXJfdGl0bGU6IFwiVGVhY2hlclwiXG5cbiAgZWRpdG9yOlxuICAgIG1haW5fdGl0bGU6IFwi7L2U65OcIOy7tOuxgyDsl5DrlJTthLDrk6RcIlxuICAgIGFydGljbGVfdGl0bGU6IFwi6riw7IKsIOyXkOuUlO2EsOuTpFwiXG4gICAgdGhhbmdfdGl0bGU6IFwiVGhhbmcg7JeQ65SU7YSwXCJcbiAgICBsZXZlbF90aXRsZTogXCLroIjrsqgg7JeQ65SU7YSwXCJcbiMgICAgY291cnNlX3RpdGxlOiBcIkNvdXJzZSBFZGl0b3JcIlxuICAgIGFjaGlldmVtZW50X3RpdGxlOiBcIuyXheyggSDsl5DrlJTthLBcIlxuICAgIHBvbGxfdGl0bGU6IFwi7Yis7ZGcIOyXkOuUlO2EsFwiXG4gICAgYmFjazogXCLrkqTroZxcIlxuICAgIHJldmVydDogXCLrkJjrj4zrpqzquLBcIlxuICAgIHJldmVydF9tb2RlbHM6IFwi66qo6424IOuQmOuPjOumrOq4sFwiXG4gICAgcGlja19hX3RlcnJhaW46IFwi7KeA7ZiV7J2EIOyEoO2Dne2VmOyEuOyalC5cIlxuICAgIGR1bmdlb246IFwi7KeA7ZWYIOqwkOyYpVwiXG4gICAgaW5kb29yOiBcIuuCtOu2gFwiXG4gICAgZGVzZXJ0OiBcIuyCrOuniVwiXG4gICAgZ3Jhc3N5OiBcIu2SgOuhnCDrja7snbhcIlxuICAgIG1vdW50YWluOiBcIuyCsFwiXG4gICAgZ2xhY2llcjogXCLruZntlZhcIlxuICAgIHNtYWxsOiBcIuyekeqyjFwiXG4gICAgbGFyZ2U6IFwi7YGs6rKMXCJcbiAgICBmb3JrX3RpdGxlOiBcIuyDiCDrsoTsoIQg6rCA7KC47Jik6riwXCJcbiAgICBmb3JrX2NyZWF0aW5nOiBcIu2PrO2BrCDsg53shLHspJEuLi5cIlxuICAgIGdlbmVyYXRlX3RlcnJhaW46IFwi7KeA7ZiVIOyDneyEsVwiXG4gICAgbW9yZTogXCLrjZQg67O06riwXCJcbiAgICB3aWtpOiBcIuychO2CpFwiXG4gICAgbGl2ZV9jaGF0OiBcIuyLpOyLnOqwhCDssYTtjIVcIlxuICAgIHRoYW5nX21haW46IFwi66mU7J24XCJcbiAgICB0aGFuZ19zcHJpdGVzaGVldHM6IFwi7Iqk7ZSE65287J207Yq47Iuc7Yq4XCJcbiAgICB0aGFuZ19jb2xvcnM6IFwi7IOJ6rCIXCJcbiAgICBsZXZlbF9zb21lX29wdGlvbnM6IFwi64uk66W4IOyYteyFmOuTpD9cIlxuICAgIGxldmVsX3RhYl90aGFuZ3M6IFwiVGhhbmdzXCJcbiAgICBsZXZlbF90YWJfc2NyaXB0czogXCLsiqTtgazrpr3tirjrk6RcIlxuICAgIGxldmVsX3RhYl9jb21wb25lbnRzOiBcIuyalOyGjOuTpFwiXG4gICAgbGV2ZWxfdGFiX3N5c3RlbXM6IFwi7Iuc7Iqk7YWcXCJcbiAgICBsZXZlbF90YWJfZG9jczogXCLrrLjshJxcIlxuICAgIGxldmVsX3RhYl90aGFuZ3NfdGl0bGU6IFwi7ZiE7J6sIFRoYW5nc1wiXG4gICAgbGV2ZWxfdGFiX3RoYW5nc19hbGw6IFwi66qo65GQXCJcbiAgICBsZXZlbF90YWJfdGhhbmdzX2NvbmRpdGlvbnM6IFwi7Luo65SU7IWYIOyLnOyekVwiXG4gICAgbGV2ZWxfdGFiX3RoYW5nc19hZGQ6IFwiVGhhbmdzIOy2lOqwgFwiXG4gICAgbGV2ZWxfdGFiX3RoYW5nc19zZWFyY2g6IFwidGhhbmdzIOqygOyDiVwiXG4gICAgYWRkX2NvbXBvbmVudHM6IFwi6rWs7ISx7JqU7IaMIOy2lOqwgFwiXG4gICAgY29tcG9uZW50X2NvbmZpZ3M6IFwi7ZmY6rK97ISk7KCVIOq1rOyEseyalOyGjFwiXG4gICAgY29uZmlnX3RoYW5nOiBcInRoYW5n7J2EIOyEpOygle2VmOugpOuptCDrjZTruJTtgbTrpq1cIlxuICAgIGRlbGV0ZTogXCLsgq3soJxcIlxuICAgIGR1cGxpY2F0ZTogXCLrs7XsoJxcIlxuICAgIHN0b3BfZHVwbGljYXRlOiBcIuuzteygnCDspJHsp4BcIlxuICAgIHJvdGF0ZTogXCLtmozsoIRcIlxuICAgIGxldmVsX2NvbXBvbmVudF90YWJfdGl0bGU6IFwi7ZiE7J6sIOyalOyGjOuTpFwiXG4gICAgbGV2ZWxfY29tcG9uZW50X2J0bl9uZXc6IFwi7IOI66Gc7Jq0IOyalOyGjOuTpCDsg53shLFcIlxuICAgIGxldmVsX3N5c3RlbXNfdGFiX3RpdGxlOiBcIu2YhOyerCDsi5zsiqTthZxcIlxuICAgIGxldmVsX3N5c3RlbXNfYnRuX25ldzogXCLsg4jroZzsmrQg7Iuc7Iqk7YWc7IOd7ISxXCJcbiAgICBsZXZlbF9zeXN0ZW1zX2J0bl9hZGQ6IFwi7IOI66Gc7Jq0IOyLnOyKpO2FnCDstpTqsIBcIlxuICAgIGxldmVsX2NvbXBvbmVudHNfdGl0bGU6IFwi66qo65OgIFRoYW5nIOuTpOuhnCDrkJjrj4zslYTqsIDquLBcIlxuICAgIGxldmVsX2NvbXBvbmVudHNfdHlwZTogXCLtg4DsnoVcIlxuICAgIGxldmVsX2NvbXBvbmVudF9lZGl0X3RpdGxlOiBcIuyalOyGjCDtjrjsp5FcIlxuICAgIGxldmVsX2NvbXBvbmVudF9jb25maWdfc2NoZW1hOiBcIu2ZmOqyvSDshKTsoJVcIlxuICAgIGxldmVsX3N5c3RlbV9lZGl0X3RpdGxlOiBcIuyLnOyKpO2FnCDtjrjsp5FcIlxuICAgIGNyZWF0ZV9zeXN0ZW1fdGl0bGU6IFwi7IOI66Gc7Jq0IOyLnOyKpO2FnCDsg53shLFcIlxuICAgIG5ld19jb21wb25lbnRfdGl0bGU6IFwi7IOI66Gc7Jq0IOyalOyGjOuTpCDsg53shLFcIlxuICAgIG5ld19jb21wb25lbnRfZmllbGRfc3lzdGVtOiBcIuyLnOyKpO2FnFwiXG4gICAgbmV3X2FydGljbGVfdGl0bGU6IFwi7IOI66Gc7Jq0IOq4sOyCrCDsnpHshLFcIlxuICAgIG5ld190aGFuZ190aXRsZTogXCLsg4jroZzsmrQgVGhhbmcgdHlwZSDsi5zsnpFcIlxuICAgIG5ld19sZXZlbF90aXRsZTogXCLsg4jroZzsmrQg66CI67KoIOyLnOyekVwiXG4gICAgbmV3X2FydGljbGVfdGl0bGVfbG9naW46IFwi7IOIIOq4sOyCrOulvCDsnpHshLHtlZjsi5zroKTrqbQg66Gc6re47J247ZWY7IS47JqULlwiXG4jICAgIG5ld190aGFuZ190aXRsZV9sb2dpbjogXCJMb2cgSW4gdG8gQ3JlYXRlIGEgTmV3IFRoYW5nIFR5cGVcIlxuICAgIG5ld19sZXZlbF90aXRsZV9sb2dpbjogXCLsg4jroZzsmrQg66CI67Ko7J2EIOunjOuTnOyLnOugpOuptCDroZzqt7jsnbjtlZjshLjsmpQuXCJcbiMgICAgbmV3X2FjaGlldmVtZW50X3RpdGxlOiBcIkNyZWF0ZSBhIE5ldyBBY2hpZXZlbWVudFwiXG4jICAgIG5ld19hY2hpZXZlbWVudF90aXRsZV9sb2dpbjogXCJMb2cgSW4gdG8gQ3JlYXRlIGEgTmV3IEFjaGlldmVtZW50XCJcbiMgICAgbmV3X3BvbGxfdGl0bGU6IFwiQ3JlYXRlIGEgTmV3IFBvbGxcIlxuIyAgICBuZXdfcG9sbF90aXRsZV9sb2dpbjogXCJMb2cgSW4gdG8gQ3JlYXRlIGEgTmV3IFBvbGxcIlxuICAgIGFydGljbGVfc2VhcmNoX3RpdGxlOiBcIuq4sOyCrOuTpOydgCDsl6zquLDsl5DshJwg7LC+7Jy87IS47JqUXCJcbiAgICB0aGFuZ19zZWFyY2hfdGl0bGU6IFwiVGhhbmcg7YOA7J6F65Ok7J2AIOyXrOq4sOyXkOyEnCDssL7snLzshLjsmpRcIlxuICAgIGxldmVsX3NlYXJjaF90aXRsZTogXCLroIjrsqjrk6TsnYAg7Jes6riw7JeQ7IScIOywvuycvOyEuOyalFwiXG4gICAgYWNoaWV2ZW1lbnRfc2VhcmNoX3RpdGxlOiBcIuyXheyggSDqsoDsg4lcIlxuIyAgICBwb2xsX3NlYXJjaF90aXRsZTogXCJTZWFyY2ggUG9sbHNcIlxuICAgIHJlYWRfb25seV93YXJuaW5nMjogXCLso7zsnZg6IOuhnOq3uOyduO2VmOyngCDslYrsnLzshajquLAg65WM66y47JeQIOuCtOyaqeydhCDsoIDsnqXtlaAg7IiYIOyXhuyKteuLiOuLpC5cIlxuIyAgICBub19hY2hpZXZlbWVudHM6IFwiTm8gYWNoaWV2ZW1lbnRzIGhhdmUgYmVlbiBhZGRlZCBmb3IgdGhpcyBsZXZlbCB5ZXQuXCJcbiMgICAgYWNoaWV2ZW1lbnRfcXVlcnlfbWlzYzogXCJLZXkgYWNoaWV2ZW1lbnQgb2ZmIG9mIG1pc2NlbGxhbmVhXCJcbiMgICAgYWNoaWV2ZW1lbnRfcXVlcnlfZ29hbHM6IFwiS2V5IGFjaGlldmVtZW50IG9mZiBvZiBsZXZlbCBnb2Fsc1wiXG4jICAgIGxldmVsX2NvbXBsZXRpb246IFwiTGV2ZWwgQ29tcGxldGlvblwiXG4jICAgIHBvcF9pMThuOiBcIlBvcHVsYXRlIEkxOE5cIlxuIyAgICB0YXNrczogXCJUYXNrc1wiXG4jICAgIGNsZWFyX3N0b3JhZ2U6IFwiQ2xlYXIgeW91ciBsb2NhbCBjaGFuZ2VzXCJcbiMgICAgYWRkX3N5c3RlbV90aXRsZTogXCJBZGQgU3lzdGVtcyB0byBMZXZlbFwiXG4jICAgIGRvbmVfYWRkaW5nOiBcIkRvbmUgQWRkaW5nXCJcblxuICBhcnRpY2xlOlxuICAgIGVkaXRfYnRuX3ByZXZpZXc6IFwi66+466as67O06riwXCJcbiAgICBlZGl0X2FydGljbGVfdGl0bGU6IFwi6riw7IKsIO2OuOynke2VmOq4sFwiXG5cbiAgcG9sbHM6XG4gICAgcHJpb3JpdHk6IFwi7Jqw7ISg64+EXCJcblxuICBjb250cmlidXRlOlxuICAgIHBhZ2VfdGl0bGU6IFwi6rO17ZeMXCJcbiAgICBpbnRyb19ibHVyYjogXCLsvZTrk5wg7Lu067GD7J2AIOyYpO2UiOyGjOyKpCDsu6TrrqTri4jti7DsnZgg7J2867aA7J6F64uI64ukISDsiJjrsLHrqoXsnZgg7ZSM66CI7J207Ja065Ok7J20IOyggO2drOuTpOydhCDrj4TsmYDshJwg6rKM7J6E7J2EIOyZhOyEseyLnOy8sOyKteuLiOuLpC4g7KCA7Z2s7JmAIO2VqOq7mCDsvZTrk5wg7Lu067GD7J2YIOyDiOuhnOyatCDsvZTrk5zrpbwg6rCA66W07Lmp7Iuc64ukIVwiXG4gICAgYWxlcnRfYWNjb3VudF9tZXNzYWdlX2ludHJvOiBcIuyViOuFle2VmOyEuOyalCFcIlxuICAgIGFsZXJ0X2FjY291bnRfbWVzc2FnZTogXCLsnbTrqZTsnbwg6rWs64+F7J2EIOychO2VtOyEnCDrqLzsoIAg66Gc6re47J247J20IO2VhOyalO2VqeuLiOuLpC5cIlxuICAgIGFyY2htYWdlX2ludHJvZHVjdGlvbjogXCLqsozsnoQg6rCc67CcIOqzvOyglSDspJHsl5DshJwg6rCA7J6lIO2dpeuvuOuhnOyatCDsoJDsnYAg64uk7JaR7ZWcIOyalOyGjOuTpOydhCDsobDtlantlZzri6TripQg6rKD7J6F64uI64ukLiDqt7jrnpjtlL0sIOyCrOyatOuTnCwg7Iuk7Iuc6rCEIOuEpO2KuOybjO2CuSwg7IaM7IWcIOuEpO2KuOybjO2CuSwg6re466as6rOgIOuLueyXsO2eiOuPhCDtlITroZzqt7jrnpjrsI3snZgg6rCBIOu2hOyVvCwg7JiI66W8IOuTpOuptCDquLDstIgg642w7J207YSwIOuyoOydtOyKpCDqtIDrpqwsIOyEnOuyhCDqtIDrpqwsIOycoOyggCDsnbjthLDtjpjsnbTsiqQg65Ox65OxLiDrp4zslb3sl5Ag7ZSE66Gc6re4656Y67CN7JeQIOqyve2XmOydtCDtko3rtoDtlZjsi5zri6TrqbQg7J20IOyngeyXheydhCDshKDtg53tlZjripQg6rKD7J20IOyii+yKteuLiOuLpC4g7IS46rOEIOy1nOqzoOydmCDsvZTrlKkg6rKM7J6E7J2EIOychO2VtCDtlajqu5gg64W466Cl7ZWp7Iuc64ukLlwiXG4gICAgY2xhc3NfYXR0cmlidXRlczogXCLsp4Hsl4Ug7ISk66qFXCJcbiAgICBhcmNobWFnZV9hdHRyaWJ1dGVfMV9wcmVmOiBcIuy2qeu2hO2VnCDsnbTtlbTrj4RcIlxuICAgIGFyY2htYWdlX2F0dHJpYnV0ZV8xX3N1ZjogXCIsIO2YueydgCDrhpLsnYAg7ZWZ6rWs7Je0LiDsmrDrpqzsnZgg64yA67aA67aEIOy9lOuTnOuKlCDsnbQg7Ja47Ja066GcIOy9lOuUqSDrkJjsl4jsirXri4jri6QuIOunjOyVvSBSdWJ5IO2YueydgCBQeXRob27sl5Ag7J217IiZ7ZWY64uk66m0IOuzhOuLpOuluCDslrTroKTsm4DsnYQg6rKq7KeAIOyViuydhOqygeuLiOuLpC4g6re867O47KCB7Jy866GcIEphdmFTY3JpcHTsnbTsp4Drp4wsIOuztOuLpCDtjrjtlZwg66y467KV7J2EIOyCrOyaqe2VqeuLiOuLpC5cIlxuICAgIGFyY2htYWdlX2F0dHJpYnV0ZV8yOiBcIuyVveqwhOydmCDtlITroZzqt7jrnpjrsI0g6rK97ZeYIOuwluyXkCDsl4bsp4Drp4wg7Je07KCV7J2EIOqwgOyhjOuLpOuptCwg7Jet7IucIOyasOumrOydmCDrj4Tsm4DsnYQg67Cb7J2EIOyImCDsnojsirXri4jri6QuIO2VmOyngOunjCDsvZTrlKkg7ZuI66Co7JeQIOqzvOuMgO2VnCDsi5zqsITsnYQg7IaM66qo7ZWgIOyImCDsl4bri6TripQg7KCQ7J2AIOyWke2VtO2VmOyLnOq4sCDrsJTrno3ri4jri6QuXCJcbiAgICBob3dfdG9fam9pbjogXCLssLjsl6wg67Cp67KVXCJcbiAgICBqb2luX2Rlc2NfMTogXCLriITqtazrgpgg7LC47JesIOqwgOuKpe2VqeuLiOuLpCFcIlxuICAgIGpvaW5fZGVzY18yOiBcIuuovOyggCDslYTrnpgg64K07Jqp7J2EIO2ZleyduO2VmOyLnOqzoCDrsJXsiqTsl5DshJwg7JWE7YGs66mU7J207KeA66W8IOyytO2BrO2VmOyEuOyalC4g6re466as6rOgIOy1nOyLoCDribTsiqTrpbwg7J2066mU7J2866Gc64+EIOuwm+ydhCDsiJgg7J6I7Iq164uI64ukLiDrjZQg64KY7JWE6rCAIOyasOumrOydmCDtlITroZzsoJ3tirjsl5Ag642UIOq5iuydtCDqtIDsl6ztlZjqs6Ag7Iu27J2AIOyDneqwgeydtCDrk6Tsl4jrgpjsmpQ/XCJcbiAgICBqb2luX2Rlc2NfMzogXCLsoIDtnazrpbwg7Jew65297ZWY7IS47JqULlwiXG4gICAgam9pbl9kZXNjXzQ6IFwi6re465+s66m0IOqwmeydtCDsnbTslbzquLDrpbwg64KY64iV7Iuc64ukIVwiXG4gICAgam9pbl91cmxfZW1haWw6IFwi7J2066mU7J28IOuztOuCtOq4sFwiXG4gICAgam9pbl91cmxfc2xhY2s6IFwi6rO16rO1IFNsYWNrIOyxhOuEkFwiXG4gICAgYXJjaG1hZ2Vfc3Vic2NyaWJlX2Rlc2M6IFwi7IOI66Gc7Jq0IOy9lOuUqSDqtIDroKgg6riw7ZqM7JmAIOqzteqzoOulvCDsnbTrqZTsnbzsnYQg7Ya17ZW0IOuwm+yVhOuztOyEuOyalC5cIlxuICAgIGFydGlzYW5faW50cm9kdWN0aW9uX3ByZWY6IFwi7KCA7Z2s64qUIOqyjOyehOydmCDsg4jroZzsmrQg7Iqk7YWM7J207KeA66W8IOunjOuTpOyWtOyVvO2VqeuLiOuLpCEg7ZSM66CI7J207Ja065Ok7J2AIOyDiOuhnOyatCDsu6jthZDsuKDrpbwg7JyE7ZW0IOyVhOyasOyEseydhCDsp4DrpoXri4jri6QuIO2VmOyngOunjCDsmrDrpqwg66eM7J2YIO2emOycvOuhnOuKlCDrp47snYAg7JqU6rWs66W8IOy2qeyhseyLnO2CrCDsiJgg7JeG7Iq164uI64ukLiDslYTsp4HsnYAgMSDsiqTthYzsnbTsp4Ag67CW7JeQIOq1rO2YhCDslYgg65CcIOyDge2ZqeyeheuLiOuLpC4g7Jqw66as7J2YIOyXkOuUlO2EsOuKlCDqsqjsmrAg6riw67O4IOq4sOuKpSDrp4zsnYQg6rWs7ZiE7Iuc7YKoIOyDge2DnOudvOyEnCDsoIDtnazrp4jsoIAg7J6YIOyCrOyaqe2VmOyngCDslYrripTri7Xri4jri6QuIOuVjOusuOyXkCDsgqzsmqkg7IucIOyjvOydmOulvCDsmpTtlanri4jri6Qu66eM7JW9IOyKpO2FjOydtOyngCDshKTqs4Qg7JiB6rCQ7J20IOuWoOyYrOuekOuLpOuptCwg7JWE66y066asIOqwhOuLqO2VnCDrgrTsmqnsnbTrnbzrj4RcIlxuICAgIGFydGlzYW5faW50cm9kdWN0aW9uX3N1ZjogXCLtlbTri7kg7KeB7JeF7JeQIOuPhOyghO2VtOuztOuKlCDqsoPsnYQg6rCV66Cl7Z6IIOy2lOyynO2VqeuLiOuLpC5cIlxuIyAgICBhcnRpc2FuX2F0dHJpYnV0ZV8xOiBcIkFueSBleHBlcmllbmNlIGluIGJ1aWxkaW5nIGNvbnRlbnQgbGlrZSB0aGlzIHdvdWxkIGJlIG5pY2UsIHN1Y2ggYXMgdXNpbmcgQmxpenphcmQncyBsZXZlbCBlZGl0b3JzLiBCdXQgbm90IHJlcXVpcmVkIVwiXG4jICAgIGFydGlzYW5fYXR0cmlidXRlXzI6IFwiQSBoYW5rZXJpbmcgdG8gZG8gYSB3aG9sZSBsb3Qgb2YgdGVzdGluZyBhbmQgaXRlcmF0aW9uLiBUbyBtYWtlIGdvb2QgbGV2ZWxzLCB5b3UgbmVlZCB0byB0YWtlIGl0IHRvIG90aGVycyBhbmQgd2F0Y2ggdGhlbSBwbGF5IGl0LCBhbmQgYmUgcHJlcGFyZWQgdG8gZmluZCBhIGxvdCBvZiB0aGluZ3MgdG8gZml4LlwiXG4jICAgIGFydGlzYW5fYXR0cmlidXRlXzM6IFwiRm9yIHRoZSB0aW1lIGJlaW5nLCBlbmR1cmFuY2UgZW4gcGFyIHdpdGggYW4gQWR2ZW50dXJlci4gT3VyIExldmVsIEVkaXRvciBpcyBzdXBlciBwcmVsaW1pbmFyeSBhbmQgZnJ1c3RyYXRpbmcgdG8gdXNlLiBZb3UgaGF2ZSBiZWVuIHdhcm5lZCFcIlxuIyAgICBhcnRpc2FuX2pvaW5fZGVzYzogXCJVc2UgdGhlIExldmVsIEVkaXRvciBpbiB0aGVzZSBzdGVwcywgZ2l2ZSBvciB0YWtlOlwiXG4jICAgIGFydGlzYW5fam9pbl9zdGVwMTogXCJSZWFkIHRoZSBkb2N1bWVudGF0aW9uLlwiXG4jICAgIGFydGlzYW5fam9pbl9zdGVwMjogXCJDcmVhdGUgYSBuZXcgbGV2ZWwgYW5kIGV4cGxvcmUgZXhpc3RpbmcgbGV2ZWxzLlwiXG4jICAgIGFydGlzYW5fam9pbl9zdGVwMzogXCJGaW5kIHVzIGluIG91ciBwdWJsaWMgU2xhY2sgY2hhbm5lbCBmb3IgaGVscC5cIlxuIyAgICBhcnRpc2FuX2pvaW5fc3RlcDQ6IFwiUG9zdCB5b3VyIGxldmVscyBvbiB0aGUgZm9ydW0gZm9yIGZlZWRiYWNrLlwiXG4jICAgIGFydGlzYW5fc3Vic2NyaWJlX2Rlc2M6IFwiR2V0IGVtYWlscyBvbiBsZXZlbCBlZGl0b3IgdXBkYXRlcyBhbmQgYW5ub3VuY2VtZW50cy5cIlxuIyAgICBhZHZlbnR1cmVyX2ludHJvZHVjdGlvbjogXCJMZXQncyBiZSBjbGVhciBhYm91dCB5b3VyIHJvbGU6IHlvdSBhcmUgdGhlIHRhbmsuIFlvdSdyZSBnb2luZyB0byB0YWtlIGhlYXZ5IGRhbWFnZS4gV2UgbmVlZCBwZW9wbGUgdG8gdHJ5IG91dCBicmFuZC1uZXcgbGV2ZWxzIGFuZCBoZWxwIGlkZW50aWZ5IGhvdyB0byBtYWtlIHRoaW5ncyBiZXR0ZXIuIFRoZSBwYWluIHdpbGwgYmUgZW5vcm1vdXM7IG1ha2luZyBnb29kIGdhbWVzIGlzIGEgbG9uZyBwcm9jZXNzIGFuZCBubyBvbmUgZ2V0cyBpdCByaWdodCB0aGUgZmlyc3QgdGltZS4gSWYgeW91IGNhbiBlbmR1cmUgYW5kIGhhdmUgYSBoaWdoIGNvbnN0aXR1dGlvbiBzY29yZSwgdGhlbiB0aGlzIGNsYXNzIG1pZ2h0IGJlIGZvciB5b3UuXCJcbiMgICAgYWR2ZW50dXJlcl9hdHRyaWJ1dGVfMTogXCJBIHRoaXJzdCBmb3IgbGVhcm5pbmcuIFlvdSB3YW50IHRvIGxlYXJuIGhvdyB0byBjb2RlIGFuZCB3ZSB3YW50IHRvIHRlYWNoIHlvdSBob3cgdG8gY29kZS4gWW91J2xsIHByb2JhYmx5IGJlIGRvaW5nIG1vc3Qgb2YgdGhlIHRlYWNoaW5nIGluIHRoaXMgY2FzZSwgdGhvdWdoLlwiXG4jICAgIGFkdmVudHVyZXJfYXR0cmlidXRlXzI6IFwiQ2hhcmlzbWF0aWMuIEJlIGdlbnRsZSBidXQgYXJ0aWN1bGF0ZSBhYm91dCB3aGF0IG5lZWRzIGltcHJvdmluZywgYW5kIG9mZmVyIHN1Z2dlc3Rpb25zIG9uIGhvdyB0byBpbXByb3ZlLlwiXG4jICAgIGFkdmVudHVyZXJfam9pbl9wcmVmOiBcIkVpdGhlciBnZXQgdG9nZXRoZXIgd2l0aCAob3IgcmVjcnVpdCEpIGFuIEFydGlzYW4gYW5kIHdvcmsgd2l0aCB0aGVtLCBvciBjaGVjayB0aGUgYm94IGJlbG93IHRvIHJlY2VpdmUgZW1haWxzIHdoZW4gdGhlcmUgYXJlIG5ldyBsZXZlbHMgdG8gdGVzdC4gV2UnbGwgYWxzbyBiZSBwb3N0aW5nIGFib3V0IGxldmVscyB0byByZXZpZXcgb24gb3VyIG5ldHdvcmtzIGxpa2VcIlxuIyAgICBhZHZlbnR1cmVyX2ZvcnVtX3VybDogXCJvdXIgZm9ydW1cIlxuIyAgICBhZHZlbnR1cmVyX2pvaW5fc3VmOiBcInNvIGlmIHlvdSBwcmVmZXIgdG8gYmUgbm90aWZpZWQgdGhvc2Ugd2F5cywgc2lnbiB1cCB0aGVyZSFcIlxuIyAgICBhZHZlbnR1cmVyX3N1YnNjcmliZV9kZXNjOiBcIkdldCBlbWFpbHMgd2hlbiB0aGVyZSBhcmUgbmV3IGxldmVscyB0byB0ZXN0LlwiXG4jICAgIHNjcmliZV9pbnRyb2R1Y3Rpb25fcHJlZjogXCJDb2RlQ29tYmF0IGlzbid0IGp1c3QgZ29pbmcgdG8gYmUgYSBidW5jaCBvZiBsZXZlbHMuIEl0IHdpbGwgYWxzbyBpbmNsdWRlIGEgcmVzb3VyY2UgZm9yIGtub3dsZWRnZSwgYSB3aWtpIG9mIHByb2dyYW1taW5nIGNvbmNlcHRzIHRoYXQgbGV2ZWxzIGNhbiBob29rIGludG8uIFRoYXQgd2F5IHJhdGhlciB0aGFuIGVhY2ggQXJ0aXNhbiBoYXZpbmcgdG8gZGVzY3JpYmUgaW4gZGV0YWlsIHdoYXQgYSBjb21wYXJpc29uIG9wZXJhdG9yIGlzLCB0aGV5IGNhbiBzaW1wbHkgbGluayB0aGVpciBsZXZlbCB0byB0aGUgQXJ0aWNsZSBkZXNjcmliaW5nIHRoZW0gdGhhdCBpcyBhbHJlYWR5IHdyaXR0ZW4gZm9yIHRoZSBwbGF5ZXIncyBlZGlmaWNhdGlvbi4gU29tZXRoaW5nIGFsb25nIHRoZSBsaW5lcyBvZiB3aGF0IHRoZSBcIlxuIyAgICBzY3JpYmVfaW50cm9kdWN0aW9uX3VybF9tb3ppbGxhOiBcIk1vemlsbGEgRGV2ZWxvcGVyIE5ldHdvcmtcIlxuIyAgICBzY3JpYmVfaW50cm9kdWN0aW9uX3N1ZjogXCIgaGFzIGJ1aWx0LiBJZiB5b3VyIGlkZWEgb2YgZnVuIGlzIGFydGljdWxhdGluZyB0aGUgY29uY2VwdHMgb2YgcHJvZ3JhbW1pbmcgaW4gTWFya2Rvd24gZm9ybSwgdGhlbiB0aGlzIGNsYXNzIG1pZ2h0IGJlIGZvciB5b3UuXCJcbiMgICAgc2NyaWJlX2F0dHJpYnV0ZV8xOiBcIlNraWxsIGluIHdvcmRzIGlzIHByZXR0eSBtdWNoIGFsbCB5b3UgbmVlZC4gTm90IG9ubHkgZ3JhbW1hciBhbmQgc3BlbGxpbmcsIGJ1dCBhYmxlIHRvIGNvbnZleSBjb21wbGljYXRlZCBpZGVhcyB0byBvdGhlcnMuXCJcbiMgICAgY29udGFjdF91c191cmw6IFwiQ29udGFjdCBVc1wiXG4jICAgIHNjcmliZV9qb2luX2Rlc2NyaXB0aW9uOiBcInRlbGwgdXMgYSBsaXR0bGUgYWJvdXQgeW91cnNlbGYsIHlvdXIgZXhwZXJpZW5jZSB3aXRoIHByb2dyYW1taW5nIGFuZCB3aGF0IHNvcnQgb2YgdGhpbmdzIHlvdSdkIGxpa2UgdG8gd3JpdGUgYWJvdXQuIFdlJ2xsIGdvIGZyb20gdGhlcmUhXCJcbiMgICAgc2NyaWJlX3N1YnNjcmliZV9kZXNjOiBcIkdldCBlbWFpbHMgYWJvdXQgYXJ0aWNsZSB3cml0aW5nIGFubm91bmNlbWVudHMuXCJcbiMgICAgZGlwbG9tYXRfaW50cm9kdWN0aW9uX3ByZWY6IFwiU28sIGlmIHRoZXJlJ3Mgb25lIHRoaW5nIHdlIGxlYXJuZWQgZnJvbSB0aGUgXCJcbiMgICAgZGlwbG9tYXRfbGF1bmNoX3VybDogXCJsYXVuY2ggaW4gT2N0b2JlclwiXG4jICAgIGRpcGxvbWF0X2ludHJvZHVjdGlvbl9zdWY6IFwiaXQncyB0aGF0IHRoZXJlIGlzIHNpemVhYmxlIGludGVyZXN0IGluIENvZGVDb21iYXQgaW4gb3RoZXIgY291bnRyaWVzISBXZSdyZSBidWlsZGluZyBhIGNvcnBzIG9mIHRyYW5zbGF0b3JzIGVhZ2VyIHRvIHR1cm4gb25lIHNldCBvZiB3b3JkcyBpbnRvIGFub3RoZXIgc2V0IG9mIHdvcmRzIHRvIGdldCBDb2RlQ29tYmF0IGFzIGFjY2Vzc2libGUgYWNyb3NzIHRoZSB3b3JsZCBhcyBwb3NzaWJsZS4gSWYgeW91IGxpa2UgZ2V0dGluZyBzbmVhayBwZWVrcyBhdCB1cGNvbWluZyBjb250ZW50IGFuZCBnZXR0aW5nIHRoZXNlIGxldmVscyB0byB5b3VyIGZlbGxvdyBuYXRpb25hbHMgQVNBUCwgdGhlbiB0aGlzIGNsYXNzIG1pZ2h0IGJlIGZvciB5b3UuXCJcbiMgICAgZGlwbG9tYXRfYXR0cmlidXRlXzE6IFwiRmx1ZW5jeSBpbiBFbmdsaXNoIGFuZCB0aGUgbGFuZ3VhZ2UgeW91IHdvdWxkIGxpa2UgdG8gdHJhbnNsYXRlIHRvLiBXaGVuIGNvbnZleWluZyBjb21wbGljYXRlZCBpZGVhcywgaXQncyBpbXBvcnRhbnQgdG8gaGF2ZSBhIHN0cm9uZyBncmFzcCBpbiBib3RoIVwiXG4jICAgIGRpcGxvbWF0X2kxOG5fcGFnZV9wcmVmaXg6IFwiWW91IGNhbiBzdGFydCB0cmFuc2xhdGluZyBvdXIgbGV2ZWxzIGJ5IGdvaW5nIHRvIG91clwiXG4jICAgIGRpcGxvbWF0X2kxOG5fcGFnZTogXCJ0cmFuc2xhdGlvbnMgcGFnZVwiXG4jICAgIGRpcGxvbWF0X2kxOG5fcGFnZV9zdWZmaXg6IFwiLCBvciBvdXIgaW50ZXJmYWNlIGFuZCB3ZWJzaXRlIG9uIEdpdEh1Yi5cIlxuIyAgICBkaXBsb21hdF9qb2luX3ByZWZfZ2l0aHViOiBcIkZpbmQgeW91ciBsYW5ndWFnZSBsb2NhbGUgZmlsZSBcIlxuIyAgICBkaXBsb21hdF9naXRodWJfdXJsOiBcIm9uIEdpdEh1YlwiXG4jICAgIGRpcGxvbWF0X2pvaW5fc3VmX2dpdGh1YjogXCIsIGVkaXQgaXQgb25saW5lLCBhbmQgc3VibWl0IGEgcHVsbCByZXF1ZXN0LiBBbHNvLCBjaGVjayB0aGlzIGJveCBiZWxvdyB0byBrZWVwIHVwLXRvLWRhdGUgb24gbmV3IGludGVybmF0aW9uYWxpemF0aW9uIGRldmVsb3BtZW50cyFcIlxuIyAgICBkaXBsb21hdF9zdWJzY3JpYmVfZGVzYzogXCJHZXQgZW1haWxzIGFib3V0IGkxOG4gZGV2ZWxvcG1lbnRzIGFuZCBsZXZlbHMgdG8gdHJhbnNsYXRlLlwiXG4jICAgIGFtYmFzc2Fkb3JfaW50cm9kdWN0aW9uOiBcIlRoaXMgaXMgYSBjb21tdW5pdHkgd2UncmUgYnVpbGRpbmcsIGFuZCB5b3UgYXJlIHRoZSBjb25uZWN0aW9ucy4gV2UndmUgZ290IGZvcnVtcywgZW1haWxzLCBhbmQgc29jaWFsIG5ldHdvcmtzIHdpdGggbG90cyBvZiBwZW9wbGUgdG8gdGFsayB3aXRoIGFuZCBoZWxwIGdldCBhY3F1YWludGVkIHdpdGggdGhlIGdhbWUgYW5kIGxlYXJuIGZyb20uIElmIHlvdSB3YW50IHRvIGhlbHAgcGVvcGxlIGdldCBpbnZvbHZlZCBhbmQgaGF2ZSBmdW4sIGFuZCBnZXQgYSBnb29kIGZlZWwgb2YgdGhlIHB1bHNlIG9mIENvZGVDb21iYXQgYW5kIHdoZXJlIHdlJ3JlIGdvaW5nLCB0aGVuIHRoaXMgY2xhc3MgbWlnaHQgYmUgZm9yIHlvdS5cIlxuIyAgICBhbWJhc3NhZG9yX2F0dHJpYnV0ZV8xOiBcIkNvbW11bmljYXRpb24gc2tpbGxzLiBCZSBhYmxlIHRvIGlkZW50aWZ5IHRoZSBwcm9ibGVtcyBwbGF5ZXJzIGFyZSBoYXZpbmcgYW5kIGhlbHAgdGhlbSBzb2x2ZSB0aGVtLiBBbHNvLCBrZWVwIHRoZSByZXN0IG9mIHVzIGluZm9ybWVkIGFib3V0IHdoYXQgcGxheWVycyBhcmUgc2F5aW5nLCB3aGF0IHRoZXkgbGlrZSBhbmQgZG9uJ3QgbGlrZSBhbmQgd2FudCBtb3JlIG9mIVwiXG4jICAgIGFtYmFzc2Fkb3Jfam9pbl9kZXNjOiBcInRlbGwgdXMgYSBsaXR0bGUgYWJvdXQgeW91cnNlbGYsIHdoYXQgeW91J3ZlIGRvbmUgYW5kIHdoYXQgeW91J2QgYmUgaW50ZXJlc3RlZCBpbiBkb2luZy4gV2UnbGwgZ28gZnJvbSB0aGVyZSFcIlxuIyAgICBhbWJhc3NhZG9yX2pvaW5fbm90ZV9zdHJvbmc6IFwiTm90ZVwiXG4jICAgIGFtYmFzc2Fkb3Jfam9pbl9ub3RlX2Rlc2M6IFwiT25lIG9mIG91ciB0b3AgcHJpb3JpdGllcyBpcyB0byBidWlsZCBtdWx0aXBsYXllciB3aGVyZSBwbGF5ZXJzIGhhdmluZyBkaWZmaWN1bHR5IHNvbHZpbmcgbGV2ZWxzIGNhbiBzdW1tb24gaGlnaGVyIGxldmVsIHdpemFyZHMgdG8gaGVscCB0aGVtLiBUaGlzIHdpbGwgYmUgYSBncmVhdCB3YXkgZm9yIGFtYmFzc2Fkb3JzIHRvIGRvIHRoZWlyIHRoaW5nLiBXZSdsbCBrZWVwIHlvdSBwb3N0ZWQhXCJcbiMgICAgYW1iYXNzYWRvcl9zdWJzY3JpYmVfZGVzYzogXCJHZXQgZW1haWxzIG9uIHN1cHBvcnQgdXBkYXRlcyBhbmQgbXVsdGlwbGF5ZXIgZGV2ZWxvcG1lbnRzLlwiXG4jICAgIHRlYWNoZXJfc3Vic2NyaWJlX2Rlc2M6IFwiR2V0IGVtYWlscyBvbiB1cGRhdGVzIGFuZCBhbm5vdW5jZW1lbnRzIGZvciB0ZWFjaGVycy5cIlxuIyAgICBjaGFuZ2VzX2F1dG9fc2F2ZTogXCJDaGFuZ2VzIGFyZSBzYXZlZCBhdXRvbWF0aWNhbGx5IHdoZW4geW91IHRvZ2dsZSBjaGVja2JveGVzLlwiXG4jICAgIGRpbGlnZW50X3NjcmliZXM6IFwiT3VyIERpbGlnZW50IFNjcmliZXM6XCJcbiMgICAgcG93ZXJmdWxfYXJjaG1hZ2VzOiBcIk91ciBQb3dlcmZ1bCBBcmNobWFnZXM6XCJcbiMgICAgY3JlYXRpdmVfYXJ0aXNhbnM6IFwiT3VyIENyZWF0aXZlIEFydGlzYW5zOlwiXG4jICAgIGJyYXZlX2FkdmVudHVyZXJzOiBcIk91ciBCcmF2ZSBBZHZlbnR1cmVyczpcIlxuIyAgICB0cmFuc2xhdGluZ19kaXBsb21hdHM6IFwiT3VyIFRyYW5zbGF0aW5nIERpcGxvbWF0czpcIlxuIyAgICBoZWxwZnVsX2FtYmFzc2Fkb3JzOiBcIk91ciBIZWxwZnVsIEFtYmFzc2Fkb3JzOlwiXG5cbiAgbGFkZGVyOlxuIyAgICB0aXRsZTogXCJNdWx0aXBsYXllciBBcmVuYXNcIlxuIyAgICBhcmVuYV90aXRsZTogXCJfX2FyZW5hX18gfCBNdWx0aXBsYXllciBBcmVuYXNcIlxuICAgIG15X21hdGNoZXM6IFwi64KY7J2YIOqyveq4sOuTpFwiXG4gICAgc2ltdWxhdGU6IFwi7Iuc666s66CI7J207IWYXCJcbiAgICBzaW11bGF0aW9uX2V4cGxhbmF0aW9uOiBcIuyLnOuurOugiOydtOyFmOydhCDthrXtlbQg642UIOu5qOumrCDrnq3tgrkg7Y+J6rCA66W8IOuwm+ydhCDsiJgg7J6I7Iq164uI64ukLlwiXG4jICAgIHNpbXVsYXRpb25fZXhwbGFuYXRpb25fbGVhZ3VlczogXCJZb3Ugd2lsbCBtYWlubHkgaGVscCBzaW11bGF0ZSBnYW1lcyBmb3IgYWxsaWVkIHBsYXllcnMgaW4geW91ciBjbGFucyBhbmQgY291cnNlcy5cIlxuICAgIHNpbXVsYXRlX2dhbWVzOiBcIuyLnOuurOugiOydtOyFmCDsi6TtlokhXCJcbiAgICBnYW1lc19zaW11bGF0ZWRfYnk6IFwi64K06rCAIOyLnOuurOugiOydtOyFmO2VnCDqsozsnoQg7IiYOlwiXG4gICAgZ2FtZXNfc2ltdWxhdGVkX2ZvcjogXCLri6Trpbgg7IKs656M7JeQIOydmO2VtCDsi5zrrqzroIjsnbTshZjrkJwg6rKM7J6EIOyImDpcIlxuIyAgICBnYW1lc19pbl9xdWV1ZTogXCJHYW1lcyBjdXJyZW50bHkgaW4gdGhlIHF1ZXVlOlwiXG4gICAgZ2FtZXNfc2ltdWxhdGVkOiBcIuyLnOuurOugiOydtOyFmCDsi6TtlonrkJwg6rKM7J6EXCJcbiAgICBnYW1lc19wbGF5ZWQ6IFwi7ZSM66CI7J207ZWcIOqyjOyehFwiXG4gICAgcmF0aW86IFwi67mE7JyoXCJcbiAgICBsZWFkZXJib2FyZDogXCLsg4HsnITqtowg7Iic7JyEIOywqO2KuFwiXG4jICAgIGJhdHRsZV9hczogXCJCYXR0bGUgYXMgXCJcbiAgICBzdW1tYXJ5X3lvdXI6IFwi64u57Iug7J2YIFwiXG4jICAgIHN1bW1hcnlfbWF0Y2hlczogXCJNYXRjaGVzIC0gXCJcbiAgICBzdW1tYXJ5X3dpbnM6IFwiIOyKueyekOuTpCwgXCJcbiAgICBzdW1tYXJ5X2xvc3NlczogXCIg7Yyo7J6Q65OkXCJcbiMgICAgcmFua19ub19jb2RlOiBcIk5vIE5ldyBDb2RlIHRvIFJhbmtcIlxuICAgIHJhbmtfbXlfZ2FtZTogXCLrgrQg6rKM7J6EIOyInOychCDrp6TquLDquLAhXCJcbiAgICByYW5rX3N1Ym1pdHRpbmc6IFwi7KCc7Lac7KSRLi4uXCJcbiAgICByYW5rX3N1Ym1pdHRlZDogXCLsiJzsnIQg66ek6riw6riwIOygnOy2nFwiXG4gICAgcmFua19mYWlsZWQ6IFwi7Iic7JyEIOunpOq4sOq4sCDsi6TtjKhcIlxuIyAgICByYW5rX2JlaW5nX3JhbmtlZDogXCJHYW1lIEJlaW5nIFJhbmtlZFwiXG4gICAgcmFua19sYXN0X3N1Ym1pdHRlZDogXCLsoJzstpwg7JmE66OMXCJcbiMgICAgaGVscF9zaW11bGF0ZTogXCJIZWxwIHNpbXVsYXRlIGdhbWVzP1wiXG4jICAgIGNvZGVfYmVpbmdfc2ltdWxhdGVkOiBcIllvdXIgbmV3IGNvZGUgaXMgYmVpbmcgc2ltdWxhdGVkIGJ5IG90aGVyIHBsYXllcnMgZm9yIHJhbmtpbmcuIFRoaXMgd2lsbCByZWZyZXNoIGFzIG5ldyBtYXRjaGVzIGNvbWUgaW4uXCJcbiMgICAgbm9fcmFua2VkX21hdGNoZXNfcHJlOiBcIk5vIHJhbmtlZCBtYXRjaGVzIGZvciB0aGUgXCJcbiMgICAgbm9fcmFua2VkX21hdGNoZXNfcG9zdDogXCIgdGVhbSEgUGxheSBhZ2FpbnN0IHNvbWUgY29tcGV0aXRvcnMgYW5kIHRoZW4gY29tZSBiYWNrIGhlcmUgdG8gZ2V0IHlvdXIgZ2FtZSByYW5rZWQuXCJcbiMgICAgY2hvb3NlX29wcG9uZW50OiBcIkNob29zZSBhbiBPcHBvbmVudFwiXG4gICAgc2VsZWN0X3lvdXJfbGFuZ3VhZ2U6IFwi7Ja47Ja066W8IOqzoOultOyEuOyalCFcIlxuICAgIHR1dG9yaWFsX3BsYXk6IFwi7Yqc7Yag66as7Ja8IOuztOq4sFwiXG4gICAgdHV0b3JpYWxfcmVjb21tZW5kZWQ6IFwi7KCE7JeQIO2UjOugiOydtO2VtOuzuCDsoIHsnbQg7JeG7Jy87Iuc64uk66m0IO2KnO2GoOumrOyWvOydhCDrs7Tsi5zripQg6rG4IOq2jOyepe2VqeuLiOuLpC5cIlxuICAgIHR1dG9yaWFsX3NraXA6IFwi7Yqc7Yag66as7Ja8IOuEmOq4sOq4sFwiXG4gICAgdHV0b3JpYWxfbm90X3N1cmU6IFwi7Ja065a76rKMIOynhO2WieuQmOuKlOyngCDslYzqs6Ag7Iu27J2A7IS47JqUP1wiXG4gICAgdHV0b3JpYWxfcGxheV9maXJzdDogXCLtipzthqDrpqzslrzsnYQg66i87KCAIO2UjOugiOydtO2VtOuztOyEuOyalC5cIlxuICAgIHNpbXBsZV9haTogXCLquLDstIgg7J246rO17KeA64qlXCIgIyB7Y2hhbmdlfVxuICAgIHdhcm11cDogXCLsm4zrsI3sl4VcIlxuICAgIGZyaWVuZHNfcGxheWluZzogXCLsuZzqtazrk6TsnbQg6rKM7J6E7KSRXCJcbiAgICBsb2dfaW5fZm9yX2ZyaWVuZHM6IFwi66Gc6re47J247ZWY7Iuc6rOgIOy5nOq1rOuTpOqzvCDqsozsnoTsnYQg7KaQ6riw7IS47JqUIVwiXG4jICAgIHNvY2lhbF9jb25uZWN0X2JsdXJiOiBcIkNvbm5lY3QgYW5kIHBsYXkgYWdhaW5zdCB5b3VyIGZyaWVuZHMhXCJcbiMgICAgaW52aXRlX2ZyaWVuZHNfdG9fYmF0dGxlOiBcIkludml0ZSB5b3VyIGZyaWVuZHMgdG8gam9pbiB5b3UgaW4gYmF0dGxlIVwiXG4gICAgZmlnaHQ6IFwi7KCE7YisIOyLnOyekSFcIlxuICAgIHdhdGNoX3ZpY3Rvcnk6IFwi64u57Iug7J2YIOyKueumrOulvCDtmZXsnbjtlZjshLjsmpRcIlxuIyAgICBkZWZlYXRfdGhlOiBcIkRlZmVhdCB0aGVcIlxuIyAgICB3YXRjaF9iYXR0bGU6IFwiV2F0Y2ggdGhlIGJhdHRsZVwiXG4jICAgIHRvdXJuYW1lbnRfc3RhcnRlZDogXCIsIHN0YXJ0ZWRcIlxuIyAgICB0b3VybmFtZW50X2VuZHM6IFwiVG91cm5hbWVudCBlbmRzXCJcbiMgICAgdG91cm5hbWVudF9lbmRlZDogXCJUb3VybmFtZW50IGVuZGVkXCJcbiMgICAgdG91cm5hbWVudF9ydWxlczogXCJUb3VybmFtZW50IFJ1bGVzXCJcbiMgICAgdG91cm5hbWVudF9ibHVyYjogXCJXcml0ZSBjb2RlLCBjb2xsZWN0IGdvbGQsIGJ1aWxkIGFybWllcywgY3J1c2ggZm9lcywgd2luIHByaXplcywgYW5kIHVwZ3JhZGUgeW91ciBjYXJlZXIgaW4gb3VyICQ0MCwwMDAgR3JlZWQgdG91cm5hbWVudCEgQ2hlY2sgb3V0IHRoZSBkZXRhaWxzXCJcbiMgICAgdG91cm5hbWVudF9ibHVyYl9jcmlzc19jcm9zczogXCJXaW4gYmlkcywgY29uc3RydWN0IHBhdGhzLCBvdXR3aXQgb3Bwb25lbnRzLCBncmFiIGdlbXMsIGFuZCB1cGdyYWRlIHlvdXIgY2FyZWVyIGluIG91ciBDcmlzcy1Dcm9zcyB0b3VybmFtZW50ISBDaGVjayBvdXQgdGhlIGRldGFpbHNcIlxuIyAgICB0b3VybmFtZW50X2JsdXJiX3plcm9fc3VtOiBcIlVubGVhc2ggeW91ciBjb2RpbmcgY3JlYXRpdml0eSBpbiBib3RoIGdvbGQgZ2F0aGVyaW5nIGFuZCBiYXR0bGUgdGFjdGljcyBpbiB0aGlzIGFscGluZSBtaXJyb3IgbWF0Y2ggYmV0d2VlbiByZWQgc29yY2VyZXIgYW5kIGJsdWUgc29yY2VyZXIuIFRoZSB0b3VybmFtZW50IGJlZ2FuIG9uIEZyaWRheSwgTWFyY2ggMjcgYW5kIHdpbGwgcnVuIHVudGlsIE1vbmRheSwgQXByaWwgNiBhdCA1UE0gUERULiBDb21wZXRlIGZvciBmdW4gYW5kIGdsb3J5ISBDaGVjayBvdXQgdGhlIGRldGFpbHNcIlxuIyAgICB0b3VybmFtZW50X2JsdXJiX2FjZV9vZl9jb2RlcnM6IFwiQmF0dGxlIGl0IG91dCBpbiB0aGUgZnJvemVuIGdsYWNpZXIgaW4gdGhpcyBkb21pbmF0aW9uLXN0eWxlIG1pcnJvciBtYXRjaCEgVGhlIHRvdXJuYW1lbnQgYmVnYW4gb24gV2VkbmVzZGF5LCBTZXB0ZW1iZXIgMTYgYW5kIHdpbGwgcnVuIHVudGlsIFdlZG5lc2RheSwgT2N0b2JlciAxNCBhdCA1UE0gUERULiBDaGVjayBvdXQgdGhlIGRldGFpbHNcIlxuIyAgICB0b3VybmFtZW50X2JsdXJiX2Jsb2c6IFwib24gb3VyIGJsb2dcIlxuICAgIHJ1bGVzOiBcIuq3nOy5mVwiXG4gICAgd2lubmVyczogXCLsirnrpqzsnpBcIlxuIyAgICBsZWFndWU6IFwiTGVhZ3VlXCJcbiMgICAgcmVkX2FpOiBcIlJlZCBDUFVcIiAjIFwiUmVkIEFJIFdpbnNcIiwgYXQgZW5kIG9mIG11bHRpcGxheWVyIG1hdGNoIHBsYXliYWNrXG4jICAgIGJsdWVfYWk6IFwiQmx1ZSBDUFVcIlxuIyAgICB3aW5zOiBcIldpbnNcIiAjIEF0IGVuZCBvZiBtdWx0aXBsYXllciBtYXRjaCBwbGF5YmFja1xuIyAgICBodW1hbnM6IFwiUmVkXCIgIyBMYWRkZXIgcGFnZSBkaXNwbGF5IHRlYW0gbmFtZVxuIyAgICBvZ3JlczogXCJCbHVlXCJcbiMgICAgbGl2ZV90b3VybmFtZW50OiBcIkxpdmUgVG91cm5hbWVudFwiXG4jICAgIGF3YWl0aW5nX3RvdXJuYW1lbnRfdGl0bGU6IFwiVG91cm5hbWVudCBJbmFjdGl2ZVwiXG4jICAgIGF3YWl0aW5nX3RvdXJuYW1lbnRfYmx1cmI6IFwiVGhlIHRvdXJuYW1lbnQgYXJlbmEgaXMgbm90IGN1cnJlbnRseSBhY3RpdmUuXCJcblxuIyAgdXNlcjpcbiMgICAgdXNlcl90aXRsZTogXCJfX25hbWVfXyAtIExlYXJuIHRvIENvZGUgd2l0aCBDb2RlQ29tYmF0XCJcbiMgICAgc3RhdHM6IFwiU3RhdHNcIlxuIyAgICBzaW5nbGVwbGF5ZXJfdGl0bGU6IFwiU2luZ2xlcGxheWVyIExldmVsc1wiXG4jICAgIG11bHRpcGxheWVyX3RpdGxlOiBcIk11bHRpcGxheWVyIExldmVsc1wiXG4jICAgIGFjaGlldmVtZW50c190aXRsZTogXCJBY2hpZXZlbWVudHNcIlxuIyAgICBsYXN0X3BsYXllZDogXCJMYXN0IFBsYXllZFwiXG4jICAgIHN0YXR1czogXCJTdGF0dXNcIlxuIyAgICBzdGF0dXNfY29tcGxldGVkOiBcIkNvbXBsZXRlZFwiXG4jICAgIHN0YXR1c191bmZpbmlzaGVkOiBcIlVuZmluaXNoZWRcIlxuIyAgICBub19zaW5nbGVwbGF5ZXI6IFwiTm8gU2luZ2xlcGxheWVyIGdhbWVzIHBsYXllZCB5ZXQuXCJcbiMgICAgbm9fbXVsdGlwbGF5ZXI6IFwiTm8gTXVsdGlwbGF5ZXIgZ2FtZXMgcGxheWVkIHlldC5cIlxuIyAgICBub19hY2hpZXZlbWVudHM6IFwiTm8gQWNoaWV2ZW1lbnRzIGVhcm5lZCB5ZXQuXCJcbiMgICAgZmF2b3JpdGVfcHJlZml4OiBcIkZhdm9yaXRlIGxhbmd1YWdlIGlzIFwiXG4jICAgIGZhdm9yaXRlX3Bvc3RmaXg6IFwiLlwiXG4jICAgIG5vdF9tZW1iZXJfb2ZfY2xhbnM6IFwiTm90IGEgbWVtYmVyIG9mIGFueSBjbGFucyB5ZXQuXCJcbiMgICAgY2VydGlmaWNhdGVfdmlldzogXCJ2aWV3IGNlcnRpZmljYXRlXCJcbiMgICAgY2VydGlmaWNhdGVfY2xpY2tfdG9fdmlldzogXCJjbGljayB0byB2aWV3IGNlcnRpZmljYXRlXCJcbiMgICAgY2VydGlmaWNhdGVfY291cnNlX2luY29tcGxldGU6IFwiY291cnNlIGluY29tcGxldGVcIlxuIyAgICBjZXJ0aWZpY2F0ZV9vZl9jb21wbGV0aW9uOiBcIkNlcnRpZmljYXRlIG9mIENvbXBsZXRpb25cIlxuIyAgICBjZXJ0aWZpY2F0ZV9lbmRvcnNlZF9ieTogXCJFbmRvcnNlZCBieVwiXG4jICAgIGNlcnRpZmljYXRlX3N0YXRzOiBcIkNvdXJzZSBTdGF0c1wiXG4jICAgIGNlcnRpZmljYXRlX2xpbmVzX29mOiBcImxpbmVzIG9mXCJcbiMgICAgY2VydGlmaWNhdGVfbGV2ZWxzX2NvbXBsZXRlZDogXCJsZXZlbHMgY29tcGxldGVkXCJcbiMgICAgY2VydGlmaWNhdGVfZm9yOiBcIkZvclwiXG4jICAgIGNlcnRpZmljYXRlX251bWJlcjogXCJOby5cIlxuXG4jICBhY2hpZXZlbWVudHM6XG4jICAgIGxhc3RfZWFybmVkOiBcIkxhc3QgRWFybmVkXCJcbiMgICAgYW1vdW50X2FjaGlldmVkOiBcIkFtb3VudFwiXG4jICAgIGFjaGlldmVtZW50OiBcIkFjaGlldmVtZW50XCJcbiMgICAgY3VycmVudF94cF9wcmVmaXg6IFwiXCJcbiMgICAgY3VycmVudF94cF9wb3N0Zml4OiBcIiBpbiB0b3RhbFwiXG4jICAgIG5ld194cF9wcmVmaXg6IFwiXCJcbiMgICAgbmV3X3hwX3Bvc3RmaXg6IFwiIGVhcm5lZFwiXG4jICAgIGxlZnRfeHBfcHJlZml4OiBcIlwiXG4jICAgIGxlZnRfeHBfaW5maXg6IFwiIHVudGlsIGxldmVsIFwiXG4jICAgIGxlZnRfeHBfcG9zdGZpeDogXCJcIlxuXG4jICBhY2NvdW50OlxuIyAgICB0aXRsZTogXCJBY2NvdW50XCJcbiMgICAgc2V0dGluZ3NfdGl0bGU6IFwiQWNjb3VudCBTZXR0aW5nc1wiXG4jICAgIHVuc3Vic2NyaWJlX3RpdGxlOiBcIlVuc3Vic2NyaWJlXCJcbiMgICAgcGF5bWVudHNfdGl0bGU6IFwiUGF5bWVudHNcIlxuIyAgICBzdWJzY3JpcHRpb25fdGl0bGU6IFwiU3Vic2NyaXB0aW9uXCJcbiMgICAgaW52b2ljZXNfdGl0bGU6IFwiSW52b2ljZXNcIlxuIyAgICBwcmVwYWlkc190aXRsZTogXCJQcmVwYWlkc1wiXG4jICAgIHBheW1lbnRzOiBcIlBheW1lbnRzXCJcbiMgICAgcHJlcGFpZF9jb2RlczogXCJQcmVwYWlkIENvZGVzXCJcbiMgICAgcHVyY2hhc2VkOiBcIlB1cmNoYXNlZFwiXG4jICAgIHN1YnNjcmliZV9mb3JfZ2VtczogXCJTdWJzY3JpYmUgZm9yIGdlbXNcIlxuIyAgICBzdWJzY3JpcHRpb246IFwiU3Vic2NyaXB0aW9uXCJcbiMgICAgaW52b2ljZXM6IFwiSW52b2ljZXNcIlxuIyAgICBzZXJ2aWNlX2FwcGxlOiBcIkFwcGxlXCJcbiMgICAgc2VydmljZV93ZWI6IFwiV2ViXCJcbiMgICAgcGFpZF9vbjogXCJQYWlkIE9uXCJcbiMgICAgc2VydmljZTogXCJTZXJ2aWNlXCJcbiMgICAgcHJpY2U6IFwiUHJpY2VcIlxuIyAgICBnZW1zOiBcIkdlbXNcIlxuIyAgICBhY3RpdmU6IFwiQWN0aXZlXCJcbiMgICAgc3Vic2NyaWJlZDogXCJTdWJzY3JpYmVkXCJcbiMgICAgdW5zdWJzY3JpYmVkOiBcIlVuc3Vic2NyaWJlZFwiXG4jICAgIGFjdGl2ZV91bnRpbDogXCJBY3RpdmUgVW50aWxcIlxuIyAgICBjb3N0OiBcIkNvc3RcIlxuIyAgICBuZXh0X3BheW1lbnQ6IFwiTmV4dCBQYXltZW50XCJcbiMgICAgY2FyZDogXCJDYXJkXCJcbiMgICAgc3RhdHVzX3Vuc3Vic2NyaWJlZF9hY3RpdmU6IFwiWW91J3JlIG5vdCBzdWJzY3JpYmVkIGFuZCB3b24ndCBiZSBiaWxsZWQsIGJ1dCB5b3VyIGFjY291bnQgaXMgc3RpbGwgYWN0aXZlIGZvciBub3cuXCJcbiMgICAgc3RhdHVzX3Vuc3Vic2NyaWJlZDogXCJHZXQgYWNjZXNzIHRvIG5ldyBsZXZlbHMsIGhlcm9lcywgaXRlbXMsIGFuZCBib251cyBnZW1zIHdpdGggYSBDb2RlQ29tYmF0IHN1YnNjcmlwdGlvbiFcIlxuIyAgICBub3RfeWV0X3ZlcmlmaWVkOiBcIk5vdCB5ZXQgdmVyaWZpZWQuXCJcbiMgICAgcmVzZW5kX2VtYWlsOiBcIlJlc2VuZCBlbWFpbFwiXG4jICAgIGVtYWlsX3NlbnQ6IFwiRW1haWwgc2VudCEgQ2hlY2sgeW91ciBpbmJveC5cIlxuIyAgICB2ZXJpZnlpbmdfZW1haWw6IFwiVmVyaWZ5aW5nIHlvdXIgZW1haWwgYWRkcmVzcy4uLlwiXG4jICAgIHN1Y2Nlc3NmdWxseV92ZXJpZmllZDogXCJZb3UndmUgc3VjY2Vzc2Z1bGx5IHZlcmlmaWVkIHlvdXIgZW1haWwgYWRkcmVzcyFcIlxuIyAgICB2ZXJpZnlfZXJyb3I6IFwiU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2hlbiB2ZXJpZnlpbmcgeW91ciBlbWFpbCA6KFwiXG4jICAgIHVuc3Vic2NyaWJlX2Zyb21fbWFya2V0aW5nOiBcIlVuc3Vic2NyaWJlIF9fZW1haWxfXyBmcm9tIGFsbCBDb2RlQ29tYmF0IG1hcmtldGluZyBlbWFpbHM/XCJcbiMgICAgdW5zdWJzY3JpYmVfYnV0dG9uOiBcIlllcywgdW5zdWJzY3JpYmVcIlxuIyAgICB1bnN1YnNjcmliZV9mYWlsZWQ6IFwiRmFpbGVkXCJcbiMgICAgdW5zdWJzY3JpYmVfc3VjY2VzczogXCJTdWNjZXNzXCJcblxuIyAgYWNjb3VudF9pbnZvaWNlczpcbiMgICAgYW1vdW50OiBcIkFtb3VudCBpbiBVUyBkb2xsYXJzXCJcbiMgICAgZGVjbGluZWQ6IFwiWW91ciBjYXJkIHdhcyBkZWNsaW5lZFwiXG4jICAgIGludmFsaWRfYW1vdW50OiBcIlBsZWFzZSBlbnRlciBhIFVTIGRvbGxhciBhbW91bnQuXCJcbiMgICAgbm90X2xvZ2dlZF9pbjogXCJMb2cgaW4gb3IgY3JlYXRlIGFuIGFjY291bnQgdG8gYWNjZXNzIGludm9pY2VzLlwiXG4jICAgIHBheTogXCJQYXkgSW52b2ljZVwiXG4jICAgIHB1cmNoYXNpbmc6IFwiUHVyY2hhc2luZy4uLlwiXG4jICAgIHJldHJ5aW5nOiBcIlNlcnZlciBlcnJvciwgcmV0cnlpbmcuXCJcbiMgICAgc3VjY2VzczogXCJTdWNjZXNzZnVsbHkgcGFpZC4gVGhhbmtzIVwiXG5cbiMgIGFjY291bnRfcHJlcGFpZDpcbiMgICAgcHVyY2hhc2VfY29kZTogXCJQdXJjaGFzZSBhIFN1YnNjcmlwdGlvbiBDb2RlXCJcbiMgICAgcHVyY2hhc2VfY29kZTE6IFwiU3Vic2NyaXB0aW9uIENvZGVzIGNhbiBiZSByZWRlZW1lZCB0byBhZGQgcHJlbWl1bSBzdWJzY3JpcHRpb24gdGltZSB0byBvbmUgb3IgbW9yZSBhY2NvdW50cyBmb3IgdGhlIEhvbWUgdmVyc2lvbiBvZiBDb2RlQ29tYmF0LlwiXG4jICAgIHB1cmNoYXNlX2NvZGUyOiBcIkVhY2ggQ29kZUNvbWJhdCBhY2NvdW50IGNhbiBvbmx5IHJlZGVlbSBhIHBhcnRpY3VsYXIgU3Vic2NyaXB0aW9uIENvZGUgb25jZS5cIlxuIyAgICBwdXJjaGFzZV9jb2RlMzogXCJTdWJzY3JpcHRpb24gQ29kZSBtb250aHMgd2lsbCBiZSBhZGRlZCB0byB0aGUgZW5kIG9mIGFueSBleGlzdGluZyBzdWJzY3JpcHRpb24gb24gdGhlIGFjY291bnQuXCJcbiMgICAgcHVyY2hhc2VfY29kZTQ6IFwiU3Vic2NyaXB0aW9uIENvZGVzIGFyZSBmb3IgYWNjb3VudHMgcGxheWluZyB0aGUgSG9tZSB2ZXJzaW9uIG9mIENvZGVDb21iYXQsIHRoZXkgY2Fubm90IGJlIHVzZWQgaW4gcGxhY2Ugb2YgU3R1ZGVudCBMaWNlbnNlcyBmb3IgdGhlIENsYXNzcm9vbSB2ZXJzaW9uLlwiXG4jICAgIHB1cmNoYXNlX2NvZGU1OiBcIkZvciBtb3JlIGluZm9ybWF0aW9uIG9uIFN0dWRlbnQgTGljZW5zZXMsIHJlYWNoIG91dCB0b1wiXG4jICAgIHVzZXJzOiBcIlVzZXJzXCJcbiMgICAgbW9udGhzOiBcIk1vbnRoc1wiXG4jICAgIHB1cmNoYXNlX3RvdGFsOiBcIlRvdGFsXCJcbiMgICAgcHVyY2hhc2VfYnV0dG9uOiBcIlN1Ym1pdCBQdXJjaGFzZVwiXG4jICAgIHlvdXJfY29kZXM6IFwiWW91ciBDb2Rlc1wiXG4jICAgIHJlZGVlbV9jb2RlczogXCJSZWRlZW0gYSBTdWJzY3JpcHRpb24gQ29kZVwiXG4jICAgIHByZXBhaWRfY29kZTogXCJQcmVwYWlkIENvZGVcIlxuIyAgICBsb29rdXBfY29kZTogXCJMb29rdXAgcHJlcGFpZCBjb2RlXCJcbiMgICAgYXBwbHlfYWNjb3VudDogXCJBcHBseSB0byB5b3VyIGFjY291bnRcIlxuIyAgICBjb3B5X2xpbms6IFwiWW91IGNhbiBjb3B5IHRoZSBjb2RlJ3MgbGluayBhbmQgc2VuZCBpdCB0byBzb21lb25lLlwiXG4jICAgIHF1YW50aXR5OiBcIlF1YW50aXR5XCJcbiMgICAgcmVkZWVtZWQ6IFwiUmVkZWVtZWRcIlxuIyAgICBub19jb2RlczogXCJObyBjb2RlcyB5ZXQhXCJcbiMgICAgeW91X2NhbjE6IFwiWW91IGNhblwiXG4jICAgIHlvdV9jYW4yOiBcInB1cmNoYXNlIGEgcHJlcGFpZCBjb2RlXCJcbiMgICAgeW91X2NhbjM6IFwidGhhdCBjYW4gYmUgYXBwbGllZCB0byB5b3VyIG93biBhY2NvdW50IG9yIGdpdmVuIHRvIG90aGVycy5cIlxuXG4gIGxvYWRpbmdfZXJyb3I6XG4gICAgY291bGRfbm90X2xvYWQ6IFwi7ISc67KE66Gc67aA7YSwIOuhnOuUqe2VmOuKlCDrjbAg66y47KCc6rCAIOuwnOyDne2WiOyKteuLiOuLpC5cIiAjIHtjaGFuZ2V9XG4gICAgY29ubmVjdGlvbl9mYWlsdXJlOiBcIuyXsOqysCDsi6TtjKhcIlxuIyAgICBjb25uZWN0aW9uX2ZhaWx1cmVfZGVzYzogXCJJdCBkb2VzbuKAmXQgbG9vayBsaWtlIHlvdeKAmXJlIGNvbm5lY3RlZCB0byB0aGUgaW50ZXJuZXQhIENoZWNrIHlvdXIgbmV0d29yayBjb25uZWN0aW9uIGFuZCB0aGVuIHJlbG9hZCB0aGlzIHBhZ2UuXCJcbiMgICAgbG9naW5fcmVxdWlyZWQ6IFwiTG9naW4gUmVxdWlyZWRcIlxuIyAgICBsb2dpbl9yZXF1aXJlZF9kZXNjOiBcIllvdSBuZWVkIHRvIGJlIGxvZ2dlZCBpbiB0byBhY2Nlc3MgdGhpcyBwYWdlLlwiXG4gICAgdW5hdXRob3JpemVkOiBcIuuhnOq3uOyduO2VnCDsg4Htg5zqsIAg7JWE64uZ64uI64ukLiDtmLnsi5wg7L+g7YKk66W8IOyCrOyaqe2VmOyngCDrqrvtlZjqsowg7ISk7KCV7ZW064aT7Jy87IWo64KY7JqUP1wiXG4gICAgZm9yYmlkZGVuOiBcIuq2jO2VnOydtCDtlYTsmpTtlanri4jri6QuXCJcbiMgICAgZm9yYmlkZGVuX2Rlc2M6IFwiT2ggbm8sIHRoZXJl4oCZcyBub3RoaW5nIHdlIGNhbiBzaG93IHlvdSBoZXJlISBNYWtlIHN1cmUgeW914oCZcmUgbG9nZ2VkIGludG8gdGhlIGNvcnJlY3QgYWNjb3VudCwgb3IgdmlzaXQgb25lIG9mIHRoZSBsaW5rcyBiZWxvdyB0byBnZXQgYmFjayB0byBwcm9ncmFtbWluZyFcIlxuICAgIG5vdF9mb3VuZDogXCLssL7snYQg7IiYIOyXhuyKteuLiOuLpC5cIlxuIyAgICBub3RfZm91bmRfZGVzYzogXCJIbSwgdGhlcmXigJlzIG5vdGhpbmcgaGVyZS4gVmlzaXQgb25lIG9mIHRoZSBmb2xsb3dpbmcgbGlua3MgdG8gZ2V0IGJhY2sgdG8gcHJvZ3JhbW1pbmchXCJcbiAgICBub3RfYWxsb3dlZDogXCLsnpjrqrvrkJwg7KCR6re87J6F64uI64ukLlwiXG4gICAgdGltZW91dDogXCLshJzrsoQg7YOA7J6E7JWE7JuDXCIgIyB7Y2hhbmdlfVxuICAgIGNvbmZsaWN0OiBcIuumrOyGjOyKpCDstqnrj4xcIlxuIyAgICBiYWRfaW5wdXQ6IFwiQmFkIGlucHV0LlwiXG4gICAgc2VydmVyX2Vycm9yOiBcIuyEnOuyhCDsl5Drn6xcIlxuICAgIHVua25vd246IFwi7JWMIOyImCDsl4bripQg7JeQ65+sIOuwnOyDnVwiICMge2NoYW5nZX1cbiMgICAgZXJyb3I6IFwiRVJST1JcIlxuIyAgICBnZW5lcmFsX2Rlc2M6IFwiU29tZXRoaW5nIHdlbnQgd3JvbmcsIGFuZCBpdOKAmXMgcHJvYmFibHkgb3VyIGZhdWx0LiBUcnkgd2FpdGluZyBhIGJpdCBhbmQgdGhlbiByZWZyZXNoaW5nIHRoZSBwYWdlLCBvciB2aXNpdCBvbmUgb2YgdGhlIGZvbGxvd2luZyBsaW5rcyB0byBnZXQgYmFjayB0byBwcm9ncmFtbWluZyFcIlxuXG4gIHJlc291cmNlczpcbiAgICBsZXZlbDogXCLroIjrsqhcIlxuIyAgICBwYXRjaDogXCJQYXRjaFwiXG4jICAgIHBhdGNoZXM6IFwiUGF0Y2hlc1wiXG4gICAgc3lzdGVtOiBcIuyLnOyKpO2FnFwiXG4jICAgIHN5c3RlbXM6IFwiU3lzdGVtc1wiXG4jICAgIGNvbXBvbmVudDogXCJDb21wb25lbnRcIlxuIyAgICBjb21wb25lbnRzOiBcIkNvbXBvbmVudHNcIlxuIyAgICBoZXJvOiBcIkhlcm9cIlxuIyAgICBjYW1wYWlnbnM6IFwiQ2FtcGFpZ25zXCJcblxuIyAgY29uY2VwdHM6XG4jICAgIGFkdmFuY2VkX2Nzc19ydWxlczogXCJBZHZhbmNlZCBDU1MgUnVsZXNcIlxuIyAgICBhZHZhbmNlZF9jc3Nfc2VsZWN0b3JzOiBcIkFkdmFuY2VkIENTUyBTZWxlY3RvcnNcIlxuIyAgICBhZHZhbmNlZF9odG1sX2F0dHJpYnV0ZXM6IFwiQWR2YW5jZWQgSFRNTCBBdHRyaWJ1dGVzXCJcbiMgICAgYWR2YW5jZWRfaHRtbF90YWdzOiBcIkFkdmFuY2VkIEhUTUwgVGFnc1wiXG4jICAgIGFsZ29yaXRobV9hdmVyYWdlOiBcIkFsZ29yaXRobSBBdmVyYWdlXCJcbiMgICAgYWxnb3JpdGhtX2ZpbmRfbWlubWF4OiBcIkFsZ29yaXRobSBGaW5kIE1pbi9NYXhcIlxuIyAgICBhbGdvcml0aG1fc2VhcmNoX2JpbmFyeTogXCJBbGdvcml0aG0gU2VhcmNoIEJpbmFyeVwiXG4jICAgIGFsZ29yaXRobV9zZWFyY2hfZ3JhcGg6IFwiQWxnb3JpdGhtIFNlYXJjaCBHcmFwaFwiXG4jICAgIGFsZ29yaXRobV9zb3J0OiBcIkFsZ29yaXRobSBTb3J0XCJcbiMgICAgYWxnb3JpdGhtX3N1bTogXCJBbGdvcml0aG0gU3VtXCJcbiMgICAgYXJndW1lbnRzOiBcIkFyZ3VtZW50c1wiXG4jICAgIGFyaXRobWV0aWM6IFwiQXJpdGhtZXRpY1wiXG4jICAgIGFycmF5XzJkOiBcIjJEIEFycmF5XCJcbiMgICAgYXJyYXlfaW5kZXg6IFwiQXJyYXkgSW5kZXhpbmdcIlxuIyAgICBhcnJheV9pdGVyYXRpbmc6IFwiSXRlcmF0aW5nIE92ZXIgQXJyYXlzXCJcbiMgICAgYXJyYXlfbGl0ZXJhbHM6IFwiQXJyYXkgTGl0ZXJhbHNcIlxuIyAgICBhcnJheV9zZWFyY2hpbmc6IFwiQXJyYXkgU2VhcmNoaW5nXCJcbiMgICAgYXJyYXlfc29ydGluZzogXCJBcnJheSBTb3J0aW5nXCJcbiMgICAgYXJyYXlzOiBcIkFycmF5c1wiXG4jICAgIGJhc2ljX2Nzc19ydWxlczogXCJCYXNpYyBDU1MgcnVsZXNcIlxuIyAgICBiYXNpY19jc3Nfc2VsZWN0b3JzOiBcIkJhc2ljIENTUyBzZWxlY3RvcnNcIlxuIyAgICBiYXNpY19odG1sX2F0dHJpYnV0ZXM6IFwiQmFzaWMgSFRNTCBBdHRyaWJ1dGVzXCJcbiMgICAgYmFzaWNfaHRtbF90YWdzOiBcIkJhc2ljIEhUTUwgVGFnc1wiXG4jICAgIGJhc2ljX3N5bnRheDogXCJCYXNpYyBTeW50YXhcIlxuIyAgICBiaW5hcnk6IFwiQmluYXJ5XCJcbiMgICAgYm9vbGVhbl9hbmQ6IFwiQm9vbGVhbiBBbmRcIlxuIyAgICBib29sZWFuX2luZXF1YWxpdHk6IFwiQm9vbGVhbiBJbmVxdWFsaXR5XCJcbiMgICAgYm9vbGVhbl9lcXVhbGl0eTogXCJCb29sZWFuIEVxdWFsaXR5XCJcbiMgICAgYm9vbGVhbl9ncmVhdGVyX2xlc3M6IFwiQm9vbGVhbiBHcmVhdGVyL0xlc3NcIlxuIyAgICBib29sZWFuX2xvZ2ljX3Nob3J0Y2lyY3VpdDogXCJCb29sZWFuIExvZ2ljIFNob3J0Y2lyY3VpdGluZ1wiXG4jICAgIGJvb2xlYW5fbm90OiBcIkJvb2xlYW4gTm90XCJcbiMgICAgYm9vbGVhbl9vcGVyYXRvcl9wcmVjZWRlbmNlOiBcIkJvb2xlYW4gT3BlcmF0b3IgUHJlY2VkZW5jZVwiXG4jICAgIGJvb2xlYW5fb3I6IFwiQm9vbGVhbiBPclwiXG4jICAgIGJvb2xlYW5fd2l0aF94eWNvb3JkaW5hdGVzOiBcIkNvb3JkaW5hdGUgQ29tcGFyaXNvblwiXG4jICAgIGJvb3RzdHJhcDogXCJCb290c3RyYXBcIlxuIyAgICBicmVha19zdGF0ZW1lbnRzOiBcIkJyZWFrIFN0YXRlbWVudHNcIlxuIyAgICBjbGFzc2VzOiBcIkNsYXNzZXNcIlxuIyAgICBjb250aW51ZV9zdGF0ZW1lbnRzOiBcIkNvbnRpbnVlIFN0YXRlbWVudHNcIlxuIyAgICBkb21fZXZlbnRzOiBcIkRPTSBFdmVudHNcIlxuIyAgICBkeW5hbWljX3N0eWxpbmc6IFwiRHluYW1pYyBTdHlsaW5nXCJcbiMgICAgZXZlbnRzOiBcIkV2ZW50c1wiXG4jICAgIGV2ZW50X2NvbmN1cnJlbmN5OiBcIkV2ZW50IENvbmN1cnJlbmN5XCJcbiMgICAgZXZlbnRfZGF0YTogXCJFdmVudCBEYXRhXCJcbiMgICAgZXZlbnRfaGFuZGxlcnM6IFwiRXZlbnQgSGFuZGxlcnNcIlxuIyAgICBldmVudF9zcGF3bjogXCJTcGF3biBFdmVudFwiXG4jICAgIGZvcl9sb29wczogXCJGb3IgTG9vcHNcIlxuIyAgICBmb3JfbG9vcHNfbmVzdGVkOiBcIk5lc3RlZCBGb3IgTG9vcHNcIlxuIyAgICBmb3JfbG9vcHNfcmFuZ2U6IFwiRm9yIExvb3BzIFJhbmdlXCJcbiMgICAgZnVuY3Rpb25zOiBcIkZ1bmN0aW9uc1wiXG4jICAgIGZ1bmN0aW9uc19wYXJhbWV0ZXJzOiBcIlBhcmFtZXRlcnNcIlxuIyAgICBmdW5jdGlvbnNfbXVsdGlwbGVfcGFyYW1ldGVyczogXCJNdWx0aXBsZSBQYXJhbWV0ZXJzXCJcbiMgICAgZ2FtZV9haTogXCJHYW1lIEFJXCJcbiMgICAgZ2FtZV9nb2FsczogXCJHYW1lIEdvYWxzXCJcbiMgICAgZ2FtZV9zcGF3bjogXCJHYW1lIFNwYXduXCJcbiMgICAgZ3JhcGhpY3M6IFwiR3JhcGhpY3NcIlxuIyAgICBncmFwaHM6IFwiR3JhcGhzXCJcbiMgICAgaGVhcHM6IFwiSGVhcHNcIlxuIyAgICBpZl9jb25kaXRpb246IFwiQ29uZGl0aW9uYWwgSWYgU3RhdGVtZW50c1wiXG4jICAgIGlmX2Vsc2VfaWY6IFwiSWYvRWxzZSBJZiBTdGF0ZW1lbnRzXCJcbiMgICAgaWZfZWxzZV9zdGF0ZW1lbnRzOiBcIklmL0Vsc2UgU3RhdGVtZW50c1wiXG4jICAgIGlmX3N0YXRlbWVudHM6IFwiSWYgU3RhdGVtZW50c1wiXG4jICAgIGlmX3N0YXRlbWVudHNfbmVzdGVkOiBcIk5lc3RlZCBJZiBTdGF0ZW1lbnRzXCJcbiMgICAgaW5kZXhpbmc6IFwiQXJyYXkgSW5kZXhlc1wiXG4jICAgIGlucHV0X2hhbmRsaW5nX2ZsYWdzOiBcIklucHV0IEhhbmRsaW5nIC0gRmxhZ3NcIlxuIyAgICBpbnB1dF9oYW5kbGluZ19rZXlib2FyZDogXCJJbnB1dCBIYW5kbGluZyAtIEtleWJvYXJkXCJcbiMgICAgaW5wdXRfaGFuZGxpbmdfbW91c2U6IFwiSW5wdXQgSGFuZGxpbmcgLSBNb3VzZVwiXG4jICAgIGludGVybWVkaWF0ZV9jc3NfcnVsZXM6IFwiSW50ZXJtZWRpYXRlIENTUyBSdWxlc1wiXG4jICAgIGludGVybWVkaWF0ZV9jc3Nfc2VsZWN0b3JzOiBcIkludGVybWVkaWF0ZSBDU1MgU2VsZWN0b3JzXCJcbiMgICAgaW50ZXJtZWRpYXRlX2h0bWxfYXR0cmlidXRlczogXCJJbnRlcm1lZGlhdGUgSFRNTCBBdHRyaWJ1dGVzXCJcbiMgICAgaW50ZXJtZWRpYXRlX2h0bWxfdGFnczogXCJJbnRlcm1lZGlhdGUgSFRNTCBUYWdzXCJcbiMgICAganF1ZXJ5OiBcImpRdWVyeVwiXG4jICAgIGpxdWVyeV9hbmltYXRpb25zOiBcImpRdWVyeSBBbmltYXRpb25zXCJcbiMgICAganF1ZXJ5X2ZpbHRlcmluZzogXCJqUXVlcnkgRWxlbWVudCBGaWx0ZXJpbmdcIlxuIyAgICBqcXVlcnlfc2VsZWN0b3JzOiBcImpRdWVyeSBTZWxlY3RvcnNcIlxuIyAgICBsZW5ndGg6IFwiQXJyYXkgTGVuZ3RoXCJcbiMgICAgbWF0aF9jb29yZGluYXRlczogXCJDb29yZGluYXRlIE1hdGhcIlxuIyAgICBtYXRoX2dlb21ldHJ5OiBcIkdlb21ldHJ5XCJcbiMgICAgbWF0aF9vcGVyYXRpb25zOiBcIk1hdGggTGlicmFyeSBPcGVyYXRpb25zXCJcbiMgICAgbWF0aF9wcm9wb3J0aW9uczogXCJQcm9wb3J0aW9uIE1hdGhcIlxuIyAgICBtYXRoX3RyaWdvbm9tZXRyeTogXCJUcmlnb25vbWV0cnlcIlxuIyAgICBvYmplY3RfbGl0ZXJhbHM6IFwiT2JqZWN0IExpdGVyYWxzXCJcbiMgICAgcGFyYW1ldGVyczogXCJQYXJhbWV0ZXJzXCJcbiMgICAgcHJvZ3JhbXM6IFwiUHJvZ3JhbXNcIlxuIyAgICBwcm9wZXJ0aWVzOiBcIlByb3BlcnRpZXNcIlxuIyAgICBwcm9wZXJ0eV9hY2Nlc3M6IFwiQWNjZXNzaW5nIFByb3BlcnRpZXNcIlxuIyAgICBwcm9wZXJ0eV9hc3NpZ25tZW50OiBcIkFzc2lnbmluZyBQcm9wZXJ0aWVzXCJcbiMgICAgcHJvcGVydHlfY29vcmRpbmF0ZTogXCJDb29yZGluYXRlIFByb3BlcnR5XCJcbiMgICAgcXVldWVzOiBcIkRhdGEgU3RydWN0dXJlcyAtIFF1ZXVlc1wiXG4jICAgIHJlYWRpbmdfZG9jczogXCJSZWFkaW5nIHRoZSBEb2NzXCJcbiMgICAgcmVjdXJzaW9uOiBcIlJlY3Vyc2lvblwiXG4jICAgIHJldHVybl9zdGF0ZW1lbnRzOiBcIlJldHVybiBTdGF0ZW1lbnRzXCJcbiMgICAgc3RhY2tzOiBcIkRhdGEgU3RydWN0dXJlcyAtIFN0YWNrc1wiXG4jICAgIHN0cmluZ3M6IFwiU3RyaW5nc1wiXG4jICAgIHN0cmluZ3NfY29uY2F0ZW5hdGlvbjogXCJTdHJpbmcgQ29uY2F0ZW5hdGlvblwiXG4jICAgIHN0cmluZ3Nfc3Vic3RyaW5nczogXCJTdWJzdHJpbmdcIlxuIyAgICB0cmVlczogXCJEYXRhIFN0cnVjdHVyZXMgLSBUcmVlc1wiXG4jICAgIHZhcmlhYmxlczogXCJWYXJpYWJsZXNcIlxuIyAgICB2ZWN0b3JzOiBcIlZlY3RvcnNcIlxuIyAgICB3aGlsZV9jb25kaXRpb25fbG9vcHM6IFwiV2hpbGUgTG9vcHMgd2l0aCBDb25kaXRpb25hbHNcIlxuIyAgICB3aGlsZV9sb29wc19zaW1wbGU6IFwiV2hpbGUgTG9vcHNcIlxuIyAgICB3aGlsZV9sb29wc19uZXN0ZWQ6IFwiTmVzdGVkIFdoaWxlIExvb3BzXCJcbiMgICAgeHlfY29vcmRpbmF0ZXM6IFwiQ29vcmRpbmF0ZSBQYWlyc1wiXG4jICAgIGFkdmFuY2VkX3N0cmluZ3M6IFwiQWR2YW5jZWQgU3RyaW5nc1wiICMgUmVzdCBvZiBjb25jZXB0cyBhcmUgZGVwcmVjYXRlZFxuIyAgICBhbGdvcml0aG1zOiBcIkFsZ29yaXRobXNcIlxuIyAgICBib29sZWFuX2xvZ2ljOiBcIkJvb2xlYW4gTG9naWNcIlxuIyAgICBiYXNpY19odG1sOiBcIkJhc2ljIEhUTUxcIlxuIyAgICBiYXNpY19jc3M6IFwiQmFzaWMgQ1NTXCJcbiMgICAgYmFzaWNfd2ViX3NjcmlwdGluZzogXCJCYXNpYyBXZWIgU2NyaXB0aW5nXCJcbiMgICAgaW50ZXJtZWRpYXRlX2h0bWw6IFwiSW50ZXJtZWRpYXRlIEhUTUxcIlxuIyAgICBpbnRlcm1lZGlhdGVfY3NzOiBcIkludGVybWVkaWF0ZSBDU1NcIlxuIyAgICBpbnRlcm1lZGlhdGVfd2ViX3NjcmlwdGluZzogXCJJbnRlcm1lZGlhdGUgV2ViIFNjcmlwdGluZ1wiXG4jICAgIGFkdmFuY2VkX2h0bWw6IFwiQWR2YW5jZWQgSFRNTFwiXG4jICAgIGFkdmFuY2VkX2NzczogXCJBZHZhbmNlZCBDU1NcIlxuIyAgICBhZHZhbmNlZF93ZWJfc2NyaXB0aW5nOiBcIkFkdmFuY2VkIFdlYiBTY3JpcHRpbmdcIlxuIyAgICBpbnB1dF9oYW5kbGluZzogXCJJbnB1dCBIYW5kbGluZ1wiXG4jICAgIHdoaWxlX2xvb3BzOiBcIldoaWxlIExvb3BzXCJcbiMgICAgcGxhY2VfZ2FtZV9vYmplY3RzOiBcIlBsYWNlIGdhbWUgb2JqZWN0c1wiXG4jICAgIGNvbnN0cnVjdF9tYXplczogXCJDb25zdHJ1Y3QgbWF6ZXNcIlxuIyAgICBjcmVhdGVfcGxheWFibGVfZ2FtZTogXCJDcmVhdGUgYSBwbGF5YWJsZSwgc2hhcmFibGUgZ2FtZSBwcm9qZWN0XCJcbiMgICAgYWx0ZXJfZXhpc3Rpbmdfd2ViX3BhZ2VzOiBcIkFsdGVyIGV4aXN0aW5nIHdlYiBwYWdlc1wiXG4jICAgIGNyZWF0ZV9zaGFyYWJsZV93ZWJfcGFnZTogXCJDcmVhdGUgYSBzaGFyYWJsZSB3ZWIgcGFnZVwiXG4jICAgIGJhc2ljX2lucHV0X2hhbmRsaW5nOiBcIkJhc2ljIElucHV0IEhhbmRsaW5nXCJcbiMgICAgYmFzaWNfZ2FtZV9haTogXCJCYXNpYyBHYW1lIEFJXCJcbiMgICAgYmFzaWNfamF2YXNjcmlwdDogXCJCYXNpYyBKYXZhU2NyaXB0XCJcbiMgICAgYmFzaWNfZXZlbnRfaGFuZGxpbmc6IFwiQmFzaWMgRXZlbnQgSGFuZGxpbmdcIlxuIyAgICBjcmVhdGVfc2hhcmFibGVfaW50ZXJhY3RpdmVfd2ViX3BhZ2U6IFwiQ3JlYXRlIGEgc2hhcmFibGUgaW50ZXJhY3RpdmUgd2ViIHBhZ2VcIlxuXG4jICBhbm9ueW1vdXNfdGVhY2hlcjpcbiMgICAgbm90aWZ5X3RlYWNoZXI6IFwiTm90aWZ5IFRlYWNoZXJcIlxuIyAgICBjcmVhdGVfdGVhY2hlcl9hY2NvdW50OiBcIkNyZWF0ZSBmcmVlIHRlYWNoZXIgYWNjb3VudFwiXG4jICAgIGVudGVyX3N0dWRlbnRfbmFtZTogXCJZb3VyIG5hbWU6XCJcbiMgICAgZW50ZXJfdGVhY2hlcl9lbWFpbDogXCJZb3VyIHRlYWNoZXIncyBlbWFpbDpcIlxuIyAgICB0ZWFjaGVyX2VtYWlsX3BsYWNlaG9sZGVyOiBcInRlYWNoZXIuZW1haWxAZXhhbXBsZS5jb21cIlxuIyAgICBzdHVkZW50X25hbWVfcGxhY2Vob2xkZXI6IFwidHlwZSB5b3VyIG5hbWUgaGVyZVwiXG4jICAgIHRlYWNoZXJzX3NlY3Rpb246IFwiVGVhY2hlcnM6XCJcbiMgICAgc3R1ZGVudHNfc2VjdGlvbjogXCJTdHVkZW50czpcIlxuIyAgICB0ZWFjaGVyX25vdGlmaWVkOiBcIldlJ3ZlIG5vdGlmaWVkIHlvdXIgdGVhY2hlciB0aGF0IHlvdSB3YW50IHRvIHBsYXkgbW9yZSBDb2RlQ29tYmF0IGluIHlvdXIgY2xhc3Nyb29tIVwiXG5cbiMgIGRlbHRhOlxuIyAgICBhZGRlZDogXCJBZGRlZFwiXG4jICAgIG1vZGlmaWVkOiBcIk1vZGlmaWVkXCJcbiMgICAgbm90X21vZGlmaWVkOiBcIk5vdCBNb2RpZmllZFwiXG4jICAgIGRlbGV0ZWQ6IFwiRGVsZXRlZFwiXG4jICAgIG1vdmVkX2luZGV4OiBcIk1vdmVkIEluZGV4XCJcbiMgICAgdGV4dF9kaWZmOiBcIlRleHQgRGlmZlwiXG4jICAgIG1lcmdlX2NvbmZsaWN0X3dpdGg6IFwiTUVSR0UgQ09ORkxJQ1QgV0lUSFwiXG4jICAgIG5vX2NoYW5nZXM6IFwiTm8gQ2hhbmdlc1wiXG5cbiAgbGVnYWw6XG4jICAgIHBhZ2VfdGl0bGU6IFwiTGVnYWxcIlxuIyAgICBvcGVuc291cmNlX2ludHJvZHVjdGlvbjogXCJDb2RlQ29tYmF0IGlzIHBhcnQgb2YgdGhlIG9wZW4gc291cmNlIGNvbW11bml0eS5cIlxuICAgIG9wZW5zb3VyY2VfZGVzY3JpcHRpb25fcHJlZml4OiBcIuy9lOuTnCDsu7TrsYPsnZhcIlxuICAgIGdpdGh1Yl91cmw6IFwiR2l0SHViXCJcbiAgICBvcGVuc291cmNlX2Rlc2NyaXB0aW9uX2NlbnRlcjogXCLrpbwg7ZmV7J247ZW067O07IS47JqULiDqt7jrpqzqs6Ag7JuQ7ZWY7Iug64uk66m0IO2VqOq7mCDrj4TsmYDso7zshLjsmpQhIOy9lOuTnCDsu7TrsYPsnYAg7IiY7LKcIOqwnOydmCDsmKTtlIgg7IaM7IqkIO2UhOuhnOygne2KuOulvCDquLDrsJjsnLzroZwg66eM65Ok7Ja07KGM6rOgIOyggO2drOuKlCDsnbTrk6Tsl5Ag64yA7ZW0IOq5iuydgCDslaDsoJXsnYQg6rCW6rOgIOyeiOyKteuLiOuLpC4g7ZWc67KIIFwiXG4gICAgYXJjaG1hZ2Vfd2lraV91cmw6IFwiQXJjaG1hZ2Ug7JyE7YKkXCJcbiAgICBvcGVuc291cmNlX2Rlc2NyaXB0aW9uX3N1ZmZpeDogXCLrpbwg7ZmV7J247ZW067O07IS47JqULiDsvZTrk5wg7Lu067GD7J2EIOqwgOuKpe2VmOqyjCDrp4zrk6Ag7IaM7ZSE7Yq47Juo7Ja065Ok7J2EIOywvuyVhOuztOyLpCDsiJgg7J6I7Iq164uI64ukLlwiXG4jICAgIHByYWN0aWNlc190aXRsZTogXCJSZXNwZWN0ZnVsIEJlc3QgUHJhY3RpY2VzXCJcbiMgICAgcHJhY3RpY2VzX2Rlc2NyaXB0aW9uOiBcIlRoZXNlIGFyZSBvdXIgcHJvbWlzZXMgdG8geW91LCB0aGUgcGxheWVyLCBpbiBzbGlnaHRseSBsZXNzIGxlZ2FsZXNlLlwiXG4gICAgcHJpdmFjeV90aXRsZTogXCLtlITrnbzsnbTrsoTsi5xcIlxuIyAgICBwcml2YWN5X2Rlc2NyaXB0aW9uOiBcIldlIHdpbGwgbm90IHNlbGwgYW55IG9mIHlvdXIgcGVyc29uYWwgaW5mb3JtYXRpb24uXCJcbiMgICAgc2VjdXJpdHlfdGl0bGU6IFwiU2VjdXJpdHlcIlxuIyAgICBzZWN1cml0eV9kZXNjcmlwdGlvbjogXCJXZSBzdHJpdmUgdG8ga2VlcCB5b3VyIHBlcnNvbmFsIGluZm9ybWF0aW9uIHNhZmUuIEFzIGFuIG9wZW4gc291cmNlIHByb2plY3QsIG91ciBzaXRlIGlzIGZyZWVseSBvcGVuIHRvIGFueW9uZSB0byByZXZpZXcgYW5kIGltcHJvdmUgb3VyIHNlY3VyaXR5IHN5c3RlbXMuXCJcbiAgICBlbWFpbF90aXRsZTogXCLsnbTrqZTsnbxcIlxuIyAgICBlbWFpbF9kZXNjcmlwdGlvbl9wcmVmaXg6IFwiV2Ugd2lsbCBub3QgaW51bmRhdGUgeW91IHdpdGggc3BhbS4gVGhyb3VnaFwiXG4gICAgZW1haWxfc2V0dGluZ3NfdXJsOiBcIuydtOuplOydvCDshKTsoJVcIlxuIyAgICBlbWFpbF9kZXNjcmlwdGlvbl9zdWZmaXg6IFwib3IgdGhyb3VnaCBsaW5rcyBpbiB0aGUgZW1haWxzIHdlIHNlbmQsIHlvdSBjYW4gY2hhbmdlIHlvdXIgcHJlZmVyZW5jZXMgYW5kIGVhc2lseSB1bnN1YnNjcmliZSBhdCBhbnkgdGltZS5cIlxuIyAgICBjb3N0X3RpdGxlOiBcIkNvc3RcIlxuIyAgICBjb3N0X2Rlc2NyaXB0aW9uOiBcIkNvZGVDb21iYXQgaXMgZnJlZSB0byBwbGF5IGZvciBhbGwgb2YgaXRzIGNvcmUgbGV2ZWxzLCB3aXRoIGEgJHt7cHJpY2V9fSBVU0QvbW8gc3Vic2NyaXB0aW9uIGZvciBhY2Nlc3MgdG8gZXh0cmEgbGV2ZWwgYnJhbmNoZXMgYW5kIHt7Z2Vtc319IGJvbnVzIGdlbXMgcGVyIG1vbnRoLiBZb3UgY2FuIGNhbmNlbCB3aXRoIGEgY2xpY2ssIGFuZCB3ZSBvZmZlciBhIDEwMCUgbW9uZXktYmFjayBndWFyYW50ZWUuXCJcbiMgICAgY29weXJpZ2h0c190aXRsZTogXCJDb3B5cmlnaHRzIGFuZCBMaWNlbnNlc1wiXG4jICAgIGNvbnRyaWJ1dG9yX3RpdGxlOiBcIkNvbnRyaWJ1dG9yIExpY2Vuc2UgQWdyZWVtZW50XCJcbiMgICAgY29udHJpYnV0b3JfZGVzY3JpcHRpb25fcHJlZml4OiBcIkFsbCBjb250cmlidXRpb25zLCBib3RoIG9uIHRoZSBzaXRlIGFuZCBvbiBvdXIgR2l0SHViIHJlcG9zaXRvcnksIGFyZSBzdWJqZWN0IHRvIG91clwiXG4jICAgIGNsYV91cmw6IFwiQ0xBXCJcbiMgICAgY29udHJpYnV0b3JfZGVzY3JpcHRpb25fc3VmZml4OiBcInRvIHdoaWNoIHlvdSBzaG91bGQgYWdyZWUgYmVmb3JlIGNvbnRyaWJ1dGluZy5cIlxuIyAgICBjb2RlX3RpdGxlOiBcIkNsaWVudC1TaWRlIENvZGUgLSBNSVRcIlxuIyAgICBjbGllbnRfY29kZV9kZXNjcmlwdGlvbl9wcmVmaXg6IFwiQWxsIGNsaWVudC1zaWRlIGNvZGUgZm9yIGNvZGVjb21iYXQuY29tIGluIHRoZSBwdWJsaWMgR2l0SHViIHJlcG9zaXRvcnkgYW5kIGluIHRoZSBjb2RlY29tYmF0LmNvbSBkYXRhYmFzZSwgaXMgbGljZW5zZWQgdW5kZXIgdGhlXCJcbiMgICAgbWl0X2xpY2Vuc2VfdXJsOiBcIk1JVCBsaWNlbnNlXCJcbiMgICAgY29kZV9kZXNjcmlwdGlvbl9zdWZmaXg6IFwiVGhpcyBpbmNsdWRlcyBhbGwgY29kZSBpbiBTeXN0ZW1zIGFuZCBDb21wb25lbnRzIHRoYXQgYXJlIG1hZGUgYXZhaWxhYmxlIGJ5IENvZGVDb21iYXQgZm9yIHRoZSBwdXJwb3NlIG9mIGNyZWF0aW5nIGxldmVscy5cIlxuIyAgICBhcnRfdGl0bGU6IFwiQXJ0L011c2ljIC0gQ3JlYXRpdmUgQ29tbW9ucyBcIlxuIyAgICBhcnRfZGVzY3JpcHRpb25fcHJlZml4OiBcIkFsbCBjb21tb24gY29udGVudCBpcyBhdmFpbGFibGUgdW5kZXIgdGhlXCJcbiMgICAgY2NfbGljZW5zZV91cmw6IFwiQ3JlYXRpdmUgQ29tbW9ucyBBdHRyaWJ1dGlvbiA0LjAgSW50ZXJuYXRpb25hbCBMaWNlbnNlXCJcbiMgICAgYXJ0X2Rlc2NyaXB0aW9uX3N1ZmZpeDogXCJDb21tb24gY29udGVudCBpcyBhbnl0aGluZyBtYWRlIGdlbmVyYWxseSBhdmFpbGFibGUgYnkgQ29kZUNvbWJhdCBmb3IgdGhlIHB1cnBvc2Ugb2YgY3JlYXRpbmcgTGV2ZWxzLiBUaGlzIGluY2x1ZGVzOlwiXG4gICAgYXJ0X211c2ljOiBcIuuupOyngVwiXG4gICAgYXJ0X3NvdW5kOiBcIuyCrOyatOuTnFwiXG4gICAgYXJ0X2FydHdvcms6IFwi7JuQ7ZmUXCJcbiAgICBhcnRfc3ByaXRlczogXCLsiqTtlITrnbzsnbTtirhcIlxuIyAgICBhcnRfb3RoZXI6IFwiQW55IGFuZCBhbGwgb3RoZXIgbm9uLWNvZGUgY3JlYXRpdmUgd29ya3MgdGhhdCBhcmUgbWFkZSBhdmFpbGFibGUgd2hlbiBjcmVhdGluZyBMZXZlbHMuXCJcbiMgICAgYXJ0X2FjY2VzczogXCJDdXJyZW50bHkgdGhlcmUgaXMgbm8gdW5pdmVyc2FsLCBlYXN5IHN5c3RlbSBmb3IgZmV0Y2hpbmcgdGhlc2UgYXNzZXRzLiBJbiBnZW5lcmFsLCBmZXRjaCB0aGVtIGZyb20gdGhlIFVSTHMgYXMgdXNlZCBieSB0aGUgc2l0ZSwgY29udGFjdCB1cyBmb3IgYXNzaXN0YW5jZSwgb3IgaGVscCB1cyBpbiBleHRlbmRpbmcgdGhlIHNpdGUgdG8gbWFrZSB0aGVzZSBhc3NldHMgbW9yZSBlYXNpbHkgYWNjZXNzaWJsZS5cIlxuIyAgICBhcnRfcGFyYWdyYXBoXzE6IFwiRm9yIGF0dHJpYnV0aW9uLCBwbGVhc2UgbmFtZSBhbmQgbGluayB0byBjb2RlY29tYmF0LmNvbSBuZWFyIHdoZXJlIHRoZSBzb3VyY2UgaXMgdXNlZCBvciB3aGVyZSBhcHByb3ByaWF0ZSBmb3IgdGhlIG1lZGl1bS4gRm9yIGV4YW1wbGU6XCJcbiMgICAgdXNlX2xpc3RfMTogXCJJZiB1c2VkIGluIGEgbW92aWUgb3IgYW5vdGhlciBnYW1lLCBpbmNsdWRlIGNvZGVjb21iYXQuY29tIGluIHRoZSBjcmVkaXRzLlwiXG4jICAgIHVzZV9saXN0XzI6IFwiSWYgdXNlZCBvbiBhIHdlYnNpdGUsIGluY2x1ZGUgYSBsaW5rIG5lYXIgdGhlIHVzYWdlLCBmb3IgZXhhbXBsZSB1bmRlcm5lYXRoIGFuIGltYWdlLCBvciBpbiBhIGdlbmVyYWwgYXR0cmlidXRpb25zIHBhZ2Ugd2hlcmUgeW91IG1pZ2h0IGFsc28gbWVudGlvbiBvdGhlciBDcmVhdGl2ZSBDb21tb25zIHdvcmtzIGFuZCBvcGVuIHNvdXJjZSBzb2Z0d2FyZSBiZWluZyB1c2VkIG9uIHRoZSBzaXRlLiBTb21ldGhpbmcgdGhhdCdzIGFscmVhZHkgY2xlYXJseSByZWZlcmVuY2luZyBDb2RlQ29tYmF0LCBzdWNoIGFzIGEgYmxvZyBwb3N0IG1lbnRpb25pbmcgQ29kZUNvbWJhdCwgZG9lcyBub3QgbmVlZCBzb21lIHNlcGFyYXRlIGF0dHJpYnV0aW9uLlwiXG4jICAgIGFydF9wYXJhZ3JhcGhfMjogXCJJZiB0aGUgY29udGVudCBiZWluZyB1c2VkIGlzIGNyZWF0ZWQgbm90IGJ5IENvZGVDb21iYXQgYnV0IGluc3RlYWQgYnkgYSB1c2VyIG9mIGNvZGVjb21iYXQuY29tLCBhdHRyaWJ1dGUgdGhlbSBpbnN0ZWFkLCBhbmQgZm9sbG93IGF0dHJpYnV0aW9uIGRpcmVjdGlvbnMgcHJvdmlkZWQgaW4gdGhhdCByZXNvdXJjZSdzIGRlc2NyaXB0aW9uIGlmIHRoZXJlIGFyZSBhbnkuXCJcbiMgICAgcmlnaHRzX3RpdGxlOiBcIlJpZ2h0cyBSZXNlcnZlZFwiXG4jICAgIHJpZ2h0c19kZXNjOiBcIkFsbCByaWdodHMgYXJlIHJlc2VydmVkIGZvciBMZXZlbHMgdGhlbXNlbHZlcy4gVGhpcyBpbmNsdWRlc1wiXG4jICAgIHJpZ2h0c19zY3JpcHRzOiBcIlNjcmlwdHNcIlxuIyAgICByaWdodHNfdW5pdDogXCJVbml0IGNvbmZpZ3VyYXRpb25cIlxuIyAgICByaWdodHNfd3JpdGluZ3M6IFwiV3JpdGluZ3NcIlxuIyAgICByaWdodHNfbWVkaWE6IFwiTWVkaWEgKHNvdW5kcywgbXVzaWMpIGFuZCBhbnkgb3RoZXIgY3JlYXRpdmUgY29udGVudCBtYWRlIHNwZWNpZmljYWxseSBmb3IgdGhhdCBMZXZlbCBhbmQgbm90IG1hZGUgZ2VuZXJhbGx5IGF2YWlsYWJsZSB3aGVuIGNyZWF0aW5nIExldmVscy5cIlxuIyAgICByaWdodHNfY2xhcmlmaWNhdGlvbjogXCJUbyBjbGFyaWZ5LCBhbnl0aGluZyB0aGF0IGlzIG1hZGUgYXZhaWxhYmxlIGluIHRoZSBMZXZlbCBFZGl0b3IgZm9yIHRoZSBwdXJwb3NlIG9mIG1ha2luZyBsZXZlbHMgaXMgdW5kZXIgQ0MsIHdoZXJlYXMgdGhlIGNvbnRlbnQgY3JlYXRlZCB3aXRoIHRoZSBMZXZlbCBFZGl0b3Igb3IgdXBsb2FkZWQgaW4gdGhlIGNvdXJzZSBvZiBjcmVhdGlvbiBvZiBMZXZlbHMgaXMgbm90LlwiXG4jICAgIG51dHNoZWxsX3RpdGxlOiBcIkluIGEgTnV0c2hlbGxcIlxuIyAgICBudXRzaGVsbF9kZXNjcmlwdGlvbjogXCJBbnkgcmVzb3VyY2VzIHdlIHByb3ZpZGUgaW4gdGhlIExldmVsIEVkaXRvciBhcmUgZnJlZSB0byB1c2UgYXMgeW91IGxpa2UgZm9yIGNyZWF0aW5nIExldmVscy4gQnV0IHdlIHJlc2VydmUgdGhlIHJpZ2h0IHRvIHJlc3RyaWN0IGRpc3RyaWJ1dGlvbiBvZiB0aGUgTGV2ZWxzIHRoZW1zZWx2ZXMgKHRoYXQgYXJlIGNyZWF0ZWQgb24gY29kZWNvbWJhdC5jb20pIHNvIHRoYXQgdGhleSBtYXkgYmUgY2hhcmdlZCBmb3IuXCJcbiMgICAgbnV0c2hlbGxfc2VlX2Fsc286IFwiU2VlIGFsc286XCJcbiMgICAgY2Fub25pY2FsOiBcIlRoZSBFbmdsaXNoIHZlcnNpb24gb2YgdGhpcyBkb2N1bWVudCBpcyB0aGUgZGVmaW5pdGl2ZSwgY2Fub25pY2FsIHZlcnNpb24uIElmIHRoZXJlIGFyZSBhbnkgZGlzY3JlcGFuY2llcyBiZXR3ZWVuIHRyYW5zbGF0aW9ucywgdGhlIEVuZ2xpc2ggZG9jdW1lbnQgdGFrZXMgcHJlY2VkZW5jZS5cIlxuIyAgICB0aGlyZF9wYXJ0eV90aXRsZTogXCJUaGlyZCBQYXJ0eSBTZXJ2aWNlc1wiXG4jICAgIHRoaXJkX3BhcnR5X2Rlc2NyaXB0aW9uOiBcIkNvZGVDb21iYXQgdXNlcyB0aGUgZm9sbG93aW5nIHRoaXJkIHBhcnR5IHNlcnZpY2VzIChhbW9uZyBvdGhlcnMpOlwiXG4jICAgIGNvb2tpZXNfbWVzc2FnZTogXCJDb2RlQ29tYmF0IHVzZXMgYSBmZXcgZXNzZW50aWFsIGFuZCBub24tZXNzZW50aWFsIGNvb2tpZXMuXCJcbiMgICAgY29va2llc19kZW55OiBcIkRlY2xpbmUgbm9uLWVzc2VudGlhbCBjb29raWVzXCJcblxuICBsYWRkZXJfcHJpemVzOlxuIyAgICB0aXRsZTogXCJUb3VybmFtZW50IFByaXplc1wiICMgVGhpcyBzZWN0aW9uIHdhcyBmb3IgYW4gb2xkIHRvdXJuYW1lbnQgYW5kIGRvZXNuJ3QgbmVlZCBuZXcgdHJhbnNsYXRpb25zIG5vdy5cbiMgICAgYmx1cmJfMTogXCJUaGVzZSBwcml6ZXMgd2lsbCBiZSBhd2FyZGVkIGFjY29yZGluZyB0b1wiXG4jICAgIGJsdXJiXzI6IFwidGhlIHRvdXJuYW1lbnQgcnVsZXNcIlxuIyAgICBibHVyYl8zOiBcInRvIHRoZSB0b3AgaHVtYW4gYW5kIG9ncmUgcGxheWVycy5cIlxuIyAgICBibHVyYl80OiBcIlR3byB0ZWFtcyBtZWFucyBkb3VibGUgdGhlIHByaXplcyFcIlxuIyAgICBibHVyYl81OiBcIihUaGVyZSB3aWxsIGJlIHR3byBmaXJzdCBwbGFjZSB3aW5uZXJzLCB0d28gc2Vjb25kLXBsYWNlIHdpbm5lcnMsIGV0Yy4pXCJcbiMgICAgcmFuazogXCJSYW5rXCJcbiMgICAgcHJpemVzOiBcIlByaXplc1wiXG4jICAgIHRvdGFsX3ZhbHVlOiBcIlRvdGFsIFZhbHVlXCJcbiMgICAgaW5fY2FzaDogXCJpbiBjYXNoXCJcbiMgICAgY3VzdG9tX3dpemFyZDogXCJDdXN0b20gQ29kZUNvbWJhdCBXaXphcmRcIlxuIyAgICBjdXN0b21fYXZhdGFyOiBcIkN1c3RvbSBDb2RlQ29tYmF0IGF2YXRhclwiXG4jICAgIGhlYXA6IFwiZm9yIHNpeCBtb250aHMgb2YgXFxcIlN0YXJ0dXBcXFwiIGFjY2Vzc1wiXG4jICAgIGNyZWRpdHM6IFwiY3JlZGl0c1wiXG4jICAgIG9uZV9tb250aF9jb3Vwb246IFwiY291cG9uOiBjaG9vc2UgZWl0aGVyIFJhaWxzIG9yIEhUTUxcIlxuIyAgICBvbmVfbW9udGhfZGlzY291bnQ6IFwiZGlzY291bnQsIDMwJSBvZmY6IGNob29zZSBlaXRoZXIgUmFpbHMgb3IgSFRNTFwiXG4gICAgbGljZW5zZTogXCLrnbzsnbTshLzsiqRcIlxuIyAgICBvcmVpbGx5OiBcImVib29rIG9mIHlvdXIgY2hvaWNlXCJcblxuIyAgY2FsZW5kYXI6XG4jICAgIHllYXI6IFwiWWVhclwiXG4jICAgIGRheTogXCJEYXlcIlxuIyAgICBtb250aDogXCJNb250aFwiXG4jICAgIGphbnVhcnk6IFwiSmFudWFyeVwiXG4jICAgIGZlYnJ1YXJ5OiBcIkZlYnJ1YXJ5XCJcbiMgICAgbWFyY2g6IFwiTWFyY2hcIlxuIyAgICBhcHJpbDogXCJBcHJpbFwiXG4jICAgIG1heTogXCJNYXlcIlxuIyAgICBqdW5lOiBcIkp1bmVcIlxuIyAgICBqdWx5OiBcIkp1bHlcIlxuIyAgICBhdWd1c3Q6IFwiQXVndXN0XCJcbiMgICAgc2VwdGVtYmVyOiBcIlNlcHRlbWJlclwiXG4jICAgIG9jdG9iZXI6IFwiT2N0b2JlclwiXG4jICAgIG5vdmVtYmVyOiBcIk5vdmVtYmVyXCJcbiMgICAgZGVjZW1iZXI6IFwiRGVjZW1iZXJcIlxuXG4jICBjb2RlX3BsYXlfY3JlYXRlX2FjY291bnRfbW9kYWw6XG4jICAgIHRpdGxlOiBcIllvdSBkaWQgaXQhXCIgIyBUaGlzIHNlY3Rpb24gaXMgb25seSBuZWVkZWQgaW4gVVMsIFVLLCBNZXhpY28sIEluZGlhLCBhbmQgR2VybWFueVxuIyAgICBib2R5OiBcIllvdSBhcmUgbm93IG9uIHlvdXIgd2F5IHRvIGJlY29taW5nIGEgbWFzdGVyIGNvZGVyLiBTaWduIHVwIHRvIHJlY2VpdmUgYW4gZXh0cmEgPHN0cm9uZz4xMDAgR2Vtczwvc3Ryb25nPiAmIHlvdSB3aWxsIGFsc28gYmUgZW50ZXJlZCBmb3IgYSBjaGFuY2UgdG8gPHN0cm9uZz53aW4gJDIsNTAwICYgb3RoZXIgTGVub3ZvIFByaXplczwvc3Ryb25nPi5cIlxuIyAgICBzaWduX3VwOiBcIlNpZ24gdXAgJiBrZWVwIGNvZGluZyDilrZcIlxuIyAgICB2aWN0b3J5X3NpZ25fdXBfcG9rZTogXCJDcmVhdGUgYSBmcmVlIGFjY291bnQgdG8gc2F2ZSB5b3VyIGNvZGUgJiBiZSBlbnRlcmVkIGZvciBhIGNoYW5jZSB0byB3aW4gcHJpemVzIVwiXG4jICAgIHZpY3Rvcnlfc2lnbl91cDogXCJTaWduIHVwICYgYmUgZW50ZXJlZCB0byA8c3Ryb25nPndpbiAkMiw1MDA8L3N0cm9uZz5cIlxuXG4jICBzZXJ2ZXJfZXJyb3I6XG4jICAgIGVtYWlsX3Rha2VuOiBcIkVtYWlsIGFscmVhZHkgdGFrZW5cIlxuIyAgICB1c2VybmFtZV90YWtlbjogXCJVc2VybmFtZSBhbHJlYWR5IHRha2VuXCJcblxuIyAgZXNwZXI6XG4jICAgIGxpbmVfbm86IFwiTGluZSAkMTogXCJcbiMgICAgdW5jYXVnaHQ6IFwiVW5jYXVnaHQgJDFcIiAjICQxIHdpbGwgYmUgYW4gZXJyb3IgdHlwZSwgZWcgXCJVbmNhdWdodCBTeW50YXhFcnJvclwiXG4jICAgIHJlZmVyZW5jZV9lcnJvcjogXCJSZWZlcmVuY2VFcnJvcjogXCJcbiMgICAgYXJndW1lbnRfZXJyb3I6IFwiQXJndW1lbnRFcnJvcjogXCJcbiMgICAgdHlwZV9lcnJvcjogXCJUeXBlRXJyb3I6IFwiXG4jICAgIHN5bnRheF9lcnJvcjogXCJTeW50YXhFcnJvcjogXCJcbiMgICAgZXJyb3I6IFwiRXJyb3I6IFwiXG4jICAgIHhfbm90X2FfZnVuY3Rpb246IFwiJDEgaXMgbm90IGEgZnVuY3Rpb25cIlxuIyAgICB4X25vdF9kZWZpbmVkOiBcIiQxIGlzIG5vdCBkZWZpbmVkXCJcbiMgICAgc3BlbGxpbmdfaXNzdWVzOiBcIkxvb2sgb3V0IGZvciBzcGVsbGluZyBpc3N1ZXM6IGRpZCB5b3UgbWVhbiBgJDFgIGluc3RlYWQgb2YgYCQyYD9cIlxuIyAgICBjYXBpdGFsaXphdGlvbl9pc3N1ZXM6IFwiTG9vayBvdXQgZm9yIGNhcGl0YWxpemF0aW9uOiBgJDFgIHNob3VsZCBiZSBgJDJgLlwiXG4jICAgIHB5X2VtcHR5X2Jsb2NrOiBcIkVtcHR5ICQxLiBQdXQgNCBzcGFjZXMgaW4gZnJvbnQgb2Ygc3RhdGVtZW50cyBpbnNpZGUgdGhlICQyIHN0YXRlbWVudC5cIlxuIyAgICBmeF9taXNzaW5nX3BhcmVuOiBcIklmIHlvdSB3YW50IHRvIGNhbGwgYCQxYCBhcyBhIGZ1bmN0aW9uLCB5b3UgbmVlZCBgKClgJ3NcIlxuIyAgICB1bm1hdGNoZWRfdG9rZW46IFwiVW5tYXRjaGVkIGAkMWAuICBFdmVyeSBvcGVuaW5nIGAkMmAgbmVlZHMgYSBjbG9zaW5nIGAkM2AgdG8gbWF0Y2ggaXQuXCJcbiMgICAgdW50ZXJtaW5hdGVkX3N0cmluZzogXCJVbnRlcm1pbmF0ZWQgc3RyaW5nLiBBZGQgYSBtYXRjaGluZyBgXFxcImAgYXQgdGhlIGVuZCBvZiB5b3VyIHN0cmluZy5cIlxuIyAgICBtaXNzaW5nX3NlbWljb2xvbjogXCJNaXNzaW5nIHNlbWljb2xvbi5cIlxuIyAgICBtaXNzaW5nX3F1b3RlczogXCJNaXNzaW5nIHF1b3Rlcy4gVHJ5IGAkMWBcIlxuIyAgICBhcmd1bWVudF90eXBlOiBcImAkMWAncyBhcmd1bWVudCBgJDJgIHNob3VsZCBoYXZlIHR5cGUgYCQzYCwgYnV0IGdvdCBgJDRgOiBgJDVgLlwiXG4jICAgIGFyZ3VtZW50X3R5cGUyOiBcImAkMWAncyBhcmd1bWVudCBgJDJgIHNob3VsZCBoYXZlIHR5cGUgYCQzYCwgYnV0IGdvdCBgJDRgLlwiXG4jICAgIHRhcmdldF9hX3VuaXQ6IFwiVGFyZ2V0IGEgdW5pdC5cIlxuIyAgICBhdHRhY2tfY2FwaXRhbGl6YXRpb246IFwiQXR0YWNrICQxLCBub3QgJDIuIChDYXBpdGFsIGxldHRlcnMgYXJlIGltcG9ydGFudC4pXCJcbiMgICAgZW1wdHlfd2hpbGU6IFwiRW1wdHkgd2hpbGUgc3RhdGVtZW50LiBQdXQgNCBzcGFjZXMgaW4gZnJvbnQgb2Ygc3RhdGVtZW50cyBpbnNpZGUgdGhlIHdoaWxlIHN0YXRlbWVudC5cIlxuIyAgICBsaW5lX29mX3NpdGU6IFwiYCQxYCdzIGFyZ3VtZW50IGAkMmAgaGFzIGEgcHJvYmxlbS4gSXMgdGhlcmUgYW4gZW5lbXkgd2l0aGluIHlvdXIgbGluZS1vZi1zaWdodCB5ZXQ/XCJcbiMgICAgbmVlZF9hX2FmdGVyX3doaWxlOiBcIk5lZWQgYSBgJDFgIGFmdGVyIGAkMmAuXCJcbiMgICAgdG9vX211Y2hfaW5kZW50YXRpb246IFwiVG9vIG11Y2ggaW5kZW50YXRpb24gYXQgdGhlIGJlZ2lubmluZyBvZiB0aGlzIGxpbmUuXCJcbiMgICAgbWlzc2luZ19oZXJvOiBcIk1pc3NpbmcgYCQxYCBrZXl3b3JkOyBzaG91bGQgYmUgYCQyYC5cIlxuIyAgICB0YWtlc19ub19hcmd1bWVudHM6IFwiYCQxYCB0YWtlcyBubyBhcmd1bWVudHMuXCJcbiMgICAgbm9fb25lX25hbWVkOiBcIlRoZXJlJ3Mgbm8gb25lIG5hbWVkIFxcXCIkMVxcXCIgdG8gdGFyZ2V0LlwiXG4jICAgIHNlcGFyYXRlZF9ieV9jb21tYTogXCJGdW5jdGlvbiBjYWxscyBwYXJhbWF0ZXJzIG11c3QgYmUgc2VwZXJhdGVkIGJ5IGAsYHNcIlxuIyAgICBwcm90ZWN0ZWRfcHJvcGVydHk6IFwiQ2FuJ3QgcmVhZCBwcm90ZWN0ZWQgcHJvcGVydHk6ICQxXCJcbiMgICAgbmVlZF9wYXJlbnNfdG9fY2FsbDogXCJJZiB5b3Ugd2FudCB0byBjYWxsIGAkMWAgYXMgZnVuY3Rpb24sIHlvdSBuZWVkIGAoKWAnc1wiXG4jICAgIGV4cGVjdGVkX2FuX2lkZW50aWZpZXI6IFwiRXhwZWN0ZWQgYW4gaWRlbnRpZmllciBhbmQgaW5zdGVhZCBzYXcgJyQxJy5cIlxuIyAgICB1bmV4cGVjdGVkX2lkZW50aWZpZXI6IFwiVW5leHBlY3RlZCBpZGVudGlmaWVyXCJcbiMgICAgdW5leHBlY3RlZF9lbmRfb2Y6IFwiVW5leHBlY3RlZCBlbmQgb2YgaW5wdXRcIlxuIyAgICB1bm5lY2Vzc2FyeV9zZW1pY29sb246IFwiVW5uZWNlc3Nhcnkgc2VtaWNvbG9uLlwiXG4jICAgIHVuZXhwZWN0ZWRfdG9rZW5fZXhwZWN0ZWQ6IFwiVW5leHBlY3RlZCB0b2tlbjogZXhwZWN0ZWQgJDEgYnV0IGZvdW5kICQyIHdoaWxlIHBhcnNpbmcgJDNcIlxuIyAgICB1bmV4cGVjdGVkX3Rva2VuOiBcIlVuZXhwZWN0ZWQgdG9rZW4gJDFcIlxuIyAgICB1bmV4cGVjdGVkX3Rva2VuMjogXCJVbmV4cGVjdGVkIHRva2VuXCJcbiMgICAgdW5leHBlY3RlZF9udW1iZXI6IFwiVW5leHBlY3RlZCBudW1iZXJcIlxuIyAgICB1bmV4cGVjdGVkOiBcIlVuZXhwZWN0ZWQgJyQxJy5cIlxuIyAgICBlc2NhcGVfcHJlc3NlZF9jb2RlOiBcIkVzY2FwZSBwcmVzc2VkOyBjb2RlIGFib3J0ZWQuXCJcbiMgICAgdGFyZ2V0X2FuX2VuZW15OiBcIlRhcmdldCBhbiBlbmVteSBieSBuYW1lLCBsaWtlIGAkMWAsIG5vdCB0aGUgc3RyaW5nIGAkMmAuXCJcbiMgICAgdGFyZ2V0X2FuX2VuZW15XzI6IFwiVGFyZ2V0IGFuIGVuZW15IGJ5IG5hbWUsIGxpa2UgJDEuXCJcbiMgICAgY2Fubm90X3JlYWRfcHJvcGVydHk6IFwiQ2Fubm90IHJlYWQgcHJvcGVydHkgJyQxJyBvZiB1bmRlZmluZWRcIlxuIyAgICBhdHRlbXB0ZWRfdG9fYXNzaWduOiBcIkF0dGVtcHRlZCB0byBhc3NpZ24gdG8gcmVhZG9ubHkgcHJvcGVydHkuXCJcbiMgICAgdW5leHBlY3RlZF9lYXJseV9lbmQ6IFwiVW5leHBlY3RlZCBlYXJseSBlbmQgb2YgcHJvZ3JhbS5cIlxuIyAgICB5b3VfbmVlZF9hX3N0cmluZzogXCJZb3UgbmVlZCBhIHN0cmluZyB0byBidWlsZDsgb25lIG9mICQxXCJcbiMgICAgdW5hYmxlX3RvX2dldF9wcm9wZXJ0eTogXCJVbmFibGUgdG8gZ2V0IHByb3BlcnR5ICckMScgb2YgdW5kZWZpbmVkIG9yIG51bGwgcmVmZXJlbmNlXCIgIyBUT0RPOiBEbyB3ZSB0cmFuc2xhdGUgdW5kZWZpbmVkL251bGw/XG4jICAgIGNvZGVfbmV2ZXJfZmluaXNoZWRfaXRzOiBcIkNvZGUgbmV2ZXIgZmluaXNoZWQuIEl0J3MgZWl0aGVyIHJlYWxseSBzbG93IG9yIGhhcyBhbiBpbmZpbml0ZSBsb29wLlwiXG4jICAgIHVuY2xvc2VkX3N0cmluZzogXCJVbmNsb3NlZCBzdHJpbmcuXCJcbiMgICAgdW5tYXRjaGVkOiBcIlVubWF0Y2hlZCAnJDEnLlwiXG4jICAgIGVycm9yX3lvdV9zYWlkX2FjaG9vOiBcIllvdSBzYWlkOiAkMSwgYnV0IHRoZSBwYXNzd29yZCBpczogJDIuIChDYXBpdGFsIGxldHRlcnMgYXJlIGltcG9ydGFudC4pXCJcbiMgICAgaW5kZW50YXRpb25fZXJyb3JfdW5pbmRlbnRfZG9lczogXCJJbmRlbnRhdGlvbiBFcnJvcjogdW5pbmRlbnQgZG9lcyBub3QgbWF0Y2ggYW55IG91dGVyIGluZGVudGF0aW9uIGxldmVsXCJcbiMgICAgaW5kZW50YXRpb25fZXJyb3I6IFwiSW5kZW50YXRpb24gZXJyb3IuXCJcbiMgICAgbmVlZF9hX29uX3RoZTogXCJOZWVkIGEgYDpgIG9uIHRoZSBlbmQgb2YgdGhlIGxpbmUgZm9sbG93aW5nIGAkMWAuXCJcbiMgICAgYXR0ZW1wdF90b19jYWxsX3VuZGVmaW5lZDogXCJhdHRlbXB0IHRvIGNhbGwgJyQxJyAoYSBuaWwgdmFsdWUpXCJcbiMgICAgdW50ZXJtaW5hdGVkOiBcIlVudGVybWluYXRlZCBgJDFgXCJcbiMgICAgdGFyZ2V0X2FuX2VuZW15X3ZhcmlhYmxlOiBcIlRhcmdldCBhbiAkMSB2YXJpYWJsZSwgbm90IHRoZSBzdHJpbmcgJDIuIChUcnkgdXNpbmcgJDMuKVwiXG4jICAgIGVycm9yX3VzZV90aGVfdmFyaWFibGU6IFwiVXNlIHRoZSB2YXJpYWJsZSBuYW1lIGxpa2UgYCQxYCBpbnN0ZWFkIG9mIGEgc3RyaW5nIGxpa2UgYCQyYFwiXG4jICAgIGluZGVudGF0aW9uX3VuaW5kZW50X2RvZXNfbm90OiBcIkluZGVudGF0aW9uIHVuaW5kZW50IGRvZXMgbm90IG1hdGNoIGFueSBvdXRlciBpbmRlbnRhdGlvbiBsZXZlbFwiXG4jICAgIHVuY2xvc2VkX3BhcmVuX2luX2Z1bmN0aW9uX2FyZ3VtZW50czogXCJVbmNsb3NlZCAkMSBpbiBmdW5jdGlvbiBhcmd1bWVudHMuXCJcbiMgICAgdW5leHBlY3RlZF9lbmRfb2ZfaW5wdXQ6IFwiVW5leHBlY3RlZCBlbmQgb2YgaW5wdXRcIlxuIyAgICB0aGVyZV9pc19ub19lbmVteTogXCJUaGVyZSBpcyBubyBgJDFgLiBVc2UgYCQyYCBmaXJzdC5cIiAjIEhpbnRzIHN0YXJ0IGhlcmVcbiMgICAgdHJ5X2hlcm9maW5kbmVhcmVzdGVuZW15OiBcIlRyeSBgJDFgXCJcbiMgICAgdGhlcmVfaXNfbm9fZnVuY3Rpb246IFwiVGhlcmUgaXMgbm8gZnVuY3Rpb24gYCQxYCwgYnV0IGAkMmAgaGFzIGEgbWV0aG9kIGAkM2AuXCJcbiMgICAgYXR0YWNrc19hcmd1bWVudF9lbmVteV9oYXM6IFwiYCQxYCdzIGFyZ3VtZW50IGAkMmAgaGFzIGEgcHJvYmxlbS5cIlxuIyAgICBpc190aGVyZV9hbl9lbmVteTogXCJJcyB0aGVyZSBhbiBlbmVteSB3aXRoaW4geW91ciBsaW5lLW9mLXNpZ2h0IHlldD9cIlxuIyAgICB0YXJnZXRfaXNfbnVsbF9pczogXCJUYXJnZXQgaXMgJDEuIElzIHRoZXJlIGFsd2F5cyBhIHRhcmdldCB0byBhdHRhY2s/IChVc2UgJDI/KVwiXG4jICAgIGhlcm9faGFzX25vX21ldGhvZDogXCJgJDFgIGhhcyBubyBtZXRob2QgYCQyYC5cIlxuIyAgICB0aGVyZV9pc19hX3Byb2JsZW06IFwiVGhlcmUgaXMgYSBwcm9ibGVtIHdpdGggeW91ciBjb2RlLlwiXG4jICAgIGRpZF95b3VfbWVhbjogXCJEaWQgeW91IG1lYW4gJDE/IFlvdSBkbyBub3QgaGF2ZSBhbiBpdGVtIGVxdWlwcGVkIHdpdGggdGhhdCBza2lsbC5cIlxuIyAgICBtaXNzaW5nX2FfcXVvdGF0aW9uX21hcms6IFwiTWlzc2luZyBhIHF1b3RhdGlvbiBtYXJrLiBcIlxuIyAgICBtaXNzaW5nX3Zhcl91c2VfdmFyOiBcIk1pc3NpbmcgYCQxYC4gVXNlIGAkMmAgdG8gbWFrZSBhIG5ldyB2YXJpYWJsZS5cIlxuIyAgICB5b3VfZG9fbm90X2hhdmU6IFwiWW91IGRvIG5vdCBoYXZlIGFuIGl0ZW0gZXF1aXBwZWQgd2l0aCB0aGUgJDEgc2tpbGwuXCJcbiMgICAgcHV0X2VhY2hfY29tbWFuZF9vbjogXCJQdXQgZWFjaCBjb21tYW5kIG9uIGEgc2VwYXJhdGUgbGluZVwiXG4jICAgIGFyZV95b3VfbWlzc2luZ19hOiBcIkFyZSB5b3UgbWlzc2luZyBhICckMScgYWZ0ZXIgJyQyJz8gXCJcbiMgICAgeW91cl9wYXJlbnRoZXNlc19tdXN0X21hdGNoOiBcIllvdXIgcGFyZW50aGVzZXMgbXVzdCBtYXRjaC5cIlxuXG4jICBhcGNzcDpcbiMgICAgdGl0bGU6IFwiQVAgQ29tcHV0ZXIgU2NpZW5jZSBQcmluY2lwYWxzIHwgQ29sbGVnZSBCb2FyZCBFbmRvcnNlZFwiXG4jICAgIG1ldGFfZGVzY3JpcHRpb246IFwiQ29kZUNvbWJhdOKAmXMgY29tcHJlaGVuc2l2ZSBjdXJyaWN1bHVtIGFuZCBwcm9mZXNzaW9uYWwgZGV2ZWxvcG1lbnQgcHJvZ3JhbSBhcmUgYWxsIHlvdSBuZWVkIHRvIG9mZmVyIENvbGxlZ2UgQm9hcmTigJlzIG5ld2VzdCBjb21wdXRlciBzY2llbmNlIGNvdXJzZSB0byB5b3VyIHN0dWRlbnRzLlwiXG4jICAgIHN5bGxhYnVzOiBcIkFQIENTIFByaW5jaXBsZXMgU3lsbGFidXNcIlxuIyAgICBzeWxsYWJ1c19kZXNjcmlwdGlvbjogXCJVc2UgdGhpcyByZXNvdXJjZSB0byBwbGFuIENvZGVDb21iYXQgY3VycmljdWx1bSBmb3IgeW91ciBBUCBDb21wdXRlciBTY2llbmNlIFByaW5jaXBsZXMgY2xhc3MuXCJcbiMgICAgY29tcHV0YXRpb25hbF90aGlua2luZ19wcmFjdGljZXM6IFwiQ29tcHV0YXRpb25hbCBUaGlua2luZyBQcmFjdGljZXNcIlxuIyAgICBsZWFybmluZ19vYmplY3RpdmVzOiBcIkxlYXJuaW5nIE9iamVjdGl2ZXNcIlxuIyAgICBjdXJyaWN1bGFyX3JlcXVpcmVtZW50czogXCJDdXJyaWN1bGFyIFJlcXVpcmVtZW50c1wiXG4jICAgIHVuaXRfMTogXCJVbml0IDE6IENyZWF0aXZlIFRlY2hub2xvZ3lcIlxuIyAgICB1bml0XzFfYWN0aXZpdHlfMTogXCJVbml0IDEgQWN0aXZpdHk6IFRlY2hub2xvZ3kgVXNhYmlsaXR5IFJldmlld1wiXG4jICAgIHVuaXRfMjogXCJVbml0IDI6IENvbXB1dGF0aW9uYWwgVGhpbmtpbmdcIlxuIyAgICB1bml0XzJfYWN0aXZpdHlfMTogXCJVbml0IDIgQWN0aXZpdHk6IEJpbmFyeSBTZXF1ZW5jZXNcIlxuIyAgICB1bml0XzJfYWN0aXZpdHlfMjogXCJVbml0IDIgQWN0aXZpdHk6IENvbXB1dGluZyBMZXNzb24gUHJvamVjdFwiXG4jICAgIHVuaXRfMzogXCJVbml0IDM6IEFsZ29yaXRobXNcIlxuIyAgICB1bml0XzNfYWN0aXZpdHlfMTogXCJVbml0IDMgQWN0aXZpdHk6IEFsZ29yaXRobXMgLSBIaXRjaGhpa2VyJ3MgR3VpZGVcIlxuIyAgICB1bml0XzNfYWN0aXZpdHlfMjogXCJVbml0IDMgQWN0aXZpdHk6IFNpbXVsYXRpb24gLSBQcmVkYXRvciAmIFByZXlcIlxuIyAgICB1bml0XzNfYWN0aXZpdHlfMzogXCJVbml0IDMgQWN0aXZpdHk6IEFsZ29yaXRobXMgLSBQYWlyIERlc2lnbiBhbmQgUHJvZ3JhbW1pbmdcIlxuIyAgICB1bml0XzQ6IFwiVW5pdCA0OiBQcm9ncmFtbWluZ1wiXG4jICAgIHVuaXRfNF9hY3Rpdml0eV8xOiBcIlVuaXQgNCBBY3Rpdml0eTogQWJzdHJhY3Rpb25zXCJcbiMgICAgdW5pdF80X2FjdGl2aXR5XzI6IFwiVW5pdCA0IEFjdGl2aXR5OiBTZWFyY2hpbmcgJiBTb3J0aW5nXCJcbiMgICAgdW5pdF80X2FjdGl2aXR5XzM6IFwiVW5pdCA0IEFjdGl2aXR5OiBSZWZhY3RvcmluZ1wiXG4jICAgIHVuaXRfNTogXCJVbml0IDU6IFRoZSBJbnRlcm5ldFwiXG4jICAgIHVuaXRfNV9hY3Rpdml0eV8xOiBcIlVuaXQgNSBBY3Rpdml0eTogSG93IHRoZSBJbnRlcm5ldCBXb3Jrc1wiXG4jICAgIHVuaXRfNV9hY3Rpdml0eV8yOiBcIlVuaXQgNSBBY3Rpdml0eTogSW50ZXJuZXQgU2ltdWxhdG9yXCJcbiMgICAgdW5pdF81X2FjdGl2aXR5XzM6IFwiVW5pdCA1IEFjdGl2aXR5OiBDaGF0IFJvb20gU2ltdWxhdGlvblwiXG4jICAgIHVuaXRfNV9hY3Rpdml0eV80OiBcIlVuaXQgNSBBY3Rpdml0eTogQ3liZXJzZWN1cml0eVwiXG4jICAgIHVuaXRfNjogXCJVbml0IDY6IERhdGFcIlxuIyAgICB1bml0XzZfYWN0aXZpdHlfMTogXCJVbml0IDYgQWN0aXZpdHk6IEludHJvZHVjdGlvbiB0byBEYXRhXCJcbiMgICAgdW5pdF82X2FjdGl2aXR5XzI6IFwiVW5pdCA2IEFjdGl2aXR5OiBCaWcgRGF0YVwiXG4jICAgIHVuaXRfNl9hY3Rpdml0eV8zOiBcIlVuaXQgNiBBY3Rpdml0eTogTG9zc3kgJiBMb3NzbGVzcyBDb21wcmVzc2lvblwiXG4jICAgIHVuaXRfNzogXCJVbml0IDc6IFBlcnNvbmFsICYgR2xvYmFsIEltcGFjdFwiXG4jICAgIHVuaXRfN19hY3Rpdml0eV8xOiBcIlVuaXQgNyBBY3Rpdml0eTogUGVyc29uYWwgJiBHbG9iYWwgSW1wYWN0XCJcbiMgICAgdW5pdF83X2FjdGl2aXR5XzI6IFwiVW5pdCA3IEFjdGl2aXR5OiBDcm93ZHNvdXJjaW5nXCJcbiMgICAgdW5pdF84OiBcIlVuaXQgODogUGVyZm9ybWFuY2UgVGFza3NcIlxuIyAgICB1bml0XzhfZGVzY3JpcHRpb246IFwiUHJlcGFyZSBzdHVkZW50cyBmb3IgdGhlIENyZWF0ZSBUYXNrIGJ5IGJ1aWxkaW5nIHRoZWlyIG93biBnYW1lcyBhbmQgcHJhY3RpY2luZyBrZXkgY29uY2VwdHMuXCJcbiMgICAgdW5pdF84X2FjdGl2aXR5XzE6IFwiQ3JlYXRlIFRhc2sgUHJhY3RpY2UgMTogR2FtZSBEZXZlbG9wbWVudCAxXCJcbiMgICAgdW5pdF84X2FjdGl2aXR5XzI6IFwiQ3JlYXRlIFRhc2sgUHJhY3RpY2UgMjogR2FtZSBEZXZlbG9wbWVudCAyXCJcbiMgICAgdW5pdF84X2FjdGl2aXR5XzM6IFwiQ3JlYXRlIFRhc2sgUHJhY3RpY2UgMzogR2FtZSBEZXZlbG9wbWVudCAzXCJcbiMgICAgdW5pdF85OiBcIlVuaXQgOTogQVAgUmV2aWV3XCJcbiMgICAgdW5pdF8xMDogXCJVbml0IDEwOiBQb3N0LUFQXCJcbiMgICAgdW5pdF8xMF9hY3Rpdml0eV8xOiBcIlVuaXQgMTAgQWN0aXZpdHk6IFdlYiBRdWl6XCJcblxuIyAgcGFyZW50X2xhbmRpbmc6XG4jICAgIHNsb2dhbl9xdW90ZTogXCJcXFwiQ29kZUNvbWJhdCBpcyByZWFsbHkgZnVuLCBhbmQgeW91IGxlYXJuIGEgbG90LlxcXCJcIlxuIyAgICBxdW90ZV9hdHRyOiBcIjV0aCBHcmFkZXIsIE9ha2xhbmQsIENBXCJcbiMgICAgcmVmZXJfdGVhY2hlcjogXCJSZWZlciBhIFRlYWNoZXJcIlxuIyAgICBmb2N1c19xdW90ZTogXCJVbmxvY2sgeW91ciBjaGlsZCdzIGZ1dHVyZVwiXG4jICAgIHZhbHVlX2hlYWQxOiBcIlRoZSBtb3N0IGVuZ2FnaW5nIHdheSB0byBsZWFybiB0eXBlZCBjb2RlXCJcbiMgICAgdmFsdWVfY29weTE6IFwiQ29kZUNvbWJhdCBpcyBjaGlsZOKAmXMgcGVyc29uYWwgdHV0b3IuIENvdmVyaW5nIG1hdGVyaWFsIGFsaWduZWQgd2l0aCBuYXRpb25hbCBjdXJyaWN1bHVtIHN0YW5kYXJkcywgeW91ciBjaGlsZCB3aWxsIHByb2dyYW0gYWxnb3JpdGhtcywgYnVpbGQgd2Vic2l0ZXMgYW5kIGV2ZW4gZGVzaWduIHRoZWlyIG93biBnYW1lcy5cIlxuIyAgICB2YWx1ZV9oZWFkMjogXCJCdWlsZGluZyBjcml0aWNhbCBza2lsbHMgZm9yIHRoZSAyMXN0IGNlbnR1cnlcIlxuIyAgICB2YWx1ZV9jb3B5MjogXCJZb3VyIGtpZHMgd2lsbCBsZWFybiBob3cgdG8gbmF2aWdhdGUgYW5kIGJlY29tZSBjaXRpemVucyBpbiB0aGUgZGlnaXRhbCB3b3JsZC4gQ29kZUNvbWJhdCBpcyBhIHNvbHV0aW9uIHRoYXQgZW5oYW5jZXMgeW91ciBjaGlsZOKAmXMgY3JpdGljYWwgdGhpbmtpbmcgYW5kIHJlc2lsaWVuY2UuXCJcbiMgICAgdmFsdWVfaGVhZDM6IFwiSGVyb2VzIHRoYXQgeW91ciBjaGlsZCB3aWxsIGxvdmVcIlxuIyAgICB2YWx1ZV9jb3B5MzogXCJXZSBrbm93IGhvdyBpbXBvcnRhbnQgZnVuIGFuZCBlbmdhZ2VtZW50IGlzIGZvciB0aGUgZGV2ZWxvcGluZyBicmFpbiwgc28gd2XigJl2ZSBwYWNrZWQgaW4gYXMgbXVjaCBsZWFybmluZyBhcyB3ZSBjYW4gd2hpbGUgd3JhcHBpbmcgaXQgdXAgaW4gYSBnYW1lIHRoZXknbGwgbG92ZS5cIlxuIyAgICBkaXZlX2hlYWQxOiBcIk5vdCBqdXN0IGZvciBzb2Z0d2FyZSBlbmdpbmVlcnNcIlxuIyAgICBkaXZlX2ludHJvOiBcIkNvbXB1dGVyIHNjaWVuY2Ugc2tpbGxzIGhhdmUgYSB3aWRlIHJhbmdlIG9mIGFwcGxpY2F0aW9ucy4gVGFrZSBhIGxvb2sgYXQgYSBmZXcgZXhhbXBsZXMgYmVsb3chXCJcbiMgICAgbWVkaWNhbF9mbGFnOiBcIk1lZGljYWwgQXBwbGljYXRpb25zXCJcbiMgICAgbWVkaWNhbF9mbGFnX2NvcHk6IFwiRnJvbSBtYXBwaW5nIG9mIHRoZSBodW1hbiBnZW5vbWUgdG8gTVJJIG1hY2hpbmVzLCBjb2RpbmcgYWxsb3dzIHVzIHRvIHVuZGVyc3RhbmQgdGhlIGJvZHkgaW4gd2F5cyB3ZeKAmXZlIG5ldmVyIGJlZW4gYWJsZSB0byBiZWZvcmUuXCJcbiMgICAgZXhwbG9yZV9mbGFnOiBcIlNwYWNlIEV4cGxvcmF0aW9uXCJcbiMgICAgZXhwbG9yZV9mbGFnX2NvcHk6IFwiQXBvbGxvIGdvdCB0byB0aGUgTW9vbiB0aGFua3MgdG8gaGFyZHdvcmtpbmcgaHVtYW4gY29tcHV0ZXJzLCBhbmQgc2NpZW50aXN0cyB1c2UgY29tcHV0ZXIgcHJvZ3JhbXMgdG8gYW5hbHl6ZSB0aGUgZ3Jhdml0eSBvZiBwbGFuZXRzIGFuZCBzZWFyY2ggZm9yIG5ldyBzdGFycy5cIlxuIyAgICBmaWxtYWtpbmdfZmxhZzogXCJGaWxtbWFraW5nIGFuZCBBbmltYXRpb25cIlxuIyAgICBmaWxtYWtpbmdfZmxhZ19jb3B5OiBcIkZyb20gdGhlIHJvYm90aWNzIG9mIEp1cmFzc2ljIFBhcmsgdG8gdGhlIGluY3JlZGlibGUgYW5pbWF0aW9uIG9mIERyZWFtd29ya3MgYW5kIFBpeGFyLCBmaWxtcyB3b3VsZG7igJl0IGJlIHRoZSBzYW1lIHdpdGhvdXQgdGhlIGRpZ2l0YWwgY3JlYXRpdmVzIGJlaGluZCB0aGUgc2NlbmVzLlwiXG4jICAgIGRpdmVfaGVhZDI6IFwiR2FtZXMgYXJlIGltcG9ydGFudCBmb3IgbGVhcm5pbmdcIlxuIyAgICBkaXZlX3BhcjE6IFwiTXVsdGlwbGUgc3R1ZGllcyBoYXZlIGZvdW5kIHRoYXQgZ2FtZS1iYXNlZCBsZWFybmluZyBwcm9tb3Rlc1wiXG4jICAgIGRpdmVfbGluazE6IFwiY29nbml0aXZlIGRldmVsb3BtZW50XCJcbiMgICAgZGl2ZV9wYXIyOiBcImluIGtpZHMgd2hpbGUgYWxzbyBwcm92aW5nIHRvIGJlXCJcbiMgICAgZGl2ZV9saW5rMjogXCJtb3JlIGVmZmVjdGl2ZVwiXG4jICAgIGRpdmVfcGFyMzogXCJpbiBoZWxwaW5nIHN0dWRlbnRzXCJcbiMgICAgZGl2ZV9saW5rMzogXCJsZWFybiBhbmQgcmV0YWluIGtub3dsZWRnZVwiXG4jICAgIGRpdmVfcGFyNDogXCIsXCJcbiMgICAgZGl2ZV9saW5rNDogXCJjb25jZW50cmF0ZVwiXG4jICAgIGRpdmVfcGFyNTogXCIsIGFuZCBwZXJmb3JtIGF0IGEgaGlnaGVyIGxldmVsIG9mIGFjaGlldmVtZW50LlwiXG4jICAgIGRpdmVfcGFyNjogXCJHYW1lIGJhc2VkIGxlYXJuaW5nIGlzIGFsc28gZ29vZCBmb3IgZGV2ZWxvcGluZ1wiXG4jICAgIGRpdmVfbGluazU6IFwicmVzaWxpZW5jZVwiXG4jICAgIGRpdmVfcGFyNzogXCIsIGNvZ25pdGl2ZSByZWFzb25pbmcsIGFuZFwiXG4jICAgIGRpdmVfcGFyODogXCIuIFNjaWVuY2UgaXMganVzdCB0ZWxsaW5nIHVzIHdoYXQgbGVhcm5lcnMgYWxyZWFkeSBrbm93LiBDaGlsZHJlbiBsZWFybiBiZXN0IGJ5IHBsYXlpbmcuXCJcbiMgICAgZGl2ZV9saW5rNjogXCJleGVjdXRpdmUgZnVuY3Rpb25zXCJcbiMgICAgZGl2ZV9oZWFkMzogXCJUZWFtIHVwIHdpdGggdGVhY2hlcnNcIlxuIyAgICBkaXZlXzNfcGFyMTogXCJJbiB0aGUgZnV0dXJlLCBcIlxuIyAgICBkaXZlXzNfbGluazE6IFwiY29kaW5nIGlzIGdvaW5nIHRvIGJlIGFzIGZ1bmRhbWVudGFsIGFzIGxlYXJuaW5nIHRvIHJlYWQgYW5kIHdyaXRlXCJcbiMgICAgZGl2ZV8zX3BhcjI6IFwiLiBXZeKAmXZlIHdvcmtlZCBjbG9zZWx5IHdpdGggdGVhY2hlcnMgdG8gZGVzaWduIGFuZCBkZXZlbG9wIG91ciBjb250ZW50LCBhbmQgd2UgY2FuJ3Qgd2FpdCB0byBnZXQgeW91ciBraWRzIGxlYXJuaW5nLiBFZHVjYXRpb25hbCB0ZWNobm9sb2d5IHByb2dyYW1zIGxpa2UgQ29kZUNvbWJhdCB3b3JrIGJlc3Qgd2hlbiB0aGUgdGVhY2hlcnMgaW1wbGVtZW50IHRoZW0gY29uc2lzdGVudGx5LiBIZWxwIHVzIG1ha2UgdGhhdCBjb25uZWN0aW9uIGJ5IGludHJvZHVjaW5nIHVzIHRvIHlvdXIgY2hpbGTigJlzIHRlYWNoZXJzIVwiXG4jICAgIG1pc3Npb246IFwiT3VyIG1pc3Npb246IHRvIHRlYWNoIGFuZCBlbmdhZ2VcIlxuIyAgICBtaXNzaW9uMV9oZWFkaW5nOiBcIkNvZGluZyBmb3IgdG9kYXkncyBnZW5lcmF0aW9uXCJcbiMgICAgbWlzc2lvbjJfaGVhZGluZzogXCJQcmVwYXJpbmcgZm9yIHRoZSBmdXR1cmVcIlxuIyAgICBtaXNzaW9uM19oZWFkaW5nOiBcIlN1cHBvcnRlZCBieSBwYXJlbnRzIGxpa2UgeW91XCJcbiMgICAgbWlzc2lvbjFfY29weTogXCJPdXIgZWR1Y2F0aW9uIHNwZWNpYWxpc3RzIHdvcmsgY2xvc2VseSB3aXRoIHRlYWNoZXJzIHRvIG1lZXQgY2hpbGRyZW4gd2hlcmUgdGhleSBhcmUgaW4gdGhlIGVkdWNhdGlvbmFsIGxhbmRzY2FwZS4gS2lkcyBsZWFybiBza2lsbHMgdGhhdCBjYW4gYmUgYXBwbGllZCBvdXRzaWRlIG9mIHRoZSBnYW1lIGJlY2F1c2UgdGhleSBsZWFybiBob3cgdG8gc29sdmUgcHJvYmxlbXMsIG5vIG1hdHRlciB3aGF0IHRoZWlyIGxlYXJuaW5nIHN0eWxlIGlzLlwiXG4jICAgIG1pc3Npb24yX2NvcHk6IFwiQSAyMDE2IHN1cnZleSBzaG93ZWQgdGhhdCA2NCUgb2YgZ2lybHMgaW4gMy01dGggZ3JhZGUgd2FudCB0byBsZWFybiBob3cgdG8gY29kZS4gVGhlcmUgd2VyZSA3IG1pbGxpb24gam9iIG9wZW5pbmdzIGluIDIwMTUgcmVxdWlyZWQgY29kaW5nIHNraWxscy4gV2UgYnVpbHQgQ29kZUNvbWJhdCBiZWNhdXNlIGV2ZXJ5IGNoaWxkIHNob3VsZCBiZSBnaXZlbiBhIGNoYW5jZSB0byBjcmVhdGUgdGhlaXIgYmVzdCBmdXR1cmUuXCJcbiMgICAgbWlzc2lvbjNfY29weTogXCJBdCBDb2RlQ29tYmF0LCB3ZeKAmXJlIHBhcmVudHMuIFdl4oCZcmUgY29kZXJzLiBXZeKAmXJlIGVkdWNhdG9ycy4gQnV0IG1vc3Qgb2YgYWxsLCB3ZeKAmXJlIHBlb3BsZSB3aG8gYmVsaWV2ZSBpbiBnaXZpbmcgb3VyIGtpZHMgdGhlIGJlc3Qgb3Bwb3J0dW5pdHkgZm9yIHN1Y2Nlc3MgaW4gd2hhdGV2ZXIgaXQgaXMgdGhleSBkZWNpZGUgdG8gZG8uXCJcblxuIyAgcGFyZW50X21vZGFsOlxuIyAgICByZWZlcl90ZWFjaGVyOiBcIlJlZmVyIFRlYWNoZXJcIlxuIyAgICBuYW1lOiBcIllvdXIgTmFtZVwiXG4jICAgIHBhcmVudF9lbWFpbDogXCJZb3VyIEVtYWlsXCJcbiMgICAgdGVhY2hlcl9lbWFpbDogXCJUZWFjaGVyJ3MgRW1haWxcIlxuIyAgICBtZXNzYWdlOiBcIk1lc3NhZ2VcIlxuIyAgICBjdXN0b21fbWVzc2FnZTogXCJJIGp1c3QgZm91bmQgQ29kZUNvbWJhdCBhbmQgdGhvdWdodCBpdCdkIGJlIGEgZ3JlYXQgcHJvZ3JhbSBmb3IgeW91ciBjbGFzc3Jvb20hIEl0J3MgYSBjb21wdXRlciBzY2llbmNlIGxlYXJuaW5nIHBsYXRmb3JtIHdpdGggc3RhbmRhcmRzLWFsaWduZWQgY3VycmljdWx1bS5cXG5cXG5Db21wdXRlciBsaXRlcmFjeSBpcyBzbyBpbXBvcnRhbnQgYW5kIEkgdGhpbmsgdGhpcyB3b3VsZCBiZSBhIGdyZWF0IHdheSB0byBnZXQgc3R1ZGVudHMgZW5nYWdlZCBpbiBsZWFybmluZyB0byBjb2RlLlwiXG4jICAgIHNlbmQ6IFwiU2VuZCBFbWFpbFwiXG5cbiMgIGhvY18yMDE4OlxuIyAgICBiYW5uZXI6IFwiSGFwcHkgQ29tcHV0ZXIgU2NpZW5jZSBFZHVjYXRpb24gV2VlayAyMDE4IVwiXG4jICAgIHBhZ2VfaGVhZGluZzogXCJZb3VyIHN0dWRlbnRzIHdpbGwgbGVhcm4gdG8gY29kZSBieSBidWlsZGluZyB0aGVpciBvd24gZ2FtZSFcIlxuIyAgICBzdGVwXzE6IFwiU3RlcCAxOiBXYXRjaCBWaWRlbyBPdmVydmlld1wiXG4jICAgIHN0ZXBfMjogXCJTdGVwIDI6IFRyeSBpdCBZb3Vyc2VsZlwiXG4jICAgIHN0ZXBfMzogXCJTdGVwIDM6IERvd25sb2FkIExlc3NvbiBQbGFuXCJcbiMgICAgdHJ5X2FjdGl2aXR5OiBcIlRyeSBBY3Rpdml0eVwiXG4jICAgIGRvd25sb2FkX3BkZjogXCJEb3dubG9hZCBQREZcIlxuIyAgICB0ZWFjaGVyX3NpZ251cF9oZWFkaW5nOiBcIlR1cm4gSG91ciBvZiBDb2RlIGludG8gYSBZZWFyIG9mIENvZGVcIlxuIyAgICB0ZWFjaGVyX3NpZ251cF9ibHVyYjogXCJFdmVyeXRoaW5nIHlvdSBuZWVkIHRvIHRlYWNoIGNvbXB1dGVyIHNjaWVuY2UsIG5vIHByaW9yIGV4cGVyaWVuY2UgbmVlZGVkLlwiXG4jICAgIHRlYWNoZXJfc2lnbnVwX2lucHV0X2JsdXJiOiBcIkdldCBmaXJzdCBjb3Vyc2UgZnJlZTpcIlxuIyAgICB0ZWFjaGVyX3NpZ251cF9pbnB1dF9wbGFjZWhvbGRlcjogXCJUZWFjaGVyIGVtYWlsIGFkZHJlc3NcIlxuIyAgICB0ZWFjaGVyX3NpZ251cF9pbnB1dF9idXR0b246IFwiR2V0IENTMSBGcmVlXCJcbiMgICAgYWN0aXZpdGllc19oZWFkZXI6IFwiTW9yZSBIb3VyIG9mIENvZGUgQWN0aXZpdGllc1wiXG4jICAgIGFjdGl2aXR5X2xhYmVsXzE6IFwiRXNjYXBlIHRoZSBEdW5nZW9uIVwiXG4jICAgIGFjdGl2aXR5X2xhYmVsXzI6IFwiIEJlZ2lubmVyOiBCdWlsZCBhIEdhbWUhXCJcbiMgICAgYWN0aXZpdHlfbGFiZWxfMzogXCJBZHZhbmNlZDogQnVpbGQgYW4gQXJjYWRlIEdhbWUhXCJcbiMgICAgYWN0aXZpdHlfYnV0dG9uXzE6IFwiVmlldyBMZXNzb25cIlxuIyAgICBhYm91dDogXCJBYm91dCBDb2RlQ29tYmF0XCJcbiMgICAgYWJvdXRfY29weTogXCJBIGdhbWUtYmFzZWQsIHN0YW5kYXJkcy1hbGlnbmVkIGNvbXB1dGVyIHNjaWVuY2UgcHJvZ3JhbSB0aGF0IHRlYWNoZXMgcmVhbCwgdHlwZWQgUHl0aG9uIGFuZCBKYXZhU2NyaXB0LlwiXG4jICAgIHBvaW50MTogXCLinJMgU2NhZmZvbGRlZFwiXG4jICAgIHBvaW50MjogXCLinJMgRGlmZmVyZW50aWF0ZWRcIlxuIyAgICBwb2ludDM6IFwi4pyTIEFzc2Vzc21lbnRzXCJcbiMgICAgcG9pbnQ0OiBcIuKckyBQcm9qZWN0LWJhc2VkIGNvdXJzZXNcIlxuIyAgICBwb2ludDU6IFwi4pyTIFN0dWRlbnQgdHJhY2tpbmdcIlxuIyAgICBwb2ludDY6IFwi4pyTIEZ1bGwgbGVzc29uIHBsYW5zXCJcbiMgICAgdGl0bGU6IFwiSE9VUiBPRiBDT0RFIDIwMThcIlxuIyAgICBhY3JvbnltOiBcIkhPQ1wiXG5cbiMgIGhvY18yMDE4X2ludGVyc3RpdGlhbDpcbiMgICAgd2VsY29tZTogXCJXZWxjb21lIHRvIENvZGVDb21iYXQncyBIb3VyIG9mIENvZGUgMjAxOCFcIlxuIyAgICBlZHVjYXRvcjogXCJJJ20gYW4gZWR1Y2F0b3JcIlxuIyAgICBzaG93X3Jlc291cmNlczogXCJTaG93IG1lIHRlYWNoZXIgcmVzb3VyY2VzIVwiXG4jICAgIHN0dWRlbnQ6IFwiSSdtIGEgc3R1ZGVudFwiXG4jICAgIHJlYWR5X3RvX2NvZGU6IFwiSSdtIHJlYWR5IHRvIGNvZGUhXCJcblxuIyAgaG9jXzIwMThfY29tcGxldGlvbjpcbiMgICAgY29uZ3JhdHVsYXRpb25zOiBcIkNvbmdyYXR1bGF0aW9ucyBvbiBjb21wbGV0aW5nIDxiPkNvZGUsIFBsYXksIFNoYXJlITwvYj5cIlxuIyAgICBzZW5kOiBcIlNlbmQgeW91ciBIb3VyIG9mIENvZGUgZ2FtZSB0byBmcmllbmRzIGFuZCBmYW1pbHkhXCJcbiMgICAgY29weTogXCJDb3B5IFVSTFwiXG4jICAgIGdldF9jZXJ0aWZpY2F0ZTogXCJHZXQgYSBjZXJ0aWZpY2F0ZSBvZiBjb21wbGV0aW9uIHRvIGNlbGVicmF0ZSB3aXRoIHlvdXIgY2xhc3MhXCJcbiMgICAgZ2V0X2NlcnRfYnRuOiBcIkdldCBDZXJ0aWZpY2F0ZVwiXG4jICAgIGZpcnN0X25hbWU6IFwiRmlyc3QgTmFtZVwiXG4jICAgIGxhc3RfaW5pdGlhbDogXCJMYXN0IEluaXRpYWxcIlxuIyAgICB0ZWFjaGVyX2VtYWlsOiBcIlRlYWNoZXIncyBlbWFpbCBhZGRyZXNzXCJcblxuIyAgc2Nob29sX2FkbWluaXN0cmF0b3I6XG4jICAgIHRpdGxlOiBcIlNjaG9vbCBBZG1pbmlzdHJhdG9yIERhc2hib2FyZFwiXG4jICAgIG15X3RlYWNoZXJzOiBcIk15IFRlYWNoZXJzXCJcbiMgICAgbGFzdF9sb2dpbjogXCJMYXN0IExvZ2luXCJcbiMgICAgbGljZW5zZXNfdXNlZDogXCJsaWNlbnNlcyB1c2VkXCJcbiMgICAgdG90YWxfc3R1ZGVudHM6IFwidG90YWwgc3R1ZGVudHNcIlxuIyAgICBhY3RpdmVfc3R1ZGVudHM6IFwiYWN0aXZlIHN0dWRlbnRzXCJcbiMgICAgcHJvamVjdHNfY3JlYXRlZDogXCJwcm9qZWN0cyBjcmVhdGVkXCJcbiMgICAgb3RoZXI6IFwiT3RoZXJcIlxuIyAgICBub3RpY2U6IFwiVGhlIGZvbGxvd2luZyBzY2hvb2wgYWRtaW5pc3RyYXRvcnMgaGF2ZSB2aWV3LW9ubHkgYWNjZXNzIHRvIHlvdXIgY2xhc3Nyb29tIGRhdGE6XCJcbiMgICAgYWRkX2FkZGl0aW9uYWxfdGVhY2hlcjogXCJOZWVkIHRvIGFkZCBhbiBhZGRpdGlvbmFsIHRlYWNoZXI/IENvbnRhY3QgeW91ciBDb2RlQ29tYmF0IEFjY291bnQgTWFuYWdlciBvciBlbWFpbCBzdXBwb3J0QGNvZGVjb21iYXQuY29tLiBcIlxuIyAgICBsaWNlbnNlX3N0YXRfZGVzY3JpcHRpb246IFwiTGljZW5zZXMgYXZhaWxhYmxlIGFjY291bnRzIGZvciB0aGUgdG90YWwgbnVtYmVyIG9mIGxpY2Vuc2VzIGF2YWlsYWJsZSB0byB0aGUgdGVhY2hlciwgaW5jbHVkaW5nIFNoYXJlZCBMaWNlbnNlcy5cIlxuIyAgICBzdHVkZW50c19zdGF0X2Rlc2NyaXB0aW9uOiBcIlRvdGFsIHN0dWRlbnRzIGFjY291bnRzIGZvciBhbGwgc3R1ZGVudHMgYWNyb3NzIGFsbCBjbGFzc3Jvb21zLCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhleSBoYXZlIGxpY2Vuc2VzIGFwcGxpZWQuXCJcbiMgICAgYWN0aXZlX3N0dWRlbnRzX3N0YXRfZGVzY3JpcHRpb246IFwiQWN0aXZlIHN0dWRlbnRzIGNvdW50cyB0aGUgbnVtYmVyIG9mIHN0dWRlbnRzIHRoYXQgaGF2ZSBsb2dnZWQgaW50byBDb2RlQ29tYmF0IGluIHRoZSBsYXN0IDYwIGRheXMuXCJcbiMgICAgcHJvamVjdF9zdGF0X2Rlc2NyaXB0aW9uOiBcIlByb2plY3RzIGNyZWF0ZWQgY291bnRzIHRoZSB0b3RhbCBudW1iZXIgb2YgR2FtZSBhbmQgV2ViIGRldmVsb3BtZW50IHByb2plY3RzIHRoYXQgaGF2ZSBiZWVuIGNyZWF0ZWQuXCJcbiMgICAgbm9fdGVhY2hlcnM6IFwiWW91IGFyZSBub3QgYWRtaW5pc3RyYXRpbmcgYW55IHRlYWNoZXJzLlwiXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvbG9jYWxlL2tvLmNvZmZlZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1062\n");

/***/ })

});